// FIXME: merge with overlays.less when OverlayNew gets to stable
@import "../mixins.less";

@headingMarginV: 1em;
@headingFontSize: 1em;
@buttonSize: @headingFontSize + @headingMarginV * 2 + @headerMargin;

.overlay-enabled {
	#mw-mf-page-center {
		overflow: hidden;
		// FIXME: override old overlay styles, remove when old overlays gone
		display: block;
	}

	.overlay, #mw-mf-page-center {
		// use height instead of bottom 0 so that overlay expands when there's
		// more content, don't use min-height because of
		// http://stackoverflow.com/questions/3808512/the-inherited-height-of-a-child-div-from-a-parent-with-a-min-height-attribute
		height: 100%;
	}
}

.overlay {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	background: #fff;
	z-index: 4;

	.overlay-header {
		display: table;
		width: 100%;
		.box-sizing(border-box);

		h2 {
			span {
				margin-left: 6px;
				color: @grayMediumDark;
				font-size: 0.8em;
			}
		}

		> ul, > div {
			display: table-cell;
			vertical-align: middle;
		}

		.bottom-border {
			border-bottom: 1px solid @grayLight;
		}

		> div {
			padding: @overlayHeadingMarginV @overlayHeadingMarginH;
		}

		h2 {
			// FIXME: should not be necessary, scope other h2s to .content
			font-size: @overlayHeadingFontSize;
		}

		> ul, button {
			width: @overlayButtonSize - @overlayHeaderMargin;
			white-space: nowrap;
		}

		button {
			padding: @overlayHeadingMarginV @overlayHeadingMarginH;
			width: @overlayButtonSize;
			border-radius: 0;
			min-height: @overlayButtonSize;

			&.cancel {
				color: #d11d13;
			}
		}

		.v-border:first-child {
			border-right: 1px solid @grayLight;
		}

		.v-border:last-child li:last-child {
			border-left: 1px solid @grayLight;
		}

		&.with-margins {
			padding: @overlayHeaderMargin @overlayHeaderMargin 0;

			> div {
				padding: (@overlayHeadingMarginV - @overlayHeaderMargin) @overlayHeadingMarginH;
			}

			button {
				margin-top: -@overlayHeaderMargin;
				// Line up with rest of header that has 1px bottom-border
				margin-bottom: -1px;
			}

			> ul:first-child li:first-child button {
				margin-left: -@overlayHeaderMargin;
			}

			> ul:last-child li:last-child button {
				margin-right: -@overlayHeaderMargin;
			}
		}

		.icon {
			text-indent: -9999px;
			background-position: 50%;
			background-repeat: no-repeat;
			.background-size( 24px, auto );

			&[disabled] {
				opacity: .5;
			}

			&.cancel {
				background-image: url(images/cancel.png);
			}

			&.clear {
				background-image: url(images/clear.png);
			}

			&.submit {
				background-image: url(images/check.png);
				background-color: #00af8b;
			}

			&.continue {
				background-image: url(images/continue-ltr.png);
				background-color: #2f81f0;
			}

			&.back {
				background-image: url(images/back.png);
			}
		}
	}

	input, textarea {
		padding: .5em;
	}

	.panel {
		padding: 12px @contentMargin;
		border-bottom: 1px solid @grayLightest;
	}

	.license {
		// FIXME: image should not be hard-coded
		background: url('../modules/images/cc-by-sa.png') left 2px no-repeat;
		.background-size( auto, 16px );
		padding-left: 55px;
		font-size: .9em;
		// if license is only one line (big screens) prevent cutting off the image
		min-height: 18px;
		margin-top: .5em;
		line-height: 1.4;
	}

	h3 {
		font-weight: normal;
		font-size: .9em;
		padding: .3em @contentMargin;
		background-color: @grayLightest;
		color: @grayMedium;
	}

	// AbuseFilterOverlay
	.content {
		.cancel {
			display: block;
			margin: 1em auto;
		}
	}
}
