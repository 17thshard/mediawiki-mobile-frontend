{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.editor.overlay/parseSaveError.js","webpack://mfModules.[name]/./src/mobile.startup/Anchor.js","webpack://mfModules.[name]/./src/mobile.startup/Browser.js","webpack://mfModules.[name]/./src/mobile.startup/Button.js","webpack://mfModules.[name]/./src/mobile.startup/CtaDrawer.js","webpack://mfModules.[name]/./src/mobile.startup/Drawer.js","webpack://mfModules.[name]/./src/mobile.startup/Icon.js","webpack://mfModules.[name]/./src/mobile.startup/MessageBox.js","webpack://mfModules.[name]/./src/mobile.startup/Overlay.js","webpack://mfModules.[name]/./src/mobile.startup/OverlayManager.js","webpack://mfModules.[name]/./src/mobile.startup/Page.js","webpack://mfModules.[name]/./src/mobile.startup/PageGateway.js","webpack://mfModules.[name]/./src/mobile.startup/PageList.js","webpack://mfModules.[name]/./src/mobile.startup/Panel.js","webpack://mfModules.[name]/./src/mobile.startup/ScrollEndEventEmitter.js","webpack://mfModules.[name]/./src/mobile.startup/Section.js","webpack://mfModules.[name]/./src/mobile.startup/Skin.js","webpack://mfModules.[name]/./src/mobile.startup/Thumbnail.js","webpack://mfModules.[name]/./src/mobile.startup/View.js","webpack://mfModules.[name]/./src/mobile.startup/actionParams.js","webpack://mfModules.[name]/./src/mobile.startup/cache.js","webpack://mfModules.[name]/./src/mobile.startup/context.js","webpack://mfModules.[name]/./src/mobile.startup/eventBusSingleton.js","webpack://mfModules.[name]/./src/mobile.startup/extendSearchParams.js","webpack://mfModules.[name]/./src/mobile.startup/icons.js","webpack://mfModules.[name]/./src/mobile.startup/lazyImages/lazyImageLoader.js","webpack://mfModules.[name]/./src/mobile.startup/lazyImages/lazyImageTransformer.js","webpack://mfModules.[name]/./src/mobile.startup/lazyReferencesLoader.js","webpack://mfModules.[name]/./src/mobile.startup/loadingOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/mfExtend.js","webpack://mfModules.[name]/./src/mobile.startup/moduleLoader.js","webpack://mfModules.[name]/./src/mobile.startup/moduleLoaderSingleton.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesGateway.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesHtmlScraperGateway.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesMobileViewGateway.js","webpack://mfModules.[name]/./src/mobile.startup/rlModuleLoader.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchGateway.js","webpack://mfModules.[name]/./src/mobile.startup/time.js","webpack://mfModules.[name]/./src/mobile.startup/toast.js","webpack://mfModules.[name]/./src/mobile.startup/util.js","webpack://mfModules.[name]/./src/mobile.startup/watchstar/Watchstar.js","webpack://mfModules.[name]/./src/mobile.startup/watchstar/WatchstarGateway.js","webpack://mfModules.[name]/./src/mobile.startup/watchstar/WatchstarPageList.js"],"names":["module","exports","data","code","warning","type","details","error","edit","captcha","test","message","View","__webpack_require__","Anchor","apply","this","arguments","mfExtend","isTemplateMode","defaults","progressive","undefined","destructive","additionalClassNames","href","label","template","mw","get","browser","util","memoize","method","memoized","cache","cacheId","key","join","call","Object","prototype","hasOwnProperty","Date","now","toString","Math","random","Browser","ua","$container","userAgent","$el","_fixIosLandscapeBug","self","find","isIos","lockViewport","document","addEventListener","version","ios","attr","isWideScreen","val","parseInt","config","window","innerWidth","innerHeight","supportsAnimations","elemStyle","createElement","style","supportsProperty","property","toUpperCase","slice","supportsTouchEvents","supportsGeoLocation","navigator","getSingleton","$html","getDocument","Button","options","tagName","block","quiet","Drawer","CtaDrawer","extend","progressiveButton","msg","actionAnchor","redirectParams","params","redirectURL","returnto","signUpParams","push","templatePartials","button","anchor","preRender","queryParams","returnTo","getUrl","signupQueryParams","Panel","Icon","props","className","events","click","collapseIcon","name","icon","appendToElement","closeOnScroll","postRender","docReady","appendTo","parent","addClass","on","onShowDrawer","bind","onHideDrawer","stopPropagation","ev","setTimeout","$window","getWindow","one","hide","minHideDelay","removeClass","off","hasText","modifier","setRotationClass","rotation","_rotationClass","Error","glyphPrefix","isSmall","base","title","getClassName","getGlyphClassName","toHtmlString","parseHTML","append","html","MessageBox","icons","Overlay","useVirtualKeyboardHack","hasLoadError","click .cancel, .confirm, .initial-header .back","hasFixedHeader","fullScreen","hideOnExitClick","header","saveMsg","cancelButton","cancel","backButton","headerButtonsListClassName","headerChrome","spinner","closeOnContentTap","showSpinner","$spinner","hideSpinner","$overlayContent","$","setupEmulatedIosOverlayScrolling","onTouchStart","onTouchMove","_fixIosHeader","onExitClick","preventDefault","emit","EVENT_EXIT","startY","originalEvent","touches","pageY","y","contentOuterHeight","outerHeight","contentLength","prop","scrollTop","show","pageYOffset","scrollTo","_resizeContent","height","pageXOffset","detach","windowHeight","keyboardHeight","showHidden","overlayManager","OverlayManager","router","appendToSelector","_checkRoute","entries","stack","hideCurrent","log","warn","attachHideEvent","overlay","_onHideOverlay","back","_attachOverlay","parents","length","_show","once","_hideOverlay","result","_processMatch","match","factoryResult","promise","then","current","keys","reduce","m","id","_matchRoute","path","entry","next","route","previous","getNext","factory","shift","unshift","add","getPath","replaceCurrent","loader","require","HTML","time","Section","Thumbnail","HEADING_SELECTOR","BLACKLISTED_THUMBNAIL_CLASS_SELECTORS","Page","displayTitle","url","wikidataDescription","thumbnail","isMissing","isBorderBox","languageUrl","getDisplayTitle","width","isLandscape","namespaceNumber","protection","sections","isMainPage","source","escape","inNamespace","namespace","findSectionHeadingByIndex","sectionIndex","filter","eq","findChildInSectionLead","selector","$heading","$nextHeading","$lead","headingSelector","withNestedChildren","$matchingNodes","addBack","getLeadSectionElement","children","prevAll","hasClass","nextAll","nextUntil","isWikiText","isWatched","getRevisionId","revId","getTitle","getId","getNamespaceId","args","split","toLowerCase","replace","isTalkPage","ns","_sectionLookup","forEach","sectionData","section","getThumbnails","blacklistSelector","thumbs","_thumbs","not","each","$a","$lazyImage","valid","legacyMatch","RegExp","el","filename","decodeURIComponent","getSection","getSections","getRedLinks","newFromJSON","resp","revision","thumb","pageprops","displaytitle","terms","description","revisions","lastModified","getLastModifiedMessage","timestamp","getTime","user","pageid","missing","sectionTemplate","actionParams","transformSections","lastSection","existingSectionLevels","map","s","level","collapseLevel","min","line","subsections","assignToParent","listOfSections","child","text","render","PageGateway","api","getPage","endpoint","leadOnly","d","Deferred","dataType","action","page","variant","redirect","noheadings","sectionprop","resolveObj","mv","reject","mobileview","lastmodified","lastmodifiedby","Array","isArray","lead","mainpage","historyUrl","lastModifiedTimestamp","languageCount","languagecount","hasVariants","hasvariants","lastModifiedUserName","lastModifiedUserGender","gender","invalidatePage","_getLanguageVariantsFromApiResponse","generalData","query","general","variantPath","variantarticlepath","variants","index","item","autonym","lang","getPageLanguages","language","meta","siprop","lllimit","titles","llprop","llinlanguagecode","languages","pages","langlinks","_getAPIResponseFromHTML","substr","$span","getSectionsFromHTML","PageList","renderPageImages","click .cancel","onCancel","isVisible","toggle","ScrollEndEventEmitter","eventBus","threshold","enable","OO","EventEmitter","mixinClass","EVENT_SCROLL_END","_bindScroll","_scrollHandler","_onScroll","_unbindScroll","enabled","scrollNearEnd","disable","scrollBottom","endPosition","offset","top","setElement","tag","hasReferences","lazyImageLoader","lazyImageTransformer","lazyReferencesLoader","Skin","mainMenu","referencesGateway","container","getElementById","images","queryPlaceholders","newLazyImageTransformer","loadImages","loadReferences","getLicenseMsg","licenseMsg","mfLicense","licensePlural","convertNumber","plural","link","parse","siblings","getDescription","getFileName","delegateEventSplitter","idCounter","initialize","cid","prefix","uniqueId","compile","_postInitialize","undelegateEvents","skipTemplateRender","replaceWith","delegateEvents","delegate","eventName","listener","undelegate","defaultParams","formatversion","otherParams","scriptPath","origin","MemoryCache","_cache","NoCache","set","value","getMode","feature","displayWikibaseDescriptions","concat","indexOf","CANCEL_GLYPH","glyph","watchIcon","watchedIcon","placeholderClass","root","getElementsByClassName","placeholders","when","placeholder","loadImage","deferred","dataset","image","Image","class","alt","cssText","classList","parentNode","replaceChild","resolve","src","srcset","imagePlaceholders","grep","$placeholder","viewport","isElementCloseToViewport","is","shouldLoadImage","getSectionId","hSelector","$parent","gateway","$content","expanded","isReferenceSection","prependTo","getReferencesLists","lastId","refListIndex","getReferencesList","refListElements","remove","loadImagesAndSetData","noHeader","Child","ParentOrPrototype","inheritClass","initClass","ModuleLoader","_register","registry","localRequire","e","define","obj","deprecate","deprecatedId","replacement","ReferencesGateway","getReference","ERROR_NOT_EXIST","ERROR_OTHER","ReferencesHtmlScraperGateway","getReferenceFromContainer","escapeSelector","referencesMobileViewGateway","ReferencesMobileViewGateway","cachedReferencesSections","$section","headingId","sectionId","Api","loadingOverlay","newLoadingOverlay","loadModule","delegateHide","showLoadingOverlay","hideOverlayIfNeeded","body","using","extendSearchParams","SearchGateway","searchCache","generator","searchNamespace","getApiData","redirects","pilimit","pithumbsize","tiny","_createSearchRegEx","str","_highlightSearchTerm","term","_getPage","pageInfo","displaytext","_processData","results","sort","a","b","search","xhr","request","isCached","abort","Boolean","units","limits","timeAgo","timestampDelta","i","round","unit","getTimeAgoDelta","isNow","delta","ts","username","seconds","minutes","hours","days","months","years","getRegistrationMessage","isRecent","storageKey","Toast","requestIdleCallback","_showPending","notification","notify","notif","close","showOnPageReload","content","storage","JSON","stringify","fn","documentElement","ctx","isNumeric","escapeHash","hash","isModifiedEvent","altKey","ctrlKey","metaKey","shiftKey","repeatEvent","proxy","event","WatchstarGateway","toast","Watchstar","click a","funnel","ctaDrawerOptions","campaign","returntoquery","_super","_watched","tooltip","unwatchedClass","watchedClass","isAnon","onLinksClick","onStatusToggleAnon","drawer","onStatusToggleUser","checker","postWatched","stopInterval","clearInterval","setInterval","postStatusesByTitle","onStatusToggle","getStatuses","ids","getStatusesByID","getStatusesByTitle","inprop","pageids","rsp","_unmarshalGetResponse","watched","unwatch","postWithToken","statuses","WatchstarPageList","wsGateway","$items","queryUnitializedItems","parsePagesFromItems","getPages","renderItems","_","$item","_appendWatchstar","watchstar"],"mappings":"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","file":"mobile.common.js","sourcesContent":["/**\n * Turn an API response on save failure into a details object\n * @param {Object|null} data API response data\n * @param {string} [code] Text status message from API\n * @return {Object} An object with `type` and `details` properties.\n * `type` is a string describing the type of error, `details` can be any\n * object (usually error message).\n*/\nfunction parseSaveError( data, code ) {\n\tvar warning;\n\tif ( code ) {\n\t\tswitch ( code ) {\n\t\t\tcase 'readonly':\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'readonly',\n\t\t\t\t\tdetails: data.error\n\t\t\t\t};\n\t\t\tcase 'editconflict':\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'editconflict',\n\t\t\t\t\tdetails: data.error\n\t\t\t\t};\n\t\t\tdefault:\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tdetails: 'http'\n\t\t\t\t};\n\t\t}\n\t}\n\tif ( data ) {\n\t\tif ( data.error ) {\n\t\t\t// Edit API error\n\t\t\treturn {\n\t\t\t\ttype: 'error',\n\t\t\t\tdetails: data.error.code\n\t\t\t};\n\t\t} else if ( data.edit && data.edit.captcha ) {\n\t\t\t// CAPTCHAs\n\t\t\treturn {\n\t\t\t\ttype: 'captcha',\n\t\t\t\tdetails: data.edit.captcha\n\t\t\t};\n\t\t} else if ( data.edit && data.edit.code ) {\n\t\t\tcode = data.edit.code;\n\t\t\twarning = data.edit.warning;\n\n\t\t\t// FIXME: AbuseFilter should have more consistent API responses\n\t\t\tif ( /^abusefilter-warning/.test( code ) ) {\n\t\t\t\t// AbuseFilter warning\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'abusefilter',\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\tmessage: warning\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else if ( /^abusefilter-disallow/.test( code ) ) {\n\t\t\t\t// AbuseFilter disallow\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'abusefilter',\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\ttype: 'disallow',\n\t\t\t\t\t\tmessage: warning\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else if ( /^abusefilter/.test( code ) ) {\n\t\t\t\t// AbuseFilter other\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'abusefilter',\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\ttype: 'other',\n\t\t\t\t\t\tmessage: warning\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\t// other errors\n\t\t\treturn {\n\t\t\t\ttype: 'error',\n\t\t\t\tdetails: code\n\t\t\t};\n\t\t}\n\t}\n\treturn {\n\t\ttype: 'error',\n\t\tdetails: 'unknown'\n\t};\n}\nmodule.exports = parseSaveError;\n","var\n\tView = require( './View' ),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * A wrapper for creating an anchor.\n * @class Anchor\n * @extends View\n */\nfunction Anchor() {\n\tView.apply( this, arguments );\n}\n\nmfExtend( Anchor, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Anchor\n\t * @instance\n\t */\n\tisTemplateMode: true,\n\t/**\n\t * @memberof Anchor\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {boolean} defaults.progressive is progressive action\n\t * @property {boolean} defaults.destructive is destructive action\n\t * @property {string} defaults.additionalClassNames Additional class name(s).\n\t * @property {string} defaults.href url\n\t * @property {string} defaults.label of anchor\n\t */\n\tdefaults: {\n\t\tprogressive: undefined,\n\t\tdestructive: undefined,\n\t\tadditionalClassNames: '',\n\t\thref: undefined,\n\t\tlabel: undefined\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Anchor\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'anchor.hogan' )\n} );\n\nmodule.exports = Anchor;\n","var\n\tutil = require( './util' ),\n\tbrowser;\n\n/**\n * Memoize a class method. Caches the result of the method based on the\n * arguments. Instances do not share a cache.\n * @param {Function} method Method to be memoized\n * @return {Function}\n */\nfunction memoize( method ) {\n\t/**\n\t * Memoized version of the method\n\t * @return {Function}\n\t */\n\tvar memoized = function () {\n\t\tvar cache = this[ '__cache' + memoized.cacheId ] ||\n\t\t\t( this[ '__cache' + memoized.cacheId ] = {} ),\n\t\t\tkey = [].join.call( arguments, '|' );\n\t\tif ( Object.prototype.hasOwnProperty.call( cache, key ) ) {\n\t\t\treturn cache[ key ];\n\t\t}\n\t\treturn ( cache[ key ] = method.apply( this, arguments ) );\n\t};\n\tmemoized.cacheId = Date.now().toString() + Math.random().toString();\n\treturn memoized;\n}\n\n/**\n * Representation of user's current browser\n * @class Browser\n * @param {string} ua the user agent of the current browser\n * @param {jQuery.Object} $container an element to associate with the Browser object\n */\nfunction Browser( ua, $container ) {\n\tthis.userAgent = ua;\n\tthis.$el = $container;\n\tthis._fixIosLandscapeBug();\n}\n\nBrowser.prototype = {\n\t/**\n\t * When rotating to landscape stop page zooming on ios 4 and 5.\n\t * @memberof Browser\n\t * @instance\n\t * @private\n\t */\n\t_fixIosLandscapeBug: function () {\n\t\tvar self = this,\n\t\t\tviewport = this.$el.find( 'meta[name=\"viewport\"]' )[0];\n\n\t\t// see http://adactio.com/journal/4470/ (fixed in ios 6)\n\t\tif ( viewport && ( this.isIos( 4 ) || this.isIos( 5 ) ) ) {\n\t\t\tthis.lockViewport();\n\t\t\tdocument.addEventListener( 'gesturestart', function () {\n\t\t\t\tself.lockViewport();\n\t\t\t}, false );\n\t\t}\n\t},\n\t/**\n\t * Returns whether the current browser is an ios device.\n\t * FIXME: jquery.client does not support iPad detection so we cannot use it.\n\t * @memberof Browser\n\t * @instance\n\t * @param {number} [version] integer describing a specific version you want to test against.\n\t * @return {boolean}\n\t */\n\tisIos: memoize( function ( version ) {\n\t\tvar ua = this.userAgent,\n\t\t\tios = /ipad|iphone|ipod/i.test( ua );\n\n\t\tif ( ios && version ) {\n\t\t\tswitch ( version ) {\n\t\t\t\tcase 8:\n\t\t\t\t\t// Test UA for iOS8. Or for simulator look for Version 8\n\t\t\t\t\t// In the iOS simulator the OS is the host machine OS version\n\t\t\t\t\t// This makes testing in iOS8 simulator work as expected\n\t\t\t\t\treturn /OS 8_/.test( ua ) || /Version\\/8/.test( ua );\n\t\t\t\tcase 4:\n\t\t\t\t\treturn /OS 4_/.test( ua );\n\t\t\t\tcase 5:\n\t\t\t\t\treturn /OS 5_/.test( ua );\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn ios;\n\t\t}\n\t} ),\n\t/**\n\t * Locks the viewport so that pinch zooming is disabled\n\t * @memberof Browser\n\t * @instance\n\t */\n\tlockViewport: function () {\n\t\tif ( this.$el ) {\n\t\t\tthis.$el.find( 'meta[name=\"viewport\"]' )\n\t\t\t\t.attr( 'content', 'initial-scale=1.0, maximum-scale=1.0, user-scalable=no' );\n\t\t}\n\t},\n\t/**\n\t * Determine if a device has a widescreen.\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisWideScreen: memoize( function () {\n\t\tvar val = parseInt( mw.config.get( 'wgMFDeviceWidthTablet' ), 10 );\n\t\t// Check portrait and landscape mode to be consistent\n\t\treturn window.innerWidth >= val || window.innerHeight >= val;\n\t} ),\n\t/**\n\t * Checks browser support for CSS transforms, transitions\n\t * and CSS animation.\n\t * Currently assumes support for the latter 2 in the case of the\n\t * former.\n\t * See http://stackoverflow.com/a/12621264/365238\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tsupportsAnimations: memoize( function () {\n\t\tvar elemStyle = document.createElement( 'foo' ).style;\n\t\tfunction supportsProperty( property ) {\n\t\t\t// We only test \"webkit-\", because that's the only prefix needed for the relevant\n\t\t\t// properties (in supportsAnimations) and supported browsers. If usage is expanded,\n\t\t\t// other prefixes may need to be checked as well.\n\t\t\treturn property in elemStyle ||\n\t\t\t\t( 'webkit' + property[ 0 ].toUpperCase() + property.slice( 1 ) ) in elemStyle;\n\t\t}\n\t\treturn supportsProperty( 'animationName' ) &&\n\t\t\tsupportsProperty( 'transform' ) &&\n\t\t\tsupportsProperty( 'transition' );\n\t} ),\n\t/**\n\t * Whether touchstart and other touch events are supported by the current browser.\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tsupportsTouchEvents: memoize( function () {\n\t\treturn 'ontouchstart' in window;\n\t} ),\n\t/**\n\t * Detect if browser supports geolocation\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tsupportsGeoLocation: memoize( function () {\n\t\treturn 'geolocation' in window.navigator;\n\t} )\n};\n\n/**\n * @memberof Browser\n * @return {Browser}\n */\nBrowser.getSingleton = function () {\n\tvar $html;\n\tif ( !browser ) {\n\t\t$html = util.getDocument();\n\t\tbrowser = new Browser( window.navigator.userAgent, $html );\n\t}\n\treturn browser;\n};\n\nmodule.exports = Browser;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' );\n\n/**\n * A wrapper for creating a button.\n * @class Button\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Button( options ) {\n\tif ( options.href ) {\n\t\toptions.tagName = 'a';\n\t}\n\tView.call( this, options );\n}\n\nmfExtend( Button, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Button\n\t * @instance\n\t */\n\tisTemplateMode: true,\n\t/**\n\t * @memberof Button\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.tagName The name of the tag in which the button is wrapped.\n\t * @property {boolean} defaults.block is stacked button\n\t * @property {boolean} defaults.progressive is progressive action\n\t *   This option is deprecated. Please use `progressive`.\n\t * @property {boolean} defaults.quiet is quiet button\n\t * @property {boolean} defaults.destructive is destructive action\n\t * @property {string} defaults.additionalClassNames Additional class name(s).\n\t * @property {string} defaults.href url\n\t * @property {string} defaults.label of button\n\t */\n\tdefaults: {\n\t\ttagName: 'a',\n\t\tblock: undefined,\n\t\tprogressive: undefined,\n\t\tdestructive: undefined,\n\t\tquiet: undefined,\n\t\tadditionalClassNames: '',\n\t\thref: undefined,\n\t\tlabel: undefined\n\t},\n\t/**\n\t * @memberof Button\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'button.hogan' )\n} );\n\nmodule.exports = Button;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tDrawer = require( './Drawer' ),\n\tutil = require( './util' ),\n\tButton = require( './Button' ),\n\tAnchor = require( './Anchor' );\n\n/**\n * @typedef {string|number|boolean|undefined} QueryVal\n * @typedef {Object.<string, QueryVal|QueryVal[]>} QueryParams\n *\n * @typedef {Object} Options\n * @prop {string} [returnTo]\n * @prop {QueryParams} [queryParams]\n * @prop {QueryParams} [signupQueryParams]\n * @prop {Object} [options.progressiveButton] template options for Button element for signing in\n * @prop {Object} [options.actionAnchor] template options for Anchor element for signing up\n */\n\n/**\n * This creates the drawer at the bottom of the screen that appears when an anonymous\n * user tries to perform an action that requires being logged in. It presents the user\n * with options to log in or sign up for a new account.\n * @class CtaDrawer\n * @extends Drawer\n * @uses Button\n * @uses Icon\n * @uses Anchor\n * @param {Options} options\n */\nfunction CtaDrawer( options ) {\n\tDrawer.call( this,\n\t\tutil.extend( {}, Drawer.prototype.defaults, {\n\t\t\tprogressiveButton: new Button( {\n\t\t\t\tprogressive: true,\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-login' )\n\t\t\t} ).options,\n\t\t\tactionAnchor: new Anchor( {\n\t\t\t\tprogressive: true,\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-signup' )\n\t\t\t} ).options\n\t\t}, options )\n\t);\n}\n\nmfExtend( CtaDrawer, Drawer, {\n\t/**\n\t * @memberof CtaDrawer\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, Drawer.prototype.templatePartials, {\n\t\tbutton: Button.prototype.template,\n\t\tanchor: Anchor.prototype.template\n\t} ),\n\t/**\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'CtaDrawer.hogan' ),\n\t/**\n\t\t * @inheritdoc\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t */\n\tpreRender: function () {\n\t\tvar params = redirectParams( this.options.queryParams, this.options.returnTo );\n\n\t\t// Give the button and the anchor a default target, if it isn't set already. Buttons are\n\t\t// customized by Minerva's red link drawer, skins.minerva.scripts/init.js.\n\t\tif ( !this.options.progressiveButton.href ) {\n\t\t\tthis.options.progressiveButton.href = mw.util.getUrl( 'Special:UserLogin', params );\n\t\t}\n\t\tif ( !this.options.actionAnchor.href ) {\n\t\t\tthis.options.actionAnchor.href = mw.util.getUrl(\n\t\t\t\t'Special:UserLogin', signUpParams( params, this.options.signupQueryParams )\n\t\t\t);\n\t\t}\n\t}\n} );\n\n/**\n * Special:UserLogin post-request redirect query parameters.\n * @param {QueryParams} params\n * @param {string} [redirectURL]\n * @return {QueryParams}\n */\nfunction redirectParams( params, redirectURL ) {\n\treturn util.extend( {\n\t\t// use wgPageName as this includes the namespace if outside Main\n\t\treturnto: redirectURL || mw.config.get( 'wgPageName' )\n\t}, params );\n}\n\n/**\n * Special:UserLogin account creation query parameters.\n * @param {...QueryParams} params\n * @return {QueryParams}\n */\nfunction signUpParams() {\n\t[].push.call( arguments, { type: 'signup' } );\n\treturn util.extend.apply( util, arguments );\n}\n\nCtaDrawer.prototype.test = {\n\tredirectParams: redirectParams,\n\tsignUpParams: signUpParams\n};\n\nmodule.exports = CtaDrawer;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tPanel = require( './Panel' ),\n\tutil = require( './util' ),\n\tIcon = require( './Icon' );\n\n/**\n * A {@link View} that pops up from the bottom of the screen.\n * @class Drawer\n * @extends Panel\n * @param {Object} [props]\n */\nfunction Drawer( props ) {\n\tPanel.call( this,\n\t\tutil.extend(\n\t\t\t{ className: 'drawer position-fixed' },\n\t\t\tprops,\n\t\t\t{ events: util.extend( { click: 'stopPropagation' }, ( props || {} ).events ) }\n\t\t)\n\t);\n}\n\nmfExtend( Drawer, Panel, {\n\t/**\n\t * @memberof Drawer\n\t * @instance\n\t * @mixes Panel#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.cancelButton HTML of the button that closes the drawer.\n\t */\n\tdefaults: util.extend( {}, Panel.prototype.defaults, {\n\t\t// Used by CtaDrawer, BlockMessage.\n\t\tcollapseIcon: new Icon( {\n\t\t\tname: 'arrow',\n\t\t\tadditionalClassNames: 'cancel'\n\t\t} ).options\n\t} ),\n\t/**\n\t * @memberof Drawer\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, Panel.prototype.templatePartials, {\n\t\ticon: Icon.prototype.template\n\t} ),\n\t/**\n\t * Defines an element that the Drawer should automatically be appended to.\n\t * @memberof Drawer\n\t * @instance\n\t * @property {string}\n\t */\n\tappendToElement: 'body',\n\t/**\n\t * Whether the drawer should disappear on a scroll event\n\t * @memberof Drawer\n\t * @instance\n\t * @property {boolean}\n\t */\n\tcloseOnScroll: true,\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Drawer\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this;\n\t\t// This module might be loaded at the top of the page e.g. Special:Uploads\n\t\t// Thus ensure we wait for the DOM to be loaded\n\t\tutil.docReady( function () {\n\t\t\tself.appendTo( self.appendToElement );\n\t\t\tself.$el.parent().addClass( 'has-drawer' );\n\t\t} );\n\t\tthis.on( 'show', this.onShowDrawer.bind( this ) );\n\t\tthis.on( 'hide', this.onHideDrawer.bind( this ) );\n\t},\n\t/**\n\t * Stop Propagation event handler\n\t * @memberof Drawer\n\t * @instance\n\t * @param {Object} ev event object\n\t * Allow the drawer itself to be clickable (e.g. for copying and pasting references\n\t * clicking links in reference)\n\t */\n\tstopPropagation: function ( ev ) {\n\t\tev.stopPropagation();\n\t},\n\n\t/**\n\t * ShowDrawer event handler\n\t * @memberof Drawer\n\t * @instance\n\t */\n\tonShowDrawer: function () {\n\t\tvar self = this;\n\n\t\tthis.$el.parent().addClass( 'drawer-visible' );\n\n\t\tsetTimeout( function () {\n\t\t\tvar $window = util.getWindow();\n\t\t\t$window.one( 'click.drawer', self.hide.bind( self ) );\n\t\t\tif ( self.closeOnScroll ) {\n\t\t\t\t$window.one( 'scroll.drawer', self.hide.bind( self ) );\n\t\t\t}\n\t\t}, self.minHideDelay );\n\t},\n\n\t/**\n\t * HideDrawer event handler\n\t * @memberof Drawer\n\t * @instance\n\t */\n\tonHideDrawer: function () {\n\t\tthis.$el.parent().removeClass( 'drawer-visible' );\n\t\t// .one() registers one callback for scroll and click independently\n\t\t// if one fired, get rid of the other one\n\t\tutil.getWindow().off( '.drawer' );\n\t}\n} );\n\nmodule.exports = Drawer;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' );\n\n/**\n * A wrapper for creating an icon.\n * @class Icon\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Icon( options ) {\n\tif ( options.hasText ) {\n\t\toptions.modifier = 'mw-ui-icon-before';\n\t}\n\tif ( options.href ) {\n\t\toptions.tagName = 'a';\n\t}\n\tView.call( this, options );\n}\n\nmfExtend( Icon, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Icon\n\t * @instance\n\t */\n\tpreRender: function () {\n\t\tthis.setRotationClass();\n\t},\n\t/**\n\t * Internal method that sets the correct rotation class for the icon\n\t * based on the value of rotation\n\t * @memberof Icon\n\t * @instance\n\t * @private\n\t */\n\tsetRotationClass: function () {\n\t\tvar options = this.options;\n\t\tif ( options.rotation ) {\n\t\t\tswitch ( options.rotation ) {\n\t\t\t\tcase -180:\n\t\t\t\tcase 180:\n\t\t\t\t\toptions._rotationClass = 'mf-mw-ui-icon-rotate-flip';\n\t\t\t\t\tbreak;\n\t\t\t\tcase -90:\n\t\t\t\t\toptions._rotationClass = 'mf-mw-ui-icon-rotate-anti-clockwise';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 90:\n\t\t\t\t\toptions._rotationClass = 'mf-mw-ui-icon-rotate-clockwise';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Bad value for rotation given. Must be ±90, 0 or ±180.' );\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Icon\n\t * @instance\n\t */\n\tisTemplateMode: true,\n\t/**\n\t * @memberof Icon\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {boolean} defaults.hasText Whether the icon has text.\n\t * @property {boolean} defaults.isSmall Whether the icon should be small.\n\t * @property {string} [defaults.href] value of href attribute,\n\t *  when set tagName will default to anchor tag\n\t * @property {string} defaults.tagName The name of the tag in which the icon is wrapped.\n\t *  Defaults to 'a' when href option present.\n\t * @property {string} defaults.base String used as a base for generating class names.\n\t * Defaults to 'mw-ui-icon'.\n\t * @property {string} defaults.name Name of the icon.\n\t * @property {string} defaults.modifier Additional class name.\n\t * Defaults to 'mw-ui-icon-element'.\n\t * @property {string} defaults.title Tooltip text.\n\t * @property {boolean} defaults.rotation will rotate the icon by a certain number\n\t *  of degrees.\n\t *  Must be ±90, 0 or ±180 or will throw exception.\n\t */\n\tdefaults: {\n\t\trotation: 0,\n\t\thasText: false,\n\t\thref: undefined,\n\t\tglyphPrefix: 'mf',\n\t\ttagName: 'div',\n\t\tisSmall: false,\n\t\tbase: 'mw-ui-icon',\n\t\tname: '',\n\t\tmodifier: 'mw-ui-icon-element',\n\t\ttitle: ''\n\t},\n\t/**\n\t * Return the full class name that is required for the icon to render\n\t * @memberof Icon\n\t * @instance\n\t * @return {string}\n\t */\n\tgetClassName: function () {\n\t\treturn this.$el.attr( 'class' );\n\t},\n\t/**\n\t * Return the class that relates to the icon glyph\n\t * @memberof Icon\n\t * @instance\n\t * @return {string}\n\t */\n\tgetGlyphClassName: function () {\n\t\treturn this.options.base + '-' + this.options.glyphPrefix + '-' + this.options.name;\n\t},\n\t/**\n\t * Return the HTML representation of this view\n\t * @memberof Icon\n\t * @instance\n\t * @return {string}\n\t */\n\ttoHtmlString: function () {\n\t\treturn this.parseHTML( '<div>' ).append( this.$el ).html();\n\t},\n\ttemplate: mw.template.get( 'mobile.startup', 'icon.hogan' )\n} );\n\nmodule.exports = Icon;\n","var\n\tView = require( './View' ),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * @class MessageBox\n * @extends View\n */\nfunction MessageBox() {\n\tView.apply( this, arguments );\n}\n\nmfExtend( MessageBox, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof MessageBox\n\t * @instance\n\t */\n\tisTemplateMode: true,\n\t/**\n\t * @memberof MessageBox\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} [defaults.heading] heading to show along with message (text)\n\t * @property {string} defaults.msg message to show (html)\n\t * @property {string} defaults.className either errorbox, warningbox or successbox\n\t */\n\tdefaults: {},\n\t/**\n\t * @memberof MessageBox\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'MessageBox.hogan' )\n} );\n\nmodule.exports = MessageBox;\n","var\n\tView = require( './View' ),\n\tIcon = require( './Icon' ),\n\tButton = require( './Button' ),\n\tAnchor = require( './Anchor' ),\n\ticons = require( './icons' ),\n\tutil = require( './util' ),\n\tbrowser = require( './Browser' ).getSingleton(),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * Mobile modal window\n * @class Overlay\n * @extends View\n * @uses Icon\n * @uses Button\n * @fires Overlay#Overlay-exit\n * @fires Overlay#hide\n * @param {Object} props\n * @param {Object} props.events - custom events to be bound to the overlay.\n * @param {boolean} props.noHeader renders an overlay without a header\n */\nfunction Overlay( props ) {\n\tthis.isIos = browser.isIos();\n\tthis.useVirtualKeyboardHack = browser.isIos( 4 ) || browser.isIos( 5 );\n\t// Set to true when overlay has failed to load\n\tthis.hasLoadError = false;\n\n\tView.call(\n\t\tthis,\n\t\tutil.extend(\n\t\t\t{ className: 'overlay' },\n\t\t\tprops,\n\t\t\t{\n\t\t\t\tevents: util.extend(\n\t\t\t\t\t{\n\t\t\t\t\t\t// FIXME: Remove .initial-header selector\n\t\t\t\t\t\t'click .cancel, .confirm, .initial-header .back': 'onExitClick',\n\t\t\t\t\t\tclick: 'stopPropagation'\n\t\t\t\t\t},\n\t\t\t\t\tprops.events\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\t);\n}\n\nmfExtend( Overlay, View, {\n\t/**\n\t * Identify whether the element contains position fixed elements\n\t * @memberof Overlay\n\t * @instance\n\t * @property {boolean}\n\t */\n\thasFixedHeader: true,\n\t/**\n\t * Is overlay fullscreen\n\t * @memberof Overlay\n\t * @instance\n\t * @property {boolean}\n\t */\n\tfullScreen: true,\n\n\t/**\n\t * True if this.hide() should be invoked before firing the Overlay-exit\n\t * event\n\t * @memberof Overlay\n\t * @instance\n\t * @property {boolean}\n\t */\n\thideOnExitClick: true,\n\n\ttemplatePartials: {\n\t\theader: mw.template.get( 'mobile.startup', 'header.hogan' ),\n\t\tanchor: Anchor.prototype.template,\n\t\tbutton: Button.prototype.template\n\t},\n\ttemplate: mw.template.get( 'mobile.startup', 'Overlay.hogan' ),\n\t/**\n\t * @memberof Overlay\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.saveMessage Caption for save button on edit form.\n\t * @property {string} defaults.cancelButton HTML of the cancel button.\n\t * @property {string} defaults.backButton HTML of the back button.\n\t * @property {string} defaults.headerButtonsListClassName A comma separated string of class\n\t * names of the wrapper of the header buttons.\n\t * @property {boolean} defaults.headerChrome Whether the header has chrome.\n\t * @property {string} defaults.spinner HTML of the spinner icon.\n\t * @property {Object} [defaults.footerAnchor] options for an optional Anchor\n\t *  that can appear in the footer\n\t */\n\tdefaults: {\n\t\tsaveMsg: mw.msg( 'mobile-frontend-editor-save' ),\n\t\tcancelButton: icons.cancel().toHtmlString(),\n\t\tbackButton: new Icon( {\n\t\t\ttagName: 'button',\n\t\t\tname: 'back',\n\t\t\tadditionalClassNames: 'back',\n\t\t\tlabel: mw.msg( 'mobile-frontend-overlay-close' )\n\t\t} ).toHtmlString(),\n\t\theaderButtonsListClassName: '',\n\t\theaderChrome: false,\n\t\tspinner: icons.spinner().toHtmlString()\n\t},\n\t/**\n\t * Flag overlay to close on content tap\n\t * @memberof Overlay\n\t * @instance\n\t * @property {boolean}\n\t */\n\tcloseOnContentTap: false,\n\n\t/**\n\t * Shows the spinner right to the input field.\n\t * @memberof Overlay\n\t * @instance\n\t * @method\n\t */\n\tshowSpinner: function () {\n\t\tthis.$spinner.removeClass( 'hidden' );\n\t},\n\n\t/**\n\t * Hide the spinner near to the input field.\n\t * @memberof Overlay\n\t * @instance\n\t * @method\n\t */\n\thideSpinner: function () {\n\t\tthis.$spinner.addClass( 'hidden' );\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Overlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\n\t\tthis.$overlayContent = this.$( '.overlay-content' );\n\t\tthis.$spinner = this.$( '.spinner' );\n\t\tif ( this.isIos ) {\n\t\t\tthis.$el.addClass( 'overlay-ios' );\n\t\t}\n\t\t// Truncate any text inside in the overlay header.\n\t\tthis.$( '.overlay-header h2 span' ).addClass( 'truncated-text' );\n\t\tthis.setupEmulatedIosOverlayScrolling();\n\t},\n\n\t/**\n\t * Setups an emulated scroll behaviour for overlays in ios.\n\t * @memberof Overlay\n\t * @instance\n\t */\n\tsetupEmulatedIosOverlayScrolling: function () {\n\t\tvar self = this;\n\t\tif ( this.isIos && this.hasFixedHeader ) {\n\t\t\tthis.$( '.overlay-content' ).on( 'touchstart', this.onTouchStart.bind( this ) )\n\t\t\t\t.on( 'touchmove', this.onTouchMove.bind( this ) );\n\t\t\t// wait for things to render before doing any calculations\n\t\t\tsetTimeout( function () {\n\t\t\t\tself._fixIosHeader( self.$( 'textarea, input' ) );\n\t\t\t}, 0 );\n\t\t}\n\t},\n\t/**\n\t * ClickBack event handler\n\t * @memberof Overlay\n\t * @instance\n\t * @param {Object} ev event object\n\t */\n\tonExitClick: function ( ev ) {\n\t\tev.preventDefault();\n\t\tev.stopPropagation();\n\t\tif ( this.hideOnExitClick ) {\n\t\t\tthis.hide();\n\t\t}\n\t\tthis.emit( Overlay.EVENT_EXIT );\n\t},\n\t/**\n\t * Event handler for touchstart, for IOS\n\t * @memberof Overlay\n\t * @instance\n\t * @param {Object} ev Event Object\n\t */\n\tonTouchStart: function ( ev ) {\n\t\tthis.startY = ev.originalEvent.touches[0].pageY;\n\t},\n\t/**\n\t * Event handler for touch move, for IOS\n\t * @memberof Overlay\n\t * @instance\n\t * @param {Object} ev Event Object\n\t */\n\tonTouchMove: function ( ev ) {\n\t\tvar\n\t\t\ty = ev.originalEvent.touches[0].pageY,\n\t\t\tcontentOuterHeight = this.$overlayContent.outerHeight(),\n\t\t\tcontentLength = this.$overlayContent.prop( 'scrollHeight' ) - contentOuterHeight;\n\n\t\tev.stopPropagation();\n\t\t// prevent scrolling and bouncing outside of .overlay-content\n\t\tif (\n\t\t\t( this.$overlayContent.scrollTop() === 0 && this.startY < y ) ||\n\t\t\t( this.$overlayContent.scrollTop() === contentLength && this.startY > y )\n\t\t) {\n\t\t\tev.preventDefault();\n\t\t}\n\t},\n\t/**\n\t * Stop clicks in the overlay from propagating to the page\n\t * (prevents non-fullscreen overlays from being closed when they're tapped)\n\t * @memberof Overlay\n\t * @instance\n\t * @param {Object} ev Event Object\n\t */\n\tstopPropagation: function ( ev ) {\n\t\tev.stopPropagation();\n\t},\n\t/**\n\t * Attach overlay to current view and show it.\n\t * @memberof Overlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\tvar self = this,\n\t\t\t$html = util.getDocument(),\n\t\t\t$window = util.getWindow();\n\n\t\tthis.scrollTop = window.pageYOffset;\n\n\t\tif ( this.fullScreen ) {\n\t\t\t$html.addClass( 'overlay-enabled' );\n\t\t\t// skip the URL bar if possible\n\t\t\twindow.scrollTo( 0, 1 );\n\t\t}\n\n\t\tif ( this.closeOnContentTap ) {\n\t\t\t$html.find( '#mw-mf-page-center' ).one( 'click', this.hide.bind( this ) );\n\t\t}\n\n\t\t// prevent scrolling and bouncing outside of .overlay-content\n\t\tif ( this.isIos && this.hasFixedHeader ) {\n\t\t\t$window\n\t\t\t\t.on( 'touchmove.ios', function ( ev ) {\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t} )\n\t\t\t\t.on( 'resize.ios', function () {\n\t\t\t\t\tself._resizeContent( $window.height() );\n\t\t\t\t} );\n\t\t}\n\n\t\tthis.$el.addClass( 'visible' );\n\t},\n\t/**\n\t * Detach the overlay from the current view\n\t * @memberof Overlay\n\t * @instance\n\t * @param {boolean} [force] Whether the overlay should be closed regardless of\n\t * state (see PhotoUploadProgress)\n\t * @return {boolean} Whether the overlay was successfully hidden or not\n\t */\n\thide: function () {\n\t\tvar $window = util.getWindow(),\n\t\t\t$html = util.getDocument();\n\n\t\tif ( this.fullScreen ) {\n\t\t\t$html.removeClass( 'overlay-enabled' );\n\t\t\t// return to last known scroll position\n\t\t\twindow.scrollTo( window.pageXOffset, this.scrollTop );\n\t\t}\n\n\t\tthis.$el.detach();\n\n\t\tif ( this.isIos ) {\n\t\t\t$window.off( '.ios' );\n\t\t}\n\n\t\t/**\n\t\t * Fired when the overlay is closed.\n\t\t * @event Overlay#hide\n\t\t */\n\t\tthis.emit( 'hide' );\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Fit the overlay content height to the window taking overlay header and footer heights\n\t * into consideration.\n\t * @memberof Overlay\n\t * @instance\n\t * @private\n\t * @param {number} windowHeight The height of the window\n\t */\n\t_resizeContent: function ( windowHeight ) {\n\t\tthis.$overlayContent.height(\n\t\t\twindowHeight -\n\t\t\tthis.$( '.overlay-header-container' ).outerHeight() -\n\t\t\tthis.$( '.overlay-footer-container' ).outerHeight()\n\t\t);\n\t},\n\n\t/**\n\t * Resize .overlay-content to occupy 100% of screen space when virtual\n\t * keyboard is shown/hidden on iOS.\n\t *\n\t * This function supplements the custom styles for Overlays on iOS.\n\t * On iOS we scroll the content inside of .overlay-content div instead\n\t * of scrolling the whole page to achieve a consistent sticky header\n\t * effect (position: fixed doesn't work on iOS when the virtual keyboard\n\t * is open).\n\t *\n\t * @memberof Overlay\n\t * @instance\n\t * @private\n\t * @param {jQuery.Object} $el for elements that may trigger virtual\n\t * keyboard (usually inputs, textareas, contenteditables).\n\t */\n\t_fixIosHeader: function ( $el ) {\n\t\tvar self = this,\n\t\t\t$window = util.getWindow();\n\n\t\tif ( this.isIos ) {\n\t\t\tthis._resizeContent( $window.height() );\n\t\t\t$el\n\t\t\t\t.on( 'focus', function () {\n\t\t\t\t\tsetTimeout( function () {\n\t\t\t\t\t\tvar keyboardHeight = 0;\n\n\t\t\t\t\t\t// detect virtual keyboard height\n\t\t\t\t\t\tif ( self.useVirtualKeyboardHack ) {\n\t\t\t\t\t\t\t// this method does not work in iOS 8.02\n\t\t\t\t\t\t\t$window.scrollTop( 999 );\n\t\t\t\t\t\t\tkeyboardHeight = $window.scrollTop();\n\t\t\t\t\t\t\t$window.scrollTop( 0 );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( $window.height() > keyboardHeight ) {\n\t\t\t\t\t\t\tself._resizeContent( $window.height() - keyboardHeight );\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 0 );\n\t\t\t\t} )\n\t\t\t\t.on( 'blur', function () {\n\t\t\t\t\tself._resizeContent( $window.height() );\n\t\t\t\t\t// restore the fixed header in view.\n\t\t\t\t\t$window.scrollTop( 0 );\n\t\t\t\t} );\n\t\t}\n\t},\n\n\t/**\n\t * Show elements that are selected by the className.\n\t * Also hide .hideable elements\n\t * Can't use jQuery's hide() and show() because show() sets display: block.\n\t * And we want display: table for headers.\n\t * @memberof Overlay\n\t * @instance\n\t * @protected\n\t * @param {string} className CSS selector to show\n\t */\n\tshowHidden: function ( className ) {\n\t\tthis.$( '.hideable' ).addClass( 'hidden' );\n\t\tthis.$( className ).removeClass( 'hidden' );\n\t}\n} );\n\n/*\n * Fires when close button is clicked. Not to be confused with hide event.\n * @memberof Overlay\n * @event Overlay#Overlay-exit\n */\nOverlay.EVENT_EXIT = 'Overlay-exit';\n\nmodule.exports = Overlay;\n","/* global $ */\nvar\n\tutil = require( './util' ),\n\tmfExtend = require( './mfExtend' ),\n\toverlayManager = null;\n\n/**\n * Manages opening and closing overlays when the URL hash changes to one\n * of the registered values (see OverlayManager.add()).\n *\n * This allows overlays to function like real pages, with similar browser back/forward\n * and refresh behavior.\n *\n * @class OverlayManager\n * @param {Router} router\n * @param {string} appendToSelector\n */\nfunction OverlayManager( router, appendToSelector ) {\n\trouter.on( 'route', this._checkRoute.bind( this ) );\n\tthis.router = router;\n\t// use an object instead of an array for entries so that we don't\n\t// duplicate entries that already exist\n\tthis.entries = {};\n\t// stack of all the open overlays, stack[0] is the latest one\n\tthis.stack = [];\n\tthis.hideCurrent = true;\n\t// Set the element that overlays will be appended to\n\tif ( !appendToSelector ) {\n\t\tmw.log.warn( 'appendToSelector will soon be a required parameter to OverlayManager' );\n\t}\n\tthis.appendToSelector = appendToSelector || 'body';\n}\n\n/**\n * Attach an event to the overlays hide event\n * @param {Overlay} overlay\n */\nfunction attachHideEvent( overlay ) {\n\toverlay.on( 'hide', function () {\n\t\toverlay.emit( '_om_hide' );\n\t} );\n}\n\nmfExtend( OverlayManager, {\n\t/**\n\t * Don't try to hide the active overlay on a route change event triggered\n\t * by hiding another overlay.\n\t * Called when hiding an overlay.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t */\n\t_onHideOverlay: function () {\n\t\tthis.hideCurrent = false;\n\n\t\tthis.router.back();\n\t},\n\n\t/** Attach overlay to DOM\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to attach\n\t*/\n\t_attachOverlay: function ( overlay ) {\n\t\tif ( !overlay.$el.parents().length ) {\n\t\t\t$( this.appendToSelector ).append( overlay.$el );\n\t\t}\n\t},\n\t/**\n\t * Show the overlay and bind the '_om_hide' event to _onHideOverlay.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to show\n\t */\n\t_show: function ( overlay ) {\n\n\t\t// if hidden using overlay (not hardware) button, update the state\n\t\toverlay.once( '_om_hide', this._onHideOverlay.bind( this ) );\n\n\t\tthis._attachOverlay( overlay );\n\t\toverlay.show();\n\t},\n\n\t/**\n\t * Hide overlay\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to hide\n\t * @return {boolean} Whether the overlay has been hidden\n\t */\n\t_hideOverlay: function ( overlay ) {\n\t\tvar result;\n\n\t\t// remove the callback for updating state when overlay closed using\n\t\t// overlay close button\n\t\toverlay.off( '_om_hide' );\n\n\t\tresult = overlay.hide( this.stack.length > 1 );\n\n\t\t// if closing prevented, reattach the callback\n\t\tif ( !result ) {\n\t\t\toverlay.once( '_om_hide', this._onHideOverlay.bind( this ) );\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Show match's overlay if match is not null.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Object|null} match Object with factory function's result. null if no match.\n\t */\n\t_processMatch: function ( match ) {\n\t\tvar factoryResult,\n\t\t\tself = this;\n\n\t\tif ( match ) {\n\t\t\tif ( match.overlay ) {\n\t\t\t\t// if the match is an overlay that was previously opened, reuse it\n\t\t\t\tself._show( match.overlay );\n\t\t\t} else {\n\t\t\t\t// else create an overlay using the factory function result (either\n\t\t\t\t// a promise or an overlay)\n\t\t\t\tfactoryResult = match.factoryResult;\n\t\t\t\t// http://stackoverflow.com/a/13075985/365238\n\t\t\t\tif ( typeof factoryResult.promise === 'function' ) {\n\t\t\t\t\tfactoryResult.then( function ( overlay ) {\n\t\t\t\t\t\tmatch.overlay = overlay;\n\t\t\t\t\t\tattachHideEvent( overlay );\n\t\t\t\t\t\tself._show( overlay );\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tmatch.overlay = factoryResult;\n\t\t\t\t\tattachHideEvent( match.overlay );\n\t\t\t\t\tself._show( factoryResult );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * A callback for Router's `route` event.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {jQuery.Event} ev Event object.\n\t */\n\t_checkRoute: function ( ev ) {\n\t\tvar\n\t\t\tcurrent = this.stack[0],\n\t\t\tmatch;\n\n\t\t// When entering an overlay for the first time,\n\t\t// the manager should remember the user's scroll position\n\t\t// overlays always open at top of page\n\t\t// and we'll want to restore it later.\n\t\t// This should happen before the call to _matchRoute which will \"show\" the overlay.\n\t\t// The Overlay has similar logic for overlays that are not managed via the overlay.\n\t\tif ( !current ) {\n\t\t\tthis.scrollTop = window.pageYOffset;\n\t\t}\n\n\t\tmatch = Object.keys( this.entries ).reduce( function ( m, id ) {\n\t\t\treturn m || this._matchRoute( ev.path, this.entries[ id ] );\n\t\t}.bind( this ), null );\n\n\t\t// if there is an overlay in the stack and it's opened, try to close it\n\t\tif (\n\t\t\tcurrent &&\n\t\t\tcurrent.overlay !== undefined &&\n\t\t\tthis.hideCurrent &&\n\t\t\t!this._hideOverlay( current.overlay )\n\t\t) {\n\t\t\t// if hide prevented, prevent route change event\n\t\t\tev.preventDefault();\n\t\t} else if ( !match ) {\n\t\t\t// if hidden and no new matches, reset the stack\n\t\t\tthis.stack = [];\n\t\t\t// restore the scroll position.\n\t\t\twindow.scrollTo( window.pageXOffset, this.scrollTop );\n\t\t}\n\n\t\tthis.hideCurrent = true;\n\t\tthis._processMatch( match );\n\t},\n\n\t/**\n\t * Check if a given path matches one of the entries.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {string} path Path (hash) to check.\n\t * @param {Object} entry Entry object created in OverlayManager#add.\n\t * @return {Object|null} Match object with factory function's result.\n\t *  Returns null if no match.\n\t */\n\t_matchRoute: function ( path, entry ) {\n\t\tvar\n\t\t\tnext,\n\t\t\tmatch = path.match( entry.route ),\n\t\t\tprevious = this.stack[1],\n\t\t\tself = this;\n\n\t\t/**\n\t\t * Returns object to add to stack\n\t\t * @method\n\t\t * @ignore\n\t\t * @return {Object}\n\t\t */\n\t\tfunction getNext() {\n\t\t\treturn {\n\t\t\t\tpath: path,\n\t\t\t\tfactoryResult: entry.factory.apply( self, match.slice( 1 ) )\n\t\t\t};\n\t\t}\n\n\t\tif ( match ) {\n\t\t\t// if previous stacked overlay's path matches, assume we're going back\n\t\t\t// and reuse a previously opened overlay\n\t\t\tif ( previous && previous.path === path ) {\n\t\t\t\tif ( previous.overlay && previous.overlay.hasLoadError ) {\n\t\t\t\t\tself.stack.shift();\n\t\t\t\t\t// Loading of overlay failed so we want to replace it with a new\n\t\t\t\t\t// overlay (which will try to load successfully)\n\t\t\t\t\tself.stack[0] = getNext();\n\t\t\t\t\treturn self.stack[0];\n\t\t\t\t}\n\n\t\t\t\tself.stack.shift();\n\t\t\t\treturn previous;\n\t\t\t} else {\n\t\t\t\tnext = getNext();\n\t\t\t\tif ( this.stack[0] && next.path === this.stack[0].path ) {\n\t\t\t\t\t// current overlay path is same as path to check which means overlay\n\t\t\t\t\t// is attempting to refresh so just replace current overlay with new\n\t\t\t\t\t// overlay\n\t\t\t\t\tself.stack[0] = next;\n\t\t\t\t} else {\n\t\t\t\t\tself.stack.unshift( next );\n\t\t\t\t}\n\t\t\t\treturn next;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Add an overlay that should be shown for a specific fragment identifier.\n\t *\n\t * The following code will display an overlay whenever a user visits a URL that\n\t * end with '#/hi/name'. The value of `name` will be passed to the overlay.\n\t *\n\t *     @example\n\t *     overlayManager.add( /\\/hi\\/(.*)/, function ( name ) {\n\t *       var factoryResult = $.Deferred();\n\t *\n\t *       mw.using( 'mobile.HiOverlay', function () {\n\t *         var HiOverlay = M.require( 'HiOverlay' );\n\t *         factoryResult.resolve( new HiOverlay( { name: name } ) );\n\t *       } );\n\t *\n\t *       return factoryResult;\n\t *     } );\n\t *\n\t * @memberof OverlayManager\n\t * @instance\n\t * @param {RegExp} route route regular expression, optionally with parameters.\n\t * @param {Function} factory a function returning an overlay or a $.Deferred\n\t * which resolves to an overlay.\n\t */\n\tadd: function ( route, factory ) {\n\t\tvar self = this,\n\t\t\tentry = {\n\t\t\t\troute: route,\n\t\t\t\tfactory: factory\n\t\t\t};\n\n\t\tthis.entries[route] = entry;\n\t\t// Check if overlay should be shown for the current path.\n\t\t// The DOM must fully load before we can show the overlay because Overlay relies on it.\n\t\tutil.docReady( function () {\n\t\t\tself._processMatch( self._matchRoute( self.router.getPath(), entry ) );\n\t\t} );\n\t},\n\n\t/**\n\t * Replace the currently displayed overlay with a new overlay without changing the\n\t * URL. This is useful for when you want to switch overlays, but don't want to\n\t * change the back button or close box behavior.\n\t *\n\t * @memberof OverlayManager\n\t * @instance\n\t * @param {Object} overlay The overlay to display\n\t */\n\treplaceCurrent: function ( overlay ) {\n\t\tif ( this.stack.length === 0 ) {\n\t\t\tthrow new Error( 'Trying to replace OverlayManager\\'s current overlay, but stack is empty' );\n\t\t}\n\t\tthis._hideOverlay( this.stack[0].overlay );\n\t\tthis.stack[0].overlay = overlay;\n\t\tattachHideEvent( overlay );\n\t\tthis._show( overlay );\n\t}\n} );\n\n/**\n * Retrieve a singleton instance using 'mediawiki.router'.\n * @memberof OverlayManager\n * @return {OverlayManager}\n */\nOverlayManager.getSingleton = function () {\n\tif ( !overlayManager ) {\n\t\toverlayManager = new OverlayManager( mw.loader.require( 'mediawiki.router' ), 'body' );\n\t}\n\treturn overlayManager;\n};\n\nmodule.exports = OverlayManager;\n","var\n\tHTML = mw.html,\n\tmfExtend = require( './mfExtend' ),\n\ttime = require( './time' ),\n\tutil = require( './util' ),\n\tSection = require( './Section' ),\n\tThumbnail = require( './Thumbnail' ),\n\tView = require( './View' ),\n\tHEADING_SELECTOR = mw.config.get( 'wgMFMobileFormatterHeadings', [ 'h1', 'h2', 'h3', 'h4', 'h5' ] ).join( ',' ),\n\tBLACKLISTED_THUMBNAIL_CLASS_SELECTORS = [ 'noviewer', 'metadata' ];\n\n/**\n * Mobile page view object\n *\n * @class Page\n * @uses Section\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Page( options ) {\n\n\tutil.extend( this, {\n\t\toptions: options,\n\t\ttitle: options.title,\n\t\tdisplayTitle: options.displayTitle,\n\t\turl: options.url || mw.util.getUrl( options.title ),\n\t\tid: options.id,\n\t\twikidataDescription: options.wikidataDescription,\n\t\tthumbnail: ( Object.prototype.hasOwnProperty.call( options, 'thumbnail' ) ) ?\n\t\t\toptions.thumbnail : false,\n\t\tisMissing: ( options.isMissing !== undefined ) ?\n\t\t\toptions.isMissing : options.id === 0\n\t} );\n\n\tthis.options.isBorderBox = false;\n\tthis.options.languageUrl = mw.util.getUrl( 'Special:MobileLanguages/' + this.title );\n\n\tView.call( this, this.options );\n\n\t// Fallback if no displayTitle provided\n\tif ( !this.displayTitle ) {\n\t\tthis.displayTitle = this.getDisplayTitle();\n\t}\n\n\tif ( this.thumbnail && this.thumbnail.width ) {\n\t\tthis.thumbnail.isLandscape = this.thumbnail.width > this.thumbnail.height;\n\t}\n}\n\nmfExtend( Page, View, {\n\t/**\n\t * @memberof Page\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {number} defaults.id Page ID. The default value of 0 represents a\n\t * new or missing page. Be sure to override it to avoid side effects.\n\t * @property {string} defaults.title Title of the page. It includes prefix where needed and\n\t * is human readable, e.g. Talk:The man who lived.\n\t * @property {string} defaults.displayTitle HTML title of the page for display. Falls back\n\t * to defaults.title (escaped) if no value is provided. Must be safe HTML!\n\t * @property {number} defaults.namespaceNumber the number of the\n\t *  namespace the page belongs to\n\t * @property {Object} defaults.protection List of permissions as returned by API,\n\t * e.g. [{ edit: ['*'] }]\n\t * @property {Array} defaults.sections Array of {Section} objects.\n\t * @property {boolean} defaults.isMainPage Whether the page is the Main Page.\n\t * @property {boolean} defaults.isMissing Whether the page exists in the wiki.\n\t * @property {Object} defaults.thumbnail thumbnail definition corresponding to page image\n\t * @property {boolean} defaults.thumbnail.isLandscape whether the image is in\n\t *  landscape format\n\t * @property {number} defaults.thumbnail.width of image in pixels.\n\t * @property {number} defaults.thumbnail.height of image in pixels.\n\t * @property {string} defaults.thumbnail.source url for image\n\t */\n\tdefaults: {\n\t\tid: 0,\n\t\ttitle: '',\n\t\tdisplayTitle: '',\n\t\tnamespaceNumber: 0,\n\t\tprotection: {\n\t\t\tedit: [ '*' ]\n\t\t},\n\t\tsections: [],\n\t\tisMissing: false,\n\t\tisMainPage: false,\n\t\turl: undefined,\n\t\tthumbnail: {\n\t\t\tisLandscape: undefined,\n\t\t\tsource: undefined,\n\t\t\twidth: undefined,\n\t\t\theight: undefined\n\t\t}\n\t},\n\t/**\n\t * Retrieve the title that should be displayed to the user\n\t * @memberof Page\n\t * @instance\n\t * @return {string} HTML\n\t */\n\tgetDisplayTitle: function () {\n\t\treturn this.options.displayTitle || HTML.escape( this.options.title );\n\t},\n\t/**\n\t * Determine if current page is in a specified namespace\n\t * @memberof Page\n\t * @instance\n\t * @param {string} namespace Name of namespace\n\t * @return {boolean}\n\t */\n\tinNamespace: function ( namespace ) {\n\t\treturn this.options.namespaceNumber === mw.config.get( 'wgNamespaceIds' )[namespace];\n\t},\n\n\t/**\n\t * Find the heading in the page.\n\t * This has the benefit of excluding any additional h2s and h3s that may\n\t * have been added programatically.\n\t * @method\n\t * @param {number} sectionIndex as defined by the PHP parser.\n\t *  It should correspond to the section id\n\t *  used in the edit link for the section.\n\t *  Note, confusingly, this is different from section \"ID\" which is\n\t * used in methods\n\t * @return {jQuery.Object}\n\t */\n\tfindSectionHeadingByIndex: function ( sectionIndex ) {\n\t\tif ( sectionIndex < 1 ) {\n\t\t\t// negative indexes will search from the end, which is behaviour we do not want.\n\t\t\t// return an empty set when this happens.\n\t\t\treturn this.$();\n\t\t} else {\n\t\t\treturn this.$( HEADING_SELECTOR )\n\t\t\t\t// Headings must strictly be a child element of a section element\n\t\t\t\t// or the parser-output.\n\t\t\t\t// Not an ancestor!\n\t\t\t\t.filter( '.mw-parser-output > *, [class^=\"mf-section-\"] > *' ).eq( sectionIndex - 1 );\n\t\t}\n\t},\n\t/**\n\t * Finds all child elements that match the selector in a given section or subsection.\n\t * Returns any direct child elements that match the selector,\n\t * (i.e. searches only one level deep)\n\t * as well as any elements that match the selector within those children.\n\t * If the Page has no headings (e.g. a stub),\n\t * then the search will target all nodes within the page.\n\t *\n\t * This code should work on desktop (PHP parser HTML)\n\t * as well as mobile formatted HTML (PHP parser + MobileFormatter)\n\t * @method\n\t * @param {number} sectionIndex as defined by the PHP parser. It should correspond to\n\t *  the section id used in the edit link for the section.\n\t *  Note, confusingly, this is different from section \"ID\" which is\n\t *  used in methods\n\t * @param {string} selector to match\n\t * @return {jQuery.Object}\n\t */\n\tfindChildInSectionLead: function ( sectionIndex, selector ) {\n\t\tvar $heading, $nextHeading, $container, $lead,\n\t\t\theadingSelector = HEADING_SELECTOR;\n\n\t\tfunction withNestedChildren( $matchingNodes ) {\n\t\t\treturn $matchingNodes.find( selector ).addBack();\n\t\t}\n\n\t\tif ( sectionIndex === 0 ) {\n\t\t\t// lead is easy\n\t\t\t$lead = this.getLeadSectionElement();\n\t\t\tif ( $lead && $lead.length ) {\n\t\t\t\treturn withNestedChildren( $lead.children( selector ) );\n\t\t\t} else {\n\t\t\t\t$heading = this.findSectionHeadingByIndex( 1 );\n\t\t\t\treturn $heading.length ? withNestedChildren( $heading.prevAll( selector ) ) :\n\t\t\t\t\t// this page is a stub so search entire page\n\t\t\t\t\tthis.$( selector );\n\t\t\t}\n\t\t}\n\n\t\t// find heading associated with the section by looking at its\n\t\t// index position in the article\n\t\t// section ids relate to the element position in the page and the first heading\n\t\t// lead has been dealt with above, so first heading corresponds to section 1,\n\t\t// the first heading in the article.\n\t\t$heading = this.findSectionHeadingByIndex( sectionIndex );\n\n\t\t// If section-heading is present on the heading,\n\t\t// then we know the page has been MobileFormatted\n\t\t// and that this is a wrapped section\n\t\tif ( $heading.hasClass( 'section-heading' ) ) {\n\t\t\t// get content of section\n\t\t\t$container = $heading.next();\n\t\t\t// inside section find the first heading\n\t\t\t$nextHeading = $container.find( headingSelector ).eq( 0 );\n\t\t\treturn $nextHeading.length ?\n\t\t\t\t// find all amboxes before the next heading\n\t\t\t\twithNestedChildren( $nextHeading.prevAll( selector ) ) :\n\t\t\t\t// There is no subheadings inside\n\t\t\t\t// Grab all issues in section\n\t\t\t\twithNestedChildren( $container.children( selector ) );\n\t\t} else {\n\t\t\t// the heading relates to a subsection (or unwrapped desktop section),\n\t\t\t// so grab elements between this and the next one\n\t\t\t$nextHeading = $heading.eq( 0 ).nextAll( headingSelector ).eq( 0 );\n\t\t\treturn $heading.nextUntil( $nextHeading, selector );\n\t\t}\n\t},\n\n\t/**\n\t * Get the lead section of the page view.\n\t * @memberof Page\n\t * @instance\n\t * @return {jQuery.Object|null}\n\t */\n\tgetLeadSectionElement: function () {\n\t\t/*\n\t\t * The page is formatted as follows:\n\t\t * <div id=\"bodyContent\">\n\t\t *   <!-- content of the page.. -->\n\t\t *   <div id=\"mw-content-text\">\n\t\t *     <div class=\"mf-section-0\">lead section</div>\n\t\t *     <h2></h2>\n\t\t *     <div class=\"mf-section-1\">second section</div>\n\t\t *   </div>\n\t\t * </div>\n\t\t */\n\t\tif ( this.$( '.mf-section-0' ).length ) {\n\t\t\treturn this.$( '.mf-section-0' );\n\t\t}\n\t\t// no lead section found\n\t\treturn null;\n\t},\n\n\t/**\n\t * Determines if content model is wikitext\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisWikiText: function () {\n\t\treturn mw.config.get( 'wgPageContentModel' ) === 'wikitext';\n\t},\n\n\t/**\n\t * Checks whether the current page is the main page\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisMainPage: function () {\n\t\treturn this.options.isMainPage;\n\t},\n\t/**\n\t * Checks whether the current page is watched\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisWatched: function () {\n\t\treturn this.options.isWatched;\n\t},\n\n\t/**\n\t * Return the latest revision id for this page\n\t * @memberof Page\n\t * @instance\n\t * @return {number}\n\t */\n\tgetRevisionId: function () {\n\t\treturn this.options.revId;\n\t},\n\n\t/**\n\t * Return prefixed page title\n\t * @memberof Page\n\t * @instance\n\t * @return {string}\n\t */\n\tgetTitle: function () {\n\t\treturn this.options.title;\n\t},\n\n\t/**\n\t * Return page id\n\t * @memberof Page\n\t * @instance\n\t * @return {number}\n\t */\n\tgetId: function () {\n\t\treturn this.options.id;\n\t},\n\n\t/**\n\t * return namespace id\n\t * @memberof Page\n\t * @instance\n\t * @return {number} namespace Number\n\t */\n\tgetNamespaceId: function () {\n\t\tvar nsId,\n\t\t\targs = this.options.title.split( ':' );\n\n\t\tif ( args[1] ) {\n\t\t\tnsId = mw.config.get( 'wgNamespaceIds' )[ args[0].toLowerCase().replace( ' ', '_' ) ] || 0;\n\t\t} else {\n\t\t\tnsId = 0;\n\t\t}\n\t\treturn nsId;\n\t},\n\n\t/**\n\t * Determines if current page is a talk page\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean} Whether the page is a talk page or not\n\t */\n\tisTalkPage: function () {\n\t\tvar ns = this.getNamespaceId();\n\t\t// all talk pages are odd Numbers (except the case of special pages)\n\t\treturn ns > 0 && ns % 2 === 1;\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Page\n\t * @instance\n\t */\n\tpreRender: function () {\n\t\tthis.sections = [];\n\t\tthis._sectionLookup = {};\n\t\tthis.title = this.options.title;\n\n\t\tthis.options.sections.forEach( function ( sectionData ) {\n\t\t\tvar section = new Section( sectionData );\n\t\t\tthis.sections.push( section );\n\t\t\tthis._sectionLookup[section.id] = section;\n\t\t}.bind( this ) );\n\t},\n\n\t/**\n\t * Return all the thumbnails in the article.\n\t * Images which have a class or link container (.image|.thumbimage)\n\t * that matches one of the items of the constant BLACKLISTED_THUMBNAIL_CLASS_SELECTORS\n\t * will be excluded.\n\t * A thumbnail nested inside one of these classes will still be returned.\n\t * e.g. `<div class=\"noviewer\"><a class=\"image\"><img></a></div>` is not a valid thumbnail\n\t * `<a class=\"image noviewer\"><img></a>` is not a valid thumbnail\n\t * `<a class=\"image\"><img class=\"noviewer\"></a>` is not a valid thumbnail\n\t * @memberof Page\n\t * @instance\n\t * @return {Thumbnail[]}\n\t */\n\tgetThumbnails: function () {\n\t\tvar $thumbs,\n\t\t\t$el = this.$el,\n\t\t\tblacklistSelector = '.' + BLACKLISTED_THUMBNAIL_CLASS_SELECTORS.join( ',.' ),\n\t\t\tthumbs = [];\n\n\t\tif ( !this._thumbs ) {\n\t\t\t$thumbs = $el.find( 'a.image, a.thumbimage' )\n\t\t\t\t.not( blacklistSelector );\n\n\t\t\t$thumbs.each( function () {\n\t\t\t\tvar $a = $el.find( this ),\n\t\t\t\t\t$lazyImage = $a.find( '.lazy-image-placeholder' ),\n\t\t\t\t\t// Parents need to be checked as well.\n\t\t\t\t\tvalid = $a.parents( blacklistSelector ).length === 0 &&\n\t\t\t\t\t\t$a.find( blacklistSelector ).length === 0,\n\t\t\t\t\tlegacyMatch = $a.attr( 'href' ).match( /title=([^/&]+)/ ),\n\t\t\t\t\tmatch = $a.attr( 'href' ).match( /[^/]+$/ );\n\n\t\t\t\t// filter out invalid lazy loaded images if so far image is valid\n\t\t\t\tif ( $lazyImage.length && valid ) {\n\t\t\t\t\t// if the regex matches it means the image has one of the classes\n\t\t\t\t\t// thus we must invert the result\n\t\t\t\t\tvalid = !new RegExp( '\\\\b(' + BLACKLISTED_THUMBNAIL_CLASS_SELECTORS.join( '|' ) + ')\\\\b' )\n\t\t\t\t\t\t.test( $lazyImage.data( 'class' ) );\n\t\t\t\t}\n\n\t\t\t\tif ( valid && ( legacyMatch || match ) ) {\n\t\t\t\t\tthumbs.push(\n\t\t\t\t\t\tnew Thumbnail( {\n\t\t\t\t\t\t\tel: $a,\n\t\t\t\t\t\t\tfilename: decodeURIComponent(\n\t\t\t\t\t\t\t\tlegacyMatch ? legacyMatch[1] : match[0]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} );\n\t\t\tthis._thumbs = thumbs;\n\t\t}\n\t\treturn this._thumbs;\n\t},\n\n\t/**\n\t * FIXME: Change function signature to take the anchor of the heading\n\t * @memberof Page\n\t * @instance\n\t * @param {string} id of the section as defined by MobileFormatter.\n\t * Note, that currently, this is different from\n\t * the PHP parser in that it relates to top-level sections.\n\t * For example, mf-section-1 would relate to section 1. See FIXME.\n\t * @return {Section}\n\t */\n\tgetSection: function ( id ) {\n\t\treturn this._sectionLookup[ id ];\n\t},\n\n\t/**\n\t * Obtain the list of high level (and grouped) sections.\n\t * Note that this list will not include subsections.\n\t * @memberof Page\n\t * @instance\n\t * @return {Array} of Section instances\n\t */\n\tgetSections: function () {\n\t\treturn this.sections;\n\t},\n\n\t/**\n\t * Returns a jQuery object representing all redlinks on the page.\n\t * @memberof Page\n\t * @instance\n\t * @return {jQuery.Object}\n\t */\n\tgetRedLinks: function () {\n\t\treturn this.$( '.new' );\n\t}\n} );\n\n/**\n * Create a Page object from an API response.\n *\n * @memberof Page\n * @param {Object} resp as representing a page in the API\n * @return {Page}\n */\nPage.newFromJSON = function ( resp ) {\n\tvar revision, displayTitle,\n\t\tthumb = resp.thumbnail,\n\t\tpageprops = resp.pageprops || {\n\t\t\tdisplaytitle: HTML.escape( resp.title )\n\t\t},\n\t\tterms = resp.terms;\n\n\tif ( pageprops || terms ) {\n\t\t// The label is either the display title or the label pageprop\n\t\t// (the latter used by Wikidata)\n\t\t// Long term we want to consolidate these.\n\t\t// Note that pageprops.displaytitle is HTML, while\n\t\t// terms.label[0] is plain text.\n\t\tdisplayTitle = terms && terms.label ?\n\t\t\tHTML.escape( terms.label[0] ) : pageprops.displaytitle;\n\t}\n\t// Add Wikidata descriptions if available (T101719)\n\tresp.wikidataDescription = resp.description || undefined;\n\n\tif ( thumb ) {\n\t\tresp.thumbnail.isLandscape = thumb.width > thumb.height;\n\t}\n\n\t// page may or may not exist.\n\tif ( resp.revisions && resp.revisions[0] ) {\n\t\trevision = resp.revisions[0];\n\t\tresp.lastModified = time.getLastModifiedMessage(\n\t\t\tnew Date( revision.timestamp ).getTime() / 1000,\n\t\t\trevision.user\n\t\t);\n\t}\n\n\treturn new Page(\n\t\tutil.extend( resp, {\n\t\t\tid: resp.pageid,\n\t\t\tisMissing: !!resp.missing,\n\t\t\turl: mw.util.getUrl( resp.title ),\n\t\t\tdisplayTitle: displayTitle // this is HTML!\n\t\t} )\n\t);\n};\n\n/**\n * Selector for matching headings\n *\n * @memberof Page\n */\nPage.HEADING_SELECTOR = HEADING_SELECTOR;\n\nmodule.exports = Page;\n","var sectionTemplate = mw.template.get( 'mobile.startup', 'Section.hogan' ),\n\tutil = require( './util.js' ),\n\tactionParams = require( './actionParams' ),\n\tcache = {};\n\n/**\n * Add child to listOfSections if the level of child is the same as the last\n * child of listOfSections, otherwise add it to the children of the last\n * section of listOfSections. If listOfSections is empty, just add child to it.\n * @private\n * @param {Array} listOfSections - Array of section ids\n * @param {Object} child - Section to be added to listOfSections\n */\nfunction assignToParent( listOfSections, child ) {\n\tvar section;\n\tif ( listOfSections.length === 0 ) {\n\t\tlistOfSections.push( child );\n\t} else {\n\t\t// take a look at the last child\n\t\tsection = listOfSections[listOfSections.length - 1];\n\t\t// If the level is the same as another section in this list it is a sibling\n\t\tif ( parseInt( section.level, 10 ) === parseInt( child.level, 10 ) ) {\n\t\t\tlistOfSections.push( child );\n\t\t} else {\n\t\t\t// Otherwise take a look at that sections children recursively\n\t\t\tassignToParent( section.subsections, child );\n\t\t}\n\t}\n}\n\n/**\n * Order sections hierarchically\n * @private\n * @param {Array} sections Array of section objects created from response HTML\n * @return {Array} Ordered array of sections\n */\nfunction transformSections( sections ) {\n\tvar\n\t\tsectionLevels = sections.map( function ( s ) {\n\t\t\treturn s.level;\n\t\t} ),\n\t\texistingSectionLevels = sectionLevels.filter( function ( level ) {\n\t\t\treturn !!level;\n\t\t} ),\n\t\tcollapseLevel = Math.min.apply( this, existingSectionLevels ).toString(),\n\t\tlastSection,\n\t\tresult = [];\n\n\t// if the first section level is not equal to collapseLevel, this first\n\t// section will not have a parent and will be appended to the result.\n\tsections.forEach( function ( section ) {\n\t\tif ( section.line !== undefined ) {\n\t\t\tsection.line = section.line.replace( /<\\/?a\\b[^>]*>/g, '' );\n\t\t}\n\t\tsection.subsections = [];\n\n\t\tif (\n\t\t\t!lastSection ||\n\t\t\t(\n\t\t\t\t!section.level ||\n\t\t\t\tsection.level === collapseLevel\n\t\t\t) ||\n\t\t\t// make sure lastSections first child's level is bigger than section.level\n\t\t\t(\n\t\t\t\tlastSection.subsections.length &&\n\t\t\t\tlastSection.subsections[0].level > section.level\n\t\t\t) ||\n\t\t\t// also make sure section.level is not bigger than the lastSection.level\n\t\t\t(\n\t\t\t\tlastSection.level &&\n\t\t\t\tlastSection.level >= section.level\n\t\t\t)\n\t\t) {\n\t\t\tresult.push( section );\n\t\t\tlastSection = section;\n\t\t} else {\n\t\t\tassignToParent( lastSection.subsections, section );\n\t\t\tlastSection.text += sectionTemplate.render( section );\n\t\t}\n\t} );\n\n\treturn result;\n}\n\n/**\n * API for providing Page data\n * @class PageGateway\n * @param {mw.Api} api\n */\nfunction PageGateway( api ) {\n\tthis.api = api;\n}\n\nPageGateway.prototype = {\n\t/**\n\t * Retrieve a page from the api\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page to be retrieved\n\t * @param {string} endpoint an alternative api url to retrieve the page from\n\t * @param {boolean} leadOnly When set only the lead section content is returned\n\t * @return {jQuery.Deferred} with parameter page data that can be passed to a Page view\n\t */\n\tgetPage: function ( title, endpoint, leadOnly ) {\n\t\tvar timestamp,\n\t\t\td = util.Deferred(),\n\t\t\tparams = endpoint ? {\n\t\t\t\turl: endpoint,\n\t\t\t\tdataType: 'jsonp'\n\t\t\t} : {},\n\t\t\tprotection = {\n\t\t\t\tedit: [ '*' ]\n\t\t\t};\n\n\t\tutil.extend( params,\n\t\t\tactionParams( {\n\t\t\t\taction: 'mobileview',\n\t\t\t\tpage: title,\n\t\t\t\tvariant: mw.config.get( 'wgPageContentLanguage' ),\n\t\t\t\tredirect: 'yes',\n\t\t\t\tprop: 'id|sections|text|lastmodified|lastmodifiedby|languagecount|hasvariants|protection|displaytitle|revision',\n\t\t\t\tnoheadings: 'yes',\n\t\t\t\tsectionprop: 'level|line|anchor',\n\t\t\t\tsections: leadOnly ? 0 : 'all'\n\t\t\t} )\n\t\t);\n\n\t\tif ( !cache[title] ) {\n\t\t\tcache[title] = this.api.get( params ).then( function ( resp ) {\n\t\t\t\tvar sections, lastModified, resolveObj, mv;\n\n\t\t\t\tif ( resp.error ) {\n\t\t\t\t\treturn d.reject( resp.error );\n\t\t\t\t} else if ( !resp.mobileview.sections ) {\n\t\t\t\t\treturn d.reject( 'No sections' );\n\t\t\t\t} else {\n\t\t\t\t\tmv = resp.mobileview;\n\t\t\t\t\tsections = transformSections( mv.sections );\n\t\t\t\t\t// Assume the timestamp is in the form TS_ISO_8601\n\t\t\t\t\t// and we don't care about old browsers\n\t\t\t\t\t// change to seconds to be consistent with PHP\n\t\t\t\t\ttimestamp = new Date( mv.lastmodified ).getTime() / 1000;\n\t\t\t\t\tlastModified = mv.lastmodifiedby;\n\n\t\t\t\t\t// FIXME: [API] the API sometimes returns an object and sometimes an array\n\t\t\t\t\t// There are various quirks with the format of protection level\n\t\t\t\t\t// as returned by api.\n\t\t\t\t\t// Also it is usually incomplete - if something is missing this means\n\t\t\t\t\t// that it has no protection level.\n\t\t\t\t\t// When an array this means there is no protection level set.\n\t\t\t\t\t// To keep the data type consistent either use the predefined\n\t\t\t\t\t// protection level,\n\t\t\t\t\t// or extend it with what is returned by API.\n\t\t\t\t\tprotection = Array.isArray( mv.protection ) ?\n\t\t\t\t\t\tprotection :\n\t\t\t\t\t\tutil.extend( protection, mv.protection );\n\n\t\t\t\t\tresolveObj = {\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tid: mv.id,\n\t\t\t\t\t\trevId: mv.revId,\n\t\t\t\t\t\tprotection: protection,\n\t\t\t\t\t\tlead: sections[0].text,\n\t\t\t\t\t\tsections: sections.slice( 1 ),\n\t\t\t\t\t\tisMainPage: mv.mainpage !== undefined,\n\t\t\t\t\t\thistoryUrl: mw.util.getUrl( title, {\n\t\t\t\t\t\t\taction: 'history'\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\tlastModifiedTimestamp: timestamp,\n\t\t\t\t\t\tlanguageCount: mv.languagecount,\n\t\t\t\t\t\thasVariants: mv.hasvariants !== undefined,\n\t\t\t\t\t\tdisplayTitle: mv.displaytitle\n\t\t\t\t\t};\n\t\t\t\t\t// Add non-anonymous user information\n\t\t\t\t\tif ( lastModified ) {\n\t\t\t\t\t\tutil.extend( resolveObj, {\n\t\t\t\t\t\t\tlastModifiedUserName: lastModified.name,\n\t\t\t\t\t\t\tlastModifiedUserGender: lastModified.gender\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t\t// FIXME: Return a Page class here\n\t\t\t\t\treturn resolveObj;\n\t\t\t\t}\n\t\t\t}, function ( msg ) {\n\t\t\t\treturn d.reject( msg );\n\t\t\t} );\n\t\t}\n\n\t\treturn cache[title];\n\t},\n\n\t/**\n\t * Invalidate the internal cache for a given page\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page who's cache you want to invalidate\n\t */\n\tinvalidatePage: function ( title ) {\n\t\tdelete cache[title];\n\t},\n\n\t/**\n\t * Gets language variant list for a page; helper function for getPageLanguages()\n\t * @memberof PageGateway\n\t * @instance\n\t * @private\n\t * @param  {string} title Name of the page to obtain variants for\n\t * @param  {Object} data Data from API\n\t * @return {Array|boolean} List of language variant objects or false if no variants exist\n\t */\n\t_getLanguageVariantsFromApiResponse: function ( title, data ) {\n\t\tvar generalData = data.query.general,\n\t\t\tvariantPath = generalData.variantarticlepath,\n\t\t\tvariants = [];\n\n\t\tif ( !generalData.variants ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Create the data object for each variant and store it\n\t\tObject.keys( generalData.variants ).forEach( function ( index ) {\n\t\t\tvar item = generalData.variants[ index ],\n\t\t\t\tvariant = {\n\t\t\t\t\tautonym: item.name,\n\t\t\t\t\tlang: item.code\n\t\t\t\t};\n\n\t\t\tif ( variantPath ) {\n\t\t\t\tvariant.url = variantPath\n\t\t\t\t\t.replace( '$1', title )\n\t\t\t\t\t.replace( '$2', item.code );\n\t\t\t} else {\n\t\t\t\tvariant.url = mw.util.getUrl( title, {\n\t\t\t\t\tvariant: item.code\n\t\t\t\t} );\n\t\t\t}\n\t\t\tvariants.push( variant );\n\t\t} );\n\n\t\treturn variants;\n\t},\n\n\t/**\n\t * Retrieve available languages for a given title\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page languages should be retrieved for\n\t * @param {string} [language] when provided the names of the languages returned\n\t *  will be translated additionally into this language.\n\t * @return {jQuery.Deferred} which is called with an object containing langlinks\n\t * and variant links as defined @ https://en.m.wikipedia.org/w/api.php?action=help&modules=query%2Blanglinks\n\t */\n\tgetPageLanguages: function ( title, language ) {\n\t\tvar self = this,\n\t\t\targs = actionParams( {\n\t\t\t\tmeta: 'siteinfo',\n\t\t\t\tsiprop: 'general',\n\t\t\t\tprop: 'langlinks',\n\t\t\t\tlllimit: 'max',\n\t\t\t\ttitles: title\n\t\t\t} );\n\n\t\tif ( language ) {\n\t\t\targs.llprop = 'url|autonym|langname';\n\t\t\targs.llinlanguagecode = language;\n\t\t} else {\n\t\t\targs.llprop = 'url|autonym';\n\t\t}\n\t\treturn this.api.get( args ).then( function ( resp ) {\n\t\t\treturn {\n\t\t\t\tlanguages: resp.query.pages[0].langlinks || [],\n\t\t\t\tvariants: self._getLanguageVariantsFromApiResponse( title, resp )\n\t\t\t};\n\t\t}, function () {\n\t\t\treturn util.Deferred().reject();\n\t\t} );\n\t},\n\n\t/**\n\t * Extract sections from headings in $el\n\t * @memberof PageGateway\n\t * @instance\n\t * @private\n\t * @param {jQuery.Object} $el object from which sections are extracted\n\t * @return {Array} Array of section objects created from headings in $el\n\t * FIXME: Where's a better place for getSectionsFromHTML and this function to live?\n\t * Answer: Possibly Page.js\n\t */\n\t_getAPIResponseFromHTML: function ( $el ) {\n\t\t// FIXME: use Page.HEADING_SELECTOR\n\t\tvar $headings = $el.find( 'h1,h2,h3,h4,h5,h6' ),\n\t\t\tsections = [];\n\n\t\t$headings.each( function () {\n\t\t\tvar level = this.tagName.substr( 1 ),\n\t\t\t\t$span = $el.find( this ).find( '.mw-headline' );\n\n\t\t\tif ( $span.length ) {\n\t\t\t\tsections.push( {\n\t\t\t\t\tlevel: level,\n\t\t\t\t\tline: $span.html(),\n\t\t\t\t\tanchor: $span.attr( 'id' ) || '',\n\t\t\t\t\ttext: ''\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t\treturn sections;\n\t},\n\n\t/**\n\t * Order sections hierarchically\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {jQuery.Object} $el object from which sections are extracted\n\t * @return {Array} Ordered array of sections\n\t */\n\tgetSectionsFromHTML: function ( $el ) {\n\t\treturn transformSections( this._getAPIResponseFromHTML( $el ) );\n\t}\n};\n\nmodule.exports = PageGateway;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' ),\n\tbrowser = require( './Browser' ).getSingleton();\n\n/**\n * List of items page view\n * @class PageList\n * @extends View\n */\nfunction PageList() {\n\tView.apply( this, arguments );\n}\n\nmfExtend( PageList, View, {\n\t/**\n\t * @memberof PageList\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {Page[]} defaults.pages Array of Page objects. These should match\n\t *                              the Page model and not necessarily the\n\t *                              underlying API format used.\n\t * E.g. [\n\t *   {\n\t *     heading: \"<strong>C</strong>laude Monet\",\n\t *     id: undefined,\n\t *     title: \"Claude Monet\",\n\t *     displayTitle: \"<i>Claude Monet</i>\",\n\t *     url: \"/wiki/Claude_Monet\",\n\t *     thumbnail: {\n\t *       height: 62,\n\t *       source: \"http://127.0.0.1:8080/images/thumb/thumb.jpg\",\n\t *       width: 80,\n\t *       isLandscape: true\n\t *     }\n\t *   }\n\t * ]\n\t */\n\tdefaults: {\n\t\tpages: []\n\t},\n\t/**\n\t * Render page images for the existing page list. Assumes no page images have been loaded.\n\t * @memberof PageList\n\t * @instance\n\t */\n\trenderPageImages: function () {\n\t\tvar self = this;\n\n\t\tsetTimeout( function () {\n\t\t\tself.$( '.list-thumb' ).each( function () {\n\t\t\t\tvar style = self.$( this ).data( 'style' );\n\t\t\t\tself.$( this ).attr( 'style', style );\n\t\t\t} );\n\t\t\t// Delay an unnecessary load of images on mobile (slower?) connections\n\t\t\t// In particular on search results which can be regenerated quickly.\n\t\t}, browser.isWideScreen() ? 0 : 1000 );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof PageList\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tthis.renderPageImages();\n\t},\n\ttemplate: mw.template.get( 'mobile.startup', 'PageList.hogan' ),\n\t/**\n\t * @memberof PageList\n\t * @instance\n\t */\n\ttemplatePartials: {\n\t\t// The server uses a very different structure in\n\t\t// SpecialMobileEditWatchlist.getLineHtml(). Be aware of these differences\n\t\t// when updating server rendered items.\n\t\titem: mw.template.get( 'mobile.startup', 'PageListItem.hogan' )\n\t}\n} );\n\nmodule.exports = PageList;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tutil = require( './util' ),\n\tView = require( './View' );\n\n/**\n * An abstract class for a {@link View} that comprises a simple panel.\n * @class Panel\n * @extends View\n *\n * @param {Object} [params] Configuration options\n */\nfunction Panel( params ) {\n\tView.call( this, util.extend(\n\t\t{ className: 'panel' },\n\t\tparams,\n\t\t{ events: util.extend( { 'click .cancel': 'onCancel' }, ( params || {} ).events ) } )\n\t);\n}\n\nmfExtend( Panel, View, {\n\t// in milliseconds\n\tminHideDelay: 10,\n\n\t/**\n\t * Cancel event handler\n\t * @memberof Panel\n\t * @instance\n\t * @param {Object} ev Event Object\n\t */\n\tonCancel: function ( ev ) {\n\t\tev.preventDefault();\n\t\tthis.hide();\n\t},\n\n\t/**\n\t * Shows panel after a slight delay\n\t * @memberof Panel\n\t * @instance\n\t * @method\n\t */\n\tshow: function () {\n\t\tvar self = this;\n\n\t\tif ( !self.isVisible() ) {\n\t\t\t// use setTimeout to allow the browser to redraw if render() was called\n\t\t\t// just before show(); this is important for animations to work\n\t\t\t// (0ms doesn't work on Firefox, 10ms is enough)\n\t\t\t//\n\t\t\t// FIXME: setTimeout should be reconsidered in T209129\n\t\t\tsetTimeout( function () {\n\t\t\t\tself.$el.addClass( 'visible animated' );\n\t\t\t\tself.emit( 'show' );\n\t\t\t}, self.minHideDelay );\n\t\t}\n\t},\n\n\t/**\n\t * Hides panel\n\t * @memberof Panel\n\t * @instance\n\t */\n\thide: function () {\n\t\tvar self = this;\n\n\t\t// see comment in show()\n\t\tsetTimeout( function () {\n\t\t\tself.$el.removeClass( 'visible' );\n\t\t\tself.emit( 'hide' );\n\t\t}, self.minHideDelay );\n\t},\n\n\t/**\n\t * Determines if panel is visible\n\t * @memberof Panel\n\t * @instance\n\t * @return {boolean} Panel is visible\n\t */\n\tisVisible: function () {\n\t\treturn this.$el.hasClass( 'visible' );\n\t},\n\n\t/**\n\t * Shows or hides panel\n\t * @memberof Panel\n\t * @instance\n\t */\n\ttoggle: function () {\n\t\tif ( this.isVisible() ) {\n\t\t\tthis.hide();\n\t\t} else {\n\t\t\tthis.show();\n\t\t}\n\t}\n} );\n\nmodule.exports = Panel;\n","var util = require( './util' ),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * Class to assist a view in implementing infinite scrolling on some DOM\n * element. This module itself is only responsible for emitting an Event when\n * the bottom of an Element is scrolled to.\n *\n * @class ScrollEndEventEmitter\n * @mixins OO.EventEmitter\n *\n * Use this class in a view to help it do infinite scrolling.\n *\n * 1. Initialize it in the constructor `initialize` and listen to the\n *   EVENT_SCROLL_END event it emits (and call your loading function then)\n * 2. On preRender (once we have the DOM element) set it into the infinite\n *   scrolling object and disable it until we've loaded.\n * 3. Once you have loaded the list and put it in the DOM, enable the\n *   infinite scrolling detection.\n *   * Everytime the scroller detection triggers a load, it auto disables\n *     to not trigger multiple times. After you have loaded, manually\n *     re-enable it.\n *\n * Example:\n *     @example\n *     <code>\n *       var\n *         mfExtend = require( './mfExtend' ),\n *         ScrollEndEventEmitter = require( './ScrollEndEventEmitter' ),\n *         eventBus = require( './eventBusSingleton' );\n *       mfExtend( PhotoList, View, {\n *         //...\n *         initialize: function ( options ) {\n *           this.gateway = new PhotoListGateway( {\n *             username: options.username\n *           } );\n *           // 1. Set up infinite scroll helper and listen to events\n *           this.scrollEndEventEmitter = new ScrollEndEventEmitter( eventBus, 1000 );\n *           this.scrollEndEventEmitter.on( ScrollEndEventEmitter.EVENT_SCROLL_END,\n *             this._loadPhotos.bind( this ) );\n *           View.prototype.initialize.apply( this, arguments );\n *         },\n *         preRender: function () {\n *           // 2. Disable until we've got the list rendered and set DOM el\n *           this.scrollEndEventEmitter.setElement( this.$el );\n *           this.scrollEndEventEmitter.disable();\n *         },\n *         _loadPhotos: function () {\n *           var self = this;\n *           this.gateway.getPhotos().then( function ( photos ) {\n *             // load photos into the DOM ...\n *             // 3. and (re-)enable infinite scrolling\n *             self.scrollEndEventEmitter.enable();\n *           } );\n *         }\n *       } );\n *     </code>\n *\n * @fires ScrollEndEventEmitter#ScrollEndEventEmitter-scrollEnd\n * @param {Object} eventBus object to listen for scroll:throttled events\n * @param {number} [threshold=100] distance in pixels used to calculate if scroll\n * position is near the end of the $el\n */\nfunction ScrollEndEventEmitter( eventBus, threshold ) {\n\tthis.threshold = threshold || 100;\n\tthis.eventBus = eventBus;\n\tthis.enable();\n\tOO.EventEmitter.call( this );\n}\nOO.mixinClass( ScrollEndEventEmitter, OO.EventEmitter );\n\n/**\n * Fired when scroll bottom has been reached.\n * @event ScrollEndEventEmitter#ScrollEndEventEmitter-scrollEnd\n */\nScrollEndEventEmitter.EVENT_SCROLL_END = 'ScrollEndEventEmitter-scrollEnd';\n\nmfExtend( ScrollEndEventEmitter, {\n\t/**\n\t * Listen to scroll on window and notify this._onScroll\n\t * @memberof ScrollEndEventEmitter\n\t * @instance\n\t * @private\n\t */\n\t_bindScroll: function () {\n\t\tif ( !this._scrollHandler ) {\n\t\t\tthis._scrollHandler = this._onScroll.bind( this );\n\t\t\tthis.eventBus.on( 'scroll:throttled', this._scrollHandler );\n\t\t}\n\t},\n\t/**\n\t * Unbind scroll handler\n\t * @memberof ScrollEndEventEmitter\n\t * @instance\n\t * @private\n\t */\n\t_unbindScroll: function () {\n\t\tif ( this._scrollHandler ) {\n\t\t\tthis.eventBus.off( 'scroll:throttled', this._scrollHandler );\n\t\t\tthis._scrollHandler = null;\n\t\t}\n\t},\n\t/**\n\t * Scroll handler. Triggers load event when near the end of the container.\n\t * @memberof ScrollEndEventEmitter\n\t * @instance\n\t * @private\n\t */\n\t_onScroll: function () {\n\t\tif ( this.$el && this.enabled && this.scrollNearEnd() ) {\n\t\t\t// Disable when triggering an event. Won't trigger again until\n\t\t\t// re-enabled.\n\t\t\tthis.disable();\n\t\t\tthis.emit( ScrollEndEventEmitter.EVENT_SCROLL_END );\n\t\t}\n\t},\n\t/**\n\t * Is the scroll position near the end of the container element?\n\t * @memberof ScrollEndEventEmitter\n\t * @instance\n\t * @private\n\t * @return {boolean}\n\t */\n\tscrollNearEnd: function () {\n\t\tvar $window = util.getWindow(),\n\t\t\tscrollBottom = $window.scrollTop() + $window.height(),\n\t\t\tendPosition = this.$el.offset().top + this.$el.outerHeight();\n\t\treturn scrollBottom + this.threshold > endPosition;\n\t},\n\t/**\n\t * Enable the ScrollEndEventEmitter so that it triggers events.\n\t * @memberof ScrollEndEventEmitter\n\t * @instance\n\t */\n\tenable: function () {\n\t\tthis.enabled = true;\n\t\tthis._bindScroll();\n\t},\n\t/**\n\t * Disable the ScrollEndEventEmitter so that it doesn't trigger events.\n\t * @memberof ScrollEndEventEmitter\n\t * @instance\n\t */\n\tdisable: function () {\n\t\tthis.enabled = false;\n\t\tthis._unbindScroll();\n\t},\n\t/**\n\t * Set the element to compare to scroll position to\n\t * @memberof ScrollEndEventEmitter\n\t * @instance\n\t * @param {jQuery.Object} $el jQuery element where we want to listen for\n\t * scroll end.\n\t */\n\tsetElement: function ( $el ) {\n\t\tthis.$el = $el;\n\t}\n} );\n\nmodule.exports = ScrollEndEventEmitter;\n","var\n\tmfExtend = require( './mfExtend' ),\n\ticons = require( './icons' ),\n\tView = require( './View' );\n\n/**\n * Builds a section of a page\n * @class Section\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Section( options ) {\n\tvar self = this;\n\toptions.tag = 'h' + options.level;\n\tthis.line = options.line;\n\tthis.text = options.text;\n\tthis.hasReferences = options.hasReferences || false;\n\tthis.id = options.id || null;\n\tthis.anchor = options.anchor;\n\tthis.subsections = [];\n\t( options.subsections || [] ).forEach( function ( section ) {\n\t\tself.subsections.push( new Section( section ) );\n\t} );\n\tView.call( this, options );\n}\n\nmfExtend( Section, View, {\n\ttemplate: mw.template.get( 'mobile.startup', 'Section.hogan' ),\n\t/**\n\t * @memberof Section\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.text Section text.\n\t * @property {string} defaults.spinner HTML of the spinner icon.\n\t */\n\tdefaults: {\n\t\tline: undefined,\n\t\ttext: '',\n\t\tspinner: icons.spinner().toHtmlString()\n\t}\n} );\n\nmodule.exports = Section;\n","var\n\tbrowser = require( './Browser' ).getSingleton(),\n\tlazyImageLoader = require( './lazyImages/lazyImageLoader' ),\n\tlazyImageTransformer = require( './lazyImages/lazyImageTransformer' ),\n\tlazyReferencesLoader = require( './lazyReferencesLoader' ),\n\tView = require( './View' ),\n\tutil = require( './util' ),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * Representation of the current skin being rendered.\n *\n * @class Skin\n * @extends View\n * @uses Browser\n * @uses Page\n * @fires Skin#click\n * @fires Skin#references-loaded\n * @fires Skin#changed\n * @param {Object} params Configuration options\n * @param {OO.EventEmitter} params.eventBus Object used to listen for\n * scroll:throttled, resize:throttled, and section-toggled events\n */\nfunction Skin( params ) {\n\tvar self = this,\n\t\toptions = util.extend( {}, params );\n\n\tthis.page = options.page;\n\tthis.name = options.name;\n\tif ( options.mainMenu ) {\n\t\tthis.mainMenu = options.mainMenu;\n\t\tmw.log.warn( 'Skin: Use of mainMenu is deprecated.' );\n\t}\n\tthis.eventBus = options.eventBus;\n\toptions.isBorderBox = false;\n\tView.call( this, options );\n\tthis.referencesGateway = options.referencesGateway;\n\n\tif (\n\t\tmw.config.get( 'wgMFLazyLoadImages' )\n\t) {\n\t\tutil.docReady( function () {\n\t\t\tvar\n\t\t\t\tcontainer = document.getElementById( 'content' ),\n\t\t\t\t// todo: remove when tests are only headless. There is no #content in\n\t\t\t\t//       Special:JavaScriptTest.\n\t\t\t\timages = ( container && lazyImageLoader.queryPlaceholders( container ) ) || [];\n\t\t\tself.lazyImageTransformer = lazyImageTransformer.newLazyImageTransformer(\n\t\t\t\t// eslint false positive: self.$ is not a jQuery collection\n\t\t\t\t// eslint-disable-next-line jquery/no-bind\n\t\t\t\tself.eventBus, self.$.bind( self ), util.getWindow().height() * 1.5, images\n\t\t\t);\n\t\t\tself.lazyImageTransformer.loadImages();\n\t\t} );\n\t}\n\n\tif ( mw.config.get( 'wgMFLazyLoadReferences' ) ) {\n\t\tthis.eventBus.on( 'section-toggled', function ( data ) {\n\t\t\tlazyReferencesLoader.loadReferences(\n\t\t\t\tself.eventBus, data, self.referencesGateway, self.page\n\t\t\t);\n\t\t} );\n\t}\n}\n\nmfExtend( Skin, View, {\n\t/**\n\t * @memberof Skin\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {Page} defaults.page page the skin is currently rendering\n\t * @property {ReferencesGateway} defaults.referencesGateway instance of references gateway\n\t */\n\tdefaults: {\n\t\tpage: undefined\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Skin\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar $el = this.$el;\n\t\tif ( browser.supportsAnimations() ) {\n\t\t\t$el.addClass( 'animations' );\n\t\t}\n\t\tif ( browser.supportsTouchEvents() ) {\n\t\t\t$el.addClass( 'touch-events' );\n\t\t}\n\t\tutil.parseHTML( '<div class=\"transparent-shield cloaked-element\">' )\n\t\t\t.appendTo( $el.find( '#mw-mf-page-center' ) );\n\t\tif ( this.lazyImageTransformer ) {\n\t\t\tthis.lazyImageTransformer.loadImages();\n\t\t}\n\n\t\t/**\n\t\t * Fired when the skin is clicked.\n\t\t * @event Skin#click\n\t\t */\n\t\tthis.$( '#mw-mf-page-center' ).on( 'click', this.emit.bind( this, 'click' ) );\n\t},\n\n\t/**\n\t * Returns the appropriate license message including links/name to\n\t * terms of use (if any) and license page\n\t * @memberof Skin\n\t * @instance\n\t * @return {string}\n\t */\n\tgetLicenseMsg: function () {\n\t\tvar licenseMsg,\n\t\t\tmfLicense = mw.config.get( 'wgMFLicense' ),\n\t\t\tlicensePlural = mw.language.convertNumber( mfLicense.plural );\n\n\t\tif ( mfLicense.link ) {\n\t\t\tif ( this.$( '#footer-places-terms-use' ).length > 0 ) {\n\t\t\t\tlicenseMsg = mw.msg(\n\t\t\t\t\t'mobile-frontend-editor-licensing-with-terms',\n\t\t\t\t\tmw.message(\n\t\t\t\t\t\t'mobile-frontend-editor-terms-link',\n\t\t\t\t\t\tthis.$( '#footer-places-terms-use a' ).attr( 'href' )\n\t\t\t\t\t).parse(),\n\t\t\t\t\tmfLicense.link,\n\t\t\t\t\tlicensePlural\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlicenseMsg = mw.msg(\n\t\t\t\t\t'mobile-frontend-editor-licensing',\n\t\t\t\t\tmfLicense.link,\n\t\t\t\t\tlicensePlural\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn licenseMsg;\n\t}\n} );\n\nmodule.exports = Skin;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tutil = require( './util' ),\n\tView = require( './View' );\n\n/**\n * Representation of a thumbnail\n *\n * @class Thumbnail\n * @extends View\n * @param {Object} options\n */\nfunction Thumbnail( options ) {\n\tView.call( this,\n\t\tutil.extend( { isBorderBox: false }, options )\n\t);\n}\n\nmfExtend( Thumbnail, View, {\n\t/**\n\t * @memberof Thumbnail\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.filename uri decoded filename including File: prefix\n\t *  associated with thumbnail\n\t */\n\tdefaults: {\n\t\tfilename: undefined\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Thumbnail\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tthis.options.description = this.$el.siblings( '.thumbcaption' ).text();\n\t},\n\t/**\n\t * Obtain description for thumbnail\n\t * @memberof Thumbnail\n\t * @instance\n\t * @return {string}\n\t */\n\tgetDescription: function () {\n\t\treturn this.options.description;\n\t},\n\t/**\n\t * Return the page title for the thumbnail\n\t * @memberof Thumbnail\n\t * @instance\n\t * @return {string}\n\t */\n\tgetFileName: function () {\n\t\treturn this.options.filename;\n\t}\n} );\n\nmodule.exports = Thumbnail;\n","/* global $, document */\nvar util = require( './util' ),\n\tmfExtend = require( './mfExtend' ),\n\t// Cached regex to split keys for `delegate`.\n\tdelegateEventSplitter = /^(\\S+)\\s*(.*)$/,\n\tidCounter = 0;\n\n/**\n * Generate a unique integer id (unique within the entire client session).\n * Useful for temporary DOM ids.\n * @param {string} prefix Prefix to be used when generating the id.\n * @return {string}\n */\nfunction uniqueId( prefix ) {\n\tvar id = ( ++idCounter ).toString();\n\treturn prefix ? prefix + id : id;\n}\n\n/**\n * Should be extended using extend().\n *\n * When options contains el property, this.$el in the constructed object\n * will be set to the corresponding jQuery object. Otherwise, this.$el\n * will be an empty div.\n *\n * When extended using extend(), if the extended prototype contains\n * template property, this.$el will be filled with rendered template (with\n * options parameter used as template data).\n *\n * template property can be a string which will be passed to mw.template.compile()\n * or an object that has a render() function which accepts an object with\n * template data as its argument (similarly to an object created by\n * mw.template.compile()).\n *\n * You can also define a defaults property which should be an object\n * containing default values for the template (if they're not present in\n * the options parameter).\n *\n * If this.$el is not a jQuery object bound to existing DOM element, the\n * view can be attached to an element using appendTo(), prependTo(),\n * insertBefore(), insertAfter() proxy functions.\n *\n * append(), prepend(), before(), after() can be used to modify $el. on()\n * can be used to bind events.\n *\n * You can also use declarative DOM events binding by specifying an `events`\n * map on the class. The keys will be 'event selector' and the value can be\n * either the name of a method to call, or a function. All methods and\n * functions will be executed on the context of the View.\n *\n * Inspired from Backbone.js\n * https://github.com/jashkenas/backbone/blob/master/backbone.js#L1128\n *\n * Example:\n * ```js\n *     var\n *       MyComponent = View.extend( {\n *         edit: function ( ev ) {\n *           //...\n *         },\n *         save: function ( ev ) {\n *           //...\n *         }\n *       } ),\n *       instance = new MyComponent({\n *         events: {\n *           'mousedown .title': 'edit',\n *           'click .button': 'save',\n *           'click .open': function(e) { ... }\n *         }\n *       });\n * ```\n *\n * Example:\n * ```js\n *     var View, section;\n *     function Section( options ) {\n *       var defaultOptions = {\n *         events: {\n *           // ...\n *         }\n *       }\n *       View.call( this, util.extends( {}, defaultOptions, options ) );\n *     }\n *     View = require( './View' );\n *     require( './mfExtend' )( Section, View, {\n *       template: mw.template.compile( \"&lt;h2&gt;{{title}}&lt;/h2&gt;\" ),\n *     } );\n *     section = new Section( { title: 'Test', text: 'Test section body' } );\n *     section.appendTo( 'body' );\n * ```\n *\n * @class View\n * @mixins OO.EventEmitter\n */\n\nfunction View() {\n\tthis.initialize.apply( this, arguments );\n}\nOO.mixinClass( View, OO.EventEmitter );\nmfExtend( View, {\n\t/**\n\t * Name of tag that contains the rendered template\n\t * @memberof View\n\t * @instance\n\t * @property {string} tagName\n\t */\n\ttagName: 'div',\n\t/**\n\t * Tells the View to ignore tagName and className when constructing the element\n\t * and to rely solely on the template\n\t * @memberof View\n\t * @instance\n\t * @property {boolean} isTemplateMode\n\t */\n\tisTemplateMode: false,\n\t/**\n\t * @memberof View\n\t * @instance\n\t * @property {Mixed}\n\t * Specifies the template used in render(). Object|string|HoganTemplate\n\t */\n\ttemplate: undefined,\n\n\t/**\n\t * Specifies partials (sub-templates) for the main template. Example:\n\t *\n\t *     @example\n\t *     // example content for the \"some\" template (sub-template will be\n\t *     // inserted where {{>content}} is):\n\t *     // <h1>Heading</h1>\n\t *     // {{>content}}\n\t *\n\t *     oo.mfExtend( SomeView, View, {\n\t *       template: M.template.get( 'some.hogan' ),\n\t *       templatePartials: { content: M.template.get( 'sub.hogan' ) }\n\t *     }\n\t *\n\t * @memberof View\n\t * @instance\n\t * @property {Object}\n\t */\n\ttemplatePartials: {},\n\n\t/**\n\t * A set of default options that are merged with options passed into the initialize\n\t * function.\n\t * @memberof View\n\t * @instance\n\t * @property {Object} defaults Default options hash.\n\t * @property {jQuery.Object|string} [defaults.el] jQuery selector to use for rendering.\n\t * @property {boolean} [defaults.skipTemplateRender] Whether to enhance views already in\n\t * DOM. When enabled, the template is disabled so that it is not rendered in the DOM.\n\t * Use in conjunction with View::defaults.$el to associate the View with an existing\n\t * already rendered element in the DOM.\n\t */\n\tdefaults: {},\n\n\t/**\n\t * Run once during construction to set up the View\n\t * @memberof View\n\t * @instance\n\t * @param {Object} options Object passed to the constructor.\n\t * @param {Object.<string, string>} [options.events]\n\t */\n\tinitialize: function ( options ) {\n\t\tvar self = this;\n\n\t\tOO.EventEmitter.call( this );\n\t\toptions = util.extend( {}, this.defaults, options );\n\t\tthis.options = options;\n\t\t// Assign a unique id for dom events binding/unbinding\n\t\tthis.cid = uniqueId( 'view' );\n\n\t\t// TODO: if template compilation is too slow, don't compile them on a\n\t\t// per object basis, but don't worry about it now (maybe add cache to\n\t\t// M.template.compile())\n\t\tif ( typeof this.template === 'string' ) {\n\t\t\tthis.template = mw.template.compile( this.template );\n\t\t}\n\n\t\tif ( options.el ) {\n\t\t\t// Note the element may not be in the document so must use global jQuery here\n\t\t\tthis.$el = $( options.el );\n\t\t} else {\n\t\t\tthis.$el = this.parseHTML( '<' + this.tagName + '>' );\n\t\t}\n\n\t\t// Make sure the element is ready to be manipulated\n\t\tif ( this.$el.length ) {\n\t\t\tthis._postInitialize( options );\n\t\t} else {\n\t\t\tutil.docReady( function () {\n\t\t\t\t// Note the element may not be in the document so must use global jQuery here\n\t\t\t\tself.$el = $( options.el );\n\t\t\t\tself._postInitialize( options );\n\t\t\t} );\n\t\t}\n\t},\n\n\t/**\n\t * Called when this.$el is ready.\n\t * @memberof View\n\t * @instance\n\t * @private\n\t * @param {Object} props\n\t */\n\t_postInitialize: function ( props ) {\n\t\tvar\n\t\t\tBORDER_BOX_CLASS = 'view-border-box',\n\t\t\tclassName = props.className;\n\n\t\tthis.$el.addClass( className );\n\t\t// border-box will be added provided this flag is not set\n\t\tif ( props.isBorderBox !== false ) {\n\t\t\tthis.$el.addClass( BORDER_BOX_CLASS );\n\t\t}\n\n\t\tthis.render( {} );\n\t},\n\n\t/**\n\t * Function called before the view is rendered. Can be redefined in\n\t * objects that extend View.\n\t * @memberof View\n\t * @instance\n\t */\n\tpreRender: function () {},\n\n\t/**\n\t * Function called after the view is rendered. Can be redefined in\n\t * objects that extend View.\n\t *\n\t * @memberof View\n\t * @instance\n\t */\n\tpostRender: function () {},\n\n\t// eslint-disable-next-line valid-jsdoc\n\t/**\n\t * Fill this.$el with template rendered using data if template is set.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {Object} data Template data. Will be merged into the view's\n\t * options\n\t * @chainable\n\t */\n\trender: function ( data ) {\n\t\tvar $el, html;\n\t\tutil.extend( this.options, data );\n\t\tthis.preRender();\n\t\tthis.undelegateEvents();\n\t\tif ( this.template && !this.options.skipTemplateRender ) {\n\t\t\thtml = this.template.render( this.options, this.templatePartials );\n\t\t\tif ( this.isTemplateMode ) {\n\t\t\t\t$el = $( html );\n\t\t\t\tthis.$el.replaceWith( $el );\n\t\t\t\tthis.$el = $el;\n\t\t\t} else {\n\t\t\t\tthis.$el.html( html );\n\t\t\t}\n\t\t}\n\t\tthis.postRender();\n\t\tthis.delegateEvents();\n\t\treturn this;\n\t},\n\n\t/**\n\t * Wraps this.$el.find, so that you can search for elements in the view's\n\t * ($el's) scope.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {string} query A jQuery CSS selector.\n\t * @return {JQuery.Object} jQuery object containing results of the search.\n\t */\n\t$: function ( query ) {\n\t\treturn this.$el.find( query );\n\t},\n\n\t/**\n\t * Set callbacks, where `this.options.events` is a hash of\n\t *\n\t * { 'event selector': 'callback' }\n\t *\n\t * {\n\t *   'mousedown .title': 'edit',\n\t *   'click .button': 'save',\n\t *   'click .open': function(e) { ... }\n\t * }\n\t *\n\t * pairs. Callbacks will be bound to the view, with `this` set properly.\n\t * Uses event delegation for efficiency.\n\t * Omitting the selector binds the event to `this.el`.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {Object} events Optionally set this events instead of the ones on this.\n\t */\n\tdelegateEvents: function ( events ) {\n\t\tvar match, key, method;\n\t\tevents = events || this.options.events;\n\t\tif ( events ) {\n\t\t\t// Remove current events before re-binding them\n\t\t\tthis.undelegateEvents();\n\t\t\tfor ( key in events ) {\n\t\t\t\tmethod = events[ key ];\n\t\t\t\t// If the method is a string name of this.method, get it\n\t\t\t\tif ( typeof method !== 'function' ) {\n\t\t\t\t\tmethod = this[ events[ key ] ];\n\t\t\t\t}\n\t\t\t\tif ( method ) {\n\t\t\t\t\t// Extract event and selector from the key\n\t\t\t\t\tmatch = key.match( delegateEventSplitter );\n\t\t\t\t\tthis.delegate( match[ 1 ], match[ 2 ], method.bind( this ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Add a single event listener to the view's element (or a child element\n\t * using `selector`). This only works for delegate-able events: not `focus`,\n\t * `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {string} eventName\n\t * @param {string} selector\n\t * @param {Function} listener\n\t */\n\tdelegate: function ( eventName, selector, listener ) {\n\t\tthis.$el.on( eventName + '.delegateEvents' + this.cid, selector,\n\t\t\tlistener );\n\t},\n\n\t/**\n\t * Clears all callbacks previously bound to the view by `delegateEvents`.\n\t * You usually don't need to use this, but may wish to if you have multiple\n\t * views attached to the same DOM element.\n\t * @memberof View\n\t * @instance\n\t */\n\tundelegateEvents: function () {\n\t\tif ( this.$el ) {\n\t\t\tthis.$el.off( '.delegateEvents' + this.cid );\n\t\t}\n\t},\n\n\t/**\n\t * A finer-grained `undelegateEvents` for removing a single delegated event.\n\t * `selector` and `listener` are both optional.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {string} eventName\n\t * @param {string} selector\n\t * @param {Function} listener\n\t */\n\tundelegate: function ( eventName, selector, listener ) {\n\t\tthis.$el.off( eventName + '.delegateEvents' + this.cid, selector,\n\t\t\tlistener );\n\t},\n\n\t/**\n\t * See parseHTML method of util singleton\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {string} html to turn into a jQuery object.\n\t * @return {jQuery.Object}\n\t */\n\tparseHTML: function ( html ) {\n\t\t// document is explicitly passed due to a bug we found in Safari 11.1.2 where failure\n\t\t// to use document resulted in an element without access to the documentElement\n\t\t// this should be redundant, but no problem in being explicit (T214451).\n\t\treturn util.parseHTML( html, document );\n\t}\n} );\n\n/**\n * @memberof View\n * @instance\n * @func append\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func append\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func prepend\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func prepend\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func appendTo\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func prependTo\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func after\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func after\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func before\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func before\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func insertAfter\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func insertBefore\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func remove\n * @param {string} [selector]\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func detach\n * @param {string} [selector]\n * @return {this}\n */\n\n[\n\t'append',\n\t'prepend',\n\t'appendTo',\n\t'prependTo',\n\t'after',\n\t'before',\n\t'insertAfter',\n\t'insertBefore',\n\t'remove',\n\t'detach'\n].forEach( function ( prop ) {\n\tView.prototype[prop] = function () {\n\t\tthis.$el[prop].apply( this.$el, arguments );\n\t\treturn this;\n\t};\n} );\n\nmodule.exports = View;\n","var util = require( './util' ),\n\tdefaultParams = {\n\t\taction: 'query',\n\t\tformatversion: 2\n\t};\n\n/**\n * Extends the default params for an action query with otherParams\n * @param {Object} otherParams\n * @return {Object}\n */\nfunction actionParams( otherParams ) {\n\tvar scriptPath = mw.config.get( 'wgMFContentProviderScriptPath' );\n\treturn util.extend( {}, defaultParams, {\n\t\torigin: scriptPath ? '*' : undefined\n\t}, otherParams );\n}\n\nmodule.exports = actionParams;\n","/* This module defines several types of cache classes to use in other\n * modules.\n * The interface, that all types use, is kept synchronous driven by current\n * usage patterns, but will need to be revisited in case usage patterns\n * suggest we need asynchronous caches.\n */\n\n/**\n * In memory cache implementation\n *\n * @class MemoryCache\n */\nfunction MemoryCache() {\n\tthis._cache = {};\n}\n\n/**\n * Retrieve a cached value from a key\n * @memberof MemoryCache\n * @instance\n * @param {string} key\n * @return {Mixed}\n */\nMemoryCache.prototype.get = function ( key ) {\n\treturn this._cache[ key ];\n};\n\n/**\n * Cache a value by key\n * @memberof MemoryCache\n * @instance\n * @param {string} key\n * @param {Mixed} value\n */\nMemoryCache.prototype.set = function ( key, value ) {\n\tthis._cache[ key ] = value;\n};\n\n/**\n * Null object cache implementation\n *\n * @class NoCache\n */\nfunction NoCache() { }\n\n/**\n * NoOp\n * @memberof NoCache\n * @instance\n */\nNoCache.prototype.get = function () { };\n\n/**\n * NoOp\n * @memberof NoCache\n * @instance\n */\nNoCache.prototype.set = function () { };\n\nmodule.exports = {\n\tMemoryCache: MemoryCache,\n\tNoCache: NoCache\n};\n","/**\n * Mobile mode helper class\n *\n * @class context\n * @singleton\n */\nmodule.exports = {\n\t/**\n\t * Gets current mobile mode\n\t * @memberof context\n\t * @instance\n\t * @return {string|null} Name of mode - either `stable` or `beta`. It is `null` if desktop.\n\t */\n\tgetMode: function () {\n\t\treturn mw.config.get( 'wgMFMode' );\n\t}\n};\n","/**\n * T156186: Please make judicious use of this singleton whose purpose is to\n * allow disparate components the ability to subscribe to a set of events and\n * react to those events.\n *\n * Prefer to use a more localized event bus when possible. (e.g.\n * mobile.special.nearby.scripts/nearby.js in Change-Id:\n * I632124515d4c26ae5ce77dd503d00a62e5a65dda)\n *\n * Only import this in files at the edges. For example:\n *\n * Good: initialization scripts responsible for initializing classes such as\n * mobile.init/init.js\n * Bad: ImageOverlay.js or in any other component.\n *\n * By doing this, and using dependency injection of the event bus in the\n * components themselves, it will make it easier to switch this event bus out\n * for something more localized later on in our refactoring efforts.\n */\nmodule.exports = new OO.EventEmitter();\n","var util = require( './util' ),\n\tactionParams = require( './actionParams.js' );\n\n/**\n * Extends the API query parameters to include those parameters required to also fetch Wikibase\n * descriptions and appropriately sized thumbnail images as well as those required to make a query.\n *\n * This function wraps `util.extend` with some Wikibase-specific configuration\n * variable management\n * but, like `util.extend`, is variadic and so can be used as a replacement for it in search\n * gateways, e.g.\n *\n * ```\n * var params = extendSearchParams(\n *   'nearby',\n *   baseParams,\n *   specializedParams,\n *   moreSpecializedParams\n * );\n * ```\n *\n * @param {string} feature The name of the feature\n * @throws {Error} If `feature` isn't one that shows Wikidata descriptions. See the\n *  `wgMFDisplayWikibaseDescriptions` configuration variable for detail\n * @return {Object}\n */\nfunction extendSearchParams( feature ) {\n\tvar displayWikibaseDescriptions = mw.config.get( 'wgMFDisplayWikibaseDescriptions', {} ),\n\t\tscriptPath = mw.config.get( 'wgMFContentProviderScriptPath' ),\n\t\targs,\n\t\tresult;\n\n\tif ( !Object.prototype.hasOwnProperty.call( displayWikibaseDescriptions, feature ) ) {\n\t\tthrow new Error( '\"' + feature + '\" isn\\'t a feature that shows Wikibase descriptions.' );\n\t}\n\n\t// Construct the arguments for a call to `util.extend`\n\t// such that if it were hand-written, then it\n\t// would look like the following:\n\t//\n\t// ```\n\t// var result = util.extend( {\n\t//   prop: []\n\t// }, params, /* ..., */ mw.config.get( 'wgMFSearchAPIParams' ) );\n\t// ```\n\targs = Array.prototype.slice.call( arguments, 1 );\n\targs.unshift( {\n\t\tprop: []\n\t} );\n\targs.push( mw.config.get( 'wgMFSearchAPIParams' ) );\n\n\tresult = util.extend.apply( {}, args );\n\tresult.prop = result.prop.concat( mw.config.get( 'wgMFQueryPropModules' ) );\n\n\tif ( displayWikibaseDescriptions[feature] ) {\n\t\tif ( result.prop.indexOf( 'description' ) === -1 ) {\n\t\t\tresult.prop.push( 'description' );\n\t\t}\n\t}\n\n\tif ( scriptPath ) {\n\t\t// A foreign api is being accessed! Enable anonymous CORS queries!\n\t\tresult.origin = '*';\n\t}\n\treturn actionParams( result );\n}\nmodule.exports = extendSearchParams;\n","var\n\tCANCEL_GLYPH = 'overlay-close',\n\tIcon = require( './Icon' ),\n\tutil = require( './util' );\n\n/**\n * A set of shared icons.\n *\n * Factory methods are used to keep separate features that use the same icons\n * from accidentally manipulating one another's DOM when calling methods like\n * `remove`.\n *\n * @class icons\n * @singleton\n * @uses Icon\n */\nmodule.exports = {\n\tCANCEL_GLYPH: CANCEL_GLYPH,\n\t// Exported to support testing and stubbing\n\tIcon: Icon,\n\t/**\n\t * Gets a cancel icon\n\t *\n\t * The icon should be used to inform the user that the front-end is\n\t * communicating with the back-end.\n\t * @memberof icons\n\t * @instance\n\t * @param {string} variant\n\t * @return {Icon}\n\t */\n\tcancel: function ( variant ) {\n\t\tvar glyph = variant ? CANCEL_GLYPH + '-' + variant : CANCEL_GLYPH;\n\t\treturn new this.Icon( {\n\t\t\ttagName: 'button',\n\t\t\tname: glyph,\n\t\t\tadditionalClassNames: 'cancel',\n\t\t\tlabel: mw.msg( 'mobile-frontend-overlay-close' )\n\t\t} );\n\t},\n\t/**\n\t * Gets a spinner icon.\n\t *\n\t * The icon should be used to inform the user that the front-end is\n\t * communicating with the back-end.\n\t * @memberof icons\n\t * @instance\n\t * @param {Object} [options] See `Icon` for more details\n\t * @return {Icon}\n\t */\n\tspinner: function ( options ) {\n\t\toptions = options || {};\n\n\t\treturn new this.Icon( util.extend( options, {\n\t\t\tname: 'spinner',\n\t\t\tlabel: mw.msg( 'mobile-frontend-loading-message' ),\n\t\t\tadditionalClassNames: 'spinner loading'\n\t\t} ) );\n\t},\n\t/**\n\t * Gets a non-filled watch star icon.\n\t *\n\t * @memberof icons\n\t * @instance\n\t * @return {Icon}\n\t */\n\twatchIcon: function () {\n\t\treturn new this.Icon( {\n\t\t\tname: 'watch',\n\t\t\tadditionalClassNames: 'watch-this-article'\n\t\t} );\n\t},\n\t/**\n\t * Gets a filled watch star icon.\n\t *\n\t * @memberof icons\n\t * @instance\n\t * @return {Icon}\n\t */\n\twatchedIcon: function () {\n\t\treturn new this.Icon( {\n\t\t\tname: 'watched',\n\t\t\tadditionalClassNames: 'watch-this-article watched'\n\t\t} );\n\t}\n};\n","var\n\tutil = require( '../util' ),\n\tplaceholderClass = 'lazy-image-placeholder';\n\n/**\n * @param {HTMLElement} root\n * @return {HTMLElement[]}\n */\nfunction queryPlaceholders( root ) {\n\treturn Array.prototype.slice.call(\n\t\troot.getElementsByClassName( placeholderClass )\n\t);\n}\n\n/**\n * Load an image on demand\n * @param {HTMLElement[]} placeholders a list of images that have not been loaded.\n * @return {JQuery.Deferred}\n */\nfunction loadImages( placeholders ) {\n\t// jQuery.when() is variadic and does not accept an array. Simulate spread with apply.\n\treturn util.when.apply( util, placeholders.map( function ( placeholder ) {\n\t\treturn module.exports.loadImage( placeholder ).promise;\n\t} )\n\t);\n}\n\n/**\n * Load an image on demand\n * @param {HTMLElement} placeholder\n * @return {{promise: JQuery.Deferred<'load'|'error'>, image: HTMLImageElement}}\n */\nfunction loadImage( placeholder ) {\n\tvar\n\t\tdeferred = util.Deferred(),\n\t\t// data-width and height are attributes and do not specify dimension.\n\t\twidth = placeholder.dataset.width || '0',\n\t\theight = placeholder.dataset.height || '0',\n\t\timage = new Image( parseInt( width, 10 ), parseInt( height, 10 ) );\n\n\timage.className = placeholder.dataset.class || '';\n\timage.alt = placeholder.dataset.alt || '';\n\timage.style.cssText = placeholder.style.cssText || '';\n\n\t// When the image has loaded\n\timage.addEventListener( 'load', function () {\n\t\t// Swap the HTML inside the placeholder (to keep the layout and\n\t\t// dimensions the same and not trigger layouts\n\t\timage.classList.add( 'image-lazy-loaded' );\n\t\tif ( placeholder.parentNode ) {\n\t\t\tplaceholder.parentNode.replaceChild( image, placeholder );\n\t\t}\n\t\tdeferred.resolve( 'load' );\n\t}, { once: true } );\n\timage.addEventListener( 'error', function () {\n\t\t// Never reject. Quietly resolve so that jQuery.when() awaits for all Deferreds to complete.\n\t\t// Reevaluate using Deferred.reject in T136693.\n\t\tdeferred.resolve( 'error' );\n\t}, { once: true } );\n\n\t// Trigger image download after binding the load handler\n\timage.src = placeholder.dataset.src || '';\n\timage.srcset = placeholder.dataset.srcset || '';\n\n\treturn {\n\t\tpromise: deferred,\n\t\timage: image\n\t};\n}\n\nmodule.exports = {\n\tqueryPlaceholders: queryPlaceholders,\n\tloadImages: loadImages,\n\tloadImage: loadImage,\n\ttest: {\n\t\tplaceholderClass: placeholderClass\n\t}\n};\n","var\n\tlazyImageLoader = require( './lazyImageLoader' ),\n\tutil = require( '../util' );\n\n/**\n * Setup listeners to watch unloaded images and load them into the page\n * as and when they are needed.\n * @param {OO.EventEmitter} eventBus\n * @param {JQuery.find} find\n * @param {number} offset\n * @param {HTMLElement[]} imagePlaceholders\n * @return {{loadImages: function(): void}}.\n */\nfunction newLazyImageTransformer( eventBus, find, offset, imagePlaceholders ) {\n\t/**\n\t * Load remaining images in viewport\n\t * @return {jQuery.Deferred}\n\t */\n\tfunction loadImages() {\n\t\tvar placeholders = [];\n\t\t// Filter unloaded images to only the images that still need to be loaded\n\t\timagePlaceholders = util.grep( imagePlaceholders, function ( placeholder ) {\n\t\t\tvar $placeholder = find( placeholder );\n\t\t\t// Check length to ensure the image is still in the DOM.\n\t\t\tif ( $placeholder.length && shouldLoadImage( $placeholder, offset ) ) {\n\t\t\t\tplaceholders.push( placeholder );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} );\n\n\t\t// When no images are left unbind all events\n\t\tif ( !imagePlaceholders.length ) {\n\t\t\teventBus.off( 'scroll:throttled', loadImages );\n\t\t\teventBus.off( 'resize:throttled', loadImages );\n\t\t\teventBus.off( 'section-toggled', loadImages );\n\t\t}\n\n\t\t// load any remaining images.\n\t\treturn lazyImageLoader.loadImages( placeholders );\n\t}\n\n\teventBus.on( 'scroll:throttled', loadImages );\n\teventBus.on( 'resize:throttled', loadImages );\n\teventBus.on( 'section-toggled', loadImages );\n\n\treturn {\n\t\tloadImages: loadImages\n\t};\n}\n\n/**\n * Check whether an image should be loaded based on its proximity to the\n * viewport; and whether it is displayed to the user.\n * @param {jQuery.Object} $placeholder\n * @param {number} offset\n * @return {boolean}\n */\nfunction shouldLoadImage( $placeholder, offset ) {\n\treturn mw.viewport.isElementCloseToViewport( $placeholder[0], offset ) &&\n\t\t// If a placeholder is an inline element without a height attribute set\n\t\t// it will record as hidden\n\t\t// to circumvent this we also need to test the height (see T143768).\n\t\t( $placeholder.is( ':visible' ) || $placeholder.height() === 0 );\n}\n\nmodule.exports = {\n\tnewLazyImageTransformer: newLazyImageTransformer\n};\n","var\n\tlazyImageLoader = require( './lazyImages/lazyImageLoader' ),\n\tutil = require( './util' ),\n\tPage = require( './Page' ),\n\tDeferred = util.Deferred,\n\ticons = require( './icons' ),\n\tspinner = icons.spinner();\n\n/**\n * Load the references section content from API if it's not already loaded.\n *\n * All references tags content will be loaded per section.\n * @param {OO.EventEmitter} eventBus\n * @param {ToggledEvent} data Information about the section.\n * @param {ReferencesGateway} gateway\n * @param {Page} page\n * @return {jQuery.Promise|void} rejected when not a reference section.\n */\nfunction loadReferences( eventBus, data, gateway, page ) {\n\tvar $content, $spinner;\n\n\t// If the section was expanded before toggling, do not load anything as\n\t// section is being collapsed now.\n\t// Also return early if lazy loading is not required or the section is\n\t// not a reference section\n\tif (\n\t\tdata.expanded ||\n\t\t!data.isReferenceSection\n\t) {\n\t\treturn;\n\t}\n\n\t$content = data.$heading.next();\n\n\tfunction loadImagesAndSetData() {\n\t\t// lazy load images if any\n\t\tlazyImageLoader.loadImages( lazyImageLoader.queryPlaceholders( $content[0] ) );\n\t\t// Do not attempt further loading even if we're unable to load this time.\n\t\t$content.data( 'are-references-loaded', 1 );\n\t}\n\n\tif ( !$content.data( 'are-references-loaded' ) ) {\n\t\t$content.children().addClass( 'hidden' );\n\t\t$spinner = spinner.$el.prependTo( $content );\n\n\t\t// First ensure we retrieve all of the possible lists\n\t\treturn gateway.getReferencesLists( data.page )\n\t\t\t.then( function () {\n\t\t\t\tvar lastId;\n\n\t\t\t\t$content.find( '.mf-lazy-references-placeholder' ).each( function () {\n\t\t\t\t\tvar refListIndex = 0,\n\t\t\t\t\t\t$placeholder = $content.find( this ),\n\t\t\t\t\t\t// search for id of the collapsible heading\n\t\t\t\t\t\tid = getSectionId( $placeholder );\n\n\t\t\t\t\tif ( lastId !== id ) {\n\t\t\t\t\t\t// If the placeholder belongs to a new section reset index\n\t\t\t\t\t\trefListIndex = 0;\n\t\t\t\t\t\tlastId = id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// otherwise increment it\n\t\t\t\t\t\trefListIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( id ) {\n\t\t\t\t\t\tgateway.getReferencesList( data.page, id )\n\t\t\t\t\t\t\t.then( function ( refListElements ) {\n\t\t\t\t\t\t\t\t// Note if no section html is provided\n\t\t\t\t\t\t\t\t// no substitution will happen\n\t\t\t\t\t\t\t\t// so user is forced to rely on placeholder link.\n\t\t\t\t\t\t\t\tif ( refListElements && refListElements[refListIndex] ) {\n\t\t\t\t\t\t\t\t\t$placeholder.replaceWith(\n\t\t\t\t\t\t\t\t\t\trefListElements[refListIndex]\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\t// Show the section now the references lists have been placed.\n\t\t\t\t$spinner.remove();\n\t\t\t\t$content.children().removeClass( 'hidden' );\n\t\t\t\t/**\n\t\t\t\t * Fired when references list is loaded into the HTML\n\t\t\t\t * @event references-loaded\n\t\t\t\t */\n\t\t\t\teventBus.emit( 'references-loaded', page );\n\n\t\t\t\tloadImagesAndSetData();\n\t\t\t}, function () {\n\t\t\t\t$spinner.remove();\n\t\t\t\t// unhide on a failure\n\t\t\t\t$content.children().removeClass( 'hidden' );\n\n\t\t\t\tloadImagesAndSetData();\n\t\t\t} );\n\t} else {\n\t\treturn Deferred().reject().promise();\n\t}\n}\n\n/**\n * Get the id of the section $el belongs to.\n * @param {jQuery.Object} $el\n * @return {string|null} either the anchor (id attribute of the section heading\n *  or null if none found)\n */\nfunction getSectionId( $el ) {\n\tvar id,\n\t\thSelector = Page.HEADING_SELECTOR,\n\t\t$parent = $el.parent(),\n\t\t// e.g. matches Subheading in\n\t\t// <h2>H</h2><div><h3 id=\"subheading\">Subh</h3><a class=\"element\"></a></div>\n\t\t$heading = $el.prevAll( hSelector ).eq( 0 );\n\n\tif ( $heading.length ) {\n\t\tid = $heading.find( '.mw-headline' ).attr( 'id' );\n\t\tif ( id ) {\n\t\t\treturn id;\n\t\t}\n\t}\n\tif ( $parent.length ) {\n\t\t// if we couldnt find a sibling heading, check the sibling of the parents\n\t\t// consider <div><h2 /><div><$el/></div></div>\n\t\treturn getSectionId( $parent );\n\t} else {\n\t\treturn null;\n\t}\n}\n\nmodule.exports = {\n\tloadReferences: loadReferences,\n\ttest: {\n\t\tgetSectionId: getSectionId\n\t}\n};\n","var\n\ticons = require( './icons' ),\n\tOverlay = require( './Overlay' );\n\n/**\n * Overlay that initially shows loading animation until\n * caller hides it with .hide()\n *\n * @return {Overlay}\n */\nfunction loadingOverlay() {\n\tvar overlay = new Overlay( {\n\t\tclassName: 'overlay overlay-loading',\n\t\tnoHeader: true\n\t} );\n\ticons.spinner().$el.appendTo( overlay.$( '.overlay-content' ) );\n\treturn overlay;\n}\n\nmodule.exports = loadingOverlay;\n","/**\n * Extends a class with new methods and member properties.\n *\n * @param {Function} Child function\n * @param {Object|Function} ParentOrPrototype class to inherit from\n *  OR if no inheriting class a prototype to extend the class with\n * @param {Object} [prototype]\n */\nfunction mfExtend( Child, ParentOrPrototype, prototype ) {\n\tvar key;\n\tif ( prototype ) {\n\t\tOO.inheritClass( Child, ParentOrPrototype );\n\t} else {\n\t\tOO.initClass( Child );\n\t\tprototype = ParentOrPrototype;\n\t}\n\tfor ( key in prototype ) {\n\t\tChild.prototype[key] = prototype[key];\n\t}\n}\n\nmodule.exports = mfExtend;\n","/**\n * Class for managing modules\n *\n * A module in this context is essentially a Javascript class (not to be confused with\n * ResourceLoader modules).\n *\n * @class ModuleLoader\n */\nfunction ModuleLoader() {\n\t/**\n\t * @property {Object} register of defined modules\n\t * @private\n\t */\n\tthis._register = {};\n}\n\nModuleLoader.prototype = {\n\t/**\n\t * Require (import) a module previously defined using define().\n\t * Searches core module registry using mw.loader.require before consulting\n\t * its own local registry. This method is deprecated, please do not use.\n\t * @memberof ModuleLoader\n\t * @instance\n\t * @param {string} id Required module id.\n\t * @return {Object} Required module, can be any JavaScript object.\n\t */\n\trequire: function ( id ) {\n\t\tvar module, args,\n\t\t\tregistry = this._register;\n\n\t\t/**\n\t\t * @return {Object} Module\n\t\t */\n\t\tfunction localRequire() {\n\t\t\tif ( !Object.hasOwnProperty.call( registry, id ) ) {\n\t\t\t\tthrow new Error( 'MobileFrontend Module not found: ' + id );\n\t\t\t}\n\t\t\treturn registry[ id ];\n\t\t}\n\t\targs = id.split( '/' );\n\t\ttry {\n\t\t\tmodule = mw.loader.require( args[0] );\n\t\t\tif ( module[ args[1] ] ) {\n\t\t\t\treturn module[ args[1] ];\n\t\t\t} else {\n\t\t\t\treturn localRequire();\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\treturn localRequire();\n\t\t}\n\t},\n\n\t/**\n\t * Define a module which can be later required (imported) using require().\n\t * @memberof ModuleLoader\n\t * @instance\n\t * @param {string} id Defined module id.\n\t * @param {Object} obj Defined module body, can be any JavaScript object.\n\t * @return {Object}\n\t */\n\tdefine: function ( id, obj ) {\n\t\tvar self = this;\n\n\t\tif ( Object.hasOwnProperty.call( this._register, id ) ) {\n\t\t\tthrow new Error( 'Module already exists: ' + id );\n\t\t}\n\t\tthis._register[ id ] = obj;\n\t\t// return an object of additionally functions to do with the registered module\n\t\treturn {\n\t\t\t/**\n\t\t\t * @see ModuleLoader#deprecate\n\t\t\t * @param {string} deprecatedId Defined module id, which is deprecated.\n\t\t\t * @ignore\n\t\t\t */\n\t\t\tdeprecate: function ( deprecatedId ) {\n\t\t\t\tself.deprecate( deprecatedId, obj, id );\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t * Deprecate a module and give an replacement (if there is any).\n\t * @memberof ModuleLoader\n\t * @instance\n\t * @param {string} id Defined module id, which is deprecated.\n\t * @param {Object} obj Defined module body, can be any JavaScript object.\n\t * @param {string} [replacement] Give an optional replacement for this module (which\n\t * needs to be already defined!)\n\t */\n\tdeprecate: function ( id, obj, replacement ) {\n\t\tvar msg;\n\t\tif ( replacement ) {\n\t\t\t// add an alternative for this module, if any given\n\t\t\tmsg = 'Use ' + replacement + ' instead.';\n\t\t}\n\t\t// register it as a deprecated one\n\t\tmw.log.deprecate( this._register, id, obj, msg );\n\t}\n};\n\nmodule.exports = ModuleLoader;\n","var ModuleLoader = require( './moduleLoader' );\n\nmodule.exports = new ModuleLoader();\n","/**\n * Abstract base class\n * Gateway for retrieving references\n *\n * @class ReferencesGateway\n * @abstract\n *\n * @param {mw.Api} api\n */\nfunction ReferencesGateway( api ) {\n\tthis.api = api;\n}\n\n/**\n * Return the matched reference via API or DOM query\n *\n * @memberof ReferencesGateway\n * @instance\n * @param {string} id CSS selector\n * @param {Page} page to find reference for\n * @return {jQuery.Promise} resolves with an Object representing reference\n *  with a `text` property\n *  The promise should be rejected with ReferenceGateway.ERROR_NOT_EXIST:\n *  if the reference is not found.\n *  If for some reason locating the reference fails return ReferenceGateway.ERROR_OTHER.\n */\nReferencesGateway.prototype.getReference = null;\n\n/**\n * @memberof ReferencesGateway\n * @property ERROR_NOT_EXIST error code to be returned by getReference\n *  when a reference does not exist.\n */\nReferencesGateway.ERROR_NOT_EXIST = 'NOT_EXIST_ERROR';\n/**\n * @memberof ReferencesGateway\n * @property ERROR_OTHER error code to be returned by getReference\n *  under any other circumstance not covered\n *  by ERROR_NOT_EXIST. It should be used if it is unclear whether a reference exists or not.\n */\nReferencesGateway.ERROR_OTHER = 'OTHER_ERROR';\n\nmodule.exports = ReferencesGateway;\n","var ReferencesGateway = require( './ReferencesGateway' ),\n\tmfExtend = require( './../mfExtend' ),\n\tutil = require( './../util' );\n\n/**\n * Gateway for retrieving references via the content of the Page\n *\n * @class ReferencesHtmlScraperGateway\n * @extends ReferencesGateway\n * @inheritdoc\n */\nfunction ReferencesHtmlScraperGateway() {\n\tReferencesGateway.apply( this, arguments );\n}\n\nmfExtend( ReferencesHtmlScraperGateway, ReferencesGateway, {\n\t/**\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @instance\n\t * @param {string} id of a DOM element in the page with '#' prefix.\n\t *  can be encoded or decoded.\n\t * @param {jQuery.Object} $container to scan for an element\n\t * @return {jQuery.Promise} that can be used by getReference\n\t */\n\tgetReferenceFromContainer: function ( id, $container ) {\n\t\tvar $el,\n\t\t\tresult = util.Deferred();\n\n\t\t$el = $container.find( '#' + util.escapeSelector( id.substr( 1 ) ) );\n\t\tif ( $el.length ) {\n\t\t\tresult.resolve( { text: $el.html() } );\n\t\t} else {\n\t\t\tresult.reject( ReferencesGateway.ERROR_NOT_EXIST );\n\t\t}\n\t\treturn result.promise();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @instance\n\t */\n\tgetReference: function ( id, page ) {\n\t\t// If an id is not found it's possible the id passed needs decoding (per T188547).\n\t\treturn this.getReferenceFromContainer( decodeURIComponent( id ), page.$( 'ol.references' ) );\n\t}\n} );\n\nmodule.exports = ReferencesHtmlScraperGateway;\n","var ReferencesHtmlScraperGateway =\n\trequire( './ReferencesHtmlScraperGateway' ),\n\tcache = require( './../cache' ),\n\tReferencesGateway = require( './ReferencesGateway' ),\n\tMemoryCache = cache.MemoryCache,\n\tutil = require( './../util' ),\n\tmfExtend = require( './../mfExtend' ),\n\tNoCache = cache.NoCache,\n\treferencesMobileViewGateway = null;\n\n/**\n * Gateway for retrieving references via the MobileView API\n *\n * By default not cached, if it receives a cache instance then it will be\n * used to store and get references sections.\n *\n * @class ReferencesMobileViewGateway\n * @extends ReferencesHtmlScraperGateway\n * @inheritdoc\n *\n * @param {mw.Api} api class to use for making requests\n * @param {NoCache|MemoryCache} [cache] class to use for caching request\n * results. By default it uses the NoCache implementation, which doesn't\n * cache anything. The singleton instance exposed by this module uses\n * a MemoryCache which caches requests in-memory. Any other Cache class\n * compatible with mobile.startup/cache's interface will actually work.\n */\nfunction ReferencesMobileViewGateway( api, cache ) {\n\tReferencesHtmlScraperGateway.call( this, api );\n\tthis.cache = cache || new NoCache();\n}\n\nmfExtend( ReferencesMobileViewGateway, ReferencesHtmlScraperGateway, {\n\t/**\n\t * Retrieve references list for a given page.\n\t * Also cache the result for a later use.\n\t *\n\t * @memberof ReferencesMobileViewGateway\n\t * @instance\n\t * @param {Page} page\n\t * @return {jQuery.Deferred} promise that resolves with the list of\n\t *  sections on the page\n\t */\n\tgetReferencesLists: function ( page ) {\n\t\tvar self = this,\n\t\t\tresult = util.Deferred(),\n\t\t\tcachedReferencesSections = this.cache.get( page.id );\n\n\t\tif ( cachedReferencesSections ) {\n\t\t\treturn result.resolve( cachedReferencesSections ).promise();\n\t\t}\n\n\t\tthis.api.get( {\n\t\t\taction: 'mobileview',\n\t\t\tpage: page.getTitle(),\n\t\t\tsections: 'references',\n\t\t\tprop: 'text',\n\t\t\trevision: page.getRevisionId()\n\t\t} ).then( function ( data ) {\n\t\t\tvar sections = {};\n\n\t\t\tdata.mobileview.sections.forEach( function ( section ) {\n\t\t\t\tvar $section = util.parseHTML( '<div>' ).html( section.text );\n\n\t\t\t\tsections[ $section.find( '.mw-headline' ).attr( 'id' ) ] = $section.find( '.references' );\n\t\t\t} );\n\n\t\t\tself.cache.set( page.id, sections );\n\t\t\tresult.resolve( sections );\n\t\t}, function () {\n\t\t\tresult.reject( ReferencesGateway.ERROR_OTHER );\n\t\t} );\n\n\t\treturn result.promise();\n\t},\n\t/**\n\t * Retrieve all the references lists for a given page and section ID.\n\t *\n\t * @memberof ReferencesMobileViewGateway\n\t * @instance\n\t * @param {Page} page\n\t * @param {string} headingId\n\t * @return {jQuery.Promise} promise that resolves with the section\n\t *  HTML or `false` if no such section exists\n\t */\n\tgetReferencesList: function ( page, headingId ) {\n\t\treturn this.getReferencesLists( page ).then( function ( data ) {\n\t\t\treturn Object.prototype.hasOwnProperty.call( data, headingId ) ?\n\t\t\t\tdata[ headingId ] : false;\n\t\t} );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesMobileViewGateway\n\t * @instance\n\t */\n\tgetReference: function ( id, page ) {\n\t\tvar self = this;\n\n\t\treturn this.getReferencesLists( page ).then( function ( sections ) {\n\t\t\tvar $container = util.parseHTML( '<div>' );\n\n\t\t\tObject.keys( sections ).forEach( function ( sectionId ) {\n\t\t\t\t$container.append( sections[ sectionId ] );\n\t\t\t} );\n\n\t\t\treturn self.getReferenceFromContainer( id, $container );\n\t\t} );\n\t}\n} );\n\n/**\n * Retrieve a singleton instance w/ cache that uses mw.Api\n * @memberof ReferencesMobileViewGateway\n * @return {ReferencesMobileViewGateway}\n */\nReferencesMobileViewGateway.getSingleton = function () {\n\tif ( !referencesMobileViewGateway ) {\n\t\treferencesMobileViewGateway = new ReferencesMobileViewGateway(\n\t\t\tnew mw.Api(),\n\t\t\tnew MemoryCache()\n\t\t);\n\t}\n\treturn referencesMobileViewGateway;\n};\n\nmodule.exports = ReferencesMobileViewGateway;\n","var\n\tloadingOverlay = require( './loadingOverlay' ),\n\tutil = require( './util' );\n\n/**\n * Utility library for looking up details on the current user\n * @class loader\n * @singleton\n */\nmodule.exports = {\n\t// Exported to support testing and stubbing\n\tnewLoadingOverlay: function () {\n\t\treturn loadingOverlay();\n\t},\n\t/**\n\t * Loads a module via ResourceLoader\n\t * and displays a full screen LoadingOverlay during load time.\n\t * @memberof loader\n\t * @instance\n\t * @param {string} name ResourceLoader module name to load asynchronously.\n\t * @param {boolean} delegateHide if true the caller is responsible for hiding\n\t *  the intermediate loader.\n\t * @param {boolean} [showLoadingOverlay] if false a loading overlay will be hidden while\n\t *  loading the module. Defaults to true.\n\t * @return {jQuery.Promise}\n\t */\n\tloadModule: function ( name, delegateHide, showLoadingOverlay ) {\n\t\tvar loadingOverlay = this.newLoadingOverlay();\n\n\t\tshowLoadingOverlay = ( showLoadingOverlay !== undefined ) ? showLoadingOverlay : true;\n\t\tif ( showLoadingOverlay ) {\n\t\t\tloadingOverlay.appendTo( document.body );\n\t\t\tloadingOverlay.show();\n\t\t}\n\n\t\tfunction hideOverlayIfNeeded() {\n\t\t\tif ( !delegateHide && showLoadingOverlay ) {\n\t\t\t\tloadingOverlay.hide();\n\t\t\t}\n\t\t}\n\t\treturn mw.loader.using( name ).then( function () {\n\t\t\thideOverlayIfNeeded();\n\n\t\t\treturn loadingOverlay;\n\t\t}, function () {\n\t\t\thideOverlayIfNeeded();\n\n\t\t\treturn util.Deferred().reject().promise();\n\t\t} );\n\t}\n};\n","var\n\tPage = require( '../Page' ),\n\tutil = require( '../util' ),\n\textendSearchParams = require( '../extendSearchParams' );\n\n/**\n * @class SearchGateway\n * @uses mw.Api\n * @param {mw.Api} api\n */\nfunction SearchGateway( api ) {\n\tthis.api = api;\n\tthis.searchCache = {};\n\tthis.generator = mw.config.get( 'wgMFSearchGenerator' );\n}\n\nSearchGateway.prototype = {\n\t/**\n\t * The namespace to search in.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @type {number}\n\t */\n\tsearchNamespace: 0,\n\n\t/**\n\t * Get the data used to do the search query api call.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @return {Object}\n\t */\n\tgetApiData: function ( query ) {\n\t\tvar prefix = this.generator.prefix,\n\t\t\tdata = extendSearchParams( 'search', {\n\t\t\t\tgenerator: this.generator.name\n\t\t\t} );\n\n\t\tdata.redirects = '';\n\n\t\tdata['g' + prefix + 'search'] = query;\n\t\tdata['g' + prefix + 'namespace'] = this.searchNamespace;\n\t\tdata['g' + prefix + 'limit'] = 15;\n\n\t\t// If PageImages is being used configure further.\n\t\tif ( data.pilimit ) {\n\t\t\tdata.pilimit = 15;\n\t\t\tdata.pithumbsize = mw.config.get( 'wgMFThumbnailSizes' ).tiny;\n\t\t}\n\t\treturn data;\n\t},\n\n\t/**\n\t * Escapes regular expression wildcards (metacharacters) by adding a \\\\ prefix\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} str a string\n\t * @return {Object} a regular expression that can be used to search for that str\n\t * @private\n\t */\n\t_createSearchRegEx: function ( str ) {\n\t\t// '\\[' can be unescaped, but leave it balanced with '`]'\n\t\t// eslint-disable-next-line no-useless-escape\n\t\tstr = str.replace( /[-\\[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&' );\n\t\treturn new RegExp( '^(' + str + ')', 'ig' );\n\t},\n\n\t/**\n\t * Takes a label potentially beginning with term\n\t * and highlights term if it is present with strong\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} label a piece of text\n\t * @param {string} term a string to search for from the start\n\t * @return {string} safe html string with matched terms encapsulated in strong tags\n\t * @private\n\t */\n\t_highlightSearchTerm: function ( label, term ) {\n\t\tlabel = util.parseHTML( '<span>' ).text( label ).html();\n\t\tterm = util.parseHTML( '<span>' ).text( term ).html();\n\n\t\treturn label.replace( this._createSearchRegEx( term ), '<strong>$1</strong>' );\n\t},\n\n\t/**\n\t * Return data used for creating {Page} objects\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @param {Object} pageInfo from the API\n\t * @return {Object} data needed to create a {Page}\n\t * @private\n\t */\n\t_getPage: function ( query, pageInfo ) {\n\t\tvar page = Page.newFromJSON( pageInfo );\n\n\t\t// If displaytext is set in the generator result (eg. by Wikibase),\n\t\t// use that as display title.\n\t\t// Otherwise default to the page's title.\n\t\t// FIXME: Given that displayTitle could have html in it be safe and just highlight text.\n\t\t// Note that highlightSearchTerm does full HTML escaping before highlighting.\n\t\tpage.displayTitle = this._highlightSearchTerm(\n\t\t\tpageInfo.displaytext ? pageInfo.displaytext : page.title,\n\t\t\tquery\n\t\t);\n\t\tpage.index = pageInfo.index;\n\n\t\treturn page;\n\t},\n\n\t/**\n\t * Process the data returned by the api call.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @param {Object} data from api\n\t * @return {Array}\n\t * @private\n\t */\n\t_processData: function ( query, data ) {\n\t\tvar self = this,\n\t\t\tresults = [];\n\n\t\tif ( data.query ) {\n\n\t\t\tresults = data.query.pages || {};\n\t\t\tresults = Object.keys( results ).map( function ( id ) {\n\t\t\t\treturn self._getPage( query, results[ id ] );\n\t\t\t} );\n\t\t\t// sort in order of index\n\t\t\tresults.sort( function ( a, b ) {\n\t\t\t\treturn a.index < b.index ? -1 : 1;\n\t\t\t} );\n\t\t}\n\n\t\treturn results;\n\t},\n\n\t/**\n\t * Perform a search for the given query.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @return {jQuery.Deferred}\n\t */\n\tsearch: function ( query ) {\n\t\tvar xhr, request,\n\t\t\tself = this;\n\n\t\tif ( !this.isCached( query ) ) {\n\t\t\txhr = this.api.get( this.getApiData( query ) );\n\t\t\trequest = xhr\n\t\t\t\t.then( function ( data ) {\n\t\t\t\t\t// resolve the Deferred object\n\t\t\t\t\treturn {\n\t\t\t\t\t\tquery: query,\n\t\t\t\t\t\tresults: self._processData( query, data )\n\t\t\t\t\t};\n\t\t\t\t}, function () {\n\t\t\t\t\t// reset cached result, it maybe contains no value\n\t\t\t\t\tself.searchCache[query] = undefined;\n\t\t\t\t} );\n\n\t\t\t// cache the result to prevent the execution of one search query twice\n\t\t\t// in one session\n\t\t\tthis.searchCache[query] = request.promise( {\n\t\t\t\tabort: function () { xhr.abort(); }\n\t\t\t} );\n\t\t}\n\n\t\treturn this.searchCache[query];\n\t},\n\n\t/**\n\t * Check if the search has already been performed in given session.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query\n\t * @return {boolean}\n\t */\n\tisCached: function ( query ) {\n\t\treturn Boolean( this.searchCache[ query ] );\n\t}\n};\n\nmodule.exports = SearchGateway;\n","var units = [ 'seconds', 'minutes', 'hours', 'days', 'months', 'years' ],\n\tutil = require( './util' ),\n\tlimits = [ 1, 60, 3600, 86400, 2592000, 31536000 ];\n\n/** @class time */\n\n/**\n * Calculate the correct unit of timestamp\n * @memberof time\n * @instance\n * @param {number} timestampDelta\n * @return {{value: number, unit: string}}\n */\nfunction timeAgo( timestampDelta ) {\n\tvar i = 0;\n\twhile ( i < limits.length && timestampDelta > limits[i + 1] ) {\n\t\t++i;\n\t}\n\treturn {\n\t\tvalue: Math.round( timestampDelta / limits[i] ),\n\t\tunit: units[i]\n\t};\n}\n\n/**\n * Calculate the correct unit of timestamp delta\n * @memberof time\n * @instance\n * @param {number} timestamp\n * @return {{value: number, unit: string}}\n */\nfunction getTimeAgoDelta( timestamp ) {\n\tvar currentTimestamp = Math.round( new Date().getTime() / 1000 );\n\n\treturn timeAgo( currentTimestamp - timestamp );\n}\n\n/**\n * Whether timestamp delta is less than a day old\n * @memberof time\n * @instance\n * @param {{value: number, unit: string}} delta Object of timestamp and its label\n * @return {boolean}\n */\nfunction isRecent( delta ) {\n\treturn [ 'seconds', 'minutes', 'hours' ].indexOf( delta.unit ) > -1;\n}\n\n/**\n * Is delta less than 10 seconds?\n * @memberof time\n * @instance\n * @param {{value: number, unit: string}} delta Object of timestamp and its label\n * @return {boolean}\n */\nfunction isNow( delta ) {\n\treturn delta.unit === 'seconds' && delta.value < 10;\n}\n\n/**\n * Return a message relating to the last modified relative time.\n * @memberof time\n * @instance\n * @param {number} ts timestamp\n * @param {string} username of the last user to modify the page\n * @param {string} [gender] of the last user to modify the page\n * @param {string} [historyUrl] url to the history page for the message, if omitted\n *  returns plain text string rather than html\n * @return {string}\n */\nfunction getLastModifiedMessage( ts, username, gender, historyUrl ) {\n\tvar delta, html,\n\t\tkeys = {\n\t\t\tseconds: 'mobile-frontend-last-modified-with-user-seconds',\n\t\t\tminutes: 'mobile-frontend-last-modified-with-user-minutes',\n\t\t\thours: 'mobile-frontend-last-modified-with-user-hours',\n\t\t\tdays: 'mobile-frontend-last-modified-with-user-days',\n\t\t\tmonths: 'mobile-frontend-last-modified-with-user-months',\n\t\t\tyears: 'mobile-frontend-last-modified-with-user-years'\n\t\t},\n\t\targs = [];\n\n\tgender = gender || 'unknown';\n\n\tdelta = getTimeAgoDelta( ts );\n\tif ( isNow( delta ) ) {\n\t\targs.push( 'mobile-frontend-last-modified-with-user-just-now', gender, username );\n\t} else {\n\t\targs.push( keys[ delta.unit ], gender, username,\n\t\t\tmw.language.convertNumber( delta.value )\n\t\t);\n\t}\n\n\targs.push(\n\t\thistoryUrl || '#',\n\t\t// Abuse PLURAL support to determine if the user is anonymous or not\n\t\tmw.language.convertNumber( username ? 1 : 0 ),\n\t\t// Our abuse of PLURAL support means we have to pass the relative URL\n\t\t// rather than construct it from a wikilink\n\t\tusername ? mw.util.getUrl( 'User:' + username ) : ''\n\t);\n\thtml = mw.message.apply( this, args ).parse();\n\tif ( historyUrl ) {\n\t\treturn html;\n\t} else {\n\t\treturn util.parseHTML( '<div>' ).html( html ).text();\n\t}\n}\n\n/**\n * Return a message relating to the registration date of the user\n * @memberof time\n * @instance\n * @param {string} ts timestamp\n * @param {string} [gender] of the last user editing this page\n * @return {string}\n */\nfunction getRegistrationMessage( ts, gender ) {\n\tvar delta, html,\n\t\tkeys = {\n\t\t\tseconds: 'mobile-frontend-joined-seconds',\n\t\t\tminutes: 'mobile-frontend-joined-minutes',\n\t\t\thours: 'mobile-frontend-joined-hours',\n\t\t\tdays: 'mobile-frontend-joined-days',\n\t\t\tmonths: 'mobile-frontend-joined-months',\n\t\t\tyears: 'mobile-frontend-joined-years'\n\t\t},\n\t\targs = [];\n\n\tgender = gender || 'unknown';\n\n\tdelta = getTimeAgoDelta( parseInt( ts, 10 ) );\n\tif ( isNow( delta ) ) {\n\t\targs.push( 'mobile-frontend-joined-just-now', gender );\n\t} else {\n\t\targs.push( keys[ delta.unit ], gender, mw.language.convertNumber( delta.value ) );\n\t}\n\thtml = mw.message.apply( this, args ).parse();\n\treturn html;\n}\n\nmodule.exports = {\n\tgetLastModifiedMessage: getLastModifiedMessage,\n\tgetRegistrationMessage: getRegistrationMessage,\n\ttimeAgo: timeAgo,\n\tgetTimeAgoDelta: getTimeAgoDelta,\n\tisNow: isNow,\n\tisRecent: isRecent\n};\n","var\n\tutil = require( './util' ),\n\tstorageKey = 'mobileFrontend/toast';\n\n/**\n * Wrapper for one global Toast\n * @class Toast\n */\nfunction Toast() {\n\tmw.requestIdleCallback( this._showPending.bind( this ) );\n}\n\n/**\n * Show a message with the given class in a toast.\n * @memberof Toast\n * @instance\n * @param {string} msg Message to show in the toast\n * @param {Object|string} [options]\n *  If a string (deprecated) CSS class to add to the element\n *  If an object, more options for the notification see mw.notification.show.\n *  For backwards compatibility reasons if a string is given it will be\n *  treated as options.type\n */\nToast.prototype.show = function ( msg, options ) {\n\tif ( typeof options === 'string' ) {\n\t\tmw.log.warn( 'The use of the cssClass parameter of Toast.show is deprecated, please convert it to an ' +\n\t\t\t\t'options object.' );\n\t\toptions = {\n\t\t\ttype: options\n\t\t};\n\t}\n\n\toptions = util.extend( {\n\t\ttag: 'toast'\n\t}, options );\n\n\tthis.notification = mw.notify( msg, options );\n};\n\n/**\n * Hide the Toast if it's visible.\n * @memberof Toast\n * @instance\n */\nToast.prototype.hide = function () {\n\tif ( this.notification !== undefined ) {\n\t\tthis.notification.then( function ( notif ) {\n\t\t\tnotif.close();\n\t\t} );\n\t}\n};\n\n/**\n * Save the toast data in storage so that we can show it on page reload.\n * Also check whether there is a pending message that's not shown yet.\n * If yes, output a warning message and discard this message.\n * This is to ensure that the page needs to be reloaded before adding\n * a new message for showing later.\n * @memberof Toast\n * @instance\n * @param {string} content Content to be placed in element\n * @param {string} [className] class to add to element\n */\nToast.prototype.showOnPageReload = function ( content, className ) {\n\tif ( mw.storage.get( storageKey ) ) {\n\t\tmw.log.warn(\n\t\t\t'A pending toast message already exits. ' +\n\t\t\t\t'The page should have been reloaded by now.'\n\t\t);\n\t\treturn;\n\t}\n\tmw.storage.set( storageKey, JSON.stringify( {\n\t\tcontent: content,\n\t\tclassName: className\n\t} ) );\n};\n\n/**\n * Show the previously saved toast data and delete it from storage\n * @memberof Toast\n * @instance\n * @private\n */\nToast.prototype._showPending = function () {\n\tvar data = mw.storage.get( storageKey );\n\tif ( data ) {\n\t\tdata = JSON.parse( data );\n\t\tthis.show( data.content, data.className );\n\t\tmw.storage.remove( storageKey );\n\t}\n};\n\nmodule.exports = new Toast();\n","/* global $ */\n\n/**\n * Utility library\n * @class util\n * @singleton\n */\nmodule.exports = {\n\t/**\n\t * Escape a string for use as a css selector\n\t * @memberof util\n\t * @instance\n\t * @param {string} selector\n\t * @return {string}\n\t */\n\tescapeSelector: function ( selector ) {\n\t\treturn $.escapeSelector( selector );\n\t},\n\t/**\n\t * Wrapper class for the $.grep\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Deferred}\n\t */\n\tgrep: function () {\n\t\treturn $.grep.apply( $, arguments );\n\t},\n\t/**\n\t * Run method when document is ready.\n\t * @memberof util\n\t * @instance\n\t * @param {Function} fn\n\t * @return {jQuery.Object}\n\t */\n\tdocReady: function ( fn ) {\n\t\treturn $( fn );\n\t},\n\t/**\n\t * Wrapper class for the $.when\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Deferred}\n\t */\n\twhen: function () {\n\t\treturn $.when.apply( $, arguments );\n\t},\n\t/**\n\t * Wrapper class for the Deferred method\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Deferred}\n\t */\n\tDeferred: function () {\n\t\treturn $.Deferred();\n\t},\n\t/**\n\t * Adds a class to the document\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Object} element representing the documentElement\n\t */\n\tgetDocument: function () {\n\t\treturn $( document.documentElement );\n\t},\n\t/**\n\t * Get the window object\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Object}\n\t */\n\tgetWindow: function () {\n\t\treturn $( window );\n\t},\n\t/**\n\t * Given some html, create new element(s).\n\t * Unlike jQuery.parseHTML this will return a jQuery object\n\t * not an array.\n\t * @memberof util\n\t * @instance\n\t * @param {string} html\n\t * @param {Element} [ctx] Document element to serve as the context\n\t *  in which the HTML fragment will be created\n\t * @return {jQuery.Object}\n\t */\n\tparseHTML: function ( html, ctx ) {\n\t\tctx = ctx || document;\n\t\treturn $( $.parseHTML( html, ctx ) );\n\t},\n\t/**\n\t * wrapper for jQuery util function to check if something is numeric\n\t * @memberof util\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisNumeric: function () {\n\t\treturn $.isNumeric.apply( $, arguments );\n\t},\n\t/**\n\t * Wrapper for jQuery.extend method. In future this can be bound to Object.assign\n\t * when support allows.\n\t *\n\t * Warning: if only one argument is supplied to util.extend(), this means the target argument\n\t * was omitted. In this case, the jQuery object itself is assumed to be the target.\n\t *\n\t * @memberof util\n\t * @instance\n\t * @return {Object}\n\t */\n\textend: function () {\n\t\treturn $.extend.apply( $, arguments );\n\t},\n\t/**\n\t * Escape dots and colons in a hash, jQuery doesn't like them because they\n\t * look like CSS classes and pseudoclasses. See\n\t * http://bugs.jquery.com/ticket/5241\n\t * http://stackoverflow.com/questions/350292/how-do-i-get-jquery-to-select-elements-with-a-period-in-their-id\n\t * @memberof util\n\t * @instance\n\t * @param {string} hash A hash to escape\n\t * @return {string}\n\t */\n\tescapeHash: function ( hash ) {\n\t\treturn hash.replace( /(:|\\.)/g, '\\\\$1' );\n\t},\n\n\t/**\n\t * Heuristic for determining whether an Event should be handled by\n\t * MobileFrontend or allowed to bubble to the browser.\n\t * @memberof util\n\t * @instance\n\t * @param {Event} ev\n\t * @return {boolean} True if event is modified with control, alt, meta, or\n\t *                   shift keys and should probably be handled by the\n\t *                   browser.\n\t *\n\t * todo: move this function to a ClickUtil file once bundling and code\n\t * splitting is supported.\n\t */\n\tisModifiedEvent: function ( ev ) {\n\t\treturn ev.altKey || ev.ctrlKey || ev.metaKey || ev.shiftKey;\n\t},\n\n\t/**\n\t * Pipe event emitted by source through proxy. Subscribers to proxy will receive the event as\n\t * though proxy was the originator.\n\t *\n\t * @param {OO.EventEmitter} src\n\t * @param {OO.EventEmitter} proxy\n\t * @param {string} event Event type to listen for.\n\t * @param {any[]} [args] Arguments to pass to\n\t *  subscribers, will be prepended to emitted arguments.\n\t * @return {OO.EventEmitter} The source.\n\t */\n\trepeatEvent: function ( src, proxy, event, args ) {\n\t\treturn src.on( event, function ( args ) {\n\t\t\treturn proxy.emit( event, args );\n\t\t}, args );\n\t}\n};\n","var View = require( '../View' ),\n\tWatchstarGateway = require( './WatchstarGateway' ),\n\ticons = require( '../icons' ),\n\tutil = require( '../util' ),\n\tmfExtend = require( '../mfExtend' ),\n\ttoast = require( '../toast' ),\n\tCtaDrawer = require( '../CtaDrawer' );\n\n/**\n * A clickable watchstar\n * @class Watchstar\n * @extends View\n * @uses CtaDrawer\n * @uses Icon\n * @uses WatchstarGateway\n * @uses Toast\n * @fires Watchstar#unwatch\n * @fires Watchstar#watch\n *\n * @param {Object} options Configuration options\n */\nfunction Watchstar( options ) {\n\tView.call(\n\t\tthis,\n\t\tutil.extend(\n\t\t\t{\n\t\t\t\tclassName: icons.watchIcon().getClassName(),\n\t\t\t\tevents: {\n\t\t\t\t// Disable clicks on original link\n\t\t\t\t\t'click a': 'onLinksClick',\n\t\t\t\t\tclick: 'onStatusToggle'\n\t\t\t\t}\n\t\t\t},\n\t\t\toptions\n\t\t)\n\t);\n}\n\nmfExtend( Watchstar, View, {\n\t/**\n\t * @memberof Watchstar\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {mw.Api} defaults.api\n\t * @property {Page} defaults.page Current page.\n\t * @property {string} defaults.funnel to log events with\n\t */\n\tdefaults: {\n\t\tpage: undefined,\n\t\tfunnel: 'unknown'\n\t},\n\t/**\n\t * @memberof Watchstar\n\t * @instance\n\t * @property {Object} ctaDrawerOptions Default options hash for the anonymous CtaDrawer.\n\t */\n\tctaDrawerOptions: {\n\t\tcontent: mw.msg( 'mobile-frontend-watchlist-cta' ),\n\t\tqueryParams: {\n\t\t\twarning: 'mobile-frontend-watchlist-purpose',\n\t\t\tcampaign: 'mobile_watchPageActionCta',\n\t\t\treturntoquery: 'article_action=watch'\n\t\t},\n\t\tsignupQueryParams: {\n\t\t\twarning: 'mobile-frontend-watchlist-signup-action'\n\t\t}\n\t},\n\t/**\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\ttemplate: mw.template.compile( '<a role=\"button\">{{tooltip}}</a>', 'hogan' ),\n\t/**\n\t * @inheritdoc\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tinitialize: function ( options ) {\n\t\tvar self = this,\n\t\t\t_super = View.prototype.initialize;\n\n\t\tthis._watched = options.isWatched;\n\t\tthis.gateway = new WatchstarGateway( options.api );\n\n\t\t_super.call( self, options );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tpreRender: function () {\n\t\tthis.options.tooltip = this._watched ? mw.msg( 'unwatchthispage' ) : mw.msg( 'watchthispage' );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar unwatchedClass = icons.watchIcon().getGlyphClassName(),\n\t\t\twatchedClass = icons.watchedIcon().getGlyphClassName() + ' watched';\n\n\t\t// add tooltip to the div, not the <a> inside\n\t\t// because that <a> has zero width/height so cannot be hovered\n\t\tthis.$el.attr( 'title', this.options.tooltip );\n\n\t\t// Add watched class if necessary\n\t\tif ( !mw.user.isAnon() && this._watched ) {\n\t\t\tthis.$el.addClass( watchedClass ).removeClass( unwatchedClass );\n\t\t} else {\n\t\t\tthis.$el.addClass( unwatchedClass ).removeClass( watchedClass );\n\t\t}\n\t\tthis.$el.removeClass( 'hidden' );\n\t},\n\n\t/**\n\t * Prevent default on incoming events\n\t * @memberof Watchstar\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonLinksClick: function ( ev ) {\n\t\tev.preventDefault();\n\t},\n\n\t/**\n\t * Triggered when a user anonymously clicks on the watchstar.\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tonStatusToggleAnon: function () {\n\t\tif ( !this.drawer ) {\n\t\t\tthis.drawer = new CtaDrawer( this.ctaDrawerOptions );\n\n\t\t}\n\t\tthis.drawer.show();\n\t},\n\n\t/**\n\t * Triggered when a logged in user clicks on the watchstar.\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tonStatusToggleUser: function () {\n\t\tvar\n\t\t\tself = this,\n\t\t\tgateway = this.gateway,\n\t\t\tpage = this.options.page,\n\t\t\tchecker,\n\t\t\tpostWatched = !this._watched;\n\n\t\tchecker = setInterval( function () {\n\t\t\ttoast.show( mw.msg( 'mobile-frontend-watchlist-please-wait' ) );\n\t\t}, 1000 );\n\t\tfunction stopInterval() {\n\t\t\tclearInterval( checker );\n\t\t}\n\t\tgateway.postStatusesByTitle( [ page.getTitle() ], postWatched ).then( function () {\n\t\t\tstopInterval();\n\n\t\t\tself._watched = postWatched;\n\t\t\tif ( postWatched ) {\n\t\t\t\tself.render();\n\t\t\t\t/**\n\t\t\t\t * Fired when the watch star is changed to watched status\n\t\t\t\t * @event Watchstar#watch\n\t\t\t\t */\n\t\t\t\tself.emit( 'watch' );\n\t\t\t\ttoast.show( mw.msg( 'mobile-frontend-watchlist-add', page.title ) );\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * Fired when the watch star is changed to unwatched status\n\t\t\t\t * @event Watchstar#unwatch\n\t\t\t\t */\n\t\t\t\tself.emit( 'unwatch' );\n\t\t\t\tself.render();\n\t\t\t\ttoast.show( mw.msg( 'mobile-frontend-watchlist-removed', page.title ) );\n\t\t\t}\n\t\t}, function () {\n\t\t\tstopInterval();\n\n\t\t\ttoast.show( mw.msg( 'mobile-frontend-watchlist-error' ), 'error' );\n\t\t} );\n\t},\n\n\t/**\n\t * Event handler for clicking on watch star.\n\t * Make an API request if user is not anonymous.\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tonStatusToggle: function () {\n\t\tif ( mw.user.isAnon() ) {\n\t\t\tthis.onStatusToggleAnon.apply( this, arguments );\n\t\t} else {\n\t\t\tthis.onStatusToggleUser.apply( this, arguments );\n\t\t}\n\t}\n\n} );\n\nmodule.exports = Watchstar;\n","var util = require( '../util' ),\n\tactionParams = require( '../actionParams' );\n\n/**\n * @typedef {string|number} PageID Page ID. 0 / \"0\" is a special no-ID value.\n * {@link https://www.mediawiki.org/wiki/Manual:Page_table#page_id Page ID}\n *\n * @typedef {string} PageTitle Canonical page title.\n * {@link https://www.mediawiki.org/wiki/Manual:Title.php#Canonical_forms Canonical forms}\n *\n * @typedef {boolean} WatchStatus Page watch status; true if watched, false if\n *                                unwatched.\n * {@link https://www.mediawiki.org/wiki/API:Info API:Info} (see inprop.watched)\n * {@link https://www.mediawiki.org/wiki/API:Watch API:Watch} (see unwatch)\n *\n * @typedef {Object.<PageTitle, WatchStatus>} WatchStatusMap\n */\n\n/**\n * API for retrieving and modifying page watch statuses. This module interacts\n * with two endpoints, API:Info for GETs and API:Watch and for POSTs.\n *\n * @class WatchstarGateway\n * @param {mw.Api} api\n */\nfunction WatchstarGateway( api ) {\n\tthis.api = api;\n}\n\nWatchstarGateway.prototype = {\n\t/**\n\t * Issues zero to two asynchronous HTTP requests for the watch status of\n\t * each page ID and title passed.\n\t *\n\t * Every watch entry has a title but not necessarily a page ID. Entries\n\t * without IDs are missing pages, i.e., pages that do not exist. These\n\t * entries are used to observe when a page with a given title is created.\n\t * Although it is convenient to use titles because they're always present,\n\t * IDs are preferred since they're far less likely to exceed the URL length\n\t * limit.\n\t *\n\t * No request is issued when no IDs and no titles are passed. Given that the\n\t * server state does not change between the two requests, overlapping title\n\t * and ID members will behave as expected but there is no reason to issue\n\t * such a request.\n\t *\n\t * @memberof WatchstarGateway\n\t * @instance\n\t * @param {PageID[]} ids\n\t * @param {PageTitle[]} titles\n\t * @return {JQuery.Deferred<WatchStatusMap>}\n\t */\n\tgetStatuses: function ( ids, titles ) {\n\t\t// Issue two requests and coalesce the results.\n\t\treturn util.when(\n\t\t\tthis.getStatusesByID( ids ),\n\t\t\tthis.getStatusesByTitle( titles )\n\t\t).then( function () { return util.extend.apply( util, arguments ); } );\n\t},\n\n\t/**\n\t * @memberof WatchstarGateway\n\t * @instance\n\t * @param {PageID[]} ids\n\t * @return {JQuery.Deferred<WatchStatusMap>}\n\t */\n\tgetStatusesByID: function ( ids ) {\n\t\tvar self = this;\n\t\tif ( !ids.length ) {\n\t\t\treturn util.Deferred().resolve( {} );\n\t\t}\n\n\t\treturn this.api.get( {\n\t\t\tformatversion: 2,\n\t\t\taction: 'query',\n\t\t\tprop: 'info',\n\t\t\tinprop: 'watched',\n\t\t\tpageids: ids\n\t\t} ).then( function ( rsp ) {\n\t\t\treturn self._unmarshalGetResponse( rsp );\n\t\t} );\n\t},\n\n\t/**\n\t * @memberof WatchstarGateway\n\t * @instance\n\t * @param {PageTitle[]} titles\n\t * @return {JQuery.Deferred<WatchStatusMap>}\n\t */\n\tgetStatusesByTitle: function ( titles ) {\n\t\tvar self = this;\n\t\tif ( !titles.length ) {\n\t\t\treturn util.Deferred().resolve( {} );\n\t\t}\n\n\t\treturn this.api.get( actionParams( {\n\t\t\tprop: 'info',\n\t\t\tinprop: 'watched',\n\t\t\ttitles: titles\n\t\t} ) ).then( function ( rsp ) {\n\t\t\treturn self._unmarshalGetResponse( rsp );\n\t\t} );\n\t},\n\n\t/**\n\t * @memberof WatchstarGateway\n\t * @instance\n\t * @param {PageTitle[]} titles\n\t * @param {WatchStatus} watched\n\t * @return {JQuery.Deferred}\n\t */\n\tpostStatusesByTitle: function ( titles, watched ) {\n\t\tvar params = {\n\t\t\taction: 'watch',\n\t\t\ttitles: titles\n\t\t};\n\t\tif ( !watched ) {\n\t\t\tparams.unwatch = !watched;\n\t\t}\n\t\treturn this.api.postWithToken( 'watch', params );\n\t},\n\n\t/**\n\t * @memberof WatchstarGateway\n\t * @instance\n\t * @param {Object} rsp The API:Info response.\n\t * @return {JQuery.Deferred<WatchStatusMap>}\n\t * @see getStatusesByID\n\t * @see getStatusesByTitle\n\t */\n\t_unmarshalGetResponse: function ( rsp ) {\n\t\tvar pages = rsp && rsp.query && rsp.query.pages || [];\n\t\treturn pages.reduce( function ( statuses, page ) {\n\t\t\tstatuses[page.title] = page.watched;\n\t\t\treturn statuses;\n\t\t}, {} );\n\t}\n};\n\nmodule.exports = WatchstarGateway;\n","var PageList = require( '../PageList' ),\n\tWatchstar = require( './Watchstar' ),\n\tuser = mw.user,\n\tutil = require( '../util' ),\n\tPage = require( '../Page' ),\n\tmfExtend = require( '../mfExtend' ),\n\tWatchstarGateway = require( './WatchstarGateway' );\n\n/**\n * @typedef {Object.<PageTitle, PageID>} PageTitleToPageIDMap\n */\n\n/**\n * List of items page view\n * @class WatchstarPageList\n * @uses Page\n * @uses WatchstarGateway\n * @uses Watchstar\n * @extends PageList\n *\n * @fires WatchstarPageList#unwatch\n * @fires WatchstarPageList#watch\n * @param {Object} options Configuration options\n */\nfunction WatchstarPageList( options ) {\n\tthis.wsGateway = new WatchstarGateway( options.api );\n\tPageList.apply( this, arguments );\n}\n\nmfExtend( WatchstarPageList, PageList, {\n\t/**\n\t * @memberof WatchstarPageList\n\t * @instance\n\t * @mixes PageList#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {mw.Api} defaults.api\n\t */\n\n\tpostRender: function () {\n\t\tvar\n\t\t\tself = this,\n\t\t\t$items,\n\t\t\tpages,\n\t\t\tids = [],\n\t\t\ttitles = [];\n\n\t\tPageList.prototype.postRender.apply( this );\n\n\t\t$items = this.queryUnitializedItems();\n\t\tpages = this.parsePagesFromItems( $items );\n\n\t\tObject.keys( pages ).forEach( function ( title ) {\n\t\t\tvar id = pages[title];\n\t\t\t// Favor IDs since they're short and unlikely to exceed URL length\n\t\t\t// limits when batched.\n\t\t\tif ( id && id !== '0' ) {\n\t\t\t\t// ID is present and valid.\n\t\t\t\tids.push( id );\n\t\t\t} else {\n\t\t\t\t// Only titles are available for missing pages.\n\t\t\t\ttitles.push( title );\n\t\t\t}\n\t\t} );\n\n\t\treturn this.getPages( ids, titles ).then( function ( statuses ) {\n\t\t\tself.renderItems( $items, statuses );\n\t\t} );\n\t},\n\n\t/**\n\t * @param {JQuery.Element} $items\n\t * @param {WatchStatusMap} statuses\n\t * @return {void}\n\t */\n\tqueryUnitializedItems: function () {\n\t\treturn this.$( 'li:not(.with-watchstar)' );\n\t},\n\n\t/**\n\t * Retrieve pages\n\t *\n\t * @memberof WatchstarPageList\n\t * @instance\n\t * @param {PageID[]} ids\n\t * @param {PageTitle[]} titles\n\t * @return {JQuery.Deferred<WatchStatusMap>}\n\t */\n\tgetPages: function ( ids, titles ) {\n\t\t// Rendering Watchstars for anonymous users is not useful. Short-circuit\n\t\t// the request.\n\t\tif ( user.isAnon() ) {\n\t\t\treturn util.Deferred().resolve( {} );\n\t\t}\n\n\t\treturn this.wsGateway.getStatuses( ids, titles );\n\t},\n\n\t/**\n\t * @param {JQuery.Element} $items\n\t * @return {PageTitleToPageIDMap}\n\t * @memberof WatchstarPageList\n\t * @instance\n\t */\n\tparsePagesFromItems: function ( $items ) {\n\t\tvar\n\t\t\tself = this,\n\t\t\tpages = {};\n\t\t$items.each( function ( _, item ) {\n\t\t\tvar $item = self.$( item );\n\t\t\tpages[ $item.attr( 'title' ) ] = $item.data( 'id' );\n\t\t} );\n\t\treturn pages;\n\t},\n\n\t/**\n\t * @param {JQuery.Element} $items\n\t * @param {WatchStatusMap} statuses\n\t * @return {void}\n\t */\n\trenderItems: function ( $items, statuses ) {\n\t\tvar self = this;\n\n\t\t// Rendering Watchstars for anonymous users is not useful. Nothing to do.\n\t\tif ( user.isAnon() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Create watch stars for each entry in list\n\t\t$items.each( function ( _, item ) {\n\t\t\tvar\n\t\t\t\t$item = self.$( item ),\n\t\t\t\tpage = new Page( {\n\t\t\t\t\t// FIXME: Set sections so we don't hit the api (hacky)\n\t\t\t\t\tsections: [],\n\t\t\t\t\ttitle: $item.attr( 'title' ),\n\t\t\t\t\tid: $item.data( 'id' )\n\t\t\t\t} ),\n\t\t\t\tel = self.parseHTML( '<div>' ).appendTo( $item ),\n\t\t\t\twatched = statuses[ page.getTitle() ];\n\n\t\t\tself._appendWatchstar( el, page, watched );\n\t\t\t$item.addClass( 'with-watchstar' );\n\t\t} );\n\t},\n\n\t/**\n\t * @param {HTMLElement} el\n\t * @param {Page} page\n\t * @param {WatchStatus} watched\n\t * @return {Watchstar}\n\t */\n\t_appendWatchstar: function ( el, page, watched ) {\n\t\tvar watchstar = new Watchstar( {\n\t\t\tapi: this.options.api,\n\t\t\tfunnel: this.options.funnel,\n\t\t\tisAnon: user.isAnon(),\n\t\t\t// WatchstarPageList.getPages() already retrieved the status of\n\t\t\t// each page. Explicitly set the watch state so another request\n\t\t\t// will not be issued by the Watchstar.\n\t\t\tisWatched: watched,\n\t\t\tpage: page,\n\t\t\tel: el\n\t\t} );\n\n\t\t/**\n\t\t * @event watch\n\t\t * Fired when an article in the PageList is watched.\n\t\t */\n\t\tutil.repeatEvent( watchstar, this, 'watch' );\n\n\t\t/**\n\t\t * @event unwatch\n\t\t * Fired when an article in the PageList is watched.\n\t\t */\n\t\tutil.repeatEvent( watchstar, this, 'unwatch' );\n\n\t\treturn watchstar;\n\t}\n} );\n\nmodule.exports = WatchstarPageList;\n"],"sourceRoot":""}