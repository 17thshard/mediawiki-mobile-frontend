{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.startup/mfExtend.js","webpack://mfModules.[name]/./src/mobile.startup/util.js","webpack://mfModules.[name]/./src/mobile.startup/View.js","webpack://mfModules.[name]/./src/mobile.startup/Page.js","webpack://mfModules.[name]/./src/mobile.startup/icons.js","webpack://mfModules.[name]/./src/mobile.startup/Browser.js","webpack://mfModules.[name]/./src/mobile.startup/time.js","webpack://mfModules.[name]/./src/mobile.startup/modules.js","webpack://mfModules.[name]/./src/mobile.startup/Section.js","webpack://mfModules.[name]/./src/mobile.startup/Icon.js","webpack://mfModules.[name]/./src/mobile.startup/Thumbnail.js","webpack://mfModules.[name]/./src/mobile.startup/moduleSingleton.js","webpack://mfModules.[name]/./src/mobile.startup/cache.js","webpack://mfModules.[name]/./src/mobile.startup/Skin.js","webpack://mfModules.[name]/./src/mobile.startup/mobile.startup.js","webpack://mfModules.[name]/./src/mobile.startup/context.js","webpack://mfModules.[name]/./src/mobile.startup/user.js","webpack://mfModules.[name]/./src/mobile.startup/PageGateway.js","webpack://mfModules.[name]/./src/mobile.startup/Button.js","webpack://mfModules.[name]/./src/mobile.startup/Panel.js","webpack://mfModules.[name]/./src/mobile.startup/Anchor.js"],"names":["module","exports","Child","ParentOrPrototype","prototype","key","OO","inheritClass","initClass","escapeSelector","selector","$","grep","apply","arguments","docReady","fn","when","Deferred","d","warning","mw","log","deprecate","fail","always","done","getDocument","document","documentElement","getWindow","window","parseHTML","html","ctx","isNumeric","extend","escapeHash","hash","replace","isModifiedEvent","ev","altKey","ctrlKey","metaKey","shiftKey","repeatEvent","src","proxy","event","args","on","emit","util","__webpack_require__","mfExtend","delegateEventSplitter","idCounter","View","this","initialize","mixinClass","EventEmitter","className","undefined","tagName","isTemplateMode","isBorderBox","template","templatePartials","defaults","events","options","self","call","cid","prefix","id","toString","uniqueId","compile","el","$el","length","_postInitialize","addClass","render","preRender","postRender","data","undelegateEvents","skipTemplateRender","delegateEvents","query","find","match","method","delegate","bind","eventName","listener","off","undelegate","forEach","prop","HTML","time","Section","Thumbnail","HEADING_SELECTOR","config","get","join","BLACKLISTED_THUMBNAIL_CLASS_SELECTORS","Page","thumb","thumbnail","languageUrl","getUrl","title","displayTitle","getDisplayTitle","url","isMissing","width","isLandscape","height","wikidataDescription","namespaceNumber","protection","edit","sections","isMainPage","source","escape","inNamespace","namespace","findSectionHeadingByIndex","sectionIndex","filter","eq","findChildInSectionLead","$heading","$nextHeading","$container","$lead","headingSelector","withNestedChildren","$matchingNodes","addBack","getLeadSectionElement","children","prevAll","hasClass","next","nextAll","nextUntil","isWikiText","isWatched","getRevisionId","revId","getTitle","getId","getNamespaceId","split","toLowerCase","isTalkPage","ns","_sectionLookup","sectionData","section","push","getThumbnails","blacklistSelector","thumbs","_thumbs","not","each","$a","$lazyImage","valid","parents","legacyMatch","attr","RegExp","test","filename","decodeURIComponent","getSection","getSections","getRedLinks","newFromJSON","resp","revision","pageprops","displaytitle","terms","label","description","revisions","lastModified","getLastModifiedMessage","Date","timestamp","getTime","user","pageid","missing","Icon","spinner","name","msg","additionalClassNames","browser","memoize","memoized","cache","cacheId","Object","hasOwnProperty","now","Math","random","Browser","ua","userAgent","_fixIosLandscapeBug","isIos","lockViewport","addEventListener","version","ios","isWideScreen","val","parseInt","innerWidth","innerHeight","supportsAnimations","elemStyle","createElement","style","supportsProperty","property","toUpperCase","slice","supportsTouchEvents","supportsGeoLocation","navigator","getSingleton","$html","units","limits","timeAgo","timestampDelta","i","value","round","unit","getTimeAgoDelta","isNow","delta","ts","username","gender","historyUrl","seconds","minutes","hours","days","months","years","language","convertNumber","message","parse","text","getRegistrationMessage","isRecent","indexOf","ModuleLoader","_register","require","registry","localRequire","Error","loader","e","define","obj","deprecatedId","replacement","icons","tag","level","line","hasReferences","anchor","toHtmlString","hasText","modifier","href","setRotationClass","rotation","_rotationClass","glyphPrefix","isSmall","base","getClassName","getGlyphClassName","append","siblings","getDescription","getFileName","MemoryCache","_cache","NoCache","set","viewport","M","getSectionId","hSelector","$parent","parent","Skin","page","mainMenu","warn","referencesGateway","setupImageLoading","lazyLoadReferences","appendTo","getUnloadedImages","toArray","offset","loadImagesList","imagePlaceholders","_loadImages","images","placeholder","$placeholder","isElementCloseToViewport","is","shouldLoadImage","callbacks","loadImage","map","$downloadingImage","ownerDocument","replaceWith","resolve","reject","class","alt","srcset","$content","$spinner","gateway","wasExpanded","isReferenceSection","promise","prependTo","getReferencesLists","then","lastId","refListIndex","getReferencesList","refListElements","remove","removeClass","loadImagesAndSetData","getLicenseMsg","licenseMsg","mfLicense","licensePlural","plural","link","moduleLoader","context","PageGateway","Button","Panel","Anchor","mobileFrontend","getMode","mwUser","tokens","isAnon","getName","getEditCount","getGroups","getSessionId","sessionId","inUserBucketA","sectionTemplate","transformSections","lastSection","existingSectionLevels","s","collapseLevel","min","result","assignToParent","listOfSections","child","api","getPage","endpoint","leadOnly","dataType","action","variant","redirect","noheadings","sectionprop","resolveObj","mv","error","mobileview","lastmodified","lastmodifiedby","Array","isArray","lead","mainpage","lastModifiedTimestamp","languageCount","languagecount","hasVariants","hasvariants","lastModifiedUserName","lastModifiedUserGender","invalidatePage","_getLanguageVariantsFromApiResponse","generalData","general","variantPath","variantarticlepath","variants","keys","index","item","autonym","lang","code","getPageLanguages","meta","siprop","lllimit","titles","formatversion","llprop","llinlanguagecode","languages","pages","langlinks","_getAPIResponseFromHTML","substr","$span","getSectionsFromHTML","block","progressive","destructive","quiet","minHideDelay","click .cancel","onCancel","preventDefault","hide","show","isVisible","setTimeout","toggle"],"mappings":"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","file":"mobile.startup.js","sourcesContent":["/**\n * Extends a class with new methods and member properties.\n *\n * @param {Function} Child function\n * @param {Object|Function} ParentOrPrototype class to inherit from\n *  OR if no inheriting class a prototype to extend the class with\n * @param {Object} [prototype]\n */\nfunction mfExtend( Child, ParentOrPrototype, prototype ) {\n\tvar key;\n\tif ( prototype ) {\n\t\tOO.inheritClass( Child, ParentOrPrototype );\n\t} else {\n\t\tOO.initClass( Child );\n\t\tprototype = ParentOrPrototype;\n\t}\n\tfor ( key in prototype ) {\n\t\tChild.prototype[key] = prototype[key];\n\t}\n}\n\nmodule.exports = mfExtend;\n","/* global $ */\n\n/**\n * Utility library\n * @class util\n * @singleton\n */\nmodule.exports = {\n\t/**\n\t * Escape a string for use as a css selector\n\t * @memberof util\n\t * @instance\n\t * @param {string} selector\n\t * @return {string}\n\t */\n\tescapeSelector: function ( selector ) {\n\t\treturn $.escapeSelector( selector );\n\t},\n\t/**\n\t * Wrapper class for the $.grep\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Deferred}\n\t */\n\tgrep: function () {\n\t\treturn $.grep.apply( $, arguments );\n\t},\n\t/**\n\t * Run method when document is ready.\n\t * @memberof util\n\t * @instance\n\t * @param {Function} fn\n\t * @return {jQuery.Object}\n\t */\n\tdocReady: function ( fn ) {\n\t\treturn $( fn );\n\t},\n\t/**\n\t * Wrapper class for the $.when\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Deferred}\n\t */\n\twhen: function () {\n\t\treturn $.when.apply( $, arguments );\n\t},\n\t/**\n\t * Wrapper class for the Deferred method\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Deferred}\n\t */\n\tDeferred: function () {\n\t\tvar d = $.Deferred(),\n\t\t\twarning = 'Use Promise compatible methods `then` and `catch` instead.';\n\n\t\t/* eslint-disable no-restricted-properties */\n\t\tmw.log.deprecate( d, 'fail', d.fail, warning );\n\t\tmw.log.deprecate( d, 'always', d.always, warning );\n\t\tmw.log.deprecate( d, 'done', d.done, warning );\n\t\t/* eslint-enable no-restricted-properties */\n\t\treturn d;\n\t},\n\t/**\n\t * Adds a class to the document\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Object} element representing the documentElement\n\t */\n\tgetDocument: function () {\n\t\treturn $( document.documentElement );\n\t},\n\t/**\n\t * Get the window object\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Object}\n\t */\n\tgetWindow: function () {\n\t\treturn $( window );\n\t},\n\t/**\n\t * Given some html, create new element(s).\n\t * Unlike jQuery.parseHTML this will return a jQuery object\n\t * not an array.\n\t * @memberof util\n\t * @instance\n\t * @param {string} html\n\t * @param {Element} [ctx] Document element to serve as the context\n\t *  in which the HTML fragment will be created\n\t * @return {jQuery.Object}\n\t */\n\tparseHTML: function ( html, ctx ) {\n\t\treturn $( $.parseHTML( html, ctx ) );\n\t},\n\t/**\n\t * wrapper for jQuery util function to check if something is numeric\n\t * @memberof util\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisNumeric: function () {\n\t\treturn $.isNumeric.apply( $, arguments );\n\t},\n\t/**\n\t * Wrapper for jQuery.extend method. In future this can be bound to Object.assign\n\t * when support allows.\n\t * @memberof util\n\t * @instance\n\t * @return {Object}\n\t */\n\textend: function () {\n\t\treturn $.extend.apply( $, arguments );\n\t},\n\t/**\n\t * Escape dots and colons in a hash, jQuery doesn't like them because they\n\t * look like CSS classes and pseudoclasses. See\n\t * http://bugs.jquery.com/ticket/5241\n\t * http://stackoverflow.com/questions/350292/how-do-i-get-jquery-to-select-elements-with-a-period-in-their-id\n\t * @memberof util\n\t * @instance\n\t * @param {string} hash A hash to escape\n\t * @return {string}\n\t */\n\tescapeHash: function ( hash ) {\n\t\treturn hash.replace( /(:|\\.)/g, '\\\\$1' );\n\t},\n\n\t/**\n\t * Heuristic for determining whether an Event should be handled by\n\t * MobileFrontend or allowed to bubble to the browser.\n\t * @memberof util\n\t * @instance\n\t * @param {Event} ev\n\t * @return {boolean} True if event is modified with control, alt, meta, or\n\t *                   shift keys and should probably be handled by the\n\t *                   browser.\n\t *\n\t * todo: move this function to a ClickUtil file once bundling and code\n\t * splitting is supported.\n\t */\n\tisModifiedEvent: function ( ev ) {\n\t\treturn ev.altKey || ev.ctrlKey || ev.metaKey || ev.shiftKey;\n\t},\n\n\t/**\n\t * Pipe event emitted by source through proxy. Subscribers to proxy will receive the event as\n\t * though proxy was the originator.\n\t *\n\t * @param {OO.EventEmitter} src\n\t * @param {OO.EventEmitter} proxy\n\t * @param {string} event Event type to listen for.\n\t * @param {any[]} [args] Arguments to pass to\n\t *  subscribers, will be prepended to emitted arguments.\n\t * @return {OO.EventEmitter} The source.\n\t */\n\trepeatEvent: function ( src, proxy, event, args ) {\n\t\treturn src.on( event, function ( args ) { return proxy.emit( event, args ); }, args );\n\t}\n};\n","/* global $ */\nvar util = require( './util' ),\n\tmfExtend = require( './mfExtend' ),\n\t// Cached regex to split keys for `delegate`.\n\tdelegateEventSplitter = /^(\\S+)\\s*(.*)$/,\n\tidCounter = 0;\n\n/**\n * Generate a unique integer id (unique within the entire client session).\n * Useful for temporary DOM ids.\n * @param {string} prefix Prefix to be used when generating the id.\n * @return {string}\n */\nfunction uniqueId( prefix ) {\n\tvar id = ( ++idCounter ).toString();\n\treturn prefix ? prefix + id : id;\n}\n\n/**\n * Should be extended using extend().\n *\n * When options contains el property, this.$el in the constructed object\n * will be set to the corresponding jQuery object. Otherwise, this.$el\n * will be an empty div.\n *\n * When extended using extend(), if the extended prototype contains\n * template property, this.$el will be filled with rendered template (with\n * options parameter used as template data).\n *\n * template property can be a string which will be passed to mw.template.compile()\n * or an object that has a render() function which accepts an object with\n * template data as its argument (similarly to an object created by\n * mw.template.compile()).\n *\n * You can also define a defaults property which should be an object\n * containing default values for the template (if they're not present in\n * the options parameter).\n *\n * If this.$el is not a jQuery object bound to existing DOM element, the\n * view can be attached to an element using appendTo(), prependTo(),\n * insertBefore(), insertAfter() proxy functions.\n *\n * append(), prepend(), before(), after() can be used to modify $el. on()\n * can be used to bind events.\n *\n * You can also use declarative DOM events binding by specifying an `events`\n * map on the class. The keys will be 'event selector' and the value can be\n * either the name of a method to call, or a function. All methods and\n * functions will be executed on the context of the View.\n *\n * Inspired from Backbone.js\n * https://github.com/jashkenas/backbone/blob/master/backbone.js#L1128\n *\n * Example:\n * ```js\n *     var MyComponent = View.extend( {\n *       events: {\n *\t       'mousedown .title': 'edit',\n *\t       'click .button': 'save',\n *\t       'click .open': function(e) { ... }\n *       },\n *       edit: function ( ev ) {\n *         //...\n *       },\n *       save: function ( ev ) {\n *         //...\n *       }\n *     } );\n * ```\n *\n * Example:\n * ```js\n *     var View, section;\n *     function Section( options ) {\n *       View.call( this, options );\n *     }\n *     View = require( './View' );\n *     require( './mfExtend' )( Section, View, {\n *       template: mw.template.compile( \"&lt;h2&gt;{{title}}&lt;/h2&gt;\" ),\n *     } );\n *     section = new Section( { title: 'Test', text: 'Test section body' } );\n *     section.appendTo( 'body' );\n * ```\n *\n * @class View\n * @mixins OO.EventEmitter\n */\nfunction View() {\n\tthis.initialize.apply( this, arguments );\n}\nOO.mixinClass( View, OO.EventEmitter );\nmfExtend( View, {\n\t/**\n\t * A css class to apply to the containing element of the View.\n\t * @memberof View\n\t * @instance\n\t * @property {string} className\n\t */\n\tclassName: undefined,\n\t/**\n\t * Name of tag that contains the rendered template\n\t * @memberof View\n\t * @instance\n\t * @property {string} tagName\n\t */\n\ttagName: 'div',\n\t/**\n\t * Tells the View to ignore tagName and className when constructing the element\n\t * and to rely solely on the template\n\t * @memberof View\n\t * @instance\n\t * @property {boolean} isTemplateMode\n\t */\n\tisTemplateMode: false,\n\n\t/**\n\t * Whether border box box sizing model should be used\n\t * @memberof View\n\t * @instance\n\t * @property {boolean} isBorderBox\n\t */\n\tisBorderBox: true,\n\t/**\n\t * @memberof View\n\t * @instance\n\t * @property {Mixed}\n\t * Specifies the template used in render(). Object|string|HoganTemplate\n\t */\n\ttemplate: undefined,\n\n\t/**\n\t * Specifies partials (sub-templates) for the main template. Example:\n\t *\n\t *     @example\n\t *     // example content for the \"some\" template (sub-template will be\n\t *     // inserted where {{>content}} is):\n\t *     // <h1>Heading</h1>\n\t *     // {{>content}}\n\t *\n\t *     oo.mfExtend( SomeView, View, {\n\t *       template: M.template.get( 'some.hogan' ),\n\t *       templatePartials: { content: M.template.get( 'sub.hogan' ) }\n\t *     }\n\t *\n\t * @memberof View\n\t * @instance\n\t * @property {Object}\n\t */\n\ttemplatePartials: {},\n\n\t/**\n\t * A set of default options that are merged with options passed into the initialize\n\t * function.\n\t * @memberof View\n\t * @instance\n\t * @property {Object} defaults Default options hash.\n\t * @property {jQuery.Object|string} [defaults.el] jQuery selector to use for rendering.\n\t * @property {boolean} [defaults.skipTemplateRender] Whether to enhance views already in\n\t * DOM. When enabled, the template is disabled so that it is not rendered in the DOM.\n\t * Use in conjunction with View::defaults.$el to associate the View with an existing\n\t * already rendered element in the DOM.\n\t */\n\tdefaults: {},\n\n\t/**\n\t * Default events map\n\t * @memberof View\n\t * @instance\n\t */\n\tevents: null,\n\n\t/**\n\t * Run once during construction to set up the View\n\t * @memberof View\n\t * @instance\n\t * @param {Object} options Object passed to the constructor.\n\t */\n\tinitialize: function ( options ) {\n\t\tvar self = this;\n\n\t\tOO.EventEmitter.call( this );\n\t\toptions = util.extend( {}, this.defaults, options );\n\t\tthis.options = options;\n\t\t// Assign a unique id for dom events binding/unbinding\n\t\tthis.cid = uniqueId( 'view' );\n\n\t\t// TODO: if template compilation is too slow, don't compile them on a\n\t\t// per object basis, but don't worry about it now (maybe add cache to\n\t\t// M.template.compile())\n\t\tif ( typeof this.template === 'string' ) {\n\t\t\tthis.template = mw.template.compile( this.template );\n\t\t}\n\n\t\tif ( options.el ) {\n\t\t\t// Note the element may not be in the document so must use global jQuery here\n\t\t\tthis.$el = $( options.el );\n\t\t} else {\n\t\t\tthis.$el = this.parseHTML( '<' + this.tagName + '>' );\n\t\t}\n\n\t\t// Make sure the element is ready to be manipulated\n\t\tif ( this.$el.length ) {\n\t\t\tthis._postInitialize();\n\t\t} else {\n\t\t\tutil.docReady( function () {\n\t\t\t\t// Note the element may not be in the document so must use global jQuery here\n\t\t\t\tself.$el = $( options.el );\n\t\t\t\tself._postInitialize();\n\t\t\t} );\n\t\t}\n\t},\n\n\t/**\n\t * Called when this.$el is ready.\n\t * @memberof View\n\t * @instance\n\t * @private\n\t */\n\t_postInitialize: function () {\n\t\tthis.$el.addClass( this.className );\n\t\tif ( this.isBorderBox ) {\n\t\t\t// FIXME: Merge with className property (?)\n\t\t\tthis.$el.addClass( 'view-border-box' );\n\t\t}\n\t\tthis.render( this.options );\n\t},\n\n\t/**\n\t * Function called before the view is rendered. Can be redefined in\n\t * objects that extend View.\n\t * @memberof View\n\t * @instance\n\t */\n\tpreRender: function () {},\n\n\t/**\n\t * Function called after the view is rendered. Can be redefined in\n\t * objects that extend View.\n\t *\n\t * @memberof View\n\t * @instance\n\t */\n\tpostRender: function () {},\n\n\t// eslint-disable-next-line valid-jsdoc\n\t/**\n\t * Fill this.$el with template rendered using data if template is set.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {Object} data Template data. Will be merged into the view's\n\t * options\n\t * @chainable\n\t */\n\trender: function ( data ) {\n\t\tvar html;\n\t\tutil.extend( this.options, data );\n\t\tthis.preRender();\n\t\tthis.undelegateEvents();\n\t\tif ( this.template && !this.options.skipTemplateRender ) {\n\t\t\thtml = this.template.render( this.options, this.templatePartials );\n\t\t\tif ( this.isTemplateMode ) {\n\t\t\t\tthis.$el = $( html );\n\t\t\t} else {\n\t\t\t\tthis.$el.html( html );\n\t\t\t}\n\t\t}\n\t\tthis.postRender();\n\t\tthis.delegateEvents();\n\t\treturn this;\n\t},\n\n\t/**\n\t * Wraps this.$el.find, so that you can search for elements in the view's\n\t * ($el's) scope.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {string} query A jQuery CSS selector.\n\t * @return {JQuery.Object} jQuery object containing results of the search.\n\t */\n\t$: function ( query ) {\n\t\treturn this.$el.find( query );\n\t},\n\n\t/**\n\t * Set callbacks, where `this.events` is a hash of\n\t *\n\t * {\"event selector\": \"callback\"}\n\t *\n\t * {\n\t *\t'mousedown .title': 'edit',\n\t *\t'click .button': 'save',\n\t *\t'click .open': function(e) { ... }\n\t * }\n\t *\n\t * pairs. Callbacks will be bound to the view, with `this` set properly.\n\t * Uses event delegation for efficiency.\n\t * Omitting the selector binds the event to `this.el`.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {Object} events Optionally set this events instead of the ones on this.\n\t */\n\tdelegateEvents: function ( events ) {\n\t\tvar match, key, method;\n\t\t// Take either the events parameter or the this.events to process\n\t\tevents = events || this.events;\n\t\tif ( events ) {\n\t\t\t// Remove current events before re-binding them\n\t\t\tthis.undelegateEvents();\n\t\t\tfor ( key in events ) {\n\t\t\t\tmethod = events[ key ];\n\t\t\t\t// If the method is a string name of this.method, get it\n\t\t\t\tif ( typeof method !== 'function' ) {\n\t\t\t\t\tmethod = this[ events[ key ] ];\n\t\t\t\t}\n\t\t\t\tif ( method ) {\n\t\t\t\t\t// Extract event and selector from the key\n\t\t\t\t\tmatch = key.match( delegateEventSplitter );\n\t\t\t\t\tthis.delegate( match[ 1 ], match[ 2 ], method.bind( this ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Add a single event listener to the view's element (or a child element\n\t * using `selector`). This only works for delegate-able events: not `focus`,\n\t * `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {string} eventName\n\t * @param {string} selector\n\t * @param {Function} listener\n\t */\n\tdelegate: function ( eventName, selector, listener ) {\n\t\tthis.$el.on( eventName + '.delegateEvents' + this.cid, selector,\n\t\t\tlistener );\n\t},\n\n\t/**\n\t * Clears all callbacks previously bound to the view by `delegateEvents`.\n\t * You usually don't need to use this, but may wish to if you have multiple\n\t * views attached to the same DOM element.\n\t * @memberof View\n\t * @instance\n\t */\n\tundelegateEvents: function () {\n\t\tif ( this.$el ) {\n\t\t\tthis.$el.off( '.delegateEvents' + this.cid );\n\t\t}\n\t},\n\n\t/**\n\t * A finer-grained `undelegateEvents` for removing a single delegated event.\n\t * `selector` and `listener` are both optional.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {string} eventName\n\t * @param {string} selector\n\t * @param {Function} listener\n\t */\n\tundelegate: function ( eventName, selector, listener ) {\n\t\tthis.$el.off( eventName + '.delegateEvents' + this.cid, selector,\n\t\t\tlistener );\n\t},\n\n\t/**\n\t * See parseHTML method of util singleton\n\t *\n\t * @memberof View\n\t * @instance\n\t */\n\tparseHTML: util.parseHTML\n} );\n\n/**\n * @memberof View\n * @instance\n * @func append\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func append\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func prepend\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func prepend\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func appendTo\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func prependTo\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func after\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func after\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func before\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func before\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func insertAfter\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func insertBefore\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func remove\n * @param {string} [selector]\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func detach\n * @param {string} [selector]\n * @return {this}\n */\n\n[\n\t'append',\n\t'prepend',\n\t'appendTo',\n\t'prependTo',\n\t'after',\n\t'before',\n\t'insertAfter',\n\t'insertBefore',\n\t'remove',\n\t'detach'\n].forEach( function ( prop ) {\n\tView.prototype[prop] = function () {\n\t\tthis.$el[prop].apply( this.$el, arguments );\n\t\treturn this;\n\t};\n} );\n\nmodule.exports = View;\n","var\n\tHTML = mw.html,\n\tmfExtend = require( './mfExtend' ),\n\ttime = require( './time' ),\n\tutil = require( './util' ),\n\tSection = require( './Section' ),\n\tThumbnail = require( './Thumbnail' ),\n\tView = require( './View' ),\n\tHEADING_SELECTOR = mw.config.get( 'wgMFMobileFormatterHeadings' ).join( ',' ),\n\tBLACKLISTED_THUMBNAIL_CLASS_SELECTORS = [ 'noviewer', 'metadata' ];\n\n/**\n * Mobile page view object\n *\n * @class Page\n * @uses Section\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Page( options ) {\n\tvar thumb;\n\t// If thumbnail is not passed it should be made false (truthy) so that it\n\t// renders a placeholder when absent.\n\tif ( options.thumbnail === undefined ) {\n\t\toptions.thumbnail = false;\n\t}\n\tthis.options = options;\n\toptions.languageUrl = mw.util.getUrl( 'Special:MobileLanguages/' + options.title );\n\tView.call( this, options );\n\t// Fallback if no displayTitle provided\n\toptions.displayTitle = this.getDisplayTitle();\n\t// allow usage in templates.\n\t// FIXME: Should View map all options to properties?\n\tthis.title = options.title;\n\tthis.displayTitle = options.displayTitle;\n\tthis.thumbnail = options.thumbnail;\n\tthis.url = options.url || mw.util.getUrl( options.title );\n\tthis.id = options.id;\n\tthis.isMissing = options.isMissing !== undefined ? options.isMissing : options.id === 0;\n\tthumb = this.thumbnail;\n\tif ( thumb && thumb.width ) {\n\t\tthis.thumbnail.isLandscape = thumb.width > thumb.height;\n\t}\n\tthis.wikidataDescription = options.wikidataDescription;\n}\n\nmfExtend( Page, View, {\n\t/**\n\t * @memberof Page\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {number} defaults.id Page ID. The default value of 0 represents a\n\t * new or missing page. Be sure to override it to avoid side effects.\n\t * @property {string} defaults.title Title of the page. It includes prefix where needed and\n\t * is human readable, e.g. Talk:The man who lived.\n\t * @property {string} defaults.displayTitle HTML title of the page for display. Falls back\n\t * to defaults.title (escaped) if no value is provided. Must be safe HTML!\n\t * @property {number} defaults.namespaceNumber the number of the\n\t *  namespace the page belongs to\n\t * @property {Object} defaults.protection List of permissions as returned by API,\n\t * e.g. [{ edit: ['*'] }]\n\t * @property {Array} defaults.sections Array of {Section} objects.\n\t * @property {boolean} defaults.isMainPage Whether the page is the Main Page.\n\t * @property {boolean} defaults.isMissing Whether the page exists in the wiki.\n\t * @property {Object} defaults.thumbnail thumbnail definition corresponding to page image\n\t * @property {boolean} defaults.thumbnail.isLandscape whether the image is in\n\t *  landscape format\n\t * @property {number} defaults.thumbnail.width of image in pixels.\n\t * @property {number} defaults.thumbnail.height of image in pixels.\n\t * @property {string} defaults.thumbnail.source url for image\n\t */\n\tdefaults: {\n\t\tid: 0,\n\t\ttitle: '',\n\t\tdisplayTitle: '',\n\t\tnamespaceNumber: 0,\n\t\tprotection: {\n\t\t\tedit: [ '*' ]\n\t\t},\n\t\tsections: [],\n\t\tisMissing: false,\n\t\tisMainPage: false,\n\t\turl: undefined,\n\t\tthumbnail: {\n\t\t\tisLandscape: undefined,\n\t\t\tsource: undefined,\n\t\t\twidth: undefined,\n\t\t\theight: undefined\n\t\t}\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Page\n\t * @instance\n\t */\n\tisBorderBox: false,\n\t/**\n\t * Retrieve the title that should be displayed to the user\n\t * @memberof Page\n\t * @instance\n\t * @return {string} HTML\n\t */\n\tgetDisplayTitle: function () {\n\t\treturn this.options.displayTitle || HTML.escape( this.options.title );\n\t},\n\t/**\n\t * Determine if current page is in a specified namespace\n\t * @memberof Page\n\t * @instance\n\t * @param {string} namespace Name of namespace\n\t * @return {boolean}\n\t */\n\tinNamespace: function ( namespace ) {\n\t\treturn this.options.namespaceNumber === mw.config.get( 'wgNamespaceIds' )[namespace];\n\t},\n\n\t/**\n\t * Find the heading in the page.\n\t * This has the benefit of excluding any additional h2s and h3s that may\n\t * have been added programatically.\n\t * @method\n\t * @param {number} sectionIndex as defined by the PHP parser.\n\t *  It should correspond to the section id\n\t *  used in the edit link for the section.\n\t *  Note, confusingly, this is different from section \"ID\" which is\n\t * used in methods\n\t * @return {jQuery.Object}\n\t */\n\tfindSectionHeadingByIndex: function ( sectionIndex ) {\n\t\tif ( sectionIndex < 1 ) {\n\t\t\t// negative indexes will search from the end, which is behaviour we do not want.\n\t\t\t// return an empty set when this happens.\n\t\t\treturn this.$();\n\t\t} else {\n\t\t\treturn this.$( HEADING_SELECTOR )\n\t\t\t\t// Headings must strictly be a child element of a section element\n\t\t\t\t// or the parser-output.\n\t\t\t\t// Not an ancestor!\n\t\t\t\t.filter( '.mw-parser-output > *, [class^=\"mf-section-\"] > *' ).eq( sectionIndex - 1 );\n\t\t}\n\t},\n\t/**\n\t * Finds all child elements that match the selector in a given section or subsection.\n\t * Returns any direct child elements that match the selector,\n\t * (i.e. searches only one level deep)\n\t * as well as any elements that match the selector within those children.\n\t * If the Page has no headings (e.g. a stub),\n\t * then the search will target all nodes within the page.\n\t *\n\t * This code should work on desktop (PHP parser HTML)\n\t * as well as mobile formatted HTML (PHP parser + MobileFormatter)\n\t * @method\n\t * @param {number} sectionIndex as defined by the PHP parser. It should correspond to\n\t *  the section id used in the edit link for the section.\n\t *  Note, confusingly, this is different from section \"ID\" which is\n\t *  used in methods\n\t * @param {string} selector to match\n\t * @return {jQuery.Object}\n\t */\n\tfindChildInSectionLead: function ( sectionIndex, selector ) {\n\t\tvar $heading, $nextHeading, $container, $lead,\n\t\t\theadingSelector = HEADING_SELECTOR;\n\n\t\tfunction withNestedChildren( $matchingNodes ) {\n\t\t\treturn $matchingNodes.find( selector ).addBack();\n\t\t}\n\n\t\tif ( sectionIndex === 0 ) {\n\t\t\t// lead is easy\n\t\t\t$lead = this.getLeadSectionElement();\n\t\t\tif ( $lead && $lead.length ) {\n\t\t\t\treturn withNestedChildren( $lead.children( selector ) );\n\t\t\t} else {\n\t\t\t\t$heading = this.findSectionHeadingByIndex( 1 );\n\t\t\t\treturn $heading.length ? withNestedChildren( $heading.prevAll( selector ) ) :\n\t\t\t\t\t// this page is a stub so search entire page\n\t\t\t\t\tthis.$( selector );\n\t\t\t}\n\t\t}\n\n\t\t// find heading associated with the section by looking at its\n\t\t// index position in the article\n\t\t// section ids relate to the element position in the page and the first heading\n\t\t// lead has been dealt with above, so first heading corresponds to section 1,\n\t\t// the first heading in the article.\n\t\t$heading = this.findSectionHeadingByIndex( sectionIndex );\n\n\t\t// If section-heading is present on the heading,\n\t\t// then we know the page has been MobileFormatted\n\t\t// and that this is a wrapped section\n\t\tif ( $heading.hasClass( 'section-heading' ) ) {\n\t\t\t// get content of section\n\t\t\t$container = $heading.next();\n\t\t\t// inside section find the first heading\n\t\t\t$nextHeading = $container.find( headingSelector ).eq( 0 );\n\t\t\treturn $nextHeading.length ?\n\t\t\t\t// find all amboxes before the next heading\n\t\t\t\twithNestedChildren( $nextHeading.prevAll( selector ) ) :\n\t\t\t\t// There is no subheadings inside\n\t\t\t\t// Grab all issues in section\n\t\t\t\twithNestedChildren( $container.children( selector ) );\n\t\t} else {\n\t\t\t// the heading relates to a subsection (or unwrapped desktop section),\n\t\t\t// so grab elements between this and the next one\n\t\t\t$nextHeading = $heading.eq( 0 ).nextAll( headingSelector ).eq( 0 );\n\t\t\treturn $heading.nextUntil( $nextHeading, selector );\n\t\t}\n\t},\n\n\t/**\n\t * Get the lead section of the page view.\n\t * @memberof Page\n\t * @instance\n\t * @return {jQuery.Object|null}\n\t */\n\tgetLeadSectionElement: function () {\n\t\t/*\n\t\t * The page is formatted as follows:\n\t\t * <div id=\"bodyContent\">\n\t\t *   <!-- content of the page.. -->\n\t\t *   <div id=\"mw-content-text\">\n\t\t *     <div class=\"mf-section-0\">lead section</div>\n\t\t *     <h2></h2>\n\t\t *     <div class=\"mf-section-1\">second section</div>\n\t\t *   </div>\n\t\t * </div>\n\t\t */\n\t\tif ( this.$( '.mf-section-0' ).length ) {\n\t\t\treturn this.$( '.mf-section-0' );\n\t\t}\n\t\t// no lead section found\n\t\treturn null;\n\t},\n\n\t/**\n\t * Determines if content model is wikitext\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisWikiText: function () {\n\t\treturn mw.config.get( 'wgPageContentModel' ) === 'wikitext';\n\t},\n\n\t/**\n\t * Checks whether the current page is the main page\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisMainPage: function () {\n\t\treturn this.options.isMainPage;\n\t},\n\t/**\n\t * Checks whether the current page is watched\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisWatched: function () {\n\t\treturn this.options.isWatched;\n\t},\n\n\t/**\n\t * Return the latest revision id for this page\n\t * @memberof Page\n\t * @instance\n\t * @return {number}\n\t */\n\tgetRevisionId: function () {\n\t\treturn this.options.revId;\n\t},\n\n\t/**\n\t * Return prefixed page title\n\t * @memberof Page\n\t * @instance\n\t * @return {string}\n\t */\n\tgetTitle: function () {\n\t\treturn this.options.title;\n\t},\n\n\t/**\n\t * Return page id\n\t * @memberof Page\n\t * @instance\n\t * @return {number}\n\t */\n\tgetId: function () {\n\t\treturn this.options.id;\n\t},\n\n\t/**\n\t * return namespace id\n\t * @memberof Page\n\t * @instance\n\t * @return {number} namespace Number\n\t */\n\tgetNamespaceId: function () {\n\t\tvar nsId,\n\t\t\targs = this.options.title.split( ':' );\n\n\t\tif ( args[1] ) {\n\t\t\tnsId = mw.config.get( 'wgNamespaceIds' )[ args[0].toLowerCase().replace( ' ', '_' ) ] || 0;\n\t\t} else {\n\t\t\tnsId = 0;\n\t\t}\n\t\treturn nsId;\n\t},\n\n\t/**\n\t * Determines if current page is a talk page\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean} Whether the page is a talk page or not\n\t */\n\tisTalkPage: function () {\n\t\tvar ns = this.getNamespaceId();\n\t\t// all talk pages are odd Numbers (except the case of special pages)\n\t\treturn ns > 0 && ns % 2 === 1;\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Page\n\t * @instance\n\t */\n\tpreRender: function () {\n\t\tthis.sections = [];\n\t\tthis._sectionLookup = {};\n\t\tthis.title = this.options.title;\n\n\t\tthis.options.sections.forEach( function ( sectionData ) {\n\t\t\tvar section = new Section( sectionData );\n\t\t\tthis.sections.push( section );\n\t\t\tthis._sectionLookup[section.id] = section;\n\t\t}.bind( this ) );\n\t},\n\n\t/**\n\t * Return all the thumbnails in the article.\n\t * Images which have a class or link container (.image|.thumbimage)\n\t * that matches one of the items of the constant BLACKLISTED_THUMBNAIL_CLASS_SELECTORS\n\t * will be excluded.\n\t * A thumbnail nested inside one of these classes will still be returned.\n\t * e.g. `<div class=\"noviewer\"><a class=\"image\"><img></a></div>` is not a valid thumbnail\n\t * `<a class=\"image noviewer\"><img></a>` is not a valid thumbnail\n\t * `<a class=\"image\"><img class=\"noviewer\"></a>` is not a valid thumbnail\n\t * @memberof Page\n\t * @instance\n\t * @return {Thumbnail[]}\n\t */\n\tgetThumbnails: function () {\n\t\tvar $thumbs,\n\t\t\t$el = this.$el,\n\t\t\tblacklistSelector = '.' + BLACKLISTED_THUMBNAIL_CLASS_SELECTORS.join( ',.' ),\n\t\t\tthumbs = [];\n\n\t\tif ( !this._thumbs ) {\n\t\t\t$thumbs = $el.find( 'a.image, a.thumbimage' )\n\t\t\t\t.not( blacklistSelector );\n\n\t\t\t$thumbs.each( function () {\n\t\t\t\tvar $a = $el.find( this ),\n\t\t\t\t\t$lazyImage = $a.find( '.lazy-image-placeholder' ),\n\t\t\t\t\t// Parents need to be checked as well.\n\t\t\t\t\tvalid = $a.parents( blacklistSelector ).length === 0 &&\n\t\t\t\t\t\t$a.find( blacklistSelector ).length === 0,\n\t\t\t\t\tlegacyMatch = $a.attr( 'href' ).match( /title=([^/&]+)/ ),\n\t\t\t\t\tmatch = $a.attr( 'href' ).match( /[^/]+$/ );\n\n\t\t\t\t// filter out invalid lazy loaded images if so far image is valid\n\t\t\t\tif ( $lazyImage.length && valid ) {\n\t\t\t\t\t// if the regex matches it means the image has one of the classes\n\t\t\t\t\t// thus we must invert the result\n\t\t\t\t\tvalid = !new RegExp( '\\\\b(' + BLACKLISTED_THUMBNAIL_CLASS_SELECTORS.join( '|' ) + ')\\\\b' )\n\t\t\t\t\t\t.test( $lazyImage.data( 'class' ) );\n\t\t\t\t}\n\n\t\t\t\tif ( valid && ( legacyMatch || match ) ) {\n\t\t\t\t\tthumbs.push(\n\t\t\t\t\t\tnew Thumbnail( {\n\t\t\t\t\t\t\tel: $a,\n\t\t\t\t\t\t\tfilename: decodeURIComponent(\n\t\t\t\t\t\t\t\tlegacyMatch ? legacyMatch[1] : match[0]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} );\n\t\t\tthis._thumbs = thumbs;\n\t\t}\n\t\treturn this._thumbs;\n\t},\n\n\t/**\n\t * FIXME: Change function signature to take the anchor of the heading\n\t * @memberof Page\n\t * @instance\n\t * @param {string} id of the section as defined by MobileFormatter.\n\t * Note, that currently, this is different from\n\t * the PHP parser in that it relates to top-level sections.\n\t * For example, mf-section-1 would relate to section 1. See FIXME.\n\t * @return {Section}\n\t */\n\tgetSection: function ( id ) {\n\t\treturn this._sectionLookup[ id ];\n\t},\n\n\t/**\n\t * Obtain the list of high level (and grouped) sections.\n\t * Note that this list will not include subsections.\n\t * @memberof Page\n\t * @instance\n\t * @return {Array} of Section instances\n\t */\n\tgetSections: function () {\n\t\treturn this.sections;\n\t},\n\n\t/**\n\t * Returns a jQuery object representing all redlinks on the page.\n\t * @memberof Page\n\t * @instance\n\t * @return {jQuery.Object}\n\t */\n\tgetRedLinks: function () {\n\t\treturn this.$( '.new' );\n\t}\n} );\n\n/**\n * Create a Page object from an API response.\n *\n * @memberof Page\n * @param {Object} resp as representing a page in the API\n * @return {Page}\n */\nPage.newFromJSON = function ( resp ) {\n\tvar revision, displayTitle,\n\t\tthumb = resp.thumbnail,\n\t\tpageprops = resp.pageprops || {\n\t\t\tdisplaytitle: HTML.escape( resp.title )\n\t\t},\n\t\tterms = resp.terms;\n\n\tif ( pageprops || terms ) {\n\t\t// The label is either the display title or the label pageprop\n\t\t// (the latter used by Wikidata)\n\t\t// Long term we want to consolidate these.\n\t\t// Note that pageprops.displaytitle is HTML, while\n\t\t// terms.label[0] is plain text.\n\t\tdisplayTitle = terms && terms.label ?\n\t\t\tHTML.escape( terms.label[0] ) : pageprops.displaytitle;\n\t}\n\t// Add Wikidata descriptions if available (T101719)\n\tresp.wikidataDescription = resp.description || undefined;\n\n\tif ( thumb ) {\n\t\tresp.thumbnail.isLandscape = thumb.width > thumb.height;\n\t}\n\n\t// page may or may not exist.\n\tif ( resp.revisions && resp.revisions[0] ) {\n\t\trevision = resp.revisions[0];\n\t\tresp.lastModified = time.getLastModifiedMessage(\n\t\t\tnew Date( revision.timestamp ).getTime() / 1000,\n\t\t\trevision.user\n\t\t);\n\t}\n\n\treturn new Page(\n\t\tutil.extend( resp, {\n\t\t\tid: resp.pageid,\n\t\t\tisMissing: !!resp.missing,\n\t\t\turl: mw.util.getUrl( resp.title ),\n\t\t\tdisplayTitle: displayTitle // this is HTML!\n\t\t} )\n\t);\n};\n\n/**\n * Selector for matching headings\n *\n * @memberof Page\n */\nPage.HEADING_SELECTOR = HEADING_SELECTOR;\n\nmodule.exports = Page;\n","var\n\tIcon = require( './Icon' ),\n\tutil = require( './util' );\n\n/**\n * A set of shared icons.\n *\n * Factory methods are used to keep separate features that use the same icons\n * from accidentally manipulating one another's DOM when calling methods like\n * `remove`.\n *\n * @class icons\n * @singleton\n * @uses Icon\n */\nmodule.exports = {\n\t/**\n\t * Gets a spinner icon.\n\t *\n\t * The icon should be used to inform the user that the front-end is\n\t * communicating with the back-end.\n\t * @memberof icons\n\t * @instance\n\t * @param {Object} [options] See `Icon` for more details\n\t * @return {Icon}\n\t */\n\tspinner: function ( options ) {\n\t\toptions = options || {};\n\n\t\treturn new Icon( util.extend( options, {\n\t\t\tname: 'spinner',\n\t\t\tlabel: mw.msg( 'mobile-frontend-loading-message' ),\n\t\t\tadditionalClassNames: 'spinner loading'\n\t\t} ) );\n\t}\n};\n","var\n\tutil = require( './util' ),\n\tbrowser;\n\n/**\n * Memoize a class method. Caches the result of the method based on the\n * arguments. Instances do not share a cache.\n * @param {Function} method Method to be memoized\n * @return {Function}\n */\nfunction memoize( method ) {\n\t/**\n\t * Memoized version of the method\n\t * @return {Function}\n\t */\n\tvar memoized = function () {\n\t\tvar cache = this[ '__cache' + memoized.cacheId ] ||\n\t\t\t( this[ '__cache' + memoized.cacheId ] = {} ),\n\t\t\tkey = [].join.call( arguments, '|' );\n\t\tif ( Object.prototype.hasOwnProperty.call( cache, key ) ) {\n\t\t\treturn cache[ key ];\n\t\t}\n\t\treturn ( cache[ key ] = method.apply( this, arguments ) );\n\t};\n\tmemoized.cacheId = Date.now().toString() + Math.random().toString();\n\treturn memoized;\n}\n\n/**\n * Representation of user's current browser\n * @class Browser\n * @param {string} ua the user agent of the current browser\n * @param {jQuery.Object} $container an element to associate with the Browser object\n */\nfunction Browser( ua, $container ) {\n\tthis.userAgent = ua;\n\tthis.$el = $container;\n\tthis._fixIosLandscapeBug();\n}\n\nBrowser.prototype = {\n\t/**\n\t * When rotating to landscape stop page zooming on ios 4 and 5.\n\t * @memberof Browser\n\t * @instance\n\t * @private\n\t */\n\t_fixIosLandscapeBug: function () {\n\t\tvar self = this,\n\t\t\tviewport = this.$el.find( 'meta[name=\"viewport\"]' )[0];\n\n\t\t// see http://adactio.com/journal/4470/ (fixed in ios 6)\n\t\tif ( viewport && ( this.isIos( 4 ) || this.isIos( 5 ) ) ) {\n\t\t\tthis.lockViewport();\n\t\t\tdocument.addEventListener( 'gesturestart', function () {\n\t\t\t\tself.lockViewport();\n\t\t\t}, false );\n\t\t}\n\t},\n\t/**\n\t * Returns whether the current browser is an ios device.\n\t * FIXME: jquery.client does not support iPad detection so we cannot use it.\n\t * @memberof Browser\n\t * @instance\n\t * @param {number} [version] integer describing a specific version you want to test against.\n\t * @return {boolean}\n\t */\n\tisIos: memoize( function ( version ) {\n\t\tvar ua = this.userAgent,\n\t\t\tios = /ipad|iphone|ipod/i.test( ua );\n\n\t\tif ( ios && version ) {\n\t\t\tswitch ( version ) {\n\t\t\t\tcase 8:\n\t\t\t\t\t// Test UA for iOS8. Or for simulator look for Version 8\n\t\t\t\t\t// In the iOS simulator the OS is the host machine OS version\n\t\t\t\t\t// This makes testing in iOS8 simulator work as expected\n\t\t\t\t\treturn /OS 8_/.test( ua ) || /Version\\/8/.test( ua );\n\t\t\t\tcase 4:\n\t\t\t\t\treturn /OS 4_/.test( ua );\n\t\t\t\tcase 5:\n\t\t\t\t\treturn /OS 5_/.test( ua );\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn ios;\n\t\t}\n\t} ),\n\t/**\n\t * Locks the viewport so that pinch zooming is disabled\n\t * @memberof Browser\n\t * @instance\n\t */\n\tlockViewport: function () {\n\t\tif ( this.$el ) {\n\t\t\tthis.$el.find( 'meta[name=\"viewport\"]' )\n\t\t\t\t.attr( 'content', 'initial-scale=1.0, maximum-scale=1.0, user-scalable=no' );\n\t\t}\n\t},\n\t/**\n\t * Determine if a device has a widescreen.\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisWideScreen: memoize( function () {\n\t\tvar val = parseInt( mw.config.get( 'wgMFDeviceWidthTablet' ), 10 );\n\t\t// Check portrait and landscape mode to be consistent\n\t\treturn window.innerWidth >= val || window.innerHeight >= val;\n\t} ),\n\t/**\n\t * Checks browser support for CSS transforms, transitions\n\t * and CSS animation.\n\t * Currently assumes support for the latter 2 in the case of the\n\t * former.\n\t * See http://stackoverflow.com/a/12621264/365238\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tsupportsAnimations: memoize( function () {\n\t\tvar elemStyle = document.createElement( 'foo' ).style;\n\t\tfunction supportsProperty( property ) {\n\t\t\t// We only test \"webkit-\", because that's the only prefix needed for the relevant\n\t\t\t// properties (in supportsAnimations) and supported browsers. If usage is expanded,\n\t\t\t// other prefixes may need to be checked as well.\n\t\t\treturn property in elemStyle ||\n\t\t\t\t( 'webkit' + property[ 0 ].toUpperCase() + property.slice( 1 ) ) in elemStyle;\n\t\t}\n\t\treturn supportsProperty( 'animationName' ) &&\n\t\t\tsupportsProperty( 'transform' ) &&\n\t\t\tsupportsProperty( 'transition' );\n\t} ),\n\t/**\n\t * Whether touchstart and other touch events are supported by the current browser.\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tsupportsTouchEvents: memoize( function () {\n\t\treturn 'ontouchstart' in window;\n\t} ),\n\t/**\n\t * Detect if browser supports geolocation\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tsupportsGeoLocation: memoize( function () {\n\t\treturn 'geolocation' in window.navigator;\n\t} )\n};\n\n/**\n * @memberof Browser\n * @return {Browser}\n */\nBrowser.getSingleton = function () {\n\tvar $html;\n\tif ( !browser ) {\n\t\t$html = util.getDocument();\n\t\tbrowser = new Browser( window.navigator.userAgent, $html );\n\t}\n\treturn browser;\n};\n\nmodule.exports = Browser;\n","var units = [ 'seconds', 'minutes', 'hours', 'days', 'months', 'years' ],\n\tutil = require( './util' ),\n\tlimits = [ 1, 60, 3600, 86400, 2592000, 31536000 ];\n\n/** @class time */\n\n/**\n * Calculate the correct unit of timestamp\n * @memberof time\n * @instance\n * @param {number} timestampDelta\n * @return {{value: number, unit: string}}\n */\nfunction timeAgo( timestampDelta ) {\n\tvar i = 0;\n\twhile ( i < limits.length && timestampDelta > limits[i + 1] ) {\n\t\t++i;\n\t}\n\treturn {\n\t\tvalue: Math.round( timestampDelta / limits[i] ),\n\t\tunit: units[i]\n\t};\n}\n\n/**\n * Calculate the correct unit of timestamp delta\n * @memberof time\n * @instance\n * @param {number} timestamp\n * @return {{value: number, unit: string}}\n */\nfunction getTimeAgoDelta( timestamp ) {\n\tvar currentTimestamp = Math.round( new Date().getTime() / 1000 );\n\n\treturn timeAgo( currentTimestamp - timestamp );\n}\n\n/**\n * Whether timestamp delta is less than a day old\n * @memberof time\n * @instance\n * @param {{value: number, unit: string}} delta Object of timestamp and its label\n * @return {boolean}\n */\nfunction isRecent( delta ) {\n\treturn [ 'seconds', 'minutes', 'hours' ].indexOf( delta.unit ) > -1;\n}\n\n/**\n * Is delta less than 10 seconds?\n * @memberof time\n * @instance\n * @param {{value: number, unit: string}} delta Object of timestamp and its label\n * @return {boolean}\n */\nfunction isNow( delta ) {\n\treturn delta.unit === 'seconds' && delta.value < 10;\n}\n\n/**\n * Return a message relating to the last modified relative time.\n * @memberof time\n * @instance\n * @param {number} ts timestamp\n * @param {string} username of the last user to modify the page\n * @param {string} [gender] of the last user to modify the page\n * @param {string} [historyUrl] url to the history page for the message, if omitted\n *  returns plain text string rather than html\n * @return {string}\n */\nfunction getLastModifiedMessage( ts, username, gender, historyUrl ) {\n\tvar delta, html,\n\t\tkeys = {\n\t\t\tseconds: 'mobile-frontend-last-modified-with-user-seconds',\n\t\t\tminutes: 'mobile-frontend-last-modified-with-user-minutes',\n\t\t\thours: 'mobile-frontend-last-modified-with-user-hours',\n\t\t\tdays: 'mobile-frontend-last-modified-with-user-days',\n\t\t\tmonths: 'mobile-frontend-last-modified-with-user-months',\n\t\t\tyears: 'mobile-frontend-last-modified-with-user-years'\n\t\t},\n\t\targs = [];\n\n\tgender = gender || 'unknown';\n\n\tdelta = getTimeAgoDelta( ts );\n\tif ( isNow( delta ) ) {\n\t\targs.push( 'mobile-frontend-last-modified-with-user-just-now', gender, username );\n\t} else {\n\t\targs.push( keys[ delta.unit ], gender, username,\n\t\t\tmw.language.convertNumber( delta.value )\n\t\t);\n\t}\n\n\targs.push(\n\t\thistoryUrl || '#',\n\t\t// Abuse PLURAL support to determine if the user is anonymous or not\n\t\tmw.language.convertNumber( username ? 1 : 0 ),\n\t\t// Our abuse of PLURAL support means we have to pass the relative URL\n\t\t// rather than construct it from a wikilink\n\t\tusername ? mw.util.getUrl( 'User:' + username ) : ''\n\t);\n\thtml = mw.message.apply( this, args ).parse();\n\tif ( historyUrl ) {\n\t\treturn html;\n\t} else {\n\t\treturn util.parseHTML( '<div>' ).html( html ).text();\n\t}\n}\n\n/**\n * Return a message relating to the registration date of the user\n * @memberof time\n * @instance\n * @param {string} ts timestamp\n * @param {string} [gender] of the last user editing this page\n * @return {string}\n */\nfunction getRegistrationMessage( ts, gender ) {\n\tvar delta, html,\n\t\tkeys = {\n\t\t\tseconds: 'mobile-frontend-joined-seconds',\n\t\t\tminutes: 'mobile-frontend-joined-minutes',\n\t\t\thours: 'mobile-frontend-joined-hours',\n\t\t\tdays: 'mobile-frontend-joined-days',\n\t\t\tmonths: 'mobile-frontend-joined-months',\n\t\t\tyears: 'mobile-frontend-joined-years'\n\t\t},\n\t\targs = [];\n\n\tgender = gender || 'unknown';\n\n\tdelta = getTimeAgoDelta( parseInt( ts, 10 ) );\n\tif ( isNow( delta ) ) {\n\t\targs.push( 'mobile-frontend-joined-just-now', gender );\n\t} else {\n\t\targs.push( keys[ delta.unit ], gender, mw.language.convertNumber( delta.value ) );\n\t}\n\thtml = mw.message.apply( this, args ).parse();\n\treturn html;\n}\n\nmodule.exports = {\n\tgetLastModifiedMessage: getLastModifiedMessage,\n\tgetRegistrationMessage: getRegistrationMessage,\n\ttimeAgo: timeAgo,\n\tgetTimeAgoDelta: getTimeAgoDelta,\n\tisNow: isNow,\n\tisRecent: isRecent\n};\n","/**\n * Class for managing modules\n *\n * A module in this context is essentially a Javascript class (not to be confused with\n * ResourceLoader modules).\n *\n * @class ModuleLoader\n * @extends OO.EventEmitter\n */\nfunction ModuleLoader() {\n\t/**\n\t * @property {Object} register of defined modules\n\t * @private\n\t */\n\tthis._register = {};\n\tOO.EventEmitter.call( this );\n}\n\nModuleLoader.prototype = {\n\t/**\n\t * Require (import) a module previously defined using define().\n\t * Searches core module registry using mw.loader.require before consulting\n\t * its own local registry. This method is deprecated, please do not use.\n\t * @memberof ModuleLoader\n\t * @instance\n\t * @param {string} id Required module id.\n\t * @return {Object} Required module, can be any JavaScript object.\n\t */\n\trequire: function ( id ) {\n\t\tvar module, args,\n\t\t\tregistry = this._register;\n\n\t\t/**\n\t\t * @return {Object} Module\n\t\t */\n\t\tfunction localRequire() {\n\t\t\tif ( !Object.hasOwnProperty.call( registry, id ) ) {\n\t\t\t\tthrow new Error( 'MobileFrontend Module not found: ' + id );\n\t\t\t}\n\t\t\treturn registry[ id ];\n\t\t}\n\t\targs = id.split( '/' );\n\t\ttry {\n\t\t\tmodule = mw.loader.require( args[0] );\n\t\t\tif ( module[ args[1] ] ) {\n\t\t\t\treturn module[ args[1] ];\n\t\t\t} else {\n\t\t\t\treturn localRequire();\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\treturn localRequire();\n\t\t}\n\t},\n\n\t/**\n\t * Define a module which can be later required (imported) using require().\n\t * @memberof ModuleLoader\n\t * @instance\n\t * @param {string} id Defined module id.\n\t * @param {Object} obj Defined module body, can be any JavaScript object.\n\t * @return {Object}\n\t */\n\tdefine: function ( id, obj ) {\n\t\tvar self = this;\n\n\t\tif ( Object.hasOwnProperty.call( this._register, id ) ) {\n\t\t\tthrow new Error( 'Module already exists: ' + id );\n\t\t}\n\t\tthis._register[ id ] = obj;\n\t\t// return an object of additionally functions to do with the registered module\n\t\treturn {\n\t\t\t/**\n\t\t\t * @see ModuleLoader#deprecate\n\t\t\t * @param {string} deprecatedId Defined module id, which is deprecated.\n\t\t\t * @ignore\n\t\t\t */\n\t\t\tdeprecate: function ( deprecatedId ) {\n\t\t\t\tself.deprecate( deprecatedId, obj, id );\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t * Deprecate a module and give an replacement (if there is any).\n\t * @memberof ModuleLoader\n\t * @instance\n\t * @param {string} id Defined module id, which is deprecated.\n\t * @param {Object} obj Defined module body, can be any JavaScript object.\n\t * @param {string} [replacement] Give an optional replacement for this module (which\n\t * needs to be already defined!)\n\t */\n\tdeprecate: function ( id, obj, replacement ) {\n\t\tvar msg;\n\t\tif ( replacement ) {\n\t\t\t// add an alternative for this module, if any given\n\t\t\tmsg = 'Use ' + replacement + ' instead.';\n\t\t}\n\t\t// register it as a deprecated one\n\t\tmw.log.deprecate( this._register, id, obj, msg );\n\t}\n};\n\nOO.mixinClass( ModuleLoader, OO.EventEmitter );\n\nmodule.exports = ModuleLoader;\n","var\n\tmfExtend = require( './mfExtend' ),\n\ticons = require( './icons' ),\n\tView = require( './View' );\n\n/**\n * Builds a section of a page\n * @class Section\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Section( options ) {\n\tvar self = this;\n\toptions.tag = 'h' + options.level;\n\tthis.line = options.line;\n\tthis.text = options.text;\n\tthis.hasReferences = options.hasReferences || false;\n\tthis.id = options.id || null;\n\tthis.anchor = options.anchor;\n\tthis.children = [];\n\t( options.children || [] ).forEach( function ( section ) {\n\t\tself.children.push( new Section( section ) );\n\t} );\n\tView.call( this, options );\n}\n\nmfExtend( Section, View, {\n\ttemplate: mw.template.get( 'mobile.startup', 'Section.hogan' ),\n\t/**\n\t * @memberof Section\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.text Section text.\n\t * @property {string} defaults.spinner HTML of the spinner icon.\n\t */\n\tdefaults: {\n\t\tline: undefined,\n\t\ttext: '',\n\t\tspinner: icons.spinner().toHtmlString()\n\t}\n} );\n\nmodule.exports = Section;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' );\n\n/**\n * A wrapper for creating an icon.\n * @class Icon\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Icon( options ) {\n\tif ( options.hasText ) {\n\t\toptions.modifier = 'mw-ui-icon-before';\n\t}\n\tif ( options.href ) {\n\t\toptions.tagName = 'a';\n\t}\n\tView.call( this, options );\n}\n\nmfExtend( Icon, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Icon\n\t * @instance\n\t */\n\tpreRender: function () {\n\t\tthis.setRotationClass();\n\t},\n\t/**\n\t * Internal method that sets the correct rotation class for the icon\n\t * based on the value of rotation\n\t * @memberof Icon\n\t * @instance\n\t * @private\n\t */\n\tsetRotationClass: function () {\n\t\tvar options = this.options;\n\t\tif ( options.rotation ) {\n\t\t\tswitch ( options.rotation ) {\n\t\t\t\tcase -180:\n\t\t\t\tcase 180:\n\t\t\t\t\toptions._rotationClass = 'mf-mw-ui-icon-rotate-flip';\n\t\t\t\t\tbreak;\n\t\t\t\tcase -90:\n\t\t\t\t\toptions._rotationClass = 'mf-mw-ui-icon-rotate-anti-clockwise';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 90:\n\t\t\t\t\toptions._rotationClass = 'mf-mw-ui-icon-rotate-clockwise';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Bad value for rotation given. Must be ±90, 0 or ±180.' );\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Icon\n\t * @instance\n\t */\n\tisTemplateMode: true,\n\t/**\n\t * @memberof Icon\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {boolean} defaults.hasText Whether the icon has text.\n\t * @property {boolean} defaults.isSmall Whether the icon should be small.\n\t * @property {string} [defaults.href] value of href attribute,\n\t *  when set tagName will default to anchor tag\n\t * @property {string} defaults.tagName The name of the tag in which the icon is wrapped.\n\t *  Defaults to 'a' when href option present.\n\t * @property {string} defaults.base String used as a base for generating class names.\n\t * Defaults to 'mw-ui-icon'.\n\t * @property {string} defaults.name Name of the icon.\n\t * @property {string} defaults.modifier Additional class name.\n\t * Defaults to 'mw-ui-icon-element'.\n\t * @property {string} defaults.title Tooltip text.\n\t * @property {boolean} defaults.rotation will rotate the icon by a certain number\n\t *  of degrees.\n\t *  Must be ±90, 0 or ±180 or will throw exception.\n\t */\n\tdefaults: {\n\t\trotation: 0,\n\t\thasText: false,\n\t\thref: undefined,\n\t\tglyphPrefix: 'mf',\n\t\ttagName: 'div',\n\t\tisSmall: false,\n\t\tbase: 'mw-ui-icon',\n\t\tname: '',\n\t\tmodifier: 'mw-ui-icon-element',\n\t\ttitle: ''\n\t},\n\t/**\n\t * Return the full class name that is required for the icon to render\n\t * @memberof Icon\n\t * @instance\n\t * @return {string}\n\t */\n\tgetClassName: function () {\n\t\treturn this.$el.attr( 'class' );\n\t},\n\t/**\n\t * Return the class that relates to the icon glyph\n\t * @memberof Icon\n\t * @instance\n\t * @return {string}\n\t */\n\tgetGlyphClassName: function () {\n\t\treturn this.options.base + '-' + this.options.glyphPrefix + '-' + this.options.name;\n\t},\n\t/**\n\t * Return the HTML representation of this view\n\t * @memberof Icon\n\t * @instance\n\t * @return {string}\n\t */\n\ttoHtmlString: function () {\n\t\treturn this.parseHTML( '<div>' ).append( this.$el ).html();\n\t},\n\ttemplate: mw.template.get( 'mobile.startup', 'icon.hogan' )\n} );\n\nmodule.exports = Icon;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' );\n\n/**\n * Representation of a thumbnail\n *\n * @class Thumbnail\n * @extends View\n */\nfunction Thumbnail() {\n\tView.apply( this, arguments );\n}\n\nmfExtend( Thumbnail, View, {\n\t/**\n\t * @memberof Thumbnail\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.filename uri decoded filename including File: prefix\n\t *  associated with thumbnail\n\t */\n\tdefaults: {\n\t\tfilename: undefined\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Thumbnail\n\t * @instance\n\t */\n\tisBorderBox: false,\n\t/**\n\t * @inheritdoc\n\t * @memberof Thumbnail\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tthis.options.description = this.$el.siblings( '.thumbcaption' ).text();\n\t},\n\t/**\n\t * Obtain description for thumbnail\n\t * @memberof Thumbnail\n\t * @instance\n\t * @return {string}\n\t */\n\tgetDescription: function () {\n\t\treturn this.options.description;\n\t},\n\t/**\n\t * Return the page title for the thumbnail\n\t * @memberof Thumbnail\n\t * @instance\n\t * @return {string}\n\t */\n\tgetFileName: function () {\n\t\treturn this.options.filename;\n\t}\n} );\n\nmodule.exports = Thumbnail;\n","var ModuleLoader = require( './modules' );\n\nmodule.exports = new ModuleLoader();\n","/* This module defines several types of cache classes to use in other\n * modules.\n * The interface, that all types use, is kept synchronous driven by current\n * usage patterns, but will need to be revisited in case usage patterns\n * suggest we need asynchronous caches.\n */\n\n/**\n * In memory cache implementation\n *\n * @class MemoryCache\n */\nfunction MemoryCache() {\n\tthis._cache = {};\n}\n\n/**\n * Retrieve a cached value from a key\n * @memberof MemoryCache\n * @instance\n * @param {string} key\n * @return {Mixed}\n */\nMemoryCache.prototype.get = function ( key ) {\n\treturn this._cache[ key ];\n};\n\n/**\n * Cache a value by key\n * @memberof MemoryCache\n * @instance\n * @param {string} key\n * @param {Mixed} value\n */\nMemoryCache.prototype.set = function ( key, value ) {\n\tthis._cache[ key ] = value;\n};\n\n/**\n * Null object cache implementation\n *\n * @class NoCache\n */\nfunction NoCache() { }\n\n/**\n * NoOp\n * @memberof NoCache\n * @instance\n */\nNoCache.prototype.get = function () { };\n\n/**\n * NoOp\n * @memberof NoCache\n * @instance\n */\nNoCache.prototype.set = function () { };\n\nmodule.exports = {\n\tMemoryCache: MemoryCache,\n\tNoCache: NoCache\n};\n","var\n\tbrowser = require( './Browser' ).getSingleton(),\n\tView = require( './View' ),\n\tutil = require( './util' ),\n\tPage = require( './Page' ),\n\tDeferred = util.Deferred,\n\twhen = util.when,\n\ticons = require( './icons' ),\n\tviewport = mw.viewport,\n\tspinner = icons.spinner(),\n\tmfExtend = require( './mfExtend' ),\n\tM = require( './moduleSingleton' );\n\n/**\n * Get the id of the section $el belongs to.\n * @param {jQuery.Object} $el\n * @return {string|null} either the anchor (id attribute of the section heading\n *  or null if none found)\n */\nfunction getSectionId( $el ) {\n\tvar id,\n\t\thSelector = Page.HEADING_SELECTOR,\n\t\t$parent = $el.parent(),\n\t\t// e.g. matches Subheading in\n\t\t// <h2>H</h2><div><h3 id=\"subheading\">Subh</h3><a class=\"element\"></a></div>\n\t\t$heading = $el.prevAll( hSelector ).eq( 0 );\n\n\tif ( $heading.length ) {\n\t\tid = $heading.find( '.mw-headline' ).attr( 'id' );\n\t\tif ( id ) {\n\t\t\treturn id;\n\t\t}\n\t}\n\tif ( $parent.length ) {\n\t\t// if we couldnt find a sibling heading, check the sibling of the parents\n\t\t// consider <div><h2 /><div><$el/></div></div>\n\t\treturn getSectionId( $parent );\n\t} else {\n\t\treturn null;\n\t}\n}\n\n/**\n * Representation of the current skin being rendered.\n *\n * @class Skin\n * @extends View\n * @uses Browser\n * @uses Page\n * @fires Skin#click\n * @fires Skin#references-loaded\n * @fires Skin#changed\n *\n * @param {Object} options Configuration options\n */\nfunction Skin( options ) {\n\tvar self = this;\n\n\tthis.page = options.page;\n\tthis.name = options.name;\n\tif ( options.mainMenu ) {\n\t\tthis.mainMenu = options.mainMenu;\n\t\tmw.log.warn( 'Skin: Use of mainMenu is deprecated.' );\n\t}\n\tView.call( this, options );\n\tthis.referencesGateway = options.referencesGateway;\n\n\tif (\n\t\tmw.config.get( 'wgMFLazyLoadImages' )\n\t) {\n\t\tutil.docReady( function () {\n\t\t\tself.setupImageLoading();\n\t\t} );\n\t}\n\n\tif ( mw.config.get( 'wgMFLazyLoadReferences' ) ) {\n\t\tM.on( 'before-section-toggled', this.lazyLoadReferences.bind( this ) );\n\t}\n}\n\nmfExtend( Skin, View, {\n\t/**\n\t * Skin contains components that we do not control\n\t * @inheritdoc\n\t * @memberof Skin\n\t * @instance\n\t */\n\tisBorderBox: false,\n\t/**\n\t * @memberof Skin\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {Page} defaults.page page the skin is currently rendering\n\t * @property {ReferencesGateway} defaults.referencesGateway instance of references gateway\n\t */\n\tdefaults: {\n\t\tpage: undefined\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Skin\n\t * @instance\n\t */\n\tevents: {},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Skin\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar $el = this.$el;\n\t\tif ( browser.supportsAnimations() ) {\n\t\t\t$el.addClass( 'animations' );\n\t\t}\n\t\tif ( browser.supportsTouchEvents() ) {\n\t\t\t$el.addClass( 'touch-events' );\n\t\t}\n\t\tutil.parseHTML( '<div class=\"transparent-shield cloaked-element\">' )\n\t\t\t.appendTo( $el.find( '#mw-mf-page-center' ) );\n\t\t/**\n\t\t * Fired when appearance of skin changes.\n\t\t * @event Skin#changed\n\t\t */\n\t\tthis.emit( 'changed' );\n\n\t\t/**\n\t\t * Fired when the skin is clicked.\n\t\t * @event Skin#click\n\t\t */\n\t\tthis.$( '#mw-mf-page-center' ).on( 'click', this.emit.bind( this, 'click' ) );\n\t},\n\t/**\n\t * Get images that have not yet been loaded in the page\n\t * @memberof Skin\n\t * @instance\n\t * @param {jQuery.Object} [$container] The container that should be\n\t *  searched for image placeholders. Defaults to \"#content\".\n\t * @return {Array} of unloaded image placeholders in the page\n\t */\n\tgetUnloadedImages: function ( $container ) {\n\t\t$container = $container || this.$( '#content' );\n\t\treturn $container.find( '.lazy-image-placeholder' ).toArray();\n\t},\n\t/**\n\t * Setup listeners to watch unloaded images and load them into the page\n\t * as and when they are needed.\n\t * @memberof Skin\n\t * @instance\n\t * @param {jQuery.Object} [$container] The container that should be\n\t *  searched for image placeholders. Defaults to \"#content\".\n\t * @return {jQuery.Deferred} which will be resolved when the attempts to\n\t *  load all images subject to loading have been completed.\n\t */\n\tsetupImageLoading: function ( $container ) {\n\t\tvar self = this,\n\t\t\toffset = util.getWindow().height() * 1.5,\n\t\t\tloadImagesList = this.loadImagesList.bind( this ),\n\t\t\timagePlaceholders = this.getUnloadedImages( $container );\n\n\t\t/**\n\t\t * Check whether an image should be loaded based on its proximity to the\n\t\t * viewport; and whether it is displayed to the user.\n\t\t * @param {jQuery.Object} $placeholder\n\t\t * @return {boolean}\n\t\t */\n\t\tfunction shouldLoadImage( $placeholder ) {\n\t\t\treturn viewport.isElementCloseToViewport( $placeholder[0], offset ) &&\n\t\t\t\t// If a placeholder is an inline element without a height attribute set\n\t\t\t\t// it will record as hidden\n\t\t\t\t// to circumvent this we also need to test the height (see T143768).\n\t\t\t\t( $placeholder.is( ':visible' ) || $placeholder.height() === 0 );\n\t\t}\n\n\t\t/**\n\t\t * Load remaining images in viewport\n\t\t * @return {jQuery.Deferred}\n\t\t */\n\t\tfunction _loadImages() {\n\t\t\tvar images = [];\n\t\t\t// Filter unloaded images to only the images that still need to be loaded\n\t\t\timagePlaceholders = util.grep( imagePlaceholders, function ( placeholder ) {\n\t\t\t\tvar $placeholder = self.$( placeholder );\n\t\t\t\t// Check length to ensure the image is still in the DOM.\n\t\t\t\tif ( $placeholder.length && shouldLoadImage( $placeholder ) ) {\n\t\t\t\t\timages.push( placeholder );\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} );\n\n\t\t\t// When no images are left unbind all events\n\t\t\tif ( !imagePlaceholders.length ) {\n\t\t\t\tM.off( 'scroll:throttled', _loadImages );\n\t\t\t\tM.off( 'resize:throttled', _loadImages );\n\t\t\t\tM.off( 'section-toggled', _loadImages );\n\t\t\t\tself.off( 'changed', _loadImages );\n\t\t\t}\n\n\t\t\t// load any remaining images.\n\t\t\treturn loadImagesList( images );\n\t\t}\n\n\t\tM.on( 'scroll:throttled', _loadImages );\n\t\tM.on( 'resize:throttled', _loadImages );\n\t\tM.on( 'section-toggled', _loadImages );\n\t\tthis.on( 'changed', _loadImages );\n\n\t\treturn _loadImages();\n\t},\n\t/**\n\t * Load an image on demand\n\t * @memberof Skin\n\t * @instance\n\t * @param {Array} [images] a list of images that have not been loaded.\n\t *  If none given all will be loaded.\n\t * @return {jQuery.Deferred}\n\t */\n\tloadImagesList: function ( images ) {\n\t\tvar callbacks,\n\t\t\t$ = this.$.bind( this ),\n\t\t\tloadImage = this.loadImage.bind( this );\n\n\t\timages = images || this.getUnloadedImages();\n\t\tcallbacks = images.map( function ( placeholder ) {\n\t\t\treturn loadImage( $( placeholder ) );\n\t\t} );\n\n\t\treturn when.apply( null, callbacks );\n\t},\n\t/**\n\t * Load an image on demand\n\t * @memberof Skin\n\t * @instance\n\t * @param {jQuery.Object} $placeholder\n\t * @return {jQuery.Deferred}\n\t */\n\tloadImage: function ( $placeholder ) {\n\t\tvar\n\t\t\td = Deferred(),\n\t\t\twidth = $placeholder.attr( 'data-width' ),\n\t\t\theight = $placeholder.attr( 'data-height' ),\n\t\t\t// document must be passed to ensure image will start downloading\n\t\t\t$downloadingImage = util.parseHTML( '<img>', this.$el[0].ownerDocument );\n\n\t\t// When the image has loaded\n\t\t$downloadingImage.on( 'load', function () {\n\t\t\t// Swap the HTML inside the placeholder (to keep the layout and\n\t\t\t// dimensions the same and not trigger layouts\n\t\t\t$downloadingImage.addClass( 'image-lazy-loaded' );\n\t\t\t$placeholder.replaceWith( $downloadingImage );\n\t\t\td.resolve();\n\t\t} );\n\t\t$downloadingImage.on( 'error', function () {\n\t\t\td.reject();\n\t\t} );\n\n\t\t// Trigger image download after binding the load handler\n\t\t$downloadingImage.attr( {\n\t\t\t'class': $placeholder.attr( 'data-class' ),\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tsrc: $placeholder.attr( 'data-src' ),\n\t\t\talt: $placeholder.attr( 'data-alt' ),\n\t\t\tstyle: $placeholder.attr( 'style' ),\n\t\t\tsrcset: $placeholder.attr( 'data-srcset' )\n\t\t} );\n\t\treturn d;\n\t},\n\n\t/**\n\t * Load the references section content from API if it's not already loaded.\n\t *\n\t * All references tags content will be loaded per section.\n\t * @memberof Skin\n\t * @instance\n\t * @param {Object} data Information about the section. It's in the following form:\n\t * {\n\t *     @property {string} page,\n\t *     @property {boolean} wasExpanded,\n\t *     @property {jQuery.Object} $heading,\n\t *     @property {boolean} isReferenceSection\n\t * }\n\t * @return {jQuery.Promise} rejected when not a reference section.\n\t */\n\tlazyLoadReferences: function ( data ) {\n\t\tvar $content, $spinner,\n\t\t\tgateway = this.referencesGateway,\n\t\t\tgetUnloadedImages = this.getUnloadedImages.bind( this ),\n\t\t\tloadImagesList = this.loadImagesList.bind( this ),\n\t\t\tself = this;\n\n\t\t// If the section was expanded before toggling, do not load anything as\n\t\t// section is being collapsed now.\n\t\t// Also return early if lazy loading is not required or the section is\n\t\t// not a reference section\n\t\tif (\n\t\t\tdata.wasExpanded ||\n\t\t\t!data.isReferenceSection\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t$content = data.$heading.next();\n\n\t\tfunction loadImagesAndSetData() {\n\t\t\t// lazy load images if any\n\t\t\tloadImagesList( getUnloadedImages( $content ) );\n\t\t\t// Do not attempt further loading even if we're unable to load this time.\n\t\t\t$content.data( 'are-references-loaded', 1 );\n\t\t}\n\n\t\tif ( !$content.data( 'are-references-loaded' ) ) {\n\t\t\t$content.children().addClass( 'hidden' );\n\t\t\t$spinner = spinner.$el.prependTo( $content );\n\n\t\t\t// First ensure we retrieve all of the possible lists\n\t\t\treturn gateway.getReferencesLists( data.page )\n\t\t\t\t.then( function () {\n\t\t\t\t\tvar lastId;\n\n\t\t\t\t\t$content.find( '.mf-lazy-references-placeholder' ).each( function () {\n\t\t\t\t\t\tvar refListIndex = 0,\n\t\t\t\t\t\t\t$placeholder = $content.find( this ),\n\t\t\t\t\t\t\t// search for id of the collapsible heading\n\t\t\t\t\t\t\tid = getSectionId( $placeholder );\n\n\t\t\t\t\t\tif ( lastId !== id ) {\n\t\t\t\t\t\t\t// If the placeholder belongs to a new section reset index\n\t\t\t\t\t\t\trefListIndex = 0;\n\t\t\t\t\t\t\tlastId = id;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// otherwise increment it\n\t\t\t\t\t\t\trefListIndex++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( id ) {\n\t\t\t\t\t\t\tgateway.getReferencesList( data.page, id )\n\t\t\t\t\t\t\t\t.then( function ( refListElements ) {\n\t\t\t\t\t\t\t\t\t// Note if no section html is provided\n\t\t\t\t\t\t\t\t\t// no substitution will happen\n\t\t\t\t\t\t\t\t\t// so user is forced to rely on placeholder link.\n\t\t\t\t\t\t\t\t\tif ( refListElements && refListElements[refListIndex] ) {\n\t\t\t\t\t\t\t\t\t\t$placeholder.replaceWith(\n\t\t\t\t\t\t\t\t\t\t\trefListElements[refListIndex]\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\t// Show the section now the references lists have been placed.\n\t\t\t\t\t$spinner.remove();\n\t\t\t\t\t$content.children().removeClass( 'hidden' );\n\t\t\t\t\t/**\n\t\t\t\t\t * Fired when references list is loaded into the HTML\n\t\t\t\t\t * @event references-loaded\n\t\t\t\t\t */\n\t\t\t\t\tself.emit( 'references-loaded', self.page );\n\n\t\t\t\t\tloadImagesAndSetData();\n\t\t\t\t}, function () {\n\t\t\t\t\t$spinner.remove();\n\t\t\t\t\t// unhide on a failure\n\t\t\t\t\t$content.children().removeClass( 'hidden' );\n\n\t\t\t\t\tloadImagesAndSetData();\n\t\t\t\t} );\n\t\t} else {\n\t\t\treturn Deferred().reject().promise();\n\t\t}\n\t},\n\n\t/**\n\t * Returns the appropriate license message including links/name to\n\t * terms of use (if any) and license page\n\t * @memberof Skin\n\t * @instance\n\t * @return {string}\n\t */\n\tgetLicenseMsg: function () {\n\t\tvar licenseMsg,\n\t\t\tmfLicense = mw.config.get( 'wgMFLicense' ),\n\t\t\tlicensePlural = mw.language.convertNumber( mfLicense.plural );\n\n\t\tif ( mfLicense.link ) {\n\t\t\tif ( this.$( '#footer-places-terms-use' ).length > 0 ) {\n\t\t\t\tlicenseMsg = mw.msg(\n\t\t\t\t\t'mobile-frontend-editor-licensing-with-terms',\n\t\t\t\t\tmw.message(\n\t\t\t\t\t\t'mobile-frontend-editor-terms-link',\n\t\t\t\t\t\tthis.$( '#footer-places-terms-use a' ).attr( 'href' )\n\t\t\t\t\t).parse(),\n\t\t\t\t\tmfLicense.link,\n\t\t\t\t\tlicensePlural\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlicenseMsg = mw.msg(\n\t\t\t\t\t'mobile-frontend-editor-licensing',\n\t\t\t\t\tmfLicense.link,\n\t\t\t\t\tlicensePlural\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn licenseMsg;\n\t}\n} );\n\nSkin.getSectionId = getSectionId;\n\nmodule.exports = Skin;\n","var\n\tmoduleLoader = require( './moduleSingleton' ),\n\tmfExtend = require( './mfExtend' ),\n\tcontext = require( './context' ),\n\ttime = require( './time' ),\n\tuser = require( './user' ),\n\tutil = require( './util' ),\n\tView = require( './View' ),\n\tPageGateway = require( './PageGateway' ),\n\tBrowser = require( './Browser' ),\n\tcache = require( './cache' ),\n\tButton = require( './Button' ),\n\tIcon = require( './Icon' ),\n\ticons = require( './icons' ),\n\tPanel = require( './Panel' ),\n\tSection = require( './Section' ),\n\tThumbnail = require( './Thumbnail' ),\n\tPage = require( './Page' ),\n\tAnchor = require( './Anchor' ),\n\tSkin = require( './Skin' );\n\nmw.mobileFrontend = moduleLoader;\nmw.log.deprecate( moduleLoader, 'on', moduleLoader.on,\n\t'The global EventEmitter should not be used (T156186).' );\n\nOO.mfExtend = mfExtend;\n\n// I know there is a temptation to use moduleLoader here, but if you do resource-modules will fail\n// as webpack might change the variable name. Using mw.mobileFrontend means that the variable\n// will not be recast.\nmw.mobileFrontend.define( 'mobile.startup/util', util );\nmw.mobileFrontend.define( 'mobile.startup/View', View );\nmw.mobileFrontend.define( 'mobile.startup/Browser', Browser );\nmw.mobileFrontend.define( 'mobile.startup/cache', cache );\nmw.mobileFrontend.define( 'mobile.startup/time', time );\nmw.mobileFrontend.define( 'mobile.startup/context', context );\nmw.mobileFrontend.define( 'mobile.startup/user', user );\nmw.mobileFrontend.define( 'mobile.startup/PageGateway', PageGateway );\nmw.mobileFrontend.define( 'mobile.startup/Button', Button );\nmw.mobileFrontend.define( 'mobile.startup/Icon', Icon );\nmw.mobileFrontend.define( 'mobile.startup/icons', icons );\nmw.mobileFrontend.define( 'mobile.startup/Panel', Panel );\nmw.mobileFrontend.define( 'mobile.startup/Section', Section );\nmw.mobileFrontend.define( 'mobile.startup/Thumbnail', Thumbnail );\nmw.mobileFrontend.define( 'mobile.startup/Page', Page );\nmw.mobileFrontend.define( 'mobile.startup/Anchor', Anchor );\nmw.mobileFrontend.define( 'mobile.startup/Skin', Skin );\n\n// Expose the entry chunk through libraryTarget and library. This allows\n// arbitrary file access via ResourceLoader like\n// `mfModules['mobile.startup'].moduleLoader.require('mobile.startup/LoadingOverlay')`.\nmodule.exports = {\n\tmoduleLoader: moduleLoader,\n\ttime: time,\n\tutil: util,\n\tView: View,\n\tBrowser: Browser,\n\tcontext: context,\n\tcache: cache,\n\tButton: Button,\n\tIcon: Icon,\n\ticons: icons,\n\tPanel: Panel,\n\tSection: Section,\n\tPage: Page,\n\tAnchor: Anchor,\n\tSkin: Skin\n};\n","/**\n * Mobile mode helper class\n *\n * @class context\n * @singleton\n */\nvar context = {\n\t/**\n\t * Gets current mobile mode\n\t * @memberof context\n\t * @instance\n\t * @return {string} Name of mode\n\t */\n\tgetMode: function () {\n\t\treturn mw.config.get( 'wgMFMode' );\n\t}\n};\n\nmodule.exports = context;\n","var user,\n\tmwUser = mw.user,\n\tutil = require( './util' );\n\n/**\n * Utility library for looking up details on the current user\n * Note: most of this module is just for convenience. It should be removed\n * in favor of mw.user, or at very least reduced to convenience functions.\n * @class user\n * @singleton\n */\nuser = {\n\t/**\n\t * @memberof user\n\t * @instance\n\t * @see mediaWiki.user\n\t */\n\ttokens: mwUser.tokens,\n\t/**\n\t * @memberof user\n\t * @instance\n\t * @see mediaWiki.user\n\t */\n\tisAnon: mwUser.isAnon,\n\t/**\n\t * @memberof user\n\t * @instance\n\t * @see mediaWiki.user\n\t */\n\tgetName: mwUser.getName,\n\t/**\n\t * @memberof user\n\t * @instance\n\t * @see mediaWiki.user\n\t */\n\tgetId: mwUser.getId,\n\t/**\n\t * Find current users edit count\n\t * @memberof user\n\t * @instance\n\t * @return {number} the edit count of the current user on the current wiki.\n\t */\n\tgetEditCount: function () {\n\t\treturn mw.config.get( 'wgUserEditCount' );\n\t},\n\t/**\n\t * FIXME: Not sure why mw.user is asynchronous when the information is available\n\t * For reasons I do not understand getGroups in core causes an unnecessary ajax request\n\t * The information this returns is identical to the content of the config variable.\n\t * To avoid an unnecessary ajax request on every page view simply use config variable.\n\t * @memberof user\n\t * @instance\n\t * @return {jQuery.Deferred}\n\t */\n\tgetGroups: function () {\n\t\treturn util.Deferred().resolve( mw.config.get( 'wgUserGroups' ) );\n\t},\n\t/**\n\t * Wrapper for mw.user.sessionId().\n\t * @memberof user\n\t * @instance\n\t * @method\n\t * @return {string}\n\t */\n\tgetSessionId: function () {\n\t\treturn mwUser.sessionId();\n\t},\n\n\t/**\n\t * User Bucketing for A/B testing\n\t * (we want this to be the same everywhere)\n\t * @memberof user\n\t * @instance\n\t * @return {boolean}\n\t */\n\tinUserBucketA: function () {\n\t\treturn mw.config.get( 'wgUserId' ) % 2 === 0;\n\t}\n\n};\nmodule.exports = user;\n","var sectionTemplate = mw.template.get( 'mobile.startup', 'Section.hogan' ),\n\tutil = require( './util.js' ),\n\tcache = {};\n\n/**\n * Add child to listOfSections if the level of child is the same as the last\n * child of listOfSections, otherwise add it to the children of the last\n * section of listOfSections. If listOfSections is empty, just add child to it.\n * @private\n * @param {Array} listOfSections - Array of section ids\n * @param {Object} child - Section to be added to listOfSections\n */\nfunction assignToParent( listOfSections, child ) {\n\tvar section;\n\tif ( listOfSections.length === 0 ) {\n\t\tlistOfSections.push( child );\n\t} else {\n\t\t// take a look at the last child\n\t\tsection = listOfSections[listOfSections.length - 1];\n\t\t// If the level is the same as another section in this list it is a sibling\n\t\tif ( parseInt( section.level, 10 ) === parseInt( child.level, 10 ) ) {\n\t\t\tlistOfSections.push( child );\n\t\t} else {\n\t\t\t// Otherwise take a look at that sections children recursively\n\t\t\tassignToParent( section.children, child );\n\t\t}\n\t}\n}\n\n/**\n * Order sections hierarchically\n * @private\n * @param {Array} sections Array of section objects created from response HTML\n * @return {Array} Ordered array of sections\n */\nfunction transformSections( sections ) {\n\tvar sectionLevels = sections.map( function ( s ) { return s.level; } ),\n\t\texistingSectionLevels = sectionLevels.filter( function ( level ) {\n\t\t\treturn !!level;\n\t\t} ),\n\t\tcollapseLevel = Math.min.apply( this, existingSectionLevels ).toString(),\n\t\tlastSection,\n\t\tresult = [];\n\n\t// if the first section level is not equal to collapseLevel, this first\n\t// section will not have a parent and will be appended to the result.\n\tsections.forEach( function ( section ) {\n\t\tif ( section.line !== undefined ) {\n\t\t\tsection.line = section.line.replace( /<\\/?a\\b[^>]*>/g, '' );\n\t\t}\n\t\tsection.children = [];\n\n\t\tif (\n\t\t\t!lastSection ||\n\t\t\t(\n\t\t\t\t!section.level ||\n\t\t\t\tsection.level === collapseLevel\n\t\t\t) ||\n\t\t\t// make sure lastSections first child's level is bigger than section.level\n\t\t\t(\n\t\t\t\tlastSection.children.length &&\n\t\t\t\tlastSection.children[0].level > section.level\n\t\t\t) ||\n\t\t\t// also make sure section.level is not bigger than the lastSection.level\n\t\t\t(\n\t\t\t\tlastSection.level &&\n\t\t\t\tlastSection.level >= section.level\n\t\t\t)\n\t\t) {\n\t\t\tresult.push( section );\n\t\t\tlastSection = section;\n\t\t} else {\n\t\t\tassignToParent( lastSection.children, section );\n\t\t\tlastSection.text += sectionTemplate.render( section );\n\t\t}\n\t} );\n\n\treturn result;\n}\n\n/**\n * API for providing Page data\n * @class PageGateway\n * @param {mw.Api} api\n */\nfunction PageGateway( api ) {\n\tthis.api = api;\n}\n\nPageGateway.prototype = {\n\t/**\n\t * Retrieve a page from the api\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page to be retrieved\n\t * @param {string} endpoint an alternative api url to retrieve the page from\n\t * @param {boolean} leadOnly When set only the lead section content is returned\n\t * @return {jQuery.Deferred} with parameter page data that can be passed to a Page view\n\t */\n\tgetPage: function ( title, endpoint, leadOnly ) {\n\t\tvar timestamp,\n\t\t\td = util.Deferred(),\n\t\t\toptions = endpoint ? {\n\t\t\t\turl: endpoint,\n\t\t\t\tdataType: 'jsonp'\n\t\t\t} : {},\n\t\t\tprotection = {\n\t\t\t\tedit: [ '*' ]\n\t\t\t};\n\n\t\tif ( !cache[title] ) {\n\t\t\tcache[title] = this.api.get( {\n\t\t\t\taction: 'mobileview',\n\t\t\t\tpage: title,\n\t\t\t\tvariant: mw.config.get( 'wgPageContentLanguage' ),\n\t\t\t\tredirect: 'yes',\n\t\t\t\tprop: 'id|sections|text|lastmodified|lastmodifiedby|languagecount|hasvariants|protection|displaytitle|revision',\n\t\t\t\tnoheadings: 'yes',\n\t\t\t\tsectionprop: 'level|line|anchor',\n\t\t\t\tsections: leadOnly ? 0 : 'all'\n\t\t\t}, options ).then( function ( resp ) {\n\t\t\t\tvar sections, lastModified, resolveObj, mv;\n\n\t\t\t\tif ( resp.error ) {\n\t\t\t\t\treturn d.reject( resp.error );\n\t\t\t\t} else if ( !resp.mobileview.sections ) {\n\t\t\t\t\treturn d.reject( 'No sections' );\n\t\t\t\t} else {\n\t\t\t\t\tmv = resp.mobileview;\n\t\t\t\t\tsections = transformSections( mv.sections );\n\t\t\t\t\t// Assume the timestamp is in the form TS_ISO_8601\n\t\t\t\t\t// and we don't care about old browsers\n\t\t\t\t\t// change to seconds to be consistent with PHP\n\t\t\t\t\ttimestamp = new Date( mv.lastmodified ).getTime() / 1000;\n\t\t\t\t\tlastModified = mv.lastmodifiedby;\n\n\t\t\t\t\t// FIXME: [API] the API sometimes returns an object and sometimes an array\n\t\t\t\t\t// There are various quirks with the format of protection level\n\t\t\t\t\t// as returned by api.\n\t\t\t\t\t// Also it is usually incomplete - if something is missing this means\n\t\t\t\t\t// that it has no protection level.\n\t\t\t\t\t// When an array this means there is no protection level set.\n\t\t\t\t\t// To keep the data type consistent either use the predefined\n\t\t\t\t\t// protection level,\n\t\t\t\t\t// or extend it with what is returned by API.\n\t\t\t\t\tprotection = Array.isArray( mv.protection ) ?\n\t\t\t\t\t\tprotection :\n\t\t\t\t\t\tutil.extend( protection, mv.protection );\n\n\t\t\t\t\tresolveObj = {\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tid: mv.id,\n\t\t\t\t\t\trevId: mv.revId,\n\t\t\t\t\t\tprotection: protection,\n\t\t\t\t\t\tlead: sections[0].text,\n\t\t\t\t\t\tsections: sections.slice( 1 ),\n\t\t\t\t\t\tisMainPage: mv.mainpage !== undefined,\n\t\t\t\t\t\thistoryUrl: mw.util.getUrl( title, {\n\t\t\t\t\t\t\taction: 'history'\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\tlastModifiedTimestamp: timestamp,\n\t\t\t\t\t\tlanguageCount: mv.languagecount,\n\t\t\t\t\t\thasVariants: mv.hasvariants !== undefined,\n\t\t\t\t\t\tdisplayTitle: mv.displaytitle\n\t\t\t\t\t};\n\t\t\t\t\t// Add non-anonymous user information\n\t\t\t\t\tif ( lastModified ) {\n\t\t\t\t\t\tutil.extend( resolveObj, {\n\t\t\t\t\t\t\tlastModifiedUserName: lastModified.name,\n\t\t\t\t\t\t\tlastModifiedUserGender: lastModified.gender\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t\t// FIXME: Return a Page class here\n\t\t\t\t\treturn resolveObj;\n\t\t\t\t}\n\t\t\t}, function ( msg ) {\n\t\t\t\treturn d.reject( msg );\n\t\t\t} );\n\t\t}\n\n\t\treturn cache[title];\n\t},\n\n\t/**\n\t * Invalidate the internal cache for a given page\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page who's cache you want to invalidate\n\t */\n\tinvalidatePage: function ( title ) {\n\t\tdelete cache[title];\n\t},\n\n\t/**\n\t * Gets language variant list for a page; helper function for getPageLanguages()\n\t * @memberof PageGateway\n\t * @instance\n\t * @private\n\t * @param  {string} title Name of the page to obtain variants for\n\t * @param  {Object} data Data from API\n\t * @return {Array|boolean} List of language variant objects or false if no variants exist\n\t */\n\t_getLanguageVariantsFromApiResponse: function ( title, data ) {\n\t\tvar generalData = data.query.general,\n\t\t\tvariantPath = generalData.variantarticlepath,\n\t\t\tvariants = [];\n\n\t\tif ( !generalData.variants ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Create the data object for each variant and store it\n\t\tObject.keys( generalData.variants ).forEach( function ( index ) {\n\t\t\tvar item = generalData.variants[ index ],\n\t\t\t\tvariant = {\n\t\t\t\t\tautonym: item.name,\n\t\t\t\t\tlang: item.code\n\t\t\t\t};\n\n\t\t\tif ( variantPath ) {\n\t\t\t\tvariant.url = variantPath\n\t\t\t\t\t.replace( '$1', title )\n\t\t\t\t\t.replace( '$2', item.code );\n\t\t\t} else {\n\t\t\t\tvariant.url = mw.util.getUrl( title, {\n\t\t\t\t\tvariant: item.code\n\t\t\t\t} );\n\t\t\t}\n\t\t\tvariants.push( variant );\n\t\t} );\n\n\t\treturn variants;\n\t},\n\n\t/**\n\t * Retrieve available languages for a given title\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page languages should be retrieved for\n\t * @param {string} [language] when provided the names of the languages returned\n\t *  will be translated additionally into this language.\n\t * @return {jQuery.Deferred} which is called with an object containing langlinks\n\t * and variant links as defined @ https://en.m.wikipedia.org/w/api.php?action=help&modules=query%2Blanglinks\n\t */\n\tgetPageLanguages: function ( title, language ) {\n\t\tvar self = this,\n\t\t\targs = {\n\t\t\t\taction: 'query',\n\t\t\t\tmeta: 'siteinfo',\n\t\t\t\tsiprop: 'general',\n\t\t\t\tprop: 'langlinks',\n\t\t\t\tlllimit: 'max',\n\t\t\t\ttitles: title,\n\t\t\t\tformatversion: 2\n\t\t\t};\n\n\t\tif ( language ) {\n\t\t\targs.llprop = 'url|autonym|langname';\n\t\t\targs.llinlanguagecode = language;\n\t\t} else {\n\t\t\targs.llprop = 'url|autonym';\n\t\t}\n\t\treturn this.api.get( args ).then( function ( resp ) {\n\t\t\treturn {\n\t\t\t\tlanguages: resp.query.pages[0].langlinks || [],\n\t\t\t\tvariants: self._getLanguageVariantsFromApiResponse( title, resp )\n\t\t\t};\n\t\t}, function () {\n\t\t\treturn util.Deferred().reject();\n\t\t} );\n\t},\n\n\t/**\n\t * Extract sections from headings in $el\n\t * @memberof PageGateway\n\t * @instance\n\t * @private\n\t * @param {jQuery.Object} $el object from which sections are extracted\n\t * @return {Array} Array of section objects created from headings in $el\n\t * FIXME: Where's a better place for getSectionsFromHTML and this function to live?\n\t * Answer: Possibly Page.js\n\t */\n\t_getAPIResponseFromHTML: function ( $el ) {\n\t\t// FIXME: use Page.HEADING_SELECTOR\n\t\tvar $headings = $el.find( 'h1,h2,h3,h4,h5,h6' ),\n\t\t\tsections = [];\n\n\t\t$headings.each( function () {\n\t\t\tvar level = this.tagName.substr( 1 ),\n\t\t\t\t$span = $el.find( this ).find( '.mw-headline' );\n\n\t\t\tif ( $span.length ) {\n\t\t\t\tsections.push( {\n\t\t\t\t\tlevel: level,\n\t\t\t\t\tline: $span.html(),\n\t\t\t\t\tanchor: $span.attr( 'id' ) || '',\n\t\t\t\t\ttext: ''\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t\treturn sections;\n\t},\n\n\t/**\n\t * Order sections hierarchically\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {jQuery.Object} $el object from which sections are extracted\n\t * @return {Array} Ordered array of sections\n\t */\n\tgetSectionsFromHTML: function ( $el ) {\n\t\treturn transformSections( this._getAPIResponseFromHTML( $el ) );\n\t}\n};\n\nmodule.exports = PageGateway;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' );\n\n/**\n * A wrapper for creating a button.\n * @class Button\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Button( options ) {\n\tif ( options.href ) {\n\t\toptions.tagName = 'a';\n\t}\n\tView.call( this, options );\n}\n\nmfExtend( Button, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Button\n\t * @instance\n\t */\n\tisTemplateMode: true,\n\t/**\n\t * @memberof Button\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.tagName The name of the tag in which the button is wrapped.\n\t * @property {boolean} defaults.block is stacked button\n\t * @property {boolean} defaults.progressive is progressive action\n\t *   This option is deprecated. Please use `progressive`.\n\t * @property {boolean} defaults.quiet is quiet button\n\t * @property {boolean} defaults.destructive is destructive action\n\t * @property {string} defaults.additionalClassNames Additional class name(s).\n\t * @property {string} defaults.href url\n\t * @property {string} defaults.label of button\n\t */\n\tdefaults: {\n\t\ttagName: 'a',\n\t\tblock: undefined,\n\t\tprogressive: undefined,\n\t\tdestructive: undefined,\n\t\tquiet: undefined,\n\t\tadditionalClassNames: '',\n\t\thref: undefined,\n\t\tlabel: undefined\n\t},\n\t/**\n\t * @memberof Button\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'button.hogan' )\n} );\n\nmodule.exports = Button;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' );\n\n/**\n * An abstract class for a {@link View} that comprises a simple panel.\n * @class Panel\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Panel() {\n\tView.apply( this, arguments );\n}\n\nmfExtend( Panel, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Panel\n\t * @instance\n\t */\n\tclassName: 'panel',\n\t// in milliseconds\n\tminHideDelay: 10,\n\tevents: {\n\t\t'click .cancel': 'onCancel'\n\t},\n\n\t/**\n\t * Cancel event handler\n\t * @memberof Panel\n\t * @instance\n\t * @param {Object} ev Event Object\n\t */\n\tonCancel: function ( ev ) {\n\t\tev.preventDefault();\n\t\tthis.hide();\n\t},\n\n\t/**\n\t * Shows panel after a slight delay\n\t * @memberof Panel\n\t * @instance\n\t * @method\n\t */\n\tshow: function () {\n\t\tvar self = this;\n\n\t\tif ( !self.isVisible() ) {\n\t\t\t// use setTimeout to allow the browser to redraw if render() was called\n\t\t\t// just before show(); this is important for animations to work\n\t\t\t// (0ms doesn't work on Firefox, 10ms is enough)\n\t\t\tsetTimeout( function () {\n\t\t\t\tself.$el.addClass( 'visible animated' );\n\t\t\t\tself.emit( 'show' );\n\t\t\t}, self.minHideDelay );\n\t\t}\n\t},\n\n\t/**\n\t * Hides panel\n\t * @memberof Panel\n\t * @instance\n\t */\n\thide: function () {\n\t\tvar self = this;\n\n\t\t// see comment in show()\n\t\tsetTimeout( function () {\n\t\t\tself.$el.removeClass( 'visible' );\n\t\t\tself.emit( 'hide' );\n\t\t}, self.minHideDelay );\n\t},\n\n\t/**\n\t * Determines if panel is visible\n\t * @memberof Panel\n\t * @instance\n\t * @return {boolean} Panel is visible\n\t */\n\tisVisible: function () {\n\t\treturn this.$el.hasClass( 'visible' );\n\t},\n\n\t/**\n\t * Shows or hides panel\n\t * @memberof Panel\n\t * @instance\n\t */\n\ttoggle: function () {\n\t\tif ( this.isVisible() ) {\n\t\t\tthis.hide();\n\t\t} else {\n\t\t\tthis.show();\n\t\t}\n\t}\n} );\n\nmodule.exports = Panel;\n","var\n\tView = require( './View' ),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * A wrapper for creating an anchor.\n * @class Anchor\n * @extends View\n */\nfunction Anchor() {\n\tView.apply( this, arguments );\n}\n\nmfExtend( Anchor, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Anchor\n\t * @instance\n\t */\n\tisTemplateMode: true,\n\t/**\n\t * @memberof Anchor\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {boolean} defaults.progressive is progressive action\n\t * @property {boolean} defaults.destructive is destructive action\n\t * @property {string} defaults.additionalClassNames Additional class name(s).\n\t * @property {string} defaults.href url\n\t * @property {string} defaults.label of anchor\n\t */\n\tdefaults: {\n\t\tprogressive: undefined,\n\t\tdestructive: undefined,\n\t\tadditionalClassNames: '',\n\t\thref: undefined,\n\t\tlabel: undefined\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Anchor\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'anchor.hogan' )\n} );\n\nmodule.exports = Anchor;\n"],"sourceRoot":""}