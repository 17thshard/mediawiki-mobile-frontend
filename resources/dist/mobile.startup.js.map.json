{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.startup/LanguageInfo.js","webpack://mfModules.[name]/./src/mobile.startup/categoryOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/languageOverlay/getDeviceLanguage.js","webpack://mfModules.[name]/./src/mobile.startup/languageOverlay/languageInfoOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/languageOverlay/languageOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/loadingOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/mediaViewer/overlay.js","webpack://mfModules.[name]/./src/mobile.startup/mobile.startup.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesGateway.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesHtmlScraperGateway.js","webpack://mfModules.[name]/./src/mobile.startup/references/references.js","webpack://mfModules.[name]/./src/mobile.startup/search/MobileWebSearchLogger.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchHeaderView.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchResultsView.js","webpack://mfModules.[name]/./src/mobile.startup/search/searchHeader.js"],"names":["util","require","actionParams","LanguageInfo","api","this","prototype","getLanguages","get","meta","liprop","then","resp","languages","Object","keys","query","languageinfo","map","key","data","url","lang","code","langname","name","Deferred","reject","module","exports","Overlay","promisedView","Anchor","m","header","options","overlay","widget","className","headers","mw","msg","isAnon","href","label","additionalClassNames","loader","using","CategoryTabs","eventBus","title","$el","find","append","navigator","language","userLanguage","browserLanguage","systemLanguage","toLowerCase","undefined","getDeviceLanguage","loadLanguageInfoSearcher","languageInfo","variants","deviceLanguage","languageInfoOverlay","make","heading","test","loadLanguageSearcher","pageGateway","getPageLanguages","config","languageOverlay","icons","noHeader","spinner","appendTo","cancel","Promise","all","ImageCarousel","moduleLoader","mfExtend","time","View","PageGateway","Browser","Button","Icon","ReferencesGateway","ReferencesHtmlScraperGateway","Page","currentPage","PageHTMLParser","currentPageHTMLParser","Skin","OverlayManager","loadingOverlay","Drawer","CtaDrawer","showOnPageReload","toast","Watchstar","categoryOverlay","eventBusSingleton","Toggler","toc","TableOfContents","parseHTML","references","search","SearchOverlay","MobileWebSearchLogger","SearchGateway","lazyImages","lazyImageLoader","mediaViewer","amcOutreach","Section","mobileFrontend","define","getReference","ERROR_NOT_EXIST","ERROR_OTHER","apply","arguments","EXTERNAL_LINK_CLASS","getReferenceFromContainer","id","$container","$ol","$parent","result","escapeSelector","substr","length","closest","hasClass","parent","addClass","resolve","text","getReferenceHtml","parentText","promise","$reference","first","html","page","pageHTMLParser","decodeURIComponent","makeOnNestedReferenceClickHandler","onNestedReferenceClick","ev","target","tagName","getAttribute","textContent","referenceDrawer","props","errorIcon","error","isSmall","extend","showCollapseIcon","events","children","modifier","showReference","refNumber","gateway","onShowNestedReference","reference","drawer","nestedDrawer","log","warn","document","body","appendChild","hide","show","err","userSessionToken","searchSessionToken","_newUserSession","user","generateRandomSessionId","_newSearchSession","searchSessionCreatedAt","Date","getTime","onSearchShow","onSearchStart","track","action","timeOffsetSinceStart","onSearchResults","event","resultSetType","numberOfResults","results","timeToDisplayResults","onSearchResultClick","clickIndex","resultIndex","register","searchOverlay","logger","on","bind","SearchHeaderView","value","onInput","clearIcon","click","val","trigger","template","searchHeader","SearchResultsView","WatchstarPageList","params","placeholderMsg","performSearch","headerChrome","isBorderBox","stopPropagation","call","gatewayClass","router","onClickSearchContent","getDocument","$form","attr","type","setTimeout","onClickOverlayContent","hideKeyboardOnScroll","$input","onClickResult","$link","currentTarget","$result","emit","$results","index","originalEvent","preventDefault","back","window","location","postRender","timer","self","searchResults","searchContentLabel","noResultsMsg","searchContentNoResultsMsg","message","parse","clearSearch","$spinner","clearTimeout","$searchContent","$resultContainer","searchData","delay","showKeyboard","len","setSelectionRange","isCached","lastQuery","_pendingQuery","abort","xhr","toggleClass","filter","funnel","pages","el","resetSearch","feedback","prompt","feedbackLink","formHeader"],"mappings":"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","file":"mobile.startup.js","sourcesContent":["var util = require( './util.js' ),\n\tactionParams = require( './actionParams' );\n\n/**\n * API for providing language data.\n *\n * @class LanguageInfo\n * @param {mw.Api} api\n */\nfunction LanguageInfo( api ) {\n\tthis.api = api;\n}\n\nLanguageInfo.prototype = {\n\n\t/**\n\t * Get languageinfo API data from the local wiki, and transform it into a\n\t * format usable by LanguageSearcher.\n\t *\n\t * @memberof LanguageInfo\n\t * @instance\n\t * @returns {jQuery.Deferred}\n\t */\n\tgetLanguages: function () {\n\t\treturn this.api.get( actionParams( {\n\t\t\tmeta: 'languageinfo',\n\t\t\tliprop: 'code|autonym|name'\n\t\t} ) ).then( function ( resp ) {\n\t\t\treturn {\n\t\t\t\tlanguages: Object.keys( resp.query.languageinfo ).map( function ( key ) {\n\t\t\t\t\tvar data = resp.query.languageinfo[key];\n\t\t\t\t\tdata.url = '#';\n\t\t\t\t\tdata.lang = data.code;\n\t\t\t\t\tdata.langname = data.name;\n\t\t\t\t\treturn data;\n\t\t\t\t} )\n\t\t\t};\n\t\t}, function () {\n\t\t\treturn util.Deferred().reject();\n\t\t} );\n\t}\n};\n\nmodule.exports = LanguageInfo;\n","var\n\tOverlay = require( './Overlay' ),\n\tpromisedView = require( './promisedView' ),\n\tAnchor = require( './Anchor' ),\n\tm = require( './moduleLoaderSingleton' ),\n\theader = require( './headers' ).header;\n\n/**\n * Gets an overlay for displaying categories\n *\n * @param {Object} options Configuration options\n * @param {string} options.title of page to obtain categories for\n * @param {mw.Api} options.api for usage in CategoryTabs\n * @param {OO.EventEmitter} options.eventBus Object used to listen for category-added\n * and scroll:throttled events\n * @return {Overlay}\n */\nfunction categoryOverlay( options ) {\n\tvar overlay, widget;\n\toverlay = new Overlay( {\n\t\tclassName: 'category-overlay overlay',\n\t\theaders: [\n\t\t\theader(\n\t\t\t\tmw.msg( 'mobile-frontend-categories-heading' ),\n\t\t\t\toptions.isAnon ? [] : [\n\t\t\t\t\tnew Anchor( {\n\t\t\t\t\t\thref: '#/categories/add',\n\t\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-categories-add' ),\n\t\t\t\t\t\tadditionalClassNames: 'add continue'\n\t\t\t\t\t} )\n\t\t\t\t]\n\t\t\t)\n\t\t]\n\t} );\n\n\twidget = promisedView(\n\t\tmw.loader.using( 'mobile.categories.overlays' ).then( function () {\n\t\t\tvar categories = m.require( 'mobile.categories.overlays' ),\n\t\t\t\tCategoryTabs = categories.CategoryTabs;\n\n\t\t\treturn new CategoryTabs(\n\t\t\t\t{\n\t\t\t\t\teventBus: options.eventBus,\n\t\t\t\t\tapi: options.api,\n\t\t\t\t\ttitle: options.title\n\t\t\t\t}\n\t\t\t);\n\t\t} )\n\t);\n\toverlay.$el.find( '.overlay-content' ).append( widget.$el );\n\treturn overlay;\n}\n\nmodule.exports = categoryOverlay;\n","/**\n * Return the language code of the device in lowercase\n *\n * @ignore\n * @param {window.navigator} navigator\n * @return {string|undefined}\n */\nfunction getDeviceLanguage( navigator ) {\n\tconst lang = navigator.languages ?\n\t\tnavigator.languages[ 0 ] :\n\t\tnavigator.language || navigator.userLanguage ||\n\t\t\t\tnavigator.browserLanguage || navigator.systemLanguage;\n\n\treturn lang ? lang.toLowerCase() : undefined;\n}\n\nmodule.exports = getDeviceLanguage;\n","const\n\tm = require( '../moduleLoaderSingleton' ),\n\tgetDeviceLanguage = require( './getDeviceLanguage' ),\n\tOverlay = require( '../Overlay' ),\n\tpromisedView = require( '../promisedView' );\n\n/**\n * @ignore\n * @param {LanguageInfo} languageInfo\n * @return {jQuery.Promise} Resolves to LanguageSearcher\n */\nfunction loadLanguageInfoSearcher( languageInfo ) {\n\treturn mw.loader.using( 'mobile.languages.structured' ).then( function () {\n\t\treturn languageInfo.getLanguages();\n\t} ).then( function ( data ) {\n\t\tconst LanguageSearcher = m.require( 'mobile.languages.structured/LanguageSearcher' );\n\t\t// TODO: The jQuery ULS tool also allows searching for languages\n\t\t// by their name in the local language (e.g. if you are using\n\t\t// English and want to select español, you can also type \"Spanish\".\n\t\t// That would be nice to allow here as well, but would require 1)\n\t\t// detection of the availability of the `languagesearch` API and\n\t\t// 2) incorporating that into the LanguageSearcher filterLanguages()\n\t\t// method, and 3) it might also be necessary to obtain the languages\n\t\t// to pass to the search from a new API method in ULS extension which\n\t\t// returns the raw or lightly-transformed output of\n\t\t// LanguageNameSearchData::$buckets\n\t\treturn new LanguageSearcher( {\n\t\t\tlanguages: data.languages,\n\t\t\tvariants: data.variants,\n\t\t\tdeviceLanguage: getDeviceLanguage( navigator )\n\t\t} );\n\n\t} );\n}\n\n/**\n * Factory function that returns a language info featured instance of an Overlay\n *\n * @param {LanguageInfo} languageInfo\n * @return {Overlay}\n */\nfunction languageInfoOverlay( languageInfo ) {\n\treturn Overlay.make(\n\t\t{\n\t\t\theading: mw.msg( 'mobile-frontend-language-heading' ),\n\t\t\tclassName: 'overlay language-info-overlay'\n\t\t}, promisedView( loadLanguageInfoSearcher( languageInfo ) )\n\t);\n}\n\n// To make knowing when async logic has resolved easier in tests\nlanguageInfoOverlay.test = {\n\tloadLanguageInfoSearcher: loadLanguageInfoSearcher\n};\n\nmodule.exports = languageInfoOverlay;\n","const\n\tm = require( '../moduleLoaderSingleton' ),\n\tgetDeviceLanguage = require( './getDeviceLanguage' ),\n\tOverlay = require( '../Overlay' ),\n\tpromisedView = require( '../promisedView' );\n\n/**\n * @ignore\n * @param {PageGateway} pageGateway\n * getPageLanguages API call.\n * @return {jQuery.Promise} Resolves to LanguageSearcher\n */\nfunction loadLanguageSearcher( pageGateway ) {\n\treturn mw.loader.using( 'mobile.languages.structured' ).then( function () {\n\t\treturn pageGateway.getPageLanguages( mw.config.get( 'wgPageName' ), mw.config.get( 'wgUserLanguage' ) );\n\t} ).then( function ( data ) {\n\t\tconst LanguageSearcher = m.require( 'mobile.languages.structured/LanguageSearcher' );\n\n\t\treturn new LanguageSearcher( {\n\t\t\tlanguages: data.languages,\n\t\t\tvariants: data.variants,\n\t\t\tdeviceLanguage: getDeviceLanguage( navigator )\n\t\t} );\n\n\t} );\n}\n\n/**\n * Factory function that returns a language featured instance of an Overlay\n *\n * @param {PageGateway} pageGateway\n * @return {Overlay}\n */\nfunction languageOverlay( pageGateway ) {\n\treturn Overlay.make(\n\t\t{\n\t\t\theading: mw.msg( 'mobile-frontend-language-heading' ),\n\t\t\tclassName: 'overlay language-overlay'\n\t\t}, promisedView( loadLanguageSearcher( pageGateway ) )\n\t);\n}\n\n// To make knowing when async logic has resolved easier in tests\nlanguageOverlay.test = {\n\tloadLanguageSearcher: loadLanguageSearcher\n};\n\nmodule.exports = languageOverlay;\n","var\n\ticons = require( './icons' ),\n\tOverlay = require( './Overlay' );\n\n/**\n * Overlay that initially shows loading animation until\n * caller hides it with .hide()\n *\n * @return {Overlay}\n */\nfunction loadingOverlay() {\n\tvar overlay = new Overlay( {\n\t\tclassName: 'overlay overlay-loading',\n\t\tnoHeader: true\n\t} );\n\ticons.spinner().$el.appendTo( overlay.$el.find( '.overlay-content' ) );\n\treturn overlay;\n}\n\nmodule.exports = loadingOverlay;\n","var m = require( '../moduleLoaderSingleton' ),\n\tpromisedView = require( '../promisedView' ),\n\tutil = require( '../util' ),\n\theader = require( '../headers' ).header,\n\ticons = require( '../icons' ),\n\tOverlay = require( '../Overlay' );\n\n/**\n * Produce an overlay for mediaViewer\n *\n * @param {Object} options\n * @return {Overlay}\n */\nfunction mediaViewerOverlay( options ) {\n\tvar overlay = Overlay.make(\n\t\t{\n\t\t\theaders: [\n\t\t\t\theader( '', [], icons.cancel( 'gray' ) )\n\t\t\t],\n\t\t\tclassName: 'overlay media-viewer'\n\t\t},\n\t\tpromisedView(\n\t\t\tutil.Promise.all( [\n\t\t\t\tmw.loader.using( 'mobile.mediaViewer' )\n\t\t\t] ).then( function () {\n\t\t\t\tvar ImageCarousel = m.require( 'mobile.mediaViewer' ).ImageCarousel;\n\t\t\t\treturn new ImageCarousel( options );\n\t\t\t} )\n\t\t)\n\t);\n\n\treturn overlay;\n}\n\nmodule.exports = mediaViewerOverlay;\n","var\n\tmoduleLoader = require( './moduleLoaderSingleton' ),\n\tutil = require( './util' );\n\n// Expose the entry chunk through libraryTarget and library. This allows\n// arbitrary file access via ResourceLoader like\n// `mfModules['mobile.startup'].moduleLoader.require('mobile.startup/LoadingOverlay')`.\nmodule.exports = {\n\tmoduleLoader: moduleLoader,\n\tmfExtend: require( './mfExtend' ),\n\ttime: require( './time' ),\n\tutil,\n\theaders: require( './headers' ),\n\tView: require( './View' ),\n\tPageGateway: require( './PageGateway' ),\n\tLanguageInfo: require( './LanguageInfo' ),\n\tBrowser: require( './Browser' ),\n\tButton: require( './Button' ),\n\tIcon: require( './Icon' ),\n\tReferencesGateway: require( './references/ReferencesGateway' ),\n\tReferencesHtmlScraperGateway: require( './references/ReferencesHtmlScraperGateway' ),\n\ticons: require( './icons' ),\n\tPage: require( './Page' ),\n\tcurrentPage: require( './currentPage' ),\n\tPageHTMLParser: require( './PageHTMLParser' ),\n\tcurrentPageHTMLParser: require( './currentPageHTMLParser' ),\n\tAnchor: require( './Anchor' ),\n\tSkin: require( './Skin' ),\n\tOverlayManager: require( './OverlayManager' ),\n\tOverlay: require( './Overlay' ),\n\tloadingOverlay: require( './loadingOverlay' ),\n\tDrawer: require( './Drawer' ),\n\tCtaDrawer: require( './CtaDrawer' ),\n\tshowOnPageReload: require( './showOnPageReload' ),\n\t// For Minerva compatibility (access deprecated)\n\ttoast: require( './showOnPageReload' ),\n\tWatchstar: require( './watchstar/watchstar' ),\n\tcategoryOverlay: require( './categoryOverlay' ),\n\teventBusSingleton: require( './eventBusSingleton' ),\n\tpromisedView: require( './promisedView' ),\n\tToggler: require( './Toggler' ),\n\ttoc: {\n\t\t// In case any old version of Minerva is cached.\n\t\tTableOfContents: () => {\n\t\t\treturn {\n\t\t\t\t// in the unlikely event old Minerva code got loaded with new MF.\n\t\t\t\t$el: util.parseHTML( '<div>' )\n\t\t\t};\n\t\t}\n\t},\n\treferences: require( './references/references' ),\n\tsearch: {\n\t\tSearchOverlay: require( './search/SearchOverlay' ),\n\t\tMobileWebSearchLogger: require( './search/MobileWebSearchLogger' ),\n\t\tSearchGateway: require( './search/SearchGateway' )\n\t},\n\tlazyImages: {\n\t\tlazyImageLoader: require( './lazyImages/lazyImageLoader' )\n\t},\n\tlanguageOverlay: require( './languageOverlay/languageOverlay' ),\n\tlanguageInfoOverlay: require( './languageOverlay/languageInfoOverlay' ),\n\tmediaViewer: {\n\t\toverlay: require( './mediaViewer/overlay' )\n\t},\n\tamcOutreach: require( './amcOutreach/amcOutreach' ),\n\tSection: require( './Section' )\n};\n\nmw.mobileFrontend = moduleLoader;\n\n// Setup a single export for new modules to fold all of the above lines into.\n// One export to rule them all!\nmoduleLoader.define( 'mobile.startup', module.exports );\n","/**\n * Abstract base class\n * Gateway for retrieving references\n *\n * @class ReferencesGateway\n * @abstract\n *\n * @param {mw.Api} api\n */\nfunction ReferencesGateway( api ) {\n\tthis.api = api;\n}\n\n/**\n * Return the matched reference via API or DOM query\n *\n * @memberof ReferencesGateway\n * @instance\n * @param {string} id CSS selector\n * @param {Page} page to find reference for\n * @param {PageHTMLParser} pageHTMLParser\n * @return {jQuery.Promise} resolves with an Object representing reference\n *  with a `text` property\n *  The promise should be rejected with ReferenceGateway.ERROR_NOT_EXIST:\n *  if the reference is not found.\n *  If for some reason locating the reference fails return ReferenceGateway.ERROR_OTHER.\n */\nReferencesGateway.prototype.getReference = null;\n\n/**\n * @memberof ReferencesGateway\n * @property ERROR_NOT_EXIST error code to be returned by getReference\n *  when a reference does not exist.\n */\nReferencesGateway.ERROR_NOT_EXIST = 'NOT_EXIST_ERROR';\n/**\n * @memberof ReferencesGateway\n * @property ERROR_OTHER error code to be returned by getReference\n *  under any other circumstance not covered\n *  by ERROR_NOT_EXIST. It should be used if it is unclear whether a reference exists or not.\n */\nReferencesGateway.ERROR_OTHER = 'OTHER_ERROR';\n\nmodule.exports = ReferencesGateway;\n","var ReferencesGateway = require( './ReferencesGateway' ),\n\tmfExtend = require( './../mfExtend' ),\n\tutil = require( './../util' );\n\n/**\n * Gateway for retrieving references via the content of the Page\n *\n * @class ReferencesHtmlScraperGateway\n * @extends ReferencesGateway\n * @inheritdoc\n */\nfunction ReferencesHtmlScraperGateway() {\n\tReferencesGateway.apply( this, arguments );\n}\n\nmfExtend( ReferencesHtmlScraperGateway, ReferencesGateway, {\n\t/**\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @property EXTERNAL_LINK_CLASS a CSS class to place on external links\n\t * in addition to the default 'external' class.\n\t */\n\tEXTERNAL_LINK_CLASS: 'external--reference',\n\t/**\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @instance\n\t * @param {string} id of a DOM element in the page with '#' prefix.\n\t *  can be encoded or decoded.\n\t * @param {jQuery.Object} $container to scan for an element\n\t * @return {jQuery.Promise} that can be used by getReference\n\t */\n\tgetReferenceFromContainer: function ( id, $container ) {\n\t\tvar $el, $ol, $parent,\n\t\t\tresult = util.Deferred();\n\n\t\t$el = $container.find( '#' + util.escapeSelector( id.substr( 1 ) ) );\n\t\tif ( $el.length ) {\n\t\t\t// This finds either the inner <ol class=\"mw-extended-references\">, or the outer\n\t\t\t// <ol class=\"references\">\n\t\t\t$ol = $el.closest( 'ol' );\n\t\t\tif ( $ol.hasClass( 'mw-extended-references' ) ) {\n\t\t\t\t$parent = $ol.parent();\n\t\t\t}\n\t\t\t// The following classes are used here:\n\t\t\t// * external--reference\n\t\t\t// * other values of EXTERNAL_LINK_CLASS in sub-classes\n\t\t\t( $parent || $el ).find( '.external' ).addClass( this.EXTERNAL_LINK_CLASS );\n\t\t\tresult.resolve( {\n\t\t\t\ttext: this.getReferenceHtml( $el ),\n\t\t\t\tparentText: this.getReferenceHtml( $parent )\n\t\t\t} );\n\t\t} else {\n\t\t\tresult.reject( ReferencesGateway.ERROR_NOT_EXIST );\n\t\t}\n\t\treturn result.promise();\n\t},\n\t/**\n\t * @param {jQuery.Object|undefined} $reference\n\t * @returns {string}\n\t */\n\tgetReferenceHtml: function ( $reference ) {\n\t\treturn $reference ?\n\t\t\t$reference.find( '.mw-reference-text, .reference-text' ).first().html() :\n\t\t\t'';\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @instance\n\t * @param {string} id\n\t * @param {Page} page\n\t * @param {PageHTMLParser} pageHTMLParser\n\t */\n\tgetReference: function ( id, page, pageHTMLParser ) {\n\t\t// If an id is not found it's possible the id passed needs decoding (per T188547).\n\t\treturn this.getReferenceFromContainer( decodeURIComponent( id ), pageHTMLParser.$el.find( 'ol.references' ) );\n\t}\n} );\n\nmodule.exports = ReferencesHtmlScraperGateway;\n","var references,\n\tDrawer = require( '../Drawer' ),\n\tutil = require( '../util' ),\n\ticons = require( '../icons' ),\n\tReferencesGateway = require( './ReferencesGateway' ),\n\tIcon = require( '../Icon' );\n\n/**\n * Create a callback for clicking references\n *\n * @param {Function} onNestedReferenceClick\n * @return {Function}\n */\nfunction makeOnNestedReferenceClickHandler( onNestedReferenceClick ) {\n\treturn ( ev ) => {\n\t\tconst target = ev.target;\n\t\tif ( target.tagName === 'A' ) {\n\t\t\tonNestedReferenceClick(\n\t\t\t\ttarget.getAttribute( 'href' ),\n\t\t\t\ttarget.textContent\n\t\t\t);\n\t\t\t// Don't hide the already shown drawer via propagation\n\t\t\t// and stop default scroll behaviour.\n\t\t\treturn false;\n\t\t}\n\t};\n}\n\n/**\n * Drawer for references\n *\n * @uses Icon\n * @param {Object} props\n * @param {boolean} [props.error] whether an error has occurred\n * @param {string} props.title of reference e.g [1]\n * @param {string} props.text is the HTML of the reference\n * @param {string} [props.parentText] is the HTML of the parent reference if there is one\n * @param {Function} [props.onNestedReferenceClick] callback for when a reference\n *  inside the reference is clicked.\n * @return {Drawer}\n */\nfunction referenceDrawer( props ) {\n\tconst errorIcon = props.error ? new Icon( {\n\t\tname: 'error',\n\t\tisSmall: true\n\t} ).$el : null;\n\treturn new Drawer(\n\t\tutil.extend(\n\t\t\t{\n\t\t\t\tshowCollapseIcon: false,\n\t\t\t\tclassName: 'drawer position-fixed text references-drawer',\n\t\t\t\tevents: {\n\t\t\t\t\t'click sup': props.onNestedReferenceClick &&\n\t\t\t\t\t\tmakeOnNestedReferenceClickHandler( props.onNestedReferenceClick )\n\t\t\t\t},\n\t\t\t\tchildren: [\n\t\t\t\t\tutil.parseHTML( '<div>' )\n\t\t\t\t\t\t.addClass( 'references-drawer__header' )\n\t\t\t\t\t\t.append( [\n\t\t\t\t\t\t\tnew Icon( {\n\t\t\t\t\t\t\t\tisSmall: true,\n\t\t\t\t\t\t\t\tname: 'reference',\n\t\t\t\t\t\t\t\tmodifier: ''\n\t\t\t\t\t\t\t} ).$el,\n\t\t\t\t\t\t\tutil.parseHTML( '<span>' ).addClass( 'references-drawer__title' ).text( mw.msg( 'mobile-frontend-references-citation' ) ),\n\t\t\t\t\t\t\ticons.cancel( 'gray', {\n\t\t\t\t\t\t\t\tisSmall: true,\n\t\t\t\t\t\t\t\tmodifier: 'mw-ui-icon-element mw-ui-icon-flush-right'\n\t\t\t\t\t\t\t} ).$el\n\t\t\t\t\t\t] ),\n\t\t\t\t\t// Add .mw-parser-output so that TemplateStyles styles apply (T244510)\n\t\t\t\t\tutil.parseHTML( '<div>' ).addClass( 'mw-parser-output' ).append( [\n\t\t\t\t\t\terrorIcon,\n\t\t\t\t\t\tprops.parentText ?\n\t\t\t\t\t\t\tutil.parseHTML( '<div>' ).html( props.parentText ) :\n\t\t\t\t\t\t\t'',\n\t\t\t\t\t\tutil.parseHTML( '<sup>' ).text( props.title ),\n\t\t\t\t\t\tprops.text ?\n\t\t\t\t\t\t\tutil.parseHTML( '<span>' ).html( ' ' + props.text ) :\n\t\t\t\t\t\t\ticons.spinner().$el\n\t\t\t\t\t] )\n\t\t\t\t]\n\t\t\t},\n\t\t\tprops\n\t\t)\n\t);\n}\n\nreferences = {\n\ttest: {\n\t\tmakeOnNestedReferenceClickHandler\n\t},\n\treferenceDrawer,\n\t/**\n\t * Fetch and render nested reference upon click\n\t *\n\t * @param {string} id of the reference to be retrieved\n\t * @param {Page} page to locate reference for\n\t * @param {string} refNumber the number it identifies as in the page\n\t * @param {PageHTMLParser} pageHTMLParser\n\t * @param {Gateway} gateway\n\t * @param {Object} props for referenceDrawer\n\t * @param {Function} onShowNestedReference function call when a nested reference is triggered.\n\t * @return {jQuery.Deferred}\n\t */\n\tshowReference: function ( id, page, refNumber, pageHTMLParser, gateway, props,\n\t\tonShowNestedReference\n\t) {\n\t\treturn gateway.getReference( id, page, pageHTMLParser ).then( function ( reference ) {\n\t\t\tconst drawer = referenceDrawer( util.extend( {\n\t\t\t\ttitle: refNumber,\n\t\t\t\ttext: reference.text,\n\t\t\t\tparentText: reference.parentText,\n\t\t\t\tonNestedReferenceClick: function ( href, text ) {\n\t\t\t\t\treferences.showReference(\n\t\t\t\t\t\thref,\n\t\t\t\t\t\tpage,\n\t\t\t\t\t\ttext,\n\t\t\t\t\t\tpageHTMLParser,\n\t\t\t\t\t\tgateway\n\t\t\t\t\t).then( ( nestedDrawer ) => {\n\t\t\t\t\t\tif ( props.onShowNestedReference ) {\n\t\t\t\t\t\t\tonShowNestedReference( drawer, nestedDrawer );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmw.log.warn( 'Please provide onShowNestedReferences parameter.' );\n\t\t\t\t\t\t\tdocument.body.appendChild( nestedDrawer.$el[ 0 ] );\n\t\t\t\t\t\t\tdrawer.hide();\n\t\t\t\t\t\t\tnestedDrawer.show();\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}, props ) );\n\t\t\treturn drawer;\n\t\t}, function ( err ) {\n\t\t\t// If non-existent reference nothing to do.\n\t\t\tif ( err === ReferencesGateway.ERROR_NOT_EXIST ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn referenceDrawer( {\n\t\t\t\terror: true,\n\t\t\t\ttitle: refNumber,\n\t\t\t\ttext: mw.msg( 'mobile-frontend-references-citation-error' )\n\t\t\t} );\n\t\t} );\n\t}\n};\n\nmodule.exports = references;\n","/**\n * Coordinates the logging of MobileWebSchema events.\n * Implements schema defined at https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n *\n * @class\n */\nfunction MobileWebSearchLogger() {\n\tthis.userSessionToken = null;\n\tthis.searchSessionToken = null;\n}\n\nMobileWebSearchLogger.prototype = {\n\t/**\n\t * Sets the internal state required to deal with logging user session\n\t * data.\n\t *\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newUserSession: function () {\n\t\tthis.userSessionToken = mw.user.generateRandomSessionId();\n\t},\n\n\t/**\n\t * Sets the internal state required to deal with logging search session\n\t * data.\n\t *\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newSearchSession: function () {\n\t\tthis.searchSessionToken = mw.user.generateRandomSessionId();\n\t\tthis.searchSessionCreatedAt = new Date().getTime();\n\t},\n\n\t/**\n\t * Handles the 'search-show' event.\n\t *\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchShow: function () {\n\t\tthis._newUserSession();\n\t},\n\n\t/**\n\t * Handles the 'search-start' event.\n\t *\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchStart: function () {\n\t\tthis._newSearchSession();\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'session-start',\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: 0\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-results' event.\n\t *\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {Object[]} event.results\n\t */\n\tonSearchResults: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'impression-results',\n\t\t\tresultSetType: 'prefix',\n\t\t\tnumberOfResults: event.results.length,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\t// FIXME: Unless I'm mistaken, the timeToDisplayResults\n\t\t\t// property isn't necessary.\n\t\t\ttimeToDisplayResults: timeOffsetSinceStart,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-result-click' event.\n\t *\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {number} event.index\n\t *  The zero-based index of the result in the set of results.\n\t */\n\tonSearchResultClick: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'click-result',\n\t\t\t// NOTE: clickIndex is 1-based.\n\t\t\tclickIndex: event.resultIndex + 1,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t}\n};\n\n/**\n * Convenience function that wires up an instance of the\n * MobileWebSearchLogger class to the search-* events emitted by the\n * search overlay.\n *\n * @memberof MobileWebSearchLogger\n * @param {SearchOverlay} searchOverlay\n */\nMobileWebSearchLogger.register = function ( searchOverlay ) {\n\tvar logger = new MobileWebSearchLogger();\n\n\tsearchOverlay.on( 'search-show', logger.onSearchShow.bind( logger ) );\n\tsearchOverlay.on( 'search-start', logger.onSearchStart.bind( logger ) );\n\tsearchOverlay.on( 'search-results', logger.onSearchResults.bind( logger ) );\n\tsearchOverlay.on( 'search-result-click', logger.onSearchResultClick.bind( logger ) );\n};\n\nmodule.exports = MobileWebSearchLogger;\n","const util = require( '../util' ),\n\tView = require( '../View' ),\n\tIcon = require( '../Icon' );\n\n/**\n * @extends View\n */\nclass SearchHeaderView extends View {\n\t/**\n\t * constructor\n\t *\n\t * @inheritdoc\n\t * @param {Object} props\n\t * @param {Function} props.onInput executed every time input changes\n\t * @param {string} props.placeholderMsg\n\t * @param {string} props.action\n\t * @param {string} [props.searchTerm] default\n\t */\n\tconstructor( props ) {\n\t\tsuper(\n\t\t\tutil.extend( {}, props, {\n\t\t\t\tevents: {\n\t\t\t\t\t'input input': 'onInput'\n\t\t\t\t}\n\t\t\t} )\n\t\t);\n\t}\n\t/** @inheritdoc */\n\tonInput( ev ) {\n\t\tconst query = ev.target.value;\n\t\tthis.options.onInput( query );\n\t\tif ( query ) {\n\t\t\tthis.clearIcon.$el.show();\n\t\t} else {\n\t\t\tthis.clearIcon.$el.hide();\n\t\t}\n\t}\n\t/** @inheritdoc */\n\tget isTemplateMode() {\n\t\treturn true;\n\t}\n\t/** @inheritdoc */\n\tget template() {\n\t\treturn util.template( `<div class=\"overlay-title search-header-view\">\n\t\t<form method=\"get\" action=\"{{action}}\" class=\"search-box\">\n\t\t<input class=\"search\" type=\"search\" name=\"search\" autocomplete=\"off\" placeholder=\"{{placeholderMsg}}\" aria-label=\"{{placeholderMsg}}\" value=\"{{searchTerm}}\">\n\t\t</form>\n</div>` );\n\t}\n\t/** @inheritdoc */\n\tpostRender() {\n\t\tconst clearIcon = new Icon( {\n\t\t\ttagName: 'button',\n\t\t\tname: 'clear',\n\t\t\tisSmall: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-clear-search' ),\n\t\t\tadditionalClassNames: 'clear',\n\t\t\tevents: {\n\t\t\t\tclick: function () {\n\t\t\t\t\tthis.$el.find( 'input' ).val( '' ).trigger( 'focus' );\n\t\t\t\t\tthis.options.onInput( '' );\n\t\t\t\t\tclearIcon.$el.hide();\n\t\t\t\t\t// In beta the clear button is on top of the search input.\n\t\t\t\t\t// Stop propagation so that the input doesn't receive the click.\n\t\t\t\t\treturn false;\n\t\t\t\t}.bind( this )\n\t\t\t}\n\t\t} );\n\t\tthis.clearIcon = clearIcon;\n\t\tclearIcon.$el.hide();\n\t\tthis.$el.find( 'form' ).append( clearIcon.$el );\n\t}\n}\n\nmodule.exports = SearchHeaderView;\n","var\n\tmfExtend = require( '../mfExtend' ),\n\tOverlay = require( '../Overlay' ),\n\tutil = require( '../util' ),\n\tsearchHeader = require( './searchHeader' ),\n\tSearchResultsView = require( './SearchResultsView' ),\n\tWatchstarPageList = require( '../watchstar/WatchstarPageList' ),\n\tSEARCH_DELAY = 300,\n\tSEARCH_SPINNER_DELAY = 2000;\n\n/**\n * Overlay displaying search results\n *\n * @class SearchOverlay\n * @extends Overlay\n * @uses SearchGateway\n * @uses Icon\n *\n * @param {Object} params Configuration options\n * @param {string} params.placeholderMsg Search input placeholder text.\n * @param {string} [params.action] of form defaults to the value of wgScript\n * @param {SearchGateway} [params.gateway]\n * @fires SearchOverlay#search-show\n * @fires SearchOverlay#search-start\n * @fires SearchOverlay#search-results\n * @fires SearchOverlay#search-result-click\n */\nfunction SearchOverlay( params ) {\n\tvar header = searchHeader(\n\t\t\tparams.placeholderMsg,\n\t\t\tparams.action || mw.config.get( 'wgScript' ),\n\t\t\tfunction ( query ) {\n\t\t\t\tthis.performSearch( query );\n\t\t\t}.bind( this )\n\t\t),\n\t\toptions = util.extend( true, {\n\t\t\theaderChrome: true,\n\t\t\tisBorderBox: false,\n\t\t\tclassName: 'overlay search-overlay',\n\t\t\theaders: [ header ],\n\t\t\tevents: {\n\t\t\t\t'click .search-content': 'onClickSearchContent',\n\t\t\t\t'click .overlay-content': 'onClickOverlayContent',\n\t\t\t\t'click .overlay-content > div': function ( ev ) {\n\t\t\t\t\tev.stopPropagation();\n\t\t\t\t},\n\t\t\t\t'touchstart .results': 'hideKeyboardOnScroll',\n\t\t\t\t'mousedown .results': 'hideKeyboardOnScroll',\n\t\t\t\t'click .results a': 'onClickResult'\n\t\t\t}\n\t\t},\n\t\tparams );\n\n\tthis.header = header;\n\tOverlay.call( this, options );\n\n\tthis.api = options.api;\n\t// eslint-disable-next-line new-cap\n\tthis.gateway = options.gateway || new options.gatewayClass( this.api );\n\n\tthis.router = options.router;\n}\n\nmfExtend( SearchOverlay, Overlay, {\n\n\t/**\n\t * Initialize 'search within pages' functionality\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickSearchContent: function () {\n\t\tvar $el = util.getDocument().find( 'body' ),\n\t\t\t$form = this.$el.find( 'form' );\n\n\t\t// Add fulltext input to force fulltext search\n\t\tthis.parseHTML( '<input>' )\n\t\t\t.attr( {\n\t\t\t\ttype: 'hidden',\n\t\t\t\tname: 'fulltext',\n\t\t\t\tvalue: 'search'\n\t\t\t} )\n\t\t\t.appendTo( $form );\n\t\t// history.back queues a task so might run after this call. Thus we use setTimeout\n\t\t// http://www.w3.org/TR/2011/WD-html5-20110113/webappapis.html#queue-a-task\n\t\tsetTimeout( function () {\n\t\t\t// Firefox doesn't allow submission of a form not in the DOM\n\t\t\t// so temporarily re-add it\n\t\t\t$form.appendTo( $el );\n\t\t\t$form.trigger( 'submit' );\n\t\t}, 0 );\n\t},\n\n\t/**\n\t * Tapping on background only should hide the overlay\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickOverlayContent: function () {\n\t\tthis.$el.find( '.cancel' ).trigger( 'click' );\n\t},\n\n\t/**\n\t * Hide the keyboard when scrolling starts (avoid weird situation when\n\t * user taps on an item, the keyboard hides and wrong item is clicked).\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\thideKeyboardOnScroll: function () {\n\t\tthis.$input.trigger( 'blur' );\n\t},\n\n\t/**\n\t * Handle the user clicking a result.\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonClickResult: function ( ev ) {\n\t\tvar $link = this.$el.find( ev.currentTarget ),\n\t\t\t$result = $link.closest( 'li' );\n\t\t/**\n\t\t * Fired when the user clicks a search result\n\t\t *\n\t\t * @event SearchOverlay#search-result-click\n\t\t * @type {Object}\n\t\t * @property {jQuery.Object} result The jQuery-wrapped DOM element that\n\t\t *  the user clicked\n\t\t * @property {number} resultIndex The zero-based index of the\n\t\t *  result in the set of results\n\t\t * @property {jQuery.Event} originalEvent The original event\n\t\t */\n\t\tthis.emit( 'search-result-click', {\n\t\t\tresult: $result,\n\t\t\tresultIndex: this.$results.index( $result ),\n\t\t\toriginalEvent: ev\n\t\t} );\n\n\t\t// FIXME: ugly hack that removes search from browser history\n\t\t// when navigating to search results\n\t\tev.preventDefault();\n\t\tthis.router.back().then( function () {\n\t\t\t// Router.navigate does not support changing href.\n\t\t\t// FIXME: Needs upstream change T189173\n\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\twindow.location.href = $link.attr( 'href' );\n\t\t} );\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this,\n\t\t\tsearchResults = new SearchResultsView( {\n\t\t\t\tsearchContentLabel: mw.msg( 'mobile-frontend-search-content' ),\n\t\t\t\tnoResultsMsg: mw.msg( 'mobile-frontend-search-no-results' ),\n\t\t\t\tsearchContentNoResultsMsg: mw.message( 'mobile-frontend-search-content-no-results' ).parse()\n\t\t\t} ),\n\t\t\ttimer;\n\n\t\tthis.$el.find( '.overlay-content' ).append( searchResults.$el );\n\t\tOverlay.prototype.postRender.call( this );\n\n\t\t// FIXME: `this.$input` should not be set. Isolate to searchHeader function\n\t\tthis.$input = this.$el.find( this.header ).find( 'input' );\n\t\t// FIXME: `this.$searchContent` should not be set. Isolate to SearchResultsView class.\n\t\tthis.$searchContent = searchResults.$el.hide();\n\t\t// FIXME: `this.$resultContainer` should not be set. Isolate to SearchResultsView class.\n\t\tthis.$resultContainer = searchResults.$el.find( '.results-list-container' );\n\n\t\t/**\n\t\t * Hide the spinner and abort timed spinner shows.\n\t\t * FIXME: Given this manipulates SearchResultsView this should be moved into that class\n\t\t */\n\t\tfunction clearSearch() {\n\t\t\tself.$spinner.hide();\n\t\t\tclearTimeout( timer );\n\t\t}\n\n\t\t// Show a spinner on top of search results\n\t\t// FIXME: Given this manipulates SearchResultsView this should be moved into that class\n\t\tthis.$spinner = searchResults.$el.find( '.spinner-container' );\n\t\tthis.on( 'search-start', function ( searchData ) {\n\t\t\tif ( timer ) {\n\t\t\t\tclearSearch();\n\t\t\t}\n\t\t\ttimer = setTimeout( function () {\n\t\t\t\tself.$spinner.show();\n\t\t\t}, SEARCH_SPINNER_DELAY - searchData.delay );\n\t\t} );\n\t\tthis.on( 'search-results', clearSearch );\n\t},\n\n\t/**\n\t * Trigger a focus() event on search input in order to\n\t * bring up the virtual keyboard.\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshowKeyboard: function () {\n\t\tvar len = this.$input.val().length;\n\t\tthis.$input.trigger( 'focus' );\n\t\t// Cursor to the end of the input\n\t\tif ( this.$input[0].setSelectionRange ) {\n\t\t\tthis.$input[0].setSelectionRange( len, len );\n\t\t}\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\t// Overlay#show defines the actual overlay visibility.\n\t\tOverlay.prototype.show.apply( this, arguments );\n\n\t\tthis.showKeyboard();\n\t\t/**\n\t\t * Fired after the search overlay is shown\n\t\t *\n\t\t * @event SearchOverlay#search-show\n\t\t */\n\t\tthis.emit( 'search-show' );\n\t},\n\n\t/**\n\t * Perform search and render results inside current view.\n\t * FIXME: Much of the logic for caching and pending queries inside this function should\n\t * actually live in SearchGateway, please move out.\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {string} query\n\t */\n\tperformSearch: function ( query ) {\n\t\tvar\n\t\t\tself = this,\n\t\t\tapi = this.api,\n\t\t\tdelay = this.gateway.isCached( query ) ? 0 : SEARCH_DELAY;\n\n\t\t// it seems the input event can be fired when virtual keyboard is closed\n\t\t// (Chrome for Android)\n\t\tif ( query !== this.lastQuery ) {\n\t\t\tif ( self._pendingQuery ) {\n\t\t\t\tself._pendingQuery.abort();\n\t\t\t}\n\t\t\tclearTimeout( this.timer );\n\n\t\t\tif ( query.length ) {\n\t\t\t\tthis.timer = setTimeout( function () {\n\t\t\t\t\tvar xhr;\n\t\t\t\t\t/**\n\t\t\t\t\t * Fired immediately before the search API request is sent\n\t\t\t\t\t *\n\t\t\t\t\t * @event SearchOverlay#search-start\n\t\t\t\t\t * @property {Object} data related to the current search\n\t\t\t\t\t */\n\t\t\t\t\tself.emit( 'search-start', {\n\t\t\t\t\t\tquery: query,\n\t\t\t\t\t\tdelay: delay\n\t\t\t\t\t} );\n\n\t\t\t\t\txhr = self.gateway.search( query );\n\t\t\t\t\tself._pendingQuery = xhr.then( function ( data ) {\n\t\t\t\t\t\t// FIXME: Given this manipulates SearchResultsView\n\t\t\t\t\t\t// this should be moved into that class\n\t\t\t\t\t\t// check if we're getting the rights response in case of out of\n\t\t\t\t\t\t// order responses (need to get the current value of the input)\n\t\t\t\t\t\tif ( data && data.query === self.$input.val() ) {\n\t\t\t\t\t\t\tself.$el.toggleClass( 'no-results', data.results.length === 0 );\n\t\t\t\t\t\t\tself.$searchContent\n\t\t\t\t\t\t\t\t.show()\n\t\t\t\t\t\t\t\t.find( 'p' )\n\t\t\t\t\t\t\t\t.hide()\n\t\t\t\t\t\t\t\t.filter( data.results.length ? '.with-results' : '.without-results' )\n\t\t\t\t\t\t\t\t.show();\n\n\t\t\t\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\t\t\t\tnew WatchstarPageList( {\n\t\t\t\t\t\t\t\tapi: api,\n\t\t\t\t\t\t\t\tfunnel: 'search',\n\t\t\t\t\t\t\t\tpages: data.results,\n\t\t\t\t\t\t\t\tel: self.$resultContainer\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\tself.$results = self.$resultContainer.find( 'li' );\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Fired when search API returns results\n\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t * @event SearchOverlay#search-results\n\t\t\t\t\t\t\t * @type {Object}\n\t\t\t\t\t\t\t * @property {Object[]} results The results returned by the search\n\t\t\t\t\t\t\t *  API\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tself.emit( 'search-results', {\n\t\t\t\t\t\t\t\tresults: data.results\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ).promise( { abort: function () { xhr.abort(); } } );\n\t\t\t\t}, delay );\n\t\t\t} else {\n\t\t\t\tself.resetSearch();\n\t\t\t}\n\n\t\t\tthis.lastQuery = query;\n\t\t}\n\t},\n\t/**\n\t * Clear results\n\t *\n\t * @private\n\t */\n\tresetSearch: function () {\n\t\tthis.$el.find( '.overlay-content' ).children().hide();\n\t}\n} );\n\nmodule.exports = SearchOverlay;\n","const View = require( '../View' ),\n\tIcon = require( '../Icon' ),\n\tAnchor = require( '../Anchor' ),\n\ticons = require( '../icons' ),\n\t$spinner = icons.spinner().$el,\n\tutil = require( '../util' );\n\n/**\n * @class SearchResultsView\n * @extends View\n * @param {Object} options\n * @param {string} options.searchContentLabel actionable label to tell the user they can \"search\n *  within pages rather than doing a full text search\n * @param {string} options.noResultsMsg shows when no results displayed\n * @param {string} options.searchContentNoResultsMsg alternative to options.searchContentLabel that\n * shows when no search results have been displayed.\n */\nclass SearchResultsView extends View {\n\t/** @inheritdoc */\n\tget isTemplateMode() {\n\t\treturn true;\n\t}\n\t/** @inheritdoc */\n\tget template() {\n\t\treturn util.template( `\n<div class=\"search-results-view\">\n\t<div class=\"search-content overlay-header\">\n\t\t<ul>\n\t\t\t<li>{{! search content icon goes here }}</li>\n\t\t</ul>\n\t\t<div class=\"caption\">\n\t\t\t<p class=\"with-results\">{{searchContentLabel}}</p>\n\t\t\t<p class=\"without-results\">{{noResultsMsg}}</p>\n\t\t\t<p class=\"without-results\">{{{searchContentNoResultsMsg}}}</p>\n\t\t</div>\n\t</div>\n\t<div class=\"spinner-container position-fixed\"></div>\n\t<div class=\"results\">\n\t\t<div class=\"results-list-container\"></div>\n\t\t{{#feedback}}\n\t\t\t<div class=\"search-feedback\">\n\t\t\t\t{{prompt}}\n\t\t\t</div>\n\t\t{{/feedback}}\n\t</div>\n</div>`\n\t\t);\n\t}\n\t/** @inheritdoc */\n\tpreRender() {\n\t\tconst feedbackLink = mw.config.get( 'wgCirrusSearchFeedbackLink' );\n\t\tif ( feedbackLink ) {\n\t\t\tthis.options.feedback = {\n\t\t\t\tprompt: mw.msg( 'mobile-frontend-search-feedback-prompt' ) };\n\t\t}\n\t}\n\t/** @inheritdoc */\n\tpostRender( options ) {\n\t\tconst feedbackLink = mw.config.get( 'wgCirrusSearchFeedbackLink' );\n\t\tsuper.postRender( options );\n\t\tthis.$el.find( '.search-content li' ).append(\n\t\t\tnew Icon( {\n\t\t\t\ttagName: 'a',\n\t\t\t\t// When this icon is clicked we want to reset the hash for subsequent views\n\t\t\t\thref: '#',\n\t\t\t\tname: 'articlesSearch',\n\t\t\t\tadditionalClassNames: 'mw-ui-icon-flush-left',\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-search-content' )\n\t\t\t} ).$el\n\t\t);\n\t\tthis.$el.find( '.spinner-container' ).append( $spinner );\n\t\tif ( feedbackLink ) {\n\t\t\tthis.$el.find( '.search-feedback' ).append(\n\t\t\t\tnew Anchor( {\n\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-search-feedback-link-text' ),\n\t\t\t\t\thref: feedbackLink\n\t\t\t\t} ).$el\n\t\t\t);\n\t\t}\n\t}\n}\n\nmodule.exports = SearchResultsView;\n","const formHeader = require( '../headers' ).formHeader,\n\tSearchHeaderView = require( './SearchHeaderView' ),\n\ticons = require( '../icons' );\n\n/**\n * Generate a search header\n *\n * @param {string} placeholderMsg\n * @param {string} action\n * @param {Function} onInput\n * @return {jQuery.Element}\n */\nfunction searchHeader( placeholderMsg, action, onInput ) {\n\treturn formHeader(\n\t\tnew SearchHeaderView( {\n\t\t\tplaceholderMsg,\n\t\t\taction,\n\t\t\tonInput\n\t\t} ),\n\t\t[\n\t\t\ticons.cancel()\n\t\t],\n\t\tfalse\n\t);\n}\n\nmodule.exports = searchHeader;\n"],"sourceRoot":""}