{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.startup/languageOverlay/getDeviceLanguage.js","webpack://mfModules.[name]/./src/mobile.startup/languageOverlay/languageOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/loadingOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/mediaViewer/overlay.js","webpack://mfModules.[name]/./src/mobile.startup/mobile.startup.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesGateway.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesHtmlScraperGateway.js","webpack://mfModules.[name]/./src/mobile.startup/references/references.js","webpack://mfModules.[name]/./src/mobile.startup/rlModuleLoader.js","webpack://mfModules.[name]/./src/mobile.startup/search/MobileWebSearchLogger.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchHeaderView.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchResultsView.js","webpack://mfModules.[name]/./src/mobile.startup/search/searchHeader.js","webpack://mfModules.[name]/./src/mobile.startup/talk/overlay.js"],"names":["module","exports","navigator","lang","languages","language","userLanguage","browserLanguage","systemLanguage","toLowerCase","undefined","m","require","getDeviceLanguage","Overlay","promisedView","loadLanguageSearcher","gateway","mw","loader","using","then","getPageLanguages","config","get","data","variants","deviceLanguage","languageOverlay","pageGateway","make","heading","msg","className","test","icons","overlay","noHeader","spinner","$el","appendTo","find","util","header","options","headers","cancel","Promise","all","ImageCarousel","moduleLoader","mfExtend","time","View","PageGateway","Browser","Button","Icon","ReferencesGateway","ReferencesHtmlScraperGateway","Page","currentPage","PageHTMLParser","currentPageHTMLParser","Anchor","Skin","OverlayManager","loadingOverlay","CtaDrawer","toast","Watchstar","rlModuleLoader","eventBusSingleton","Toggler","toc","TableOfContents","parseHTML","references","search","SearchOverlay","MobileWebSearchLogger","SearchGateway","lazyImages","lazyImageLoader","talk","mediaViewer","amcOutreach","Section","mobileFrontend","define","api","this","prototype","getReference","ERROR_NOT_EXIST","ERROR_OTHER","apply","arguments","EXTERNAL_LINK_CLASS","getReferenceFromContainer","id","$container","result","Deferred","escapeSelector","substr","length","addClass","resolve","text","html","reject","promise","page","pageHTMLParser","decodeURIComponent","Drawer","makeOnNestedReferenceClickHandler","onNestedReferenceClick","ev","target","tagName","getAttribute","textContent","referenceDrawer","props","errorIcon","error","name","isSmall","extend","closeOnScroll","showCollapseIcon","events","click sup","children","append","modifier","title","showReference","refNumber","reference","drawer","href","remove","show","err","newLoadingOverlay","loadModule","delegateHide","showLoadingOverlay","hideOverlayIfNeeded","hide","document","body","userSessionToken","searchSessionToken","_newUserSession","user","generateRandomSessionId","_newSearchSession","searchSessionCreatedAt","Date","getTime","onSearchShow","onSearchStart","track","action","timeOffsetSinceStart","onSearchResults","event","resultSetType","numberOfResults","results","timeToDisplayResults","onSearchResultClick","clickIndex","resultIndex","register","searchOverlay","logger","on","bind","SearchHeaderView","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","input input","query","value","onInput","clearIcon","label","additionalClassNames","click","val","trigger","template","searchHeader","SearchResultsView","WatchstarPageList","params","placeholderMsg","performSearch","headerChrome","isBorderBox","click .search-content","click .overlay-content","click .overlay-content > div","stopPropagation","touchstart .results","mousedown .results","click .results a","gatewayClass","router","onClickSearchContent","getDocument","$form","attr","type","setTimeout","onClickOverlayContent","hideKeyboardOnScroll","$input","onClickResult","$link","currentTarget","$result","closest","emit","$results","index","originalEvent","preventDefault","back","window","location","postRender","timer","self","searchResults","searchContentLabel","noResultsMsg","searchContentNoResultsMsg","message","parse","clearSearch","$spinner","clearTimeout","$searchContent","$resultContainer","searchData","delay","showKeyboard","len","setSelectionRange","isCached","lastQuery","_pendingQuery","abort","xhr","toggleClass","filter","funnel","pages","el","resetSearch","feedback","prompt","feedbackLink","_get","formHeader","isAnon","progressive","footerAnchor","getUrl","getSections","sections","talkBoard"],"mappings":"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","file":"mobile.startup.js","sourcesContent":["/**\n * Return the language code of the device in lowercase\n *\n * @ignore\n * @param {window.navigator} navigator\n * @return {string|undefined}\n */\nfunction getDeviceLanguage( navigator ) {\n\tconst lang = navigator.languages ?\n\t\tnavigator.languages[ 0 ] :\n\t\tnavigator.language || navigator.userLanguage ||\n\t\t\t\tnavigator.browserLanguage || navigator.systemLanguage;\n\n\treturn lang ? lang.toLowerCase() : undefined;\n}\n\nmodule.exports = getDeviceLanguage;\n","const\n\tm = require( '../moduleLoaderSingleton' ),\n\tgetDeviceLanguage = require( './getDeviceLanguage' ),\n\tOverlay = require( '../Overlay' ),\n\tpromisedView = require( '../promisedView' );\n\n/**\n * @ignore\n * @param {PageGateway} gateway\n * @return {jQuery.Promise} Resolves to LanguageSearcher\n */\nfunction loadLanguageSearcher( gateway ) {\n\treturn mw.loader.using( 'mobile.languages.structured' ).then( function () {\n\t\treturn gateway.getPageLanguages( mw.config.get( 'wgPageName' ), mw.config.get( 'wgUserLanguage' ) );\n\t} ).then( function ( data ) {\n\t\tconst LanguageSearcher = m.require( 'mobile.languages.structured/LanguageSearcher' );\n\n\t\treturn new LanguageSearcher( {\n\t\t\tlanguages: data.languages,\n\t\t\tvariants: data.variants,\n\t\t\tdeviceLanguage: getDeviceLanguage( navigator )\n\t\t} );\n\n\t} );\n}\n\n/**\n * Factory function that returns a language featured instance of an Overlay\n *\n * @param {PageGateway} pageGateway\n * @return {Overlay}\n */\nfunction languageOverlay( pageGateway ) {\n\treturn Overlay.make(\n\t\t{\n\t\t\theading: mw.msg( 'mobile-frontend-language-heading' ),\n\t\t\tclassName: 'overlay language-overlay'\n\t\t}, promisedView( loadLanguageSearcher( pageGateway ) )\n\t);\n}\n\n// To make knowing when async logic has resolved easier in tests\nlanguageOverlay.test = {\n\tloadLanguageSearcher: loadLanguageSearcher\n};\n\nmodule.exports = languageOverlay;\n","var\n\ticons = require( './icons' ),\n\tOverlay = require( './Overlay' );\n\n/**\n * Overlay that initially shows loading animation until\n * caller hides it with .hide()\n *\n * @return {Overlay}\n */\nfunction loadingOverlay() {\n\tvar overlay = new Overlay( {\n\t\tclassName: 'overlay overlay-loading',\n\t\tnoHeader: true\n\t} );\n\ticons.spinner().$el.appendTo( overlay.$el.find( '.overlay-content' ) );\n\treturn overlay;\n}\n\nmodule.exports = loadingOverlay;\n","var m = require( '../moduleLoaderSingleton' ),\n\tpromisedView = require( '../promisedView' ),\n\tutil = require( '../util' ),\n\theader = require( '../headers' ).header,\n\ticons = require( '../icons' ),\n\tOverlay = require( '../Overlay' );\n\n/**\n * Produce an overlay for mediaViewer\n * @param {Object} options\n * @return {Overlay}\n */\nfunction mediaViewerOverlay( options ) {\n\tvar overlay = Overlay.make(\n\t\t{\n\t\t\theaders: [\n\t\t\t\theader( '', [], icons.cancel( 'gray' ) )\n\t\t\t],\n\t\t\tclassName: 'overlay media-viewer'\n\t\t},\n\t\tpromisedView(\n\t\t\tutil.Promise.all( [\n\t\t\t\tmw.loader.using( 'mobile.mediaViewer' )\n\t\t\t] ).then( function () {\n\t\t\t\tvar ImageCarousel = m.require( 'mobile.mediaViewer' ).ImageCarousel;\n\t\t\t\treturn new ImageCarousel( options );\n\t\t\t} )\n\t\t)\n\t);\n\n\treturn overlay;\n}\n\nmodule.exports = mediaViewerOverlay;\n","var\n\tmoduleLoader = require( './moduleLoaderSingleton' ),\n\tutil = require( './util' );\n\n// Expose the entry chunk through libraryTarget and library. This allows\n// arbitrary file access via ResourceLoader like\n// `mfModules['mobile.startup'].moduleLoader.require('mobile.startup/LoadingOverlay')`.\nmodule.exports = {\n\tmoduleLoader: moduleLoader,\n\tmfExtend: require( './mfExtend' ),\n\ttime: require( './time' ),\n\tutil,\n\tView: require( './View' ),\n\tPageGateway: require( './PageGateway' ),\n\tBrowser: require( './Browser' ),\n\tButton: require( './Button' ),\n\tIcon: require( './Icon' ),\n\tReferencesGateway: require( './references/ReferencesGateway' ),\n\tReferencesHtmlScraperGateway: require( './references/ReferencesHtmlScraperGateway' ),\n\ticons: require( './icons' ),\n\tPage: require( './Page' ),\n\tcurrentPage: require( './currentPage' ),\n\tPageHTMLParser: require( './PageHTMLParser' ),\n\tcurrentPageHTMLParser: require( './currentPageHTMLParser' ),\n\tAnchor: require( './Anchor' ),\n\tSkin: require( './Skin' ),\n\tOverlayManager: require( './OverlayManager' ),\n\tOverlay: require( './Overlay' ),\n\tloadingOverlay: require( './loadingOverlay' ),\n\tCtaDrawer: require( './CtaDrawer' ),\n\ttoast: require( './toast' ),\n\tWatchstar: require( './watchstar/watchstar' ),\n\trlModuleLoader: require( './rlModuleLoader' ),\n\teventBusSingleton: require( './eventBusSingleton' ),\n\tpromisedView: require( './promisedView' ),\n\tToggler: require( './Toggler' ),\n\ttoc: {\n\t\t// In case any old version of Minerva is cached.\n\t\tTableOfContents: () => {\n\t\t\treturn {\n\t\t\t\t// in the unlikely event old Minerva code got loaded with new MF.\n\t\t\t\t$el: util.parseHTML( '<div>' )\n\t\t\t};\n\t\t}\n\t},\n\treferences: require( './references/references' ),\n\tsearch: {\n\t\tSearchOverlay: require( './search/SearchOverlay' ),\n\t\tMobileWebSearchLogger: require( './search/MobileWebSearchLogger' ),\n\t\tSearchGateway: require( './search/SearchGateway' )\n\t},\n\tlazyImages: {\n\t\tlazyImageLoader: require( './lazyImages/lazyImageLoader' )\n\t},\n\ttalk: {\n\t\toverlay: require( './talk/overlay' )\n\t},\n\tlanguageOverlay: require( './languageOverlay/languageOverlay' ),\n\tmediaViewer: {\n\t\toverlay: require( './mediaViewer/overlay' )\n\t},\n\tamcOutreach: require( './amcOutreach/amcOutreach' ),\n\tSection: require( './Section' )\n};\n\nmw.mobileFrontend = moduleLoader;\n\n// Setup a single export for new modules to fold all of the above lines into.\n// One export to rule them all!\nmoduleLoader.define( 'mobile.startup', module.exports );\n","/**\n * Abstract base class\n * Gateway for retrieving references\n *\n * @class ReferencesGateway\n * @abstract\n *\n * @param {mw.Api} api\n */\nfunction ReferencesGateway( api ) {\n\tthis.api = api;\n}\n\n/**\n * Return the matched reference via API or DOM query\n *\n * @memberof ReferencesGateway\n * @instance\n * @param {string} id CSS selector\n * @param {Page} page to find reference for\n * @param {PageHTMLParser} pageHTMLParser\n * @return {jQuery.Promise} resolves with an Object representing reference\n *  with a `text` property\n *  The promise should be rejected with ReferenceGateway.ERROR_NOT_EXIST:\n *  if the reference is not found.\n *  If for some reason locating the reference fails return ReferenceGateway.ERROR_OTHER.\n */\nReferencesGateway.prototype.getReference = null;\n\n/**\n * @memberof ReferencesGateway\n * @property ERROR_NOT_EXIST error code to be returned by getReference\n *  when a reference does not exist.\n */\nReferencesGateway.ERROR_NOT_EXIST = 'NOT_EXIST_ERROR';\n/**\n * @memberof ReferencesGateway\n * @property ERROR_OTHER error code to be returned by getReference\n *  under any other circumstance not covered\n *  by ERROR_NOT_EXIST. It should be used if it is unclear whether a reference exists or not.\n */\nReferencesGateway.ERROR_OTHER = 'OTHER_ERROR';\n\nmodule.exports = ReferencesGateway;\n","var ReferencesGateway = require( './ReferencesGateway' ),\n\tmfExtend = require( './../mfExtend' ),\n\tutil = require( './../util' );\n\n/**\n * Gateway for retrieving references via the content of the Page\n *\n * @class ReferencesHtmlScraperGateway\n * @extends ReferencesGateway\n * @inheritdoc\n */\nfunction ReferencesHtmlScraperGateway() {\n\tReferencesGateway.apply( this, arguments );\n}\n\nmfExtend( ReferencesHtmlScraperGateway, ReferencesGateway, {\n\t/**\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @property EXTERNAL_LINK_CLASS a CSS class to place on external links\n\t * in addition to the default 'external' class.\n\t */\n\tEXTERNAL_LINK_CLASS: 'external--reference',\n\t/**\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @instance\n\t * @param {string} id of a DOM element in the page with '#' prefix.\n\t *  can be encoded or decoded.\n\t * @param {jQuery.Object} $container to scan for an element\n\t * @return {jQuery.Promise} that can be used by getReference\n\t */\n\tgetReferenceFromContainer: function ( id, $container ) {\n\t\tvar $el,\n\t\t\tresult = util.Deferred();\n\n\t\t$el = $container.find( '#' + util.escapeSelector( id.substr( 1 ) ) );\n\t\tif ( $el.length ) {\n\t\t\t$el.find( '.external' ).addClass( this.EXTERNAL_LINK_CLASS );\n\t\t\tresult.resolve( { text: $el.html() } );\n\t\t} else {\n\t\t\tresult.reject( ReferencesGateway.ERROR_NOT_EXIST );\n\t\t}\n\t\treturn result.promise();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @instance\n\t * @param {string} id\n\t * @param {Page} page\n\t * @param {PageHTMLParser} pageHTMLParser\n\t */\n\tgetReference: function ( id, page, pageHTMLParser ) {\n\t\t// If an id is not found it's possible the id passed needs decoding (per T188547).\n\t\treturn this.getReferenceFromContainer( decodeURIComponent( id ), pageHTMLParser.$el.find( 'ol.references' ) );\n\t}\n} );\n\nmodule.exports = ReferencesHtmlScraperGateway;\n","var references,\n\tDrawer = require( '../Drawer' ),\n\tutil = require( '../util' ),\n\ticons = require( '../icons' ),\n\tReferencesGateway = require( './ReferencesGateway' ),\n\tIcon = require( '../Icon' );\n\n/**\n * Create a callback for clicking references\n * @param {Function} onNestedReferenceClick\n * @return {Function}\n */\nfunction makeOnNestedReferenceClickHandler( onNestedReferenceClick ) {\n\treturn ( ev ) => {\n\t\tconst target = ev.target;\n\t\tif ( target.tagName === 'A' ) {\n\t\t\tonNestedReferenceClick(\n\t\t\t\ttarget.getAttribute( 'href' ),\n\t\t\t\ttarget.textContent\n\t\t\t);\n\t\t\t// Don't hide the already shown drawer via propagation\n\t\t\t// and stop default scroll behaviour.\n\t\t\treturn false;\n\t\t}\n\t};\n}\n\n/**\n * Drawer for references\n * @uses Icon\n * @param {Object} props\n * @param {boolean} [props.error] whether an error has occurred\n * @param {string} props.title of reference e.g [1]\n * @param {string} props.text is the HTML of the reference\n * @param {Function} [props.onNestedReferenceClick] callback for when a reference\n *  inside the reference is clicked.\n * @return {Drawer}\n */\nfunction referenceDrawer( props ) {\n\tconst errorIcon = props.error ? new Icon( {\n\t\tname: 'error',\n\t\tisSmall: true\n\t} ).$el : null;\n\treturn new Drawer(\n\t\tutil.extend(\n\t\t\t{\n\t\t\t\tcloseOnScroll: false,\n\t\t\t\tshowCollapseIcon: false,\n\t\t\t\tclassName: 'drawer position-fixed text references-drawer',\n\t\t\t\tevents: {\n\t\t\t\t\t'click sup': props.onNestedReferenceClick &&\n\t\t\t\t\t\tmakeOnNestedReferenceClickHandler( props.onNestedReferenceClick )\n\t\t\t\t},\n\t\t\t\tchildren: [\n\t\t\t\t\tutil.parseHTML( '<div>' )\n\t\t\t\t\t\t.addClass( 'references-drawer__header' )\n\t\t\t\t\t\t.append( [\n\t\t\t\t\t\t\tnew Icon( {\n\t\t\t\t\t\t\t\tisSmall: true,\n\t\t\t\t\t\t\t\tname: 'citation-invert',\n\t\t\t\t\t\t\t\tmodifier: ''\n\t\t\t\t\t\t\t} ).$el,\n\t\t\t\t\t\t\tutil.parseHTML( '<span>' ).addClass( 'references-drawer__title' ).text( mw.msg( 'mobile-frontend-references-citation' ) ),\n\t\t\t\t\t\t\ticons.cancel( 'gray', {\n\t\t\t\t\t\t\t\tisSmall: true,\n\t\t\t\t\t\t\t\tmodifier: 'mw-ui-icon-element mw-ui-icon-flush-right'\n\t\t\t\t\t\t\t} ).$el\n\t\t\t\t\t\t] ),\n\t\t\t\t\tutil.parseHTML( '<div>' ).append( [\n\t\t\t\t\t\terrorIcon,\n\t\t\t\t\t\tutil.parseHTML( '<sup>' ).text( props.title ),\n\t\t\t\t\t\tprops.text ?\n\t\t\t\t\t\t\tutil.parseHTML( '<span>' ).html( props.text ) :\n\t\t\t\t\t\t\ticons.spinner().$el\n\t\t\t\t\t] )\n\t\t\t\t]\n\t\t\t},\n\t\t\tprops\n\t\t)\n\t);\n}\n\nreferences = {\n\ttest: {\n\t\tmakeOnNestedReferenceClickHandler\n\t},\n\treferenceDrawer,\n\t/**\n\t * Fetch and render nested reference upon click\n\t * @param {string} id of the reference to be retrieved\n\t * @param {Page} page to locate reference for\n\t * @param {string} refNumber the number it identifies as in the page\n\t * @param {PageHTMLParser} pageHTMLParser\n\t * @param {Gateway} gateway\n\t * @return {jQuery.Deferred}\n\t */\n\tshowReference: function ( id, page, refNumber, pageHTMLParser, gateway ) {\n\t\treturn gateway.getReference( id, page, pageHTMLParser ).then( function ( reference ) {\n\t\t\tconst drawer = referenceDrawer( {\n\t\t\t\ttitle: refNumber,\n\t\t\t\ttext: reference.text,\n\t\t\t\tonNestedReferenceClick: function ( href, text ) {\n\t\t\t\t\treferences.showReference(\n\t\t\t\t\t\thref,\n\t\t\t\t\t\tpage,\n\t\t\t\t\t\ttext,\n\t\t\t\t\t\tpageHTMLParser,\n\t\t\t\t\t\tgateway\n\t\t\t\t\t);\n\t\t\t\t\tdrawer.$el.remove();\n\t\t\t\t}\n\t\t\t} );\n\t\t\tdrawer.show();\n\t\t}, function ( err ) {\n\t\t\t// If non-existent reference nothing to do.\n\t\t\tif ( err === ReferencesGateway.ERROR_NOT_EXIST ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst drawer = referenceDrawer( {\n\t\t\t\terror: true,\n\t\t\t\ttitle: refNumber,\n\t\t\t\ttext: mw.msg( 'mobile-frontend-references-citation-error' )\n\t\t\t} );\n\t\t\tdrawer.show();\n\t\t} );\n\t}\n};\n\nmodule.exports = references;\n","var\n\tloadingOverlay = require( './loadingOverlay' ),\n\tutil = require( './util' );\n\n/**\n * Utility library for looking up details on the current user\n * @class loader\n * @singleton\n */\nmodule.exports = {\n\t// Exported to support testing and stubbing\n\tnewLoadingOverlay: function () {\n\t\treturn loadingOverlay();\n\t},\n\t/**\n\t * Loads a module via ResourceLoader\n\t * and displays a full screen LoadingOverlay during load time.\n\t * @memberof loader\n\t * @instance\n\t * @param {string} name ResourceLoader module name to load asynchronously.\n\t * @param {boolean} delegateHide if true the caller is responsible for hiding\n\t *  the intermediate loader.\n\t * @param {boolean} [showLoadingOverlay] if false a loading overlay will be hidden while\n\t *  loading the module. Defaults to true.\n\t * @return {jQuery.Promise}\n\t */\n\tloadModule: function ( name, delegateHide, showLoadingOverlay ) {\n\t\tvar loadingOverlay = this.newLoadingOverlay();\n\n\t\tshowLoadingOverlay = ( showLoadingOverlay !== undefined ) ? showLoadingOverlay : true;\n\t\tif ( showLoadingOverlay ) {\n\t\t\tloadingOverlay.appendTo( document.body );\n\t\t\tloadingOverlay.show();\n\t\t}\n\n\t\tfunction hideOverlayIfNeeded() {\n\t\t\tif ( !delegateHide && showLoadingOverlay ) {\n\t\t\t\tloadingOverlay.hide();\n\t\t\t}\n\t\t}\n\t\treturn mw.loader.using( name ).then( function () {\n\t\t\thideOverlayIfNeeded();\n\n\t\t\treturn loadingOverlay;\n\t\t}, function () {\n\t\t\thideOverlayIfNeeded();\n\n\t\t\treturn util.Deferred().reject().promise();\n\t\t} );\n\t}\n};\n","/**\n * Coordinates the logging of MobileWebSchema events.\n * Implements schema defined at https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n *\n * @class\n */\nfunction MobileWebSearchLogger() {\n\tthis.userSessionToken = null;\n\tthis.searchSessionToken = null;\n}\n\nMobileWebSearchLogger.prototype = {\n\t/**\n\t * Sets the internal state required to deal with logging user session\n\t * data.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newUserSession: function () {\n\t\tthis.userSessionToken = mw.user.generateRandomSessionId();\n\t},\n\n\t/**\n\t * Sets the internal state required to deal with logging search session\n\t * data.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newSearchSession: function () {\n\t\tthis.searchSessionToken = mw.user.generateRandomSessionId();\n\t\tthis.searchSessionCreatedAt = new Date().getTime();\n\t},\n\n\t/**\n\t * Handles the 'search-show' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchShow: function () {\n\t\tthis._newUserSession();\n\t},\n\n\t/**\n\t * Handles the 'search-start' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchStart: function () {\n\t\tthis._newSearchSession();\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'session-start',\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: 0\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-results' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {Object[]} event.results\n\t */\n\tonSearchResults: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'impression-results',\n\t\t\tresultSetType: 'prefix',\n\t\t\tnumberOfResults: event.results.length,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\t// FIXME: Unless I'm mistaken, the timeToDisplayResults\n\t\t\t// property isn't necessary.\n\t\t\ttimeToDisplayResults: timeOffsetSinceStart,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-result-click' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {number} event.index\n\t *  The zero-based index of the result in the set of results.\n\t */\n\tonSearchResultClick: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'click-result',\n\t\t\t// NOTE: clickIndex is 1-based.\n\t\t\tclickIndex: event.resultIndex + 1,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t}\n};\n\n/**\n * Convenience function that wires up an instance of the\n * MobileWebSearchLogger class to the search-* events emitted by the\n * search overlay.\n * @memberof MobileWebSearchLogger\n * @param {SearchOverlay} searchOverlay\n */\nMobileWebSearchLogger.register = function ( searchOverlay ) {\n\tvar logger = new MobileWebSearchLogger();\n\n\tsearchOverlay.on( 'search-show', logger.onSearchShow.bind( logger ) );\n\tsearchOverlay.on( 'search-start', logger.onSearchStart.bind( logger ) );\n\tsearchOverlay.on( 'search-results', logger.onSearchResults.bind( logger ) );\n\tsearchOverlay.on( 'search-result-click', logger.onSearchResultClick.bind( logger ) );\n};\n\nmodule.exports = MobileWebSearchLogger;\n","const util = require( '../util' ),\n\tView = require( '../View' ),\n\tIcon = require( '../Icon' );\n\n/**\n * @extends View\n */\nclass SearchHeaderView extends View {\n\t/**\n\t * constructor\n\t * @inheritdoc\n\t * @param {Object} props\n\t * @param {Function} props.onInput executed every time input changes\n\t * @param {string} props.placeholderMsg\n\t * @param {string} props.action\n\t * @param {string} [props.searchTerm] default\n\t */\n\tconstructor( props ) {\n\t\tsuper(\n\t\t\tutil.extend( {}, props, {\n\t\t\t\tevents: {\n\t\t\t\t\t'input input': 'onInput'\n\t\t\t\t}\n\t\t\t} )\n\t\t);\n\t}\n\t/** @inheritdoc */\n\tonInput( ev ) {\n\t\tconst query = ev.target.value;\n\t\tthis.options.onInput( query );\n\t\tif ( query ) {\n\t\t\tthis.clearIcon.$el.show();\n\t\t} else {\n\t\t\tthis.clearIcon.$el.hide();\n\t\t}\n\t}\n\t/** @inheritdoc */\n\tget isTemplateMode() {\n\t\treturn true;\n\t}\n\t/** @inheritdoc */\n\tget template() {\n\t\treturn util.template( `<div class=\"overlay-title search-header-view\">\n\t\t<form method=\"get\" action=\"{{action}}\" class=\"search-box\">\n\t\t<input class=\"search\" type=\"search\" name=\"search\" autocomplete=\"off\" placeholder=\"{{placeholderMsg}}\" aria-label=\"{{placeholderMsg}}\" value=\"{{searchTerm}}\">\n\t\t</form>\n</div>` );\n\t}\n\t/** @inheritdoc */\n\tpostRender() {\n\t\tconst clearIcon = new Icon( {\n\t\t\ttagName: 'button',\n\t\t\tname: 'search-clear',\n\t\t\tisSmall: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-clear-search' ),\n\t\t\tadditionalClassNames: 'clear',\n\t\t\tevents: {\n\t\t\t\tclick: function () {\n\t\t\t\t\tthis.$el.find( 'input' ).val( '' ).trigger( 'focus' );\n\t\t\t\t\tthis.options.onInput( '' );\n\t\t\t\t\tclearIcon.$el.hide();\n\t\t\t\t\t// In beta the clear button is on top of the search input.\n\t\t\t\t\t// Stop propagation so that the input doesn't receive the click.\n\t\t\t\t\treturn false;\n\t\t\t\t}.bind( this )\n\t\t\t}\n\t\t} );\n\t\tthis.clearIcon = clearIcon;\n\t\tclearIcon.$el.hide();\n\t\tthis.$el.find( 'form' ).append( clearIcon.$el );\n\t}\n}\n\nmodule.exports = SearchHeaderView;\n","var\n\tmfExtend = require( '../mfExtend' ),\n\tOverlay = require( '../Overlay' ),\n\tutil = require( '../util' ),\n\tsearchHeader = require( './searchHeader' ),\n\tSearchResultsView = require( './SearchResultsView' ),\n\tWatchstarPageList = require( '../watchstar/WatchstarPageList' ),\n\tSEARCH_DELAY = 300,\n\tSEARCH_SPINNER_DELAY = 2000;\n\n/**\n * Overlay displaying search results\n * @class SearchOverlay\n * @extends Overlay\n * @uses SearchGateway\n * @uses Icon\n *\n * @param {Object} params Configuration options\n * @param {string} params.placeholderMsg Search input placeholder text.\n * @param {string} [params.action] of form defaults to the value of wgScript\n * @param {SearchGateway} [params.gateway]\n * @fires SearchOverlay#search-show\n * @fires SearchOverlay#search-start\n * @fires SearchOverlay#search-results\n * @fires SearchOverlay#search-result-click\n */\nfunction SearchOverlay( params ) {\n\tvar header = searchHeader(\n\t\t\tparams.placeholderMsg,\n\t\t\tparams.action || mw.config.get( 'wgScript' ),\n\t\t\tfunction ( query ) {\n\t\t\t\tthis.performSearch( query );\n\t\t\t}.bind( this )\n\t\t),\n\t\toptions = util.extend( true, {\n\t\t\theaderChrome: true,\n\t\t\tisBorderBox: false,\n\t\t\tclassName: 'overlay search-overlay',\n\t\t\theaders: [ header ],\n\t\t\tevents: {\n\t\t\t\t'click .search-content': 'onClickSearchContent',\n\t\t\t\t'click .overlay-content': 'onClickOverlayContent',\n\t\t\t\t'click .overlay-content > div': function ( ev ) {\n\t\t\t\t\tev.stopPropagation();\n\t\t\t\t},\n\t\t\t\t'touchstart .results': 'hideKeyboardOnScroll',\n\t\t\t\t'mousedown .results': 'hideKeyboardOnScroll',\n\t\t\t\t'click .results a': 'onClickResult'\n\t\t\t}\n\t\t},\n\t\tparams );\n\n\tthis.header = header;\n\tOverlay.call( this, options );\n\n\tthis.api = options.api;\n\t// eslint-disable-next-line new-cap\n\tthis.gateway = options.gateway || new options.gatewayClass( this.api );\n\n\tthis.router = options.router;\n}\n\nmfExtend( SearchOverlay, Overlay, {\n\n\t/**\n\t * Initialize 'search within pages' functionality\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickSearchContent: function () {\n\t\tvar $el = util.getDocument().find( 'body' ),\n\t\t\t$form = this.$el.find( 'form' );\n\n\t\t// Add fulltext input to force fulltext search\n\t\tthis.parseHTML( '<input>' )\n\t\t\t.attr( {\n\t\t\t\ttype: 'hidden',\n\t\t\t\tname: 'fulltext',\n\t\t\t\tvalue: 'search'\n\t\t\t} )\n\t\t\t.appendTo( $form );\n\t\t// history.back queues a task so might run after this call. Thus we use setTimeout\n\t\t// http://www.w3.org/TR/2011/WD-html5-20110113/webappapis.html#queue-a-task\n\t\tsetTimeout( function () {\n\t\t\t// Firefox doesn't allow submission of a form not in the DOM\n\t\t\t// so temporarily re-add it\n\t\t\t$form.appendTo( $el );\n\t\t\t$form.trigger( 'submit' );\n\t\t}, 0 );\n\t},\n\n\t/**\n\t * Tapping on background only should hide the overlay\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickOverlayContent: function () {\n\t\tthis.$el.find( '.cancel' ).trigger( 'click' );\n\t},\n\n\t/**\n\t * Hide the keyboard when scrolling starts (avoid weird situation when\n\t * user taps on an item, the keyboard hides and wrong item is clicked).\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\thideKeyboardOnScroll: function () {\n\t\tthis.$input.trigger( 'blur' );\n\t},\n\n\t/**\n\t * Handle the user clicking a result.\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonClickResult: function ( ev ) {\n\t\tvar $link = this.$el.find( ev.currentTarget ),\n\t\t\t$result = $link.closest( 'li' );\n\t\t/**\n\t\t * Fired when the user clicks a search result\n\t\t * @event SearchOverlay#search-result-click\n\t\t * @type {Object}\n\t\t * @property {jQuery.Object} result The jQuery-wrapped DOM element that\n\t\t *  the user clicked\n\t\t * @property {number} resultIndex The zero-based index of the\n\t\t *  result in the set of results\n\t\t * @property {jQuery.Event} originalEvent The original event\n\t\t */\n\t\tthis.emit( 'search-result-click', {\n\t\t\tresult: $result,\n\t\t\tresultIndex: this.$results.index( $result ),\n\t\t\toriginalEvent: ev\n\t\t} );\n\n\t\t// FIXME: ugly hack that removes search from browser history\n\t\t// when navigating to search results\n\t\tev.preventDefault();\n\t\tthis.router.back().then( function () {\n\t\t\t// Router.navigate does not support changing href.\n\t\t\t// FIXME: Needs upstream change T189173\n\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\twindow.location.href = $link.attr( 'href' );\n\t\t} );\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this,\n\t\t\tsearchResults = new SearchResultsView( {\n\t\t\t\tsearchContentLabel: mw.msg( 'mobile-frontend-search-content' ),\n\t\t\t\tnoResultsMsg: mw.msg( 'mobile-frontend-search-no-results' ),\n\t\t\t\tsearchContentNoResultsMsg: mw.message( 'mobile-frontend-search-content-no-results' ).parse()\n\t\t\t} ),\n\t\t\ttimer;\n\n\t\tthis.$el.find( '.overlay-content' ).append( searchResults.$el );\n\t\tOverlay.prototype.postRender.call( this );\n\n\t\t// FIXME: `this.$input` should not be set. Isolate to searchHeader function\n\t\tthis.$input = this.$el.find( this.header ).find( 'input' );\n\t\t// FIXME: `this.$searchContent` should not be set. Isolate to SearchResultsView class.\n\t\tthis.$searchContent = searchResults.$el.hide();\n\t\t// FIXME: `this.$resultContainer` should not be set. Isolate to SearchResultsView class.\n\t\tthis.$resultContainer = searchResults.$el.find( '.results-list-container' );\n\n\t\t/**\n\t\t * Hide the spinner and abort timed spinner shows.\n\t\t * FIXME: Given this manipulates SearchResultsView this should be moved into that class\n\t\t */\n\t\tfunction clearSearch() {\n\t\t\tself.$spinner.hide();\n\t\t\tclearTimeout( timer );\n\t\t}\n\n\t\t// Show a spinner on top of search results\n\t\t// FIXME: Given this manipulates SearchResultsView this should be moved into that class\n\t\tthis.$spinner = searchResults.$el.find( '.spinner-container' );\n\t\tthis.on( 'search-start', function ( searchData ) {\n\t\t\tif ( timer ) {\n\t\t\t\tclearSearch();\n\t\t\t}\n\t\t\ttimer = setTimeout( function () {\n\t\t\t\tself.$spinner.show();\n\t\t\t}, SEARCH_SPINNER_DELAY - searchData.delay );\n\t\t} );\n\t\tthis.on( 'search-results', clearSearch );\n\t},\n\n\t/**\n\t * Trigger a focus() event on search input in order to\n\t * bring up the virtual keyboard.\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshowKeyboard: function () {\n\t\tvar len = this.$input.val().length;\n\t\tthis.$input.trigger( 'focus' );\n\t\t// Cursor to the end of the input\n\t\tif ( this.$input[0].setSelectionRange ) {\n\t\t\tthis.$input[0].setSelectionRange( len, len );\n\t\t}\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\t// Overlay#show defines the actual overlay visibility.\n\t\tOverlay.prototype.show.apply( this, arguments );\n\n\t\tthis.showKeyboard();\n\t\t/**\n\t\t * Fired after the search overlay is shown\n\t\t * @event SearchOverlay#search-show\n\t\t */\n\t\tthis.emit( 'search-show' );\n\t},\n\n\t/**\n\t * Perform search and render results inside current view.\n\t * FIXME: Much of the logic for caching and pending queries inside this function should\n\t * actually live in SearchGateway, please move out.\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {string} query\n\t */\n\tperformSearch: function ( query ) {\n\t\tvar\n\t\t\tself = this,\n\t\t\tapi = this.api,\n\t\t\tdelay = this.gateway.isCached( query ) ? 0 : SEARCH_DELAY;\n\n\t\t// it seems the input event can be fired when virtual keyboard is closed\n\t\t// (Chrome for Android)\n\t\tif ( query !== this.lastQuery ) {\n\t\t\tif ( self._pendingQuery ) {\n\t\t\t\tself._pendingQuery.abort();\n\t\t\t}\n\t\t\tclearTimeout( this.timer );\n\n\t\t\tif ( query.length ) {\n\t\t\t\tthis.timer = setTimeout( function () {\n\t\t\t\t\tvar xhr;\n\t\t\t\t\t/**\n\t\t\t\t\t * Fired immediately before the search API request is sent\n\t\t\t\t\t * @event SearchOverlay#search-start\n\t\t\t\t\t * @property {Object} data related to the current search\n\t\t\t\t\t */\n\t\t\t\t\tself.emit( 'search-start', {\n\t\t\t\t\t\tquery: query,\n\t\t\t\t\t\tdelay: delay\n\t\t\t\t\t} );\n\n\t\t\t\t\txhr = self.gateway.search( query );\n\t\t\t\t\tself._pendingQuery = xhr.then( function ( data ) {\n\t\t\t\t\t\t// FIXME: Given this manipulates SearchResultsView\n\t\t\t\t\t\t// this should be moved into that class\n\t\t\t\t\t\t// check if we're getting the rights response in case of out of\n\t\t\t\t\t\t// order responses (need to get the current value of the input)\n\t\t\t\t\t\tif ( data && data.query === self.$input.val() ) {\n\t\t\t\t\t\t\tself.$el.toggleClass( 'no-results', data.results.length === 0 );\n\t\t\t\t\t\t\tself.$searchContent\n\t\t\t\t\t\t\t\t.show()\n\t\t\t\t\t\t\t\t.find( 'p' )\n\t\t\t\t\t\t\t\t.hide()\n\t\t\t\t\t\t\t\t.filter( data.results.length ? '.with-results' : '.without-results' )\n\t\t\t\t\t\t\t\t.show();\n\n\t\t\t\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\t\t\t\tnew WatchstarPageList( {\n\t\t\t\t\t\t\t\tapi: api,\n\t\t\t\t\t\t\t\tfunnel: 'search',\n\t\t\t\t\t\t\t\tpages: data.results,\n\t\t\t\t\t\t\t\tel: self.$resultContainer\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\tself.$results = self.$resultContainer.find( 'li' );\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Fired when search API returns results\n\t\t\t\t\t\t\t * @event SearchOverlay#search-results\n\t\t\t\t\t\t\t * @type {Object}\n\t\t\t\t\t\t\t * @property {Object[]} results The results returned by the search\n\t\t\t\t\t\t\t *  API\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tself.emit( 'search-results', {\n\t\t\t\t\t\t\t\tresults: data.results\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ).promise( { abort: function () { xhr.abort(); } } );\n\t\t\t\t}, delay );\n\t\t\t} else {\n\t\t\t\tself.resetSearch();\n\t\t\t}\n\n\t\t\tthis.lastQuery = query;\n\t\t}\n\t},\n\t/**\n\t * Clear results\n\t *\n\t * @private\n\t */\n\tresetSearch: function () {\n\t\tthis.$el.find( '.overlay-content' ).children().hide();\n\t}\n} );\n\nmodule.exports = SearchOverlay;\n","const View = require( '../View' ),\n\tIcon = require( '../Icon' ),\n\tAnchor = require( '../Anchor' ),\n\ticons = require( '../icons' ),\n\t$spinner = icons.spinner().$el,\n\tutil = require( '../util' );\n\n/**\n * @class SearchResultsView\n * @extends View\n * @param {Object} options\n * @param {string} options.searchContentLabel actionable label to tell the user they can \"search\n *  within pages rather than doing a full text search\n * @param {string} options.noResultsMsg shows when no results displayed\n * @param {string} options.searchContentNoResultsMsg alternative to options.searchContentLabel that\n * shows when no search results have been displayed.\n */\nclass SearchResultsView extends View {\n\t/** @inheritdoc */\n\tget isTemplateMode() {\n\t\treturn true;\n\t}\n\t/** @inheritdoc */\n\tget template() {\n\t\treturn util.template( `\n<div class=\"search-results-view\">\n\t<div class=\"search-content overlay-header\">\n\t\t<ul>\n\t\t\t<li>{{! search content icon goes here }}</li>\n\t\t</ul>\n\t\t<div class=\"caption\">\n\t\t\t<p class=\"with-results\">{{searchContentLabel}}</p>\n\t\t\t<p class=\"without-results\">{{noResultsMsg}}</p>\n\t\t\t<p class=\"without-results\">{{{searchContentNoResultsMsg}}}</p>\n\t\t</div>\n\t</div>\n\t<div class=\"spinner-container position-fixed\"></div>\n\t<div class=\"results\">\n\t\t<div class=\"results-list-container\"></div>\n\t\t{{#feedback}}\n\t\t\t<div class=\"search-feedback\">\n\t\t\t\t{{prompt}}\n\t\t\t</div>\n\t\t{{/feedback}}\n\t</div>\n</div>`\n\t\t);\n\t}\n\t/** @inheritdoc */\n\tpreRender() {\n\t\tconst feedbackLink = mw.config.get( 'wgCirrusSearchFeedbackLink' );\n\t\tif ( feedbackLink ) {\n\t\t\tthis.options.feedback = {\n\t\t\t\tprompt: mw.msg( 'mobile-frontend-search-feedback-prompt' ) };\n\t\t}\n\t}\n\t/** @inheritdoc */\n\tpostRender( options ) {\n\t\tconst feedbackLink = mw.config.get( 'wgCirrusSearchFeedbackLink' );\n\t\tsuper.postRender( options );\n\t\tthis.$el.find( '.search-content li' ).append(\n\t\t\tnew Icon( {\n\t\t\t\ttagName: 'a',\n\t\t\t\t// When this icon is clicked we want to reset the hash for subsequent views\n\t\t\t\thref: '#',\n\t\t\t\tname: 'search-content',\n\t\t\t\tadditionalClassNames: 'mw-ui-icon-flush-left',\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-search-content' )\n\t\t\t} ).$el\n\t\t);\n\t\tthis.$el.find( '.spinner-container' ).append( $spinner );\n\t\tif ( feedbackLink ) {\n\t\t\tthis.$el.find( '.search-feedback' ).append(\n\t\t\t\tnew Anchor( {\n\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-search-feedback-link-text' ),\n\t\t\t\t\thref: feedbackLink\n\t\t\t\t} ).$el\n\t\t\t);\n\t\t}\n\t}\n}\n\nmodule.exports = SearchResultsView;\n","const formHeader = require( '../headers' ).formHeader,\n\tSearchHeaderView = require( './SearchHeaderView' ),\n\ticons = require( '../icons' );\n\n/**\n * Generate a search header\n * @param {string} placeholderMsg\n * @param {string} action\n * @param {Function} onInput\n * @return {JQuery.Element}\n */\nfunction searchHeader( placeholderMsg, action, onInput ) {\n\treturn formHeader(\n\t\tnew SearchHeaderView( {\n\t\t\tplaceholderMsg,\n\t\t\taction,\n\t\t\tonInput\n\t\t} ),\n\t\t[\n\t\t\ticons.cancel()\n\t\t],\n\t\tfalse\n\t);\n}\n\nmodule.exports = searchHeader;\n","var m = require( '../moduleLoaderSingleton' ),\n\tpromisedView = require( '../promisedView' ),\n\tButton = require( '../Button' ),\n\tutil = require( '../util' ),\n\theader = require( '../headers' ).header,\n\tOverlay = require( '../Overlay' );\n\n/**\n * Produce an overlay for talk page\n * @param {string} title of the page to get talk topics for\n * @param {PageGateway} gateway for interacting with API.\n * @return {Overlay}\n */\nfunction talkOverlay( title, gateway ) {\n\tvar user = mw.user;\n\n\treturn Overlay.make(\n\t\t{\n\t\t\theaders: [\n\t\t\t\theader(\n\t\t\t\t\t'<strong>' + mw.msg( 'mobile-frontend-talk-overlay-header' ) + '</strong>',\n\t\t\t\t\tuser.isAnon() ? [] : [ new Button( {\n\t\t\t\t\t\thref: '#/talk/new',\n\t\t\t\t\t\tadditionalClassNames: 'continue',\n\t\t\t\t\t\tprogressive: true,\n\t\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-talk-add-overlay-submit' )\n\t\t\t\t\t} ) ]\n\t\t\t\t)\n\t\t\t],\n\t\t\tfooterAnchor: new Button( {\n\t\t\t\tprogressive: true,\n\t\t\t\thref: mw.util.getUrl( title ),\n\t\t\t\tadditionalClassNames: 'footer-link talk-fullpage',\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-talk-fullpage' )\n\t\t\t} ).options,\n\t\t\tclassName: 'talk-overlay overlay'\n\t\t},\n\t\tpromisedView(\n\t\t\tutil.Promise.all( [\n\t\t\t\tgateway.getSections( title ),\n\t\t\t\tmw.loader.using( 'mobile.talk.overlays' )\n\t\t\t] ).then( function ( sections ) {\n\t\t\t\tvar talkBoard = m.require( 'mobile.talk.overlays/talkBoard' );\n\t\t\t\treturn talkBoard( sections );\n\t\t\t} )\n\t\t)\n\t);\n}\n\nmodule.exports = talkOverlay;\n"],"sourceRoot":""}