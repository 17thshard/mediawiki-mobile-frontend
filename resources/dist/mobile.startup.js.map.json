{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.startup/util.js","webpack://mfModules.[name]/./src/mobile.startup/mfExtend.js","webpack://mfModules.[name]/./src/mobile.startup/View.js","webpack://mfModules.[name]/./src/mobile.startup/icons.js","webpack://mfModules.[name]/./src/mobile.startup/Icon.js","webpack://mfModules.[name]/./src/mobile.startup/Browser.js","webpack://mfModules.[name]/./src/mobile.startup/Button.js","webpack://mfModules.[name]/./src/mobile.startup/Anchor.js","webpack://mfModules.[name]/./src/mobile.startup/Page.js","webpack://mfModules.[name]/./src/mobile.startup/Drawer.js","webpack://mfModules.[name]/./src/mobile.startup/Overlay.js","webpack://mfModules.[name]/./src/mobile.startup/Panel.js","webpack://mfModules.[name]/./src/mobile.startup/time.js","webpack://mfModules.[name]/./src/mobile.startup/Section.js","webpack://mfModules.[name]/./src/mobile.startup/cache.js","webpack://mfModules.[name]/./src/mobile.startup/CtaDrawer.js","webpack://mfModules.[name]/./src/mobile.startup/extendSearchParams.js","webpack://mfModules.[name]/./src/mobile.startup/Thumbnail.js","webpack://mfModules.[name]/./src/mobile.startup/loadingOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesGateway.js","webpack://mfModules.[name]/./src/mobile.startup/context.js","webpack://mfModules.[name]/./src/mobile.startup/moduleLoader.js","webpack://mfModules.[name]/./src/mobile.startup/OverlayManager.js","webpack://mfModules.[name]/./src/mobile.startup/PageGateway.js","webpack://mfModules.[name]/./src/mobile.startup/rlModuleLoader.js","webpack://mfModules.[name]/./src/mobile.startup/Skin.js","webpack://mfModules.[name]/./src/mobile.startup/Toggler.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesHtmlScraperGateway.js","webpack://mfModules.[name]/./src/mobile.startup/PageList.js","webpack://mfModules.[name]/./src/mobile.startup/toast.js","webpack://mfModules.[name]/./src/mobile.startup/watchstar/Watchstar.js","webpack://mfModules.[name]/./src/mobile.startup/watchstar/WatchstarGateway.js","webpack://mfModules.[name]/./src/mobile.startup/watchstar/WatchstarPageList.js","webpack://mfModules.[name]/./src/mobile.startup/mobile.startup.js","webpack://mfModules.[name]/./src/mobile.startup/moduleLoaderSingleton.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesDrawer.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesMobileViewGateway.js","webpack://mfModules.[name]/./src/mobile.startup/eventBusSingleton.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/search/schemaMobileWebSearch.js","webpack://mfModules.[name]/./src/mobile.startup/search/MobileWebSearchLogger.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchGateway.js"],"names":["module","exports","escapeSelector","selector","$","grep","apply","arguments","docReady","fn","when","Deferred","d","warning","mw","log","deprecate","fail","always","done","getDocument","document","documentElement","getWindow","window","parseHTML","html","ctx","isNumeric","extend","escapeHash","hash","replace","isModifiedEvent","ev","altKey","ctrlKey","metaKey","shiftKey","repeatEvent","src","proxy","event","args","on","emit","Child","ParentOrPrototype","prototype","key","OO","inheritClass","initClass","util","__webpack_require__","mfExtend","DEPRECATED_PROPERTIES","delegateEventSplitter","idCounter","View","self","this","forEach","property","undefined","initialize","mixinClass","EventEmitter","tagName","isTemplateMode","template","templatePartials","defaults","events","options","call","cid","prefix","id","toString","uniqueId","compile","el","$el","length","_postInitialize","_resolveInheritedProp","props","propName","defaultValue","Object","hasOwnProperty","className","addClass","render","preRender","postRender","data","undelegateEvents","skipTemplateRender","replaceWith","delegateEvents","query","find","match","method","delegate","bind","eventName","listener","off","undelegate","prop","Icon","CANCEL_GLYPH","cancel","variant","glyph","name","additionalClassNames","label","msg","spinner","watchIcon","watchedIcon","hasText","modifier","href","setRotationClass","rotation","_rotationClass","Error","glyphPrefix","isSmall","base","title","getClassName","attr","getGlyphClassName","toHtmlString","append","get","browser","memoize","memoized","cache","cacheId","join","Date","now","Math","random","Browser","ua","$container","userAgent","_fixIosLandscapeBug","isIos","lockViewport","addEventListener","version","ios","test","isWideScreen","val","parseInt","config","innerWidth","innerHeight","supportsAnimations","elemStyle","createElement","style","supportsProperty","toUpperCase","slice","supportsTouchEvents","supportsGeoLocation","navigator","getSingleton","$html","Button","block","progressive","destructive","quiet","Anchor","HTML","time","Section","Thumbnail","HEADING_SELECTOR","BLACKLISTED_THUMBNAIL_CLASS_SELECTORS","Page","displayTitle","url","getUrl","wikidataDescription","thumbnail","isMissing","isBorderBox","languageUrl","getDisplayTitle","width","isLandscape","height","namespaceNumber","protection","edit","sections","isMainPage","source","escape","inNamespace","namespace","findSectionHeadingByIndex","sectionIndex","filter","eq","findChildInSectionLead","$heading","$nextHeading","$lead","headingSelector","withNestedChildren","$matchingNodes","addBack","getLeadSectionElement","children","prevAll","hasClass","next","nextAll","nextUntil","isWikiText","isWatched","getRevisionId","revId","getTitle","getId","getNamespaceId","split","toLowerCase","isTalkPage","ns","_sectionLookup","sectionData","section","push","getThumbnails","blacklistSelector","thumbs","_thumbs","not","each","$a","$lazyImage","valid","parents","legacyMatch","RegExp","filename","decodeURIComponent","getSection","getSections","getRedLinks","newFromJSON","resp","revision","thumb","pageprops","displaytitle","terms","description","revisions","lastModified","getLastModifiedMessage","timestamp","getTime","user","pageid","missing","Panel","Drawer","collapseIcon","icon","appendToElement","closeOnScroll","click","appendTo","parent","onShowDrawer","onHideDrawer","stopPropagation","setTimeout","$window","one","hide","minHideDelay","removeClass","icons","Overlay","useVirtualKeyboardHack","hasLoadError","hasFixedHeader","fullScreen","hideOnExitClick","header","anchor","button","saveMsg","cancelButton","backButton","headerButtonsListClassName","headerChrome","fixedHeader","click .cancel, .confirm, .initial-header .back","closeOnContentTap","showSpinner","$spinner","hideSpinner","$overlayContent","setupEmulatedIosOverlayScrolling","onTouchStart","onTouchMove","_fixIosHeader","onExitClick","preventDefault","EVENT_EXIT","startY","originalEvent","touches","pageY","y","contentOuterHeight","outerHeight","contentLength","scrollTop","show","pageYOffset","scrollTo","_resizeContent","pageXOffset","detach","windowHeight","keyboardHeight","showHidden","params","click .cancel","onCancel","isVisible","toggle","units","limits","timeAgo","timestampDelta","i","value","round","unit","getTimeAgoDelta","isNow","delta","ts","username","gender","historyUrl","seconds","minutes","hours","days","months","years","language","convertNumber","message","parse","text","getRegistrationMessage","isRecent","indexOf","tag","level","line","hasReferences","subsections","MemoryCache","_cache","NoCache","set","CtaDrawer","redirectParams","redirectURL","returnto","signUpParams","type","progressiveButton","actionAnchor","click .hide","queryParams","returnTo","signupQueryParams","feature","result","displayWikibaseDescriptions","Array","unshift","concat","siblings","getDescription","getFileName","overlay","noHeader","ReferencesGateway","api","getReference","ERROR_NOT_EXIST","ERROR_OTHER","getMode","ModuleLoader","_register","require","registry","localRequire","loader","e","define","obj","deprecatedId","replacement","overlayManager","OverlayManager","router","_checkRoute","entries","stack","hideCurrent","_onHideOverlay","back","_showOverlay","once","_hideOverlay","_processMatch","factoryResult","attachHideEvent","promise","then","current","keys","reduce","m","_matchRoute","path","entry","route","previous","getNext","factory","shift","add","getPath","replaceCurrent","sectionTemplate","transformSections","lastSection","existingSectionLevels","map","s","collapseLevel","min","assignToParent","listOfSections","child","PageGateway","getPage","endpoint","leadOnly","dataType","action","page","redirect","noheadings","sectionprop","resolveObj","mv","error","reject","mobileview","lastmodified","lastmodifiedby","isArray","lead","mainpage","lastModifiedTimestamp","languageCount","languagecount","hasVariants","hasvariants","lastModifiedUserName","lastModifiedUserGender","invalidatePage","_getLanguageVariantsFromApiResponse","generalData","general","variantPath","variantarticlepath","variants","index","item","autonym","lang","code","getPageLanguages","meta","siprop","lllimit","titles","formatversion","llprop","llinlanguagecode","languages","pages","langlinks","_getAPIResponseFromHTML","substr","$span","getSectionsFromHTML","loadingOverlay","newLoadingOverlay","loadModule","delegateHide","showLoadingOverlay","hideOverlayIfNeeded","using","viewport","getSectionId","hSelector","$parent","Skin","mainMenu","warn","eventBus","referencesGateway","setupImageLoading","lazyLoadReferences","getUnloadedImages","toArray","offset","loadImagesList","imagePlaceholders","_loadImages","images","placeholder","$placeholder","isElementCloseToViewport","is","shouldLoadImage","callbacks","loadImage","$downloadingImage","ownerDocument","resolve","class","alt","srcset","$content","gateway","wasExpanded","isReferenceSection","prependTo","getReferencesLists","lastId","refListIndex","getReferencesList","refListElements","remove","loadImagesAndSetData","getLicenseMsg","licenseMsg","mfLicense","licensePlural","plural","link","arrowOptions","Toggler","_enable","isClosed","getExpandedSections","expandedSections","JSON","storage","saveExpandedSections","stringify","expandStoredSections","toggler","$sectionHeading","$headline","cleanObsoleteStoredSections","floor","indicator","sectionNumber","toggleClass","Boolean","aria-pressed","aria-expanded","headline","isSectionOpen","storeSectionToggleState","reveal","$target","prev","top","expandSections","$link","collapseSectionsByDefault","checkHash","location","$indicator","tabindex","aria-haspopup","aria-controls","target","which","enableKeyboardActions","internalRedirect","internalRedirectHash","checkInternalRedirectAndHash","_getExpandedSections","_expandStoredSections","_cleanObsoleteStoredSections","ReferencesHtmlScraperGateway","getReferenceFromContainer","PageList","renderPageImages","storageKey","Toast","requestIdleCallback","_showPending","notification","notify","notif","close","showOnPageReload","content","WatchstarGateway","toast","Watchstar","click a","funnel","ctaDrawerOptions","campaign","returntoquery","_super","_watched","tooltip","unwatchedClass","watchedClass","isAnon","onLinksClick","onStatusToggleAnon","drawer","onStatusToggleUser","checker","postWatched","stopInterval","clearInterval","setInterval","postStatusesByTitle","onStatusToggle","getStatuses","ids","getStatusesByID","getStatusesByTitle","inprop","pageids","rsp","_unmarshalGetResponse","watched","unwatch","postWithToken","statuses","WatchstarPageList","wsGateway","$items","queryUnitializedItems","parsePagesFromItems","getPages","renderItems","_","$item","_appendWatchstar","watchstar","moduleLoader","context","ReferencesDrawer","ReferencesMobileViewGateway","extendSearchParams","rlModuleLoader","eventBusSingleton","SearchOverlay","schemaMobileWebSearch","MobileWebSearchLogger","SearchGateway","mobileFrontend","search","subscribeMobileWebSearchSchema","citation","errorClassName","click sup a","css","onShow","onHide","showReference","refNumber","reference","err","showNestedReference","$dest","referencesMobileViewGateway","cachedReferencesSections","$section","headingId","sectionId","Api","feedbackLink","gatewayClass","clearIcon","searchContentIcon","searchTerm","placeholderMsg","noResultsMsg","searchContentNoResultsMsg","feedback","prompt","input input","click .clear","click .search-content","click .overlay-content","click .overlay-content > div","touchstart .results","mousedown .results","click .results a","onInputInput","performSearch","$clear","$input","onClickClear","focus","onClickSearchContent","$form","submit","onClickOverlayContent","trigger","onClickOverlayContentDiv","hideKeyboardOnScroll","blur","onClickResult","currentTarget","$result","closest","resultIndex","$results","timer","clearSearch","clearTimeout","$searchContent","$searchFeedback","$resultContainer","searchData","delay","showKeyboard","len","setSelectionRange","isCached","lastQuery","_pendingQuery","abort","xhr","results","resetSearch","empty","Schema","eventLog","platform","platformVersion","trackSubscribe","topic","userSessionToken","searchSessionToken","_newUserSession","generateRandomSessionId","_newSearchSession","searchSessionCreatedAt","onSearchShow","onSearchStart","track","timeOffsetSinceStart","onSearchResults","resultSetType","numberOfResults","timeToDisplayResults","onSearchResultClick","clickIndex","register","searchOverlay","logger","searchCache","generator","searchNamespace","getApiData","redirects","pilimit","pithumbsize","tiny","_createSearchRegEx","str","_highlightSearchTerm","term","_getPage","pageInfo","displaytext","_processData","sort","a","b","request"],"mappings":"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","file":"mobile.startup.js","sourcesContent":["/* global $ */\n\n/**\n * Utility library\n * @class util\n * @singleton\n */\nmodule.exports = {\n\t/**\n\t * Escape a string for use as a css selector\n\t * @memberof util\n\t * @instance\n\t * @param {string} selector\n\t * @return {string}\n\t */\n\tescapeSelector: function ( selector ) {\n\t\treturn $.escapeSelector( selector );\n\t},\n\t/**\n\t * Wrapper class for the $.grep\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Deferred}\n\t */\n\tgrep: function () {\n\t\treturn $.grep.apply( $, arguments );\n\t},\n\t/**\n\t * Run method when document is ready.\n\t * @memberof util\n\t * @instance\n\t * @param {Function} fn\n\t * @return {jQuery.Object}\n\t */\n\tdocReady: function ( fn ) {\n\t\treturn $( fn );\n\t},\n\t/**\n\t * Wrapper class for the $.when\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Deferred}\n\t */\n\twhen: function () {\n\t\treturn $.when.apply( $, arguments );\n\t},\n\t/**\n\t * Wrapper class for the Deferred method\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Deferred}\n\t */\n\tDeferred: function () {\n\t\tvar d = $.Deferred(),\n\t\t\twarning = 'Use Promise compatible methods `then` and `catch` instead.';\n\n\t\t/* eslint-disable no-restricted-properties */\n\t\tmw.log.deprecate( d, 'fail', d.fail, warning );\n\t\tmw.log.deprecate( d, 'always', d.always, warning );\n\t\tmw.log.deprecate( d, 'done', d.done, warning );\n\t\t/* eslint-enable no-restricted-properties */\n\t\treturn d;\n\t},\n\t/**\n\t * Adds a class to the document\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Object} element representing the documentElement\n\t */\n\tgetDocument: function () {\n\t\treturn $( document.documentElement );\n\t},\n\t/**\n\t * Get the window object\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Object}\n\t */\n\tgetWindow: function () {\n\t\treturn $( window );\n\t},\n\t/**\n\t * Given some html, create new element(s).\n\t * Unlike jQuery.parseHTML this will return a jQuery object\n\t * not an array.\n\t * @memberof util\n\t * @instance\n\t * @param {string} html\n\t * @param {Element} [ctx] Document element to serve as the context\n\t *  in which the HTML fragment will be created\n\t * @return {jQuery.Object}\n\t */\n\tparseHTML: function ( html, ctx ) {\n\t\treturn $( $.parseHTML( html, ctx ) );\n\t},\n\t/**\n\t * wrapper for jQuery util function to check if something is numeric\n\t * @memberof util\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisNumeric: function () {\n\t\treturn $.isNumeric.apply( $, arguments );\n\t},\n\t/**\n\t * Wrapper for jQuery.extend method. In future this can be bound to Object.assign\n\t * when support allows.\n\t *\n\t * Warning: if only one argument is supplied to util.extend(), this means the target argument\n\t * was omitted. In this case, the jQuery object itself is assumed to be the target.\n\t *\n\t * @memberof util\n\t * @instance\n\t * @return {Object}\n\t */\n\textend: function () {\n\t\treturn $.extend.apply( $, arguments );\n\t},\n\t/**\n\t * Escape dots and colons in a hash, jQuery doesn't like them because they\n\t * look like CSS classes and pseudoclasses. See\n\t * http://bugs.jquery.com/ticket/5241\n\t * http://stackoverflow.com/questions/350292/how-do-i-get-jquery-to-select-elements-with-a-period-in-their-id\n\t * @memberof util\n\t * @instance\n\t * @param {string} hash A hash to escape\n\t * @return {string}\n\t */\n\tescapeHash: function ( hash ) {\n\t\treturn hash.replace( /(:|\\.)/g, '\\\\$1' );\n\t},\n\n\t/**\n\t * Heuristic for determining whether an Event should be handled by\n\t * MobileFrontend or allowed to bubble to the browser.\n\t * @memberof util\n\t * @instance\n\t * @param {Event} ev\n\t * @return {boolean} True if event is modified with control, alt, meta, or\n\t *                   shift keys and should probably be handled by the\n\t *                   browser.\n\t *\n\t * todo: move this function to a ClickUtil file once bundling and code\n\t * splitting is supported.\n\t */\n\tisModifiedEvent: function ( ev ) {\n\t\treturn ev.altKey || ev.ctrlKey || ev.metaKey || ev.shiftKey;\n\t},\n\n\t/**\n\t * Pipe event emitted by source through proxy. Subscribers to proxy will receive the event as\n\t * though proxy was the originator.\n\t *\n\t * @param {OO.EventEmitter} src\n\t * @param {OO.EventEmitter} proxy\n\t * @param {string} event Event type to listen for.\n\t * @param {any[]} [args] Arguments to pass to\n\t *  subscribers, will be prepended to emitted arguments.\n\t * @return {OO.EventEmitter} The source.\n\t */\n\trepeatEvent: function ( src, proxy, event, args ) {\n\t\treturn src.on( event, function ( args ) { return proxy.emit( event, args ); }, args );\n\t}\n};\n","/**\n * Extends a class with new methods and member properties.\n *\n * @param {Function} Child function\n * @param {Object|Function} ParentOrPrototype class to inherit from\n *  OR if no inheriting class a prototype to extend the class with\n * @param {Object} [prototype]\n */\nfunction mfExtend( Child, ParentOrPrototype, prototype ) {\n\tvar key;\n\tif ( prototype ) {\n\t\tOO.inheritClass( Child, ParentOrPrototype );\n\t} else {\n\t\tOO.initClass( Child );\n\t\tprototype = ParentOrPrototype;\n\t}\n\tfor ( key in prototype ) {\n\t\tChild.prototype[key] = prototype[key];\n\t}\n}\n\nmodule.exports = mfExtend;\n","/* global $ */\nvar util = require( './util' ),\n\tmfExtend = require( './mfExtend' ),\n\tDEPRECATED_PROPERTIES = [ 'isBorderBox', 'className' ],\n\t// Cached regex to split keys for `delegate`.\n\tdelegateEventSplitter = /^(\\S+)\\s*(.*)$/,\n\tidCounter = 0;\n\n/**\n * Generate a unique integer id (unique within the entire client session).\n * Useful for temporary DOM ids.\n * @param {string} prefix Prefix to be used when generating the id.\n * @return {string}\n */\nfunction uniqueId( prefix ) {\n\tvar id = ( ++idCounter ).toString();\n\treturn prefix ? prefix + id : id;\n}\n\n/**\n * Should be extended using extend().\n *\n * When options contains el property, this.$el in the constructed object\n * will be set to the corresponding jQuery object. Otherwise, this.$el\n * will be an empty div.\n *\n * When extended using extend(), if the extended prototype contains\n * template property, this.$el will be filled with rendered template (with\n * options parameter used as template data).\n *\n * template property can be a string which will be passed to mw.template.compile()\n * or an object that has a render() function which accepts an object with\n * template data as its argument (similarly to an object created by\n * mw.template.compile()).\n *\n * You can also define a defaults property which should be an object\n * containing default values for the template (if they're not present in\n * the options parameter).\n *\n * If this.$el is not a jQuery object bound to existing DOM element, the\n * view can be attached to an element using appendTo(), prependTo(),\n * insertBefore(), insertAfter() proxy functions.\n *\n * append(), prepend(), before(), after() can be used to modify $el. on()\n * can be used to bind events.\n *\n * You can also use declarative DOM events binding by specifying an `events`\n * map on the class. The keys will be 'event selector' and the value can be\n * either the name of a method to call, or a function. All methods and\n * functions will be executed on the context of the View.\n *\n * Inspired from Backbone.js\n * https://github.com/jashkenas/backbone/blob/master/backbone.js#L1128\n *\n * Example:\n * ```js\n *     var MyComponent = View.extend( {\n *       events: {\n *\t       'mousedown .title': 'edit',\n *\t       'click .button': 'save',\n *\t       'click .open': function(e) { ... }\n *       },\n *       edit: function ( ev ) {\n *         //...\n *       },\n *       save: function ( ev ) {\n *         //...\n *       }\n *     } );\n * ```\n *\n * Example:\n * ```js\n *     var View, section;\n *     function Section( options ) {\n *       View.call( this, options );\n *     }\n *     View = require( './View' );\n *     require( './mfExtend' )( Section, View, {\n *       template: mw.template.compile( \"&lt;h2&gt;{{title}}&lt;/h2&gt;\" ),\n *     } );\n *     section = new Section( { title: 'Test', text: 'Test section body' } );\n *     section.appendTo( 'body' );\n * ```\n *\n * @class View\n * @mixins OO.EventEmitter\n */\n\nfunction View() {\n\tvar self = this;\n\tDEPRECATED_PROPERTIES.forEach( function ( property ) {\n\t\tif ( self[ property ] !== undefined ) {\n\t\t\tmw.log.deprecate( self, property, self[ property ],\n\t\t\t\t'Setting `' + property + '` on the View is deprecated. Please use options.' );\n\t\t}\n\t} );\n\tthis.initialize.apply( this, arguments );\n}\nOO.mixinClass( View, OO.EventEmitter );\nmfExtend( View, {\n\t/**\n\t * Name of tag that contains the rendered template\n\t * @memberof View\n\t * @instance\n\t * @property {string} tagName\n\t */\n\ttagName: 'div',\n\t/**\n\t * Tells the View to ignore tagName and className when constructing the element\n\t * and to rely solely on the template\n\t * @memberof View\n\t * @instance\n\t * @property {boolean} isTemplateMode\n\t */\n\tisTemplateMode: false,\n\t/**\n\t * @memberof View\n\t * @instance\n\t * @property {Mixed}\n\t * Specifies the template used in render(). Object|string|HoganTemplate\n\t */\n\ttemplate: undefined,\n\n\t/**\n\t * Specifies partials (sub-templates) for the main template. Example:\n\t *\n\t *     @example\n\t *     // example content for the \"some\" template (sub-template will be\n\t *     // inserted where {{>content}} is):\n\t *     // <h1>Heading</h1>\n\t *     // {{>content}}\n\t *\n\t *     oo.mfExtend( SomeView, View, {\n\t *       template: M.template.get( 'some.hogan' ),\n\t *       templatePartials: { content: M.template.get( 'sub.hogan' ) }\n\t *     }\n\t *\n\t * @memberof View\n\t * @instance\n\t * @property {Object}\n\t */\n\ttemplatePartials: {},\n\n\t/**\n\t * A set of default options that are merged with options passed into the initialize\n\t * function.\n\t * @memberof View\n\t * @instance\n\t * @property {Object} defaults Default options hash.\n\t * @property {jQuery.Object|string} [defaults.el] jQuery selector to use for rendering.\n\t * @property {boolean} [defaults.skipTemplateRender] Whether to enhance views already in\n\t * DOM. When enabled, the template is disabled so that it is not rendered in the DOM.\n\t * Use in conjunction with View::defaults.$el to associate the View with an existing\n\t * already rendered element in the DOM.\n\t */\n\tdefaults: {},\n\n\t/**\n\t * Default events map\n\t * @memberof View\n\t * @instance\n\t */\n\tevents: null,\n\n\t/**\n\t * Run once during construction to set up the View\n\t * @memberof View\n\t * @instance\n\t * @param {Object} options Object passed to the constructor.\n\t */\n\tinitialize: function ( options ) {\n\t\tvar self = this;\n\n\t\tOO.EventEmitter.call( this );\n\t\toptions = util.extend( {}, this.defaults, options );\n\t\tthis.options = options;\n\t\t// Assign a unique id for dom events binding/unbinding\n\t\tthis.cid = uniqueId( 'view' );\n\n\t\t// TODO: if template compilation is too slow, don't compile them on a\n\t\t// per object basis, but don't worry about it now (maybe add cache to\n\t\t// M.template.compile())\n\t\tif ( typeof this.template === 'string' ) {\n\t\t\tthis.template = mw.template.compile( this.template );\n\t\t}\n\n\t\tif ( options.el ) {\n\t\t\t// Note the element may not be in the document so must use global jQuery here\n\t\t\tthis.$el = $( options.el );\n\t\t} else {\n\t\t\tthis.$el = this.parseHTML( '<' + this.tagName + '>' );\n\t\t}\n\n\t\t// Make sure the element is ready to be manipulated\n\t\tif ( this.$el.length ) {\n\t\t\tthis._postInitialize( options );\n\t\t} else {\n\t\t\tutil.docReady( function () {\n\t\t\t\t// Note the element may not be in the document so must use global jQuery here\n\t\t\t\tself.$el = $( options.el );\n\t\t\t\tself._postInitialize( options );\n\t\t\t} );\n\t\t}\n\t},\n\n\t/**\n\t * Resolves inherited properties by prioritizing the property attached to `self` over the\n\t * on attached to the `props` object. Returns the value of that property or `defaultValue`.\n\t *\n\t * NOTE: Passing values through `this` is being deprecated in favor of explicit parameters.\n\t * see https://phabricator.wikimedia.org/T209007 for details.\n\t *\n\t * @param {View} self\n\t * @param {Object} props\n\t * @param {string} propName\n\t * @param {*} [defaultValue]\n\t *\n\t * @return {*}\n\t */\n\t_resolveInheritedProp: function ( self, props, propName, defaultValue ) {\n\t\tif ( propName in self ) { return self[ propName ]; }\n\n\t\tif ( Object.prototype.hasOwnProperty.call( props, propName ) ) {\n\t\t\treturn props[ propName ];\n\t\t}\n\n\t\treturn defaultValue;\n\t},\n\n\t/**\n\t * Called when this.$el is ready.\n\t * @memberof View\n\t * @instance\n\t * @private\n\t * @param {Object} props\n\t */\n\t_postInitialize: function ( props ) {\n\t\tvar\n\t\t\tBORDER_BOX_CLASS = 'view-border-box',\n\t\t\tclassName = this._resolveInheritedProp( this, props, 'className', '' );\n\n\t\tthis.$el.addClass( className );\n\n\t\t// unless `isBorderBox` is explicitly passed in as `false`\n\t\t// by either `this` or `props`add the `BORDER_BOX_CLASS`.\n\t\tif ( this._resolveInheritedProp( this, props, 'isBorderBox' ) !== false ) {\n\t\t\tthis.$el.addClass( BORDER_BOX_CLASS );\n\t\t}\n\n\t\tthis.render( this.options );\n\t},\n\n\t/**\n\t * Function called before the view is rendered. Can be redefined in\n\t * objects that extend View.\n\t * @memberof View\n\t * @instance\n\t */\n\tpreRender: function () {},\n\n\t/**\n\t * Function called after the view is rendered. Can be redefined in\n\t * objects that extend View.\n\t *\n\t * @memberof View\n\t * @instance\n\t */\n\tpostRender: function () {},\n\n\t// eslint-disable-next-line valid-jsdoc\n\t/**\n\t * Fill this.$el with template rendered using data if template is set.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {Object} data Template data. Will be merged into the view's\n\t * options\n\t * @chainable\n\t */\n\trender: function ( data ) {\n\t\tvar $el, html;\n\t\tutil.extend( this.options, data );\n\t\tthis.preRender();\n\t\tthis.undelegateEvents();\n\t\tif ( this.template && !this.options.skipTemplateRender ) {\n\t\t\thtml = this.template.render( this.options, this.templatePartials );\n\t\t\tif ( this.isTemplateMode ) {\n\t\t\t\t$el = $( html );\n\t\t\t\tthis.$el.replaceWith( $el );\n\t\t\t\tthis.$el = $el;\n\t\t\t} else {\n\t\t\t\tthis.$el.html( html );\n\t\t\t}\n\t\t}\n\t\tthis.postRender();\n\t\tthis.delegateEvents();\n\t\treturn this;\n\t},\n\n\t/**\n\t * Wraps this.$el.find, so that you can search for elements in the view's\n\t * ($el's) scope.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {string} query A jQuery CSS selector.\n\t * @return {JQuery.Object} jQuery object containing results of the search.\n\t */\n\t$: function ( query ) {\n\t\treturn this.$el.find( query );\n\t},\n\n\t/**\n\t * Set callbacks, where `this.events` is a hash of\n\t *\n\t * {\"event selector\": \"callback\"}\n\t *\n\t * {\n\t *\t'mousedown .title': 'edit',\n\t *\t'click .button': 'save',\n\t *\t'click .open': function(e) { ... }\n\t * }\n\t *\n\t * pairs. Callbacks will be bound to the view, with `this` set properly.\n\t * Uses event delegation for efficiency.\n\t * Omitting the selector binds the event to `this.el`.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {Object} events Optionally set this events instead of the ones on this.\n\t */\n\tdelegateEvents: function ( events ) {\n\t\tvar match, key, method;\n\t\t// Take either the events parameter or the this.events to process\n\t\tevents = events || this.events;\n\t\tif ( events ) {\n\t\t\t// Remove current events before re-binding them\n\t\t\tthis.undelegateEvents();\n\t\t\tfor ( key in events ) {\n\t\t\t\tmethod = events[ key ];\n\t\t\t\t// If the method is a string name of this.method, get it\n\t\t\t\tif ( typeof method !== 'function' ) {\n\t\t\t\t\tmethod = this[ events[ key ] ];\n\t\t\t\t}\n\t\t\t\tif ( method ) {\n\t\t\t\t\t// Extract event and selector from the key\n\t\t\t\t\tmatch = key.match( delegateEventSplitter );\n\t\t\t\t\tthis.delegate( match[ 1 ], match[ 2 ], method.bind( this ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Add a single event listener to the view's element (or a child element\n\t * using `selector`). This only works for delegate-able events: not `focus`,\n\t * `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {string} eventName\n\t * @param {string} selector\n\t * @param {Function} listener\n\t */\n\tdelegate: function ( eventName, selector, listener ) {\n\t\tthis.$el.on( eventName + '.delegateEvents' + this.cid, selector,\n\t\t\tlistener );\n\t},\n\n\t/**\n\t * Clears all callbacks previously bound to the view by `delegateEvents`.\n\t * You usually don't need to use this, but may wish to if you have multiple\n\t * views attached to the same DOM element.\n\t * @memberof View\n\t * @instance\n\t */\n\tundelegateEvents: function () {\n\t\tif ( this.$el ) {\n\t\t\tthis.$el.off( '.delegateEvents' + this.cid );\n\t\t}\n\t},\n\n\t/**\n\t * A finer-grained `undelegateEvents` for removing a single delegated event.\n\t * `selector` and `listener` are both optional.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {string} eventName\n\t * @param {string} selector\n\t * @param {Function} listener\n\t */\n\tundelegate: function ( eventName, selector, listener ) {\n\t\tthis.$el.off( eventName + '.delegateEvents' + this.cid, selector,\n\t\t\tlistener );\n\t},\n\n\t/**\n\t * See parseHTML method of util singleton\n\t *\n\t * @memberof View\n\t * @instance\n\t */\n\tparseHTML: util.parseHTML\n} );\n\n/**\n * @memberof View\n * @instance\n * @func append\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func append\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func prepend\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func prepend\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func appendTo\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func prependTo\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func after\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func after\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func before\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func before\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func insertAfter\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func insertBefore\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func remove\n * @param {string} [selector]\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func detach\n * @param {string} [selector]\n * @return {this}\n */\n\n[\n\t'append',\n\t'prepend',\n\t'appendTo',\n\t'prependTo',\n\t'after',\n\t'before',\n\t'insertAfter',\n\t'insertBefore',\n\t'remove',\n\t'detach'\n].forEach( function ( prop ) {\n\tView.prototype[prop] = function () {\n\t\tthis.$el[prop].apply( this.$el, arguments );\n\t\treturn this;\n\t};\n} );\n\nmodule.exports = View;\n","var\n\tCANCEL_GLYPH = 'overlay-close',\n\tIcon = require( './Icon' ),\n\tutil = require( './util' );\n\n/**\n * A set of shared icons.\n *\n * Factory methods are used to keep separate features that use the same icons\n * from accidentally manipulating one another's DOM when calling methods like\n * `remove`.\n *\n * @class icons\n * @singleton\n * @uses Icon\n */\nmodule.exports = {\n\tCANCEL_GLYPH: CANCEL_GLYPH,\n\t// Exported to support testing and stubbing\n\tIcon: Icon,\n\t/**\n\t * Gets a cancel icon\n\t *\n\t * The icon should be used to inform the user that the front-end is\n\t * communicating with the back-end.\n\t * @memberof icons\n\t * @instance\n\t * @param {string} variant\n\t * @return {Icon}\n\t */\n\tcancel: function ( variant ) {\n\t\tvar glyph = variant ? CANCEL_GLYPH + '-' + variant : CANCEL_GLYPH;\n\t\treturn new this.Icon( {\n\t\t\ttagName: 'button',\n\t\t\tname: glyph,\n\t\t\tadditionalClassNames: 'cancel',\n\t\t\tlabel: mw.msg( 'mobile-frontend-overlay-close' )\n\t\t} );\n\t},\n\t/**\n\t * Gets a spinner icon.\n\t *\n\t * The icon should be used to inform the user that the front-end is\n\t * communicating with the back-end.\n\t * @memberof icons\n\t * @instance\n\t * @param {Object} [options] See `Icon` for more details\n\t * @return {Icon}\n\t */\n\tspinner: function ( options ) {\n\t\toptions = options || {};\n\n\t\treturn new this.Icon( util.extend( options, {\n\t\t\tname: 'spinner',\n\t\t\tlabel: mw.msg( 'mobile-frontend-loading-message' ),\n\t\t\tadditionalClassNames: 'spinner loading'\n\t\t} ) );\n\t},\n\t/**\n\t * Gets a non-filled watch star icon.\n\t *\n\t * @memberof icons\n\t * @instance\n\t * @return {Icon}\n\t */\n\twatchIcon: function () {\n\t\treturn new this.Icon( {\n\t\t\tname: 'watch',\n\t\t\tadditionalClassNames: 'watch-this-article'\n\t\t} );\n\t},\n\t/**\n\t * Gets a filled watch star icon.\n\t *\n\t * @memberof icons\n\t * @instance\n\t * @return {Icon}\n\t */\n\twatchedIcon: function () {\n\t\treturn new this.Icon( {\n\t\t\tname: 'watched',\n\t\t\tadditionalClassNames: 'watch-this-article watched'\n\t\t} );\n\t}\n};\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' );\n\n/**\n * A wrapper for creating an icon.\n * @class Icon\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Icon( options ) {\n\tif ( options.hasText ) {\n\t\toptions.modifier = 'mw-ui-icon-before';\n\t}\n\tif ( options.href ) {\n\t\toptions.tagName = 'a';\n\t}\n\tView.call( this, options );\n}\n\nmfExtend( Icon, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Icon\n\t * @instance\n\t */\n\tpreRender: function () {\n\t\tthis.setRotationClass();\n\t},\n\t/**\n\t * Internal method that sets the correct rotation class for the icon\n\t * based on the value of rotation\n\t * @memberof Icon\n\t * @instance\n\t * @private\n\t */\n\tsetRotationClass: function () {\n\t\tvar options = this.options;\n\t\tif ( options.rotation ) {\n\t\t\tswitch ( options.rotation ) {\n\t\t\t\tcase -180:\n\t\t\t\tcase 180:\n\t\t\t\t\toptions._rotationClass = 'mf-mw-ui-icon-rotate-flip';\n\t\t\t\t\tbreak;\n\t\t\t\tcase -90:\n\t\t\t\t\toptions._rotationClass = 'mf-mw-ui-icon-rotate-anti-clockwise';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 90:\n\t\t\t\t\toptions._rotationClass = 'mf-mw-ui-icon-rotate-clockwise';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Bad value for rotation given. Must be ±90, 0 or ±180.' );\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Icon\n\t * @instance\n\t */\n\tisTemplateMode: true,\n\t/**\n\t * @memberof Icon\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {boolean} defaults.hasText Whether the icon has text.\n\t * @property {boolean} defaults.isSmall Whether the icon should be small.\n\t * @property {string} [defaults.href] value of href attribute,\n\t *  when set tagName will default to anchor tag\n\t * @property {string} defaults.tagName The name of the tag in which the icon is wrapped.\n\t *  Defaults to 'a' when href option present.\n\t * @property {string} defaults.base String used as a base for generating class names.\n\t * Defaults to 'mw-ui-icon'.\n\t * @property {string} defaults.name Name of the icon.\n\t * @property {string} defaults.modifier Additional class name.\n\t * Defaults to 'mw-ui-icon-element'.\n\t * @property {string} defaults.title Tooltip text.\n\t * @property {boolean} defaults.rotation will rotate the icon by a certain number\n\t *  of degrees.\n\t *  Must be ±90, 0 or ±180 or will throw exception.\n\t */\n\tdefaults: {\n\t\trotation: 0,\n\t\thasText: false,\n\t\thref: undefined,\n\t\tglyphPrefix: 'mf',\n\t\ttagName: 'div',\n\t\tisSmall: false,\n\t\tbase: 'mw-ui-icon',\n\t\tname: '',\n\t\tmodifier: 'mw-ui-icon-element',\n\t\ttitle: ''\n\t},\n\t/**\n\t * Return the full class name that is required for the icon to render\n\t * @memberof Icon\n\t * @instance\n\t * @return {string}\n\t */\n\tgetClassName: function () {\n\t\treturn this.$el.attr( 'class' );\n\t},\n\t/**\n\t * Return the class that relates to the icon glyph\n\t * @memberof Icon\n\t * @instance\n\t * @return {string}\n\t */\n\tgetGlyphClassName: function () {\n\t\treturn this.options.base + '-' + this.options.glyphPrefix + '-' + this.options.name;\n\t},\n\t/**\n\t * Return the HTML representation of this view\n\t * @memberof Icon\n\t * @instance\n\t * @return {string}\n\t */\n\ttoHtmlString: function () {\n\t\treturn this.parseHTML( '<div>' ).append( this.$el ).html();\n\t},\n\ttemplate: mw.template.get( 'mobile.startup', 'icon.hogan' )\n} );\n\nmodule.exports = Icon;\n","var\n\tutil = require( './util' ),\n\tbrowser;\n\n/**\n * Memoize a class method. Caches the result of the method based on the\n * arguments. Instances do not share a cache.\n * @param {Function} method Method to be memoized\n * @return {Function}\n */\nfunction memoize( method ) {\n\t/**\n\t * Memoized version of the method\n\t * @return {Function}\n\t */\n\tvar memoized = function () {\n\t\tvar cache = this[ '__cache' + memoized.cacheId ] ||\n\t\t\t( this[ '__cache' + memoized.cacheId ] = {} ),\n\t\t\tkey = [].join.call( arguments, '|' );\n\t\tif ( Object.prototype.hasOwnProperty.call( cache, key ) ) {\n\t\t\treturn cache[ key ];\n\t\t}\n\t\treturn ( cache[ key ] = method.apply( this, arguments ) );\n\t};\n\tmemoized.cacheId = Date.now().toString() + Math.random().toString();\n\treturn memoized;\n}\n\n/**\n * Representation of user's current browser\n * @class Browser\n * @param {string} ua the user agent of the current browser\n * @param {jQuery.Object} $container an element to associate with the Browser object\n */\nfunction Browser( ua, $container ) {\n\tthis.userAgent = ua;\n\tthis.$el = $container;\n\tthis._fixIosLandscapeBug();\n}\n\nBrowser.prototype = {\n\t/**\n\t * When rotating to landscape stop page zooming on ios 4 and 5.\n\t * @memberof Browser\n\t * @instance\n\t * @private\n\t */\n\t_fixIosLandscapeBug: function () {\n\t\tvar self = this,\n\t\t\tviewport = this.$el.find( 'meta[name=\"viewport\"]' )[0];\n\n\t\t// see http://adactio.com/journal/4470/ (fixed in ios 6)\n\t\tif ( viewport && ( this.isIos( 4 ) || this.isIos( 5 ) ) ) {\n\t\t\tthis.lockViewport();\n\t\t\tdocument.addEventListener( 'gesturestart', function () {\n\t\t\t\tself.lockViewport();\n\t\t\t}, false );\n\t\t}\n\t},\n\t/**\n\t * Returns whether the current browser is an ios device.\n\t * FIXME: jquery.client does not support iPad detection so we cannot use it.\n\t * @memberof Browser\n\t * @instance\n\t * @param {number} [version] integer describing a specific version you want to test against.\n\t * @return {boolean}\n\t */\n\tisIos: memoize( function ( version ) {\n\t\tvar ua = this.userAgent,\n\t\t\tios = /ipad|iphone|ipod/i.test( ua );\n\n\t\tif ( ios && version ) {\n\t\t\tswitch ( version ) {\n\t\t\t\tcase 8:\n\t\t\t\t\t// Test UA for iOS8. Or for simulator look for Version 8\n\t\t\t\t\t// In the iOS simulator the OS is the host machine OS version\n\t\t\t\t\t// This makes testing in iOS8 simulator work as expected\n\t\t\t\t\treturn /OS 8_/.test( ua ) || /Version\\/8/.test( ua );\n\t\t\t\tcase 4:\n\t\t\t\t\treturn /OS 4_/.test( ua );\n\t\t\t\tcase 5:\n\t\t\t\t\treturn /OS 5_/.test( ua );\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn ios;\n\t\t}\n\t} ),\n\t/**\n\t * Locks the viewport so that pinch zooming is disabled\n\t * @memberof Browser\n\t * @instance\n\t */\n\tlockViewport: function () {\n\t\tif ( this.$el ) {\n\t\t\tthis.$el.find( 'meta[name=\"viewport\"]' )\n\t\t\t\t.attr( 'content', 'initial-scale=1.0, maximum-scale=1.0, user-scalable=no' );\n\t\t}\n\t},\n\t/**\n\t * Determine if a device has a widescreen.\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisWideScreen: memoize( function () {\n\t\tvar val = parseInt( mw.config.get( 'wgMFDeviceWidthTablet' ), 10 );\n\t\t// Check portrait and landscape mode to be consistent\n\t\treturn window.innerWidth >= val || window.innerHeight >= val;\n\t} ),\n\t/**\n\t * Checks browser support for CSS transforms, transitions\n\t * and CSS animation.\n\t * Currently assumes support for the latter 2 in the case of the\n\t * former.\n\t * See http://stackoverflow.com/a/12621264/365238\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tsupportsAnimations: memoize( function () {\n\t\tvar elemStyle = document.createElement( 'foo' ).style;\n\t\tfunction supportsProperty( property ) {\n\t\t\t// We only test \"webkit-\", because that's the only prefix needed for the relevant\n\t\t\t// properties (in supportsAnimations) and supported browsers. If usage is expanded,\n\t\t\t// other prefixes may need to be checked as well.\n\t\t\treturn property in elemStyle ||\n\t\t\t\t( 'webkit' + property[ 0 ].toUpperCase() + property.slice( 1 ) ) in elemStyle;\n\t\t}\n\t\treturn supportsProperty( 'animationName' ) &&\n\t\t\tsupportsProperty( 'transform' ) &&\n\t\t\tsupportsProperty( 'transition' );\n\t} ),\n\t/**\n\t * Whether touchstart and other touch events are supported by the current browser.\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tsupportsTouchEvents: memoize( function () {\n\t\treturn 'ontouchstart' in window;\n\t} ),\n\t/**\n\t * Detect if browser supports geolocation\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tsupportsGeoLocation: memoize( function () {\n\t\treturn 'geolocation' in window.navigator;\n\t} )\n};\n\n/**\n * @memberof Browser\n * @return {Browser}\n */\nBrowser.getSingleton = function () {\n\tvar $html;\n\tif ( !browser ) {\n\t\t$html = util.getDocument();\n\t\tbrowser = new Browser( window.navigator.userAgent, $html );\n\t}\n\treturn browser;\n};\n\nmodule.exports = Browser;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' );\n\n/**\n * A wrapper for creating a button.\n * @class Button\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Button( options ) {\n\tif ( options.href ) {\n\t\toptions.tagName = 'a';\n\t}\n\tView.call( this, options );\n}\n\nmfExtend( Button, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Button\n\t * @instance\n\t */\n\tisTemplateMode: true,\n\t/**\n\t * @memberof Button\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.tagName The name of the tag in which the button is wrapped.\n\t * @property {boolean} defaults.block is stacked button\n\t * @property {boolean} defaults.progressive is progressive action\n\t *   This option is deprecated. Please use `progressive`.\n\t * @property {boolean} defaults.quiet is quiet button\n\t * @property {boolean} defaults.destructive is destructive action\n\t * @property {string} defaults.additionalClassNames Additional class name(s).\n\t * @property {string} defaults.href url\n\t * @property {string} defaults.label of button\n\t */\n\tdefaults: {\n\t\ttagName: 'a',\n\t\tblock: undefined,\n\t\tprogressive: undefined,\n\t\tdestructive: undefined,\n\t\tquiet: undefined,\n\t\tadditionalClassNames: '',\n\t\thref: undefined,\n\t\tlabel: undefined\n\t},\n\t/**\n\t * @memberof Button\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'button.hogan' )\n} );\n\nmodule.exports = Button;\n","var\n\tView = require( './View' ),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * A wrapper for creating an anchor.\n * @class Anchor\n * @extends View\n */\nfunction Anchor() {\n\tView.apply( this, arguments );\n}\n\nmfExtend( Anchor, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Anchor\n\t * @instance\n\t */\n\tisTemplateMode: true,\n\t/**\n\t * @memberof Anchor\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {boolean} defaults.progressive is progressive action\n\t * @property {boolean} defaults.destructive is destructive action\n\t * @property {string} defaults.additionalClassNames Additional class name(s).\n\t * @property {string} defaults.href url\n\t * @property {string} defaults.label of anchor\n\t */\n\tdefaults: {\n\t\tprogressive: undefined,\n\t\tdestructive: undefined,\n\t\tadditionalClassNames: '',\n\t\thref: undefined,\n\t\tlabel: undefined\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Anchor\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'anchor.hogan' )\n} );\n\nmodule.exports = Anchor;\n","var\n\tHTML = mw.html,\n\tmfExtend = require( './mfExtend' ),\n\ttime = require( './time' ),\n\tutil = require( './util' ),\n\tSection = require( './Section' ),\n\tThumbnail = require( './Thumbnail' ),\n\tView = require( './View' ),\n\tHEADING_SELECTOR = mw.config.get( 'wgMFMobileFormatterHeadings', [ 'h1', 'h2', 'h3', 'h4', 'h5' ] ).join( ',' ),\n\tBLACKLISTED_THUMBNAIL_CLASS_SELECTORS = [ 'noviewer', 'metadata' ];\n\n/**\n * Mobile page view object\n *\n * @class Page\n * @uses Section\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Page( options ) {\n\n\tutil.extend( this, {\n\t\toptions: options,\n\t\ttitle: options.title,\n\t\tdisplayTitle: options.displayTitle,\n\t\turl: options.url || mw.util.getUrl( options.title ),\n\t\tid: options.id,\n\t\twikidataDescription: options.wikidataDescription,\n\t\tthumbnail: ( Object.prototype.hasOwnProperty.call( options, 'thumbnail' ) ) ?\n\t\t\toptions.thumbnail : false,\n\t\tisMissing: ( options.isMissing !== undefined ) ?\n\t\t\toptions.isMissing : options.id === 0\n\t} );\n\n\tthis.options.isBorderBox = false;\n\tthis.options.languageUrl = mw.util.getUrl( 'Special:MobileLanguages/' + this.title );\n\n\tView.call( this, this.options );\n\n\t// Fallback if no displayTitle provided\n\tif ( !this.displayTitle ) {\n\t\tthis.displayTitle = this.getDisplayTitle();\n\t}\n\n\tif ( this.thumbnail && this.thumbnail.width ) {\n\t\tthis.thumbnail.isLandscape = this.thumbnail.width > this.thumbnail.height;\n\t}\n}\n\nmfExtend( Page, View, {\n\t/**\n\t * @memberof Page\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {number} defaults.id Page ID. The default value of 0 represents a\n\t * new or missing page. Be sure to override it to avoid side effects.\n\t * @property {string} defaults.title Title of the page. It includes prefix where needed and\n\t * is human readable, e.g. Talk:The man who lived.\n\t * @property {string} defaults.displayTitle HTML title of the page for display. Falls back\n\t * to defaults.title (escaped) if no value is provided. Must be safe HTML!\n\t * @property {number} defaults.namespaceNumber the number of the\n\t *  namespace the page belongs to\n\t * @property {Object} defaults.protection List of permissions as returned by API,\n\t * e.g. [{ edit: ['*'] }]\n\t * @property {Array} defaults.sections Array of {Section} objects.\n\t * @property {boolean} defaults.isMainPage Whether the page is the Main Page.\n\t * @property {boolean} defaults.isMissing Whether the page exists in the wiki.\n\t * @property {Object} defaults.thumbnail thumbnail definition corresponding to page image\n\t * @property {boolean} defaults.thumbnail.isLandscape whether the image is in\n\t *  landscape format\n\t * @property {number} defaults.thumbnail.width of image in pixels.\n\t * @property {number} defaults.thumbnail.height of image in pixels.\n\t * @property {string} defaults.thumbnail.source url for image\n\t */\n\tdefaults: {\n\t\tid: 0,\n\t\ttitle: '',\n\t\tdisplayTitle: '',\n\t\tnamespaceNumber: 0,\n\t\tprotection: {\n\t\t\tedit: [ '*' ]\n\t\t},\n\t\tsections: [],\n\t\tisMissing: false,\n\t\tisMainPage: false,\n\t\turl: undefined,\n\t\tthumbnail: {\n\t\t\tisLandscape: undefined,\n\t\t\tsource: undefined,\n\t\t\twidth: undefined,\n\t\t\theight: undefined\n\t\t}\n\t},\n\t/**\n\t * Retrieve the title that should be displayed to the user\n\t * @memberof Page\n\t * @instance\n\t * @return {string} HTML\n\t */\n\tgetDisplayTitle: function () {\n\t\treturn this.options.displayTitle || HTML.escape( this.options.title );\n\t},\n\t/**\n\t * Determine if current page is in a specified namespace\n\t * @memberof Page\n\t * @instance\n\t * @param {string} namespace Name of namespace\n\t * @return {boolean}\n\t */\n\tinNamespace: function ( namespace ) {\n\t\treturn this.options.namespaceNumber === mw.config.get( 'wgNamespaceIds' )[namespace];\n\t},\n\n\t/**\n\t * Find the heading in the page.\n\t * This has the benefit of excluding any additional h2s and h3s that may\n\t * have been added programatically.\n\t * @method\n\t * @param {number} sectionIndex as defined by the PHP parser.\n\t *  It should correspond to the section id\n\t *  used in the edit link for the section.\n\t *  Note, confusingly, this is different from section \"ID\" which is\n\t * used in methods\n\t * @return {jQuery.Object}\n\t */\n\tfindSectionHeadingByIndex: function ( sectionIndex ) {\n\t\tif ( sectionIndex < 1 ) {\n\t\t\t// negative indexes will search from the end, which is behaviour we do not want.\n\t\t\t// return an empty set when this happens.\n\t\t\treturn this.$();\n\t\t} else {\n\t\t\treturn this.$( HEADING_SELECTOR )\n\t\t\t\t// Headings must strictly be a child element of a section element\n\t\t\t\t// or the parser-output.\n\t\t\t\t// Not an ancestor!\n\t\t\t\t.filter( '.mw-parser-output > *, [class^=\"mf-section-\"] > *' ).eq( sectionIndex - 1 );\n\t\t}\n\t},\n\t/**\n\t * Finds all child elements that match the selector in a given section or subsection.\n\t * Returns any direct child elements that match the selector,\n\t * (i.e. searches only one level deep)\n\t * as well as any elements that match the selector within those children.\n\t * If the Page has no headings (e.g. a stub),\n\t * then the search will target all nodes within the page.\n\t *\n\t * This code should work on desktop (PHP parser HTML)\n\t * as well as mobile formatted HTML (PHP parser + MobileFormatter)\n\t * @method\n\t * @param {number} sectionIndex as defined by the PHP parser. It should correspond to\n\t *  the section id used in the edit link for the section.\n\t *  Note, confusingly, this is different from section \"ID\" which is\n\t *  used in methods\n\t * @param {string} selector to match\n\t * @return {jQuery.Object}\n\t */\n\tfindChildInSectionLead: function ( sectionIndex, selector ) {\n\t\tvar $heading, $nextHeading, $container, $lead,\n\t\t\theadingSelector = HEADING_SELECTOR;\n\n\t\tfunction withNestedChildren( $matchingNodes ) {\n\t\t\treturn $matchingNodes.find( selector ).addBack();\n\t\t}\n\n\t\tif ( sectionIndex === 0 ) {\n\t\t\t// lead is easy\n\t\t\t$lead = this.getLeadSectionElement();\n\t\t\tif ( $lead && $lead.length ) {\n\t\t\t\treturn withNestedChildren( $lead.children( selector ) );\n\t\t\t} else {\n\t\t\t\t$heading = this.findSectionHeadingByIndex( 1 );\n\t\t\t\treturn $heading.length ? withNestedChildren( $heading.prevAll( selector ) ) :\n\t\t\t\t\t// this page is a stub so search entire page\n\t\t\t\t\tthis.$( selector );\n\t\t\t}\n\t\t}\n\n\t\t// find heading associated with the section by looking at its\n\t\t// index position in the article\n\t\t// section ids relate to the element position in the page and the first heading\n\t\t// lead has been dealt with above, so first heading corresponds to section 1,\n\t\t// the first heading in the article.\n\t\t$heading = this.findSectionHeadingByIndex( sectionIndex );\n\n\t\t// If section-heading is present on the heading,\n\t\t// then we know the page has been MobileFormatted\n\t\t// and that this is a wrapped section\n\t\tif ( $heading.hasClass( 'section-heading' ) ) {\n\t\t\t// get content of section\n\t\t\t$container = $heading.next();\n\t\t\t// inside section find the first heading\n\t\t\t$nextHeading = $container.find( headingSelector ).eq( 0 );\n\t\t\treturn $nextHeading.length ?\n\t\t\t\t// find all amboxes before the next heading\n\t\t\t\twithNestedChildren( $nextHeading.prevAll( selector ) ) :\n\t\t\t\t// There is no subheadings inside\n\t\t\t\t// Grab all issues in section\n\t\t\t\twithNestedChildren( $container.children( selector ) );\n\t\t} else {\n\t\t\t// the heading relates to a subsection (or unwrapped desktop section),\n\t\t\t// so grab elements between this and the next one\n\t\t\t$nextHeading = $heading.eq( 0 ).nextAll( headingSelector ).eq( 0 );\n\t\t\treturn $heading.nextUntil( $nextHeading, selector );\n\t\t}\n\t},\n\n\t/**\n\t * Get the lead section of the page view.\n\t * @memberof Page\n\t * @instance\n\t * @return {jQuery.Object|null}\n\t */\n\tgetLeadSectionElement: function () {\n\t\t/*\n\t\t * The page is formatted as follows:\n\t\t * <div id=\"bodyContent\">\n\t\t *   <!-- content of the page.. -->\n\t\t *   <div id=\"mw-content-text\">\n\t\t *     <div class=\"mf-section-0\">lead section</div>\n\t\t *     <h2></h2>\n\t\t *     <div class=\"mf-section-1\">second section</div>\n\t\t *   </div>\n\t\t * </div>\n\t\t */\n\t\tif ( this.$( '.mf-section-0' ).length ) {\n\t\t\treturn this.$( '.mf-section-0' );\n\t\t}\n\t\t// no lead section found\n\t\treturn null;\n\t},\n\n\t/**\n\t * Determines if content model is wikitext\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisWikiText: function () {\n\t\treturn mw.config.get( 'wgPageContentModel' ) === 'wikitext';\n\t},\n\n\t/**\n\t * Checks whether the current page is the main page\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisMainPage: function () {\n\t\treturn this.options.isMainPage;\n\t},\n\t/**\n\t * Checks whether the current page is watched\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisWatched: function () {\n\t\treturn this.options.isWatched;\n\t},\n\n\t/**\n\t * Return the latest revision id for this page\n\t * @memberof Page\n\t * @instance\n\t * @return {number}\n\t */\n\tgetRevisionId: function () {\n\t\treturn this.options.revId;\n\t},\n\n\t/**\n\t * Return prefixed page title\n\t * @memberof Page\n\t * @instance\n\t * @return {string}\n\t */\n\tgetTitle: function () {\n\t\treturn this.options.title;\n\t},\n\n\t/**\n\t * Return page id\n\t * @memberof Page\n\t * @instance\n\t * @return {number}\n\t */\n\tgetId: function () {\n\t\treturn this.options.id;\n\t},\n\n\t/**\n\t * return namespace id\n\t * @memberof Page\n\t * @instance\n\t * @return {number} namespace Number\n\t */\n\tgetNamespaceId: function () {\n\t\tvar nsId,\n\t\t\targs = this.options.title.split( ':' );\n\n\t\tif ( args[1] ) {\n\t\t\tnsId = mw.config.get( 'wgNamespaceIds' )[ args[0].toLowerCase().replace( ' ', '_' ) ] || 0;\n\t\t} else {\n\t\t\tnsId = 0;\n\t\t}\n\t\treturn nsId;\n\t},\n\n\t/**\n\t * Determines if current page is a talk page\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean} Whether the page is a talk page or not\n\t */\n\tisTalkPage: function () {\n\t\tvar ns = this.getNamespaceId();\n\t\t// all talk pages are odd Numbers (except the case of special pages)\n\t\treturn ns > 0 && ns % 2 === 1;\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Page\n\t * @instance\n\t */\n\tpreRender: function () {\n\t\tthis.sections = [];\n\t\tthis._sectionLookup = {};\n\t\tthis.title = this.options.title;\n\n\t\tthis.options.sections.forEach( function ( sectionData ) {\n\t\t\tvar section = new Section( sectionData );\n\t\t\tthis.sections.push( section );\n\t\t\tthis._sectionLookup[section.id] = section;\n\t\t}.bind( this ) );\n\t},\n\n\t/**\n\t * Return all the thumbnails in the article.\n\t * Images which have a class or link container (.image|.thumbimage)\n\t * that matches one of the items of the constant BLACKLISTED_THUMBNAIL_CLASS_SELECTORS\n\t * will be excluded.\n\t * A thumbnail nested inside one of these classes will still be returned.\n\t * e.g. `<div class=\"noviewer\"><a class=\"image\"><img></a></div>` is not a valid thumbnail\n\t * `<a class=\"image noviewer\"><img></a>` is not a valid thumbnail\n\t * `<a class=\"image\"><img class=\"noviewer\"></a>` is not a valid thumbnail\n\t * @memberof Page\n\t * @instance\n\t * @return {Thumbnail[]}\n\t */\n\tgetThumbnails: function () {\n\t\tvar $thumbs,\n\t\t\t$el = this.$el,\n\t\t\tblacklistSelector = '.' + BLACKLISTED_THUMBNAIL_CLASS_SELECTORS.join( ',.' ),\n\t\t\tthumbs = [];\n\n\t\tif ( !this._thumbs ) {\n\t\t\t$thumbs = $el.find( 'a.image, a.thumbimage' )\n\t\t\t\t.not( blacklistSelector );\n\n\t\t\t$thumbs.each( function () {\n\t\t\t\tvar $a = $el.find( this ),\n\t\t\t\t\t$lazyImage = $a.find( '.lazy-image-placeholder' ),\n\t\t\t\t\t// Parents need to be checked as well.\n\t\t\t\t\tvalid = $a.parents( blacklistSelector ).length === 0 &&\n\t\t\t\t\t\t$a.find( blacklistSelector ).length === 0,\n\t\t\t\t\tlegacyMatch = $a.attr( 'href' ).match( /title=([^/&]+)/ ),\n\t\t\t\t\tmatch = $a.attr( 'href' ).match( /[^/]+$/ );\n\n\t\t\t\t// filter out invalid lazy loaded images if so far image is valid\n\t\t\t\tif ( $lazyImage.length && valid ) {\n\t\t\t\t\t// if the regex matches it means the image has one of the classes\n\t\t\t\t\t// thus we must invert the result\n\t\t\t\t\tvalid = !new RegExp( '\\\\b(' + BLACKLISTED_THUMBNAIL_CLASS_SELECTORS.join( '|' ) + ')\\\\b' )\n\t\t\t\t\t\t.test( $lazyImage.data( 'class' ) );\n\t\t\t\t}\n\n\t\t\t\tif ( valid && ( legacyMatch || match ) ) {\n\t\t\t\t\tthumbs.push(\n\t\t\t\t\t\tnew Thumbnail( {\n\t\t\t\t\t\t\tel: $a,\n\t\t\t\t\t\t\tfilename: decodeURIComponent(\n\t\t\t\t\t\t\t\tlegacyMatch ? legacyMatch[1] : match[0]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} );\n\t\t\tthis._thumbs = thumbs;\n\t\t}\n\t\treturn this._thumbs;\n\t},\n\n\t/**\n\t * FIXME: Change function signature to take the anchor of the heading\n\t * @memberof Page\n\t * @instance\n\t * @param {string} id of the section as defined by MobileFormatter.\n\t * Note, that currently, this is different from\n\t * the PHP parser in that it relates to top-level sections.\n\t * For example, mf-section-1 would relate to section 1. See FIXME.\n\t * @return {Section}\n\t */\n\tgetSection: function ( id ) {\n\t\treturn this._sectionLookup[ id ];\n\t},\n\n\t/**\n\t * Obtain the list of high level (and grouped) sections.\n\t * Note that this list will not include subsections.\n\t * @memberof Page\n\t * @instance\n\t * @return {Array} of Section instances\n\t */\n\tgetSections: function () {\n\t\treturn this.sections;\n\t},\n\n\t/**\n\t * Returns a jQuery object representing all redlinks on the page.\n\t * @memberof Page\n\t * @instance\n\t * @return {jQuery.Object}\n\t */\n\tgetRedLinks: function () {\n\t\treturn this.$( '.new' );\n\t}\n} );\n\n/**\n * Create a Page object from an API response.\n *\n * @memberof Page\n * @param {Object} resp as representing a page in the API\n * @return {Page}\n */\nPage.newFromJSON = function ( resp ) {\n\tvar revision, displayTitle,\n\t\tthumb = resp.thumbnail,\n\t\tpageprops = resp.pageprops || {\n\t\t\tdisplaytitle: HTML.escape( resp.title )\n\t\t},\n\t\tterms = resp.terms;\n\n\tif ( pageprops || terms ) {\n\t\t// The label is either the display title or the label pageprop\n\t\t// (the latter used by Wikidata)\n\t\t// Long term we want to consolidate these.\n\t\t// Note that pageprops.displaytitle is HTML, while\n\t\t// terms.label[0] is plain text.\n\t\tdisplayTitle = terms && terms.label ?\n\t\t\tHTML.escape( terms.label[0] ) : pageprops.displaytitle;\n\t}\n\t// Add Wikidata descriptions if available (T101719)\n\tresp.wikidataDescription = resp.description || undefined;\n\n\tif ( thumb ) {\n\t\tresp.thumbnail.isLandscape = thumb.width > thumb.height;\n\t}\n\n\t// page may or may not exist.\n\tif ( resp.revisions && resp.revisions[0] ) {\n\t\trevision = resp.revisions[0];\n\t\tresp.lastModified = time.getLastModifiedMessage(\n\t\t\tnew Date( revision.timestamp ).getTime() / 1000,\n\t\t\trevision.user\n\t\t);\n\t}\n\n\treturn new Page(\n\t\tutil.extend( resp, {\n\t\t\tid: resp.pageid,\n\t\t\tisMissing: !!resp.missing,\n\t\t\turl: mw.util.getUrl( resp.title ),\n\t\t\tdisplayTitle: displayTitle // this is HTML!\n\t\t} )\n\t);\n};\n\n/**\n * Selector for matching headings\n *\n * @memberof Page\n */\nPage.HEADING_SELECTOR = HEADING_SELECTOR;\n\nmodule.exports = Page;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tPanel = require( './Panel' ),\n\tutil = require( './util' ),\n\tIcon = require( './Icon' );\n\n/**\n * A {@link View} that pops up from the bottom of the screen.\n * @class Drawer\n * @extends Panel\n * @param {Object} props\n */\nfunction Drawer( props ) {\n\tPanel.call( this,\n\t\tutil.extend( {\n\t\t\tclassName: 'drawer position-fixed'\n\t\t}, props )\n\t);\n}\n\nmfExtend( Drawer, Panel, {\n\t/**\n\t * @memberof Drawer\n\t * @instance\n\t * @mixes Panel#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.cancelButton HTML of the button that closes the drawer.\n\t */\n\tdefaults: util.extend( {}, Panel.prototype.defaults, {\n\t\t// Used by CtaDrawer, BlockMessage.\n\t\tcollapseIcon: new Icon( {\n\t\t\tname: 'arrow',\n\t\t\tadditionalClassNames: 'cancel'\n\t\t} ).options\n\t} ),\n\t/**\n\t * @memberof Drawer\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, Panel.prototype.templatePartials, {\n\t\ticon: Icon.prototype.template\n\t} ),\n\t/**\n\t * Defines an element that the Drawer should automatically be appended to.\n\t * @memberof Drawer\n\t * @instance\n\t * @property {string}\n\t */\n\tappendToElement: 'body',\n\t/**\n\t * Whether the drawer should disappear on a scroll event\n\t * @memberof Drawer\n\t * @instance\n\t * @property {boolean}\n\t */\n\tcloseOnScroll: true,\n\tevents: util.extend( {}, Panel.prototype.events, {\n\t\tclick: 'stopPropagation'\n\t} ),\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Drawer\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this;\n\t\t// This module might be loaded at the top of the page e.g. Special:Uploads\n\t\t// Thus ensure we wait for the DOM to be loaded\n\t\tutil.docReady( function () {\n\t\t\tself.appendTo( self.appendToElement );\n\t\t\tself.$el.parent().addClass( 'has-drawer' );\n\t\t} );\n\t\tthis.on( 'show', this.onShowDrawer.bind( this ) );\n\t\tthis.on( 'hide', this.onHideDrawer.bind( this ) );\n\t},\n\t/**\n\t * Stop Propagation event handler\n\t * @memberof Drawer\n\t * @instance\n\t * @param {Object} ev event object\n\t * Allow the drawer itself to be clickable (e.g. for copying and pasting references\n\t * clicking links in reference)\n\t */\n\tstopPropagation: function ( ev ) {\n\t\tev.stopPropagation();\n\t},\n\n\t/**\n\t * ShowDrawer event handler\n\t * @memberof Drawer\n\t * @instance\n\t */\n\tonShowDrawer: function () {\n\t\tvar self = this;\n\n\t\tthis.$el.parent().addClass( 'drawer-visible' );\n\n\t\tsetTimeout( function () {\n\t\t\tvar $window = util.getWindow();\n\t\t\t$window.one( 'click.drawer', self.hide.bind( self ) );\n\t\t\tif ( self.closeOnScroll ) {\n\t\t\t\t$window.one( 'scroll.drawer', self.hide.bind( self ) );\n\t\t\t}\n\t\t}, self.minHideDelay );\n\t},\n\n\t/**\n\t * HideDrawer event handler\n\t * @memberof Drawer\n\t * @instance\n\t */\n\tonHideDrawer: function () {\n\t\tthis.$el.parent().removeClass( 'drawer-visible' );\n\t\t// .one() registers one callback for scroll and click independently\n\t\t// if one fired, get rid of the other one\n\t\tutil.getWindow().off( '.drawer' );\n\t}\n} );\n\nmodule.exports = Drawer;\n","var\n\tView = require( './View' ),\n\tIcon = require( './Icon' ),\n\tButton = require( './Button' ),\n\tAnchor = require( './Anchor' ),\n\ticons = require( './icons' ),\n\tutil = require( './util' ),\n\tbrowser = require( './Browser' ).getSingleton(),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * Mobile modal window\n * @class Overlay\n * @extends View\n * @uses Icon\n * @uses Button\n * @fires Overlay#Overlay-exit\n * @fires Overlay#hide\n * @param {Object} props\n * @param {boolean} props.noHeader renders an overlay without a header\n */\nfunction Overlay( props ) {\n\tthis.isIos = browser.isIos();\n\tthis.useVirtualKeyboardHack = browser.isIos( 4 ) || browser.isIos( 5 );\n\t// Set to true when overlay has failed to load\n\tthis.hasLoadError = false;\n\tView.call( this, util.extend( {\n\t\tclassName: 'overlay'\n\t}, props ) );\n}\n\nmfExtend( Overlay, View, {\n\t/**\n\t * Identify whether the element contains position fixed elements\n\t * @memberof Overlay\n\t * @instance\n\t * @property {boolean}\n\t */\n\thasFixedHeader: true,\n\t/**\n\t * Is overlay fullscreen\n\t * @memberof Overlay\n\t * @instance\n\t * @property {boolean}\n\t */\n\tfullScreen: true,\n\n\t/**\n\t * True if this.hide() should be invoked before firing the Overlay-exit\n\t * event\n\t * @memberof Overlay\n\t * @instance\n\t * @property {boolean}\n\t */\n\thideOnExitClick: true,\n\n\t/**\n\t * Defines an element that the Overlay should automatically be appended to.\n\t * @memberof Overlay\n\t * @instance\n\t * @property {string|jQuery.Object}\n\t */\n\tappendToElement: 'body',\n\ttemplatePartials: {\n\t\theader: mw.template.get( 'mobile.startup', 'header.hogan' ),\n\t\tanchor: Anchor.prototype.template,\n\t\tbutton: Button.prototype.template\n\t},\n\ttemplate: mw.template.get( 'mobile.startup', 'Overlay.hogan' ),\n\t/**\n\t * @memberof Overlay\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.saveMessage Caption for save button on edit form.\n\t * @property {string} defaults.cancelButton HTML of the cancel button.\n\t * @property {string} defaults.backButton HTML of the back button.\n\t * @property {string} defaults.headerButtonsListClassName A comma separated string of class\n\t * names of the wrapper of the header buttons.\n\t * @property {boolean} defaults.headerChrome Whether the header has chrome.\n\t * @property {boolean} defaults.fixedHeader Whether the header is fixed.\n\t * @property {string} defaults.spinner HTML of the spinner icon.\n\t * @property {Object} [defaults.footerAnchor] options for an optional Anchor\n\t *  that can appear in the footer\n\t */\n\tdefaults: {\n\t\tsaveMsg: mw.msg( 'mobile-frontend-editor-save' ),\n\t\tcancelButton: icons.cancel().toHtmlString(),\n\t\tbackButton: new Icon( {\n\t\t\ttagName: 'button',\n\t\t\tname: 'back',\n\t\t\tadditionalClassNames: 'back',\n\t\t\tlabel: mw.msg( 'mobile-frontend-overlay-close' )\n\t\t} ).toHtmlString(),\n\t\theaderButtonsListClassName: '',\n\t\theaderChrome: false,\n\t\tfixedHeader: true,\n\t\tspinner: icons.spinner().toHtmlString()\n\t},\n\t/**\n\t * @memberof Overlay\n\t * @instance\n\t */\n\tevents: {\n\t\t// FIXME: Remove .initial-header selector when bug 71203 resolved.\n\t\t'click .cancel, .confirm, .initial-header .back': 'onExitClick',\n\t\tclick: 'stopPropagation'\n\t},\n\t/**\n\t * Flag overlay to close on content tap\n\t * @memberof Overlay\n\t * @instance\n\t * @property {boolean}\n\t */\n\tcloseOnContentTap: false,\n\n\t/**\n\t * Shows the spinner right to the input field.\n\t * @memberof Overlay\n\t * @instance\n\t * @method\n\t */\n\tshowSpinner: function () {\n\t\tthis.$spinner.removeClass( 'hidden' );\n\t},\n\n\t/**\n\t * Hide the spinner near to the input field.\n\t * @memberof Overlay\n\t * @instance\n\t * @method\n\t */\n\thideSpinner: function () {\n\t\tthis.$spinner.addClass( 'hidden' );\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Overlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\n\t\tthis.$overlayContent = this.$( '.overlay-content' );\n\t\tthis.$spinner = this.$( '.spinner' );\n\t\tif ( this.isIos ) {\n\t\t\tthis.$el.addClass( 'overlay-ios' );\n\t\t}\n\t\t// Truncate any text inside in the overlay header.\n\t\tthis.$( '.overlay-header h2 span' ).addClass( 'truncated-text' );\n\t\tthis.setupEmulatedIosOverlayScrolling();\n\t},\n\n\t/**\n\t * Setups an emulated scroll behaviour for overlays in ios.\n\t * @memberof Overlay\n\t * @instance\n\t */\n\tsetupEmulatedIosOverlayScrolling: function () {\n\t\tvar self = this;\n\t\tif ( this.isIos && this.hasFixedHeader ) {\n\t\t\tthis.$( '.overlay-content' ).on( 'touchstart', this.onTouchStart.bind( this ) )\n\t\t\t\t.on( 'touchmove', this.onTouchMove.bind( this ) );\n\t\t\t// wait for things to render before doing any calculations\n\t\t\tsetTimeout( function () {\n\t\t\t\tself._fixIosHeader( self.$( 'textarea, input' ) );\n\t\t\t}, 0 );\n\t\t}\n\t},\n\t/**\n\t * ClickBack event handler\n\t * @memberof Overlay\n\t * @instance\n\t * @param {Object} ev event object\n\t */\n\tonExitClick: function ( ev ) {\n\t\tev.preventDefault();\n\t\tev.stopPropagation();\n\t\tif ( this.hideOnExitClick ) {\n\t\t\tthis.hide();\n\t\t}\n\t\tthis.emit( Overlay.EVENT_EXIT );\n\t},\n\t/**\n\t * Event handler for touchstart, for IOS\n\t * @memberof Overlay\n\t * @instance\n\t * @param {Object} ev Event Object\n\t */\n\tonTouchStart: function ( ev ) {\n\t\tthis.startY = ev.originalEvent.touches[0].pageY;\n\t},\n\t/**\n\t * Event handler for touch move, for IOS\n\t * @memberof Overlay\n\t * @instance\n\t * @param {Object} ev Event Object\n\t */\n\tonTouchMove: function ( ev ) {\n\t\tvar\n\t\t\ty = ev.originalEvent.touches[0].pageY,\n\t\t\tcontentOuterHeight = this.$overlayContent.outerHeight(),\n\t\t\tcontentLength = this.$overlayContent.prop( 'scrollHeight' ) - contentOuterHeight;\n\n\t\tev.stopPropagation();\n\t\t// prevent scrolling and bouncing outside of .overlay-content\n\t\tif (\n\t\t\t( this.$overlayContent.scrollTop() === 0 && this.startY < y ) ||\n\t\t\t( this.$overlayContent.scrollTop() === contentLength && this.startY > y )\n\t\t) {\n\t\t\tev.preventDefault();\n\t\t}\n\t},\n\t/**\n\t * Stop clicks in the overlay from propagating to the page\n\t * (prevents non-fullscreen overlays from being closed when they're tapped)\n\t * @memberof Overlay\n\t * @instance\n\t * @param {Object} ev Event Object\n\t */\n\tstopPropagation: function ( ev ) {\n\t\tev.stopPropagation();\n\t},\n\t/**\n\t * Attach overlay to current view and show it.\n\t * @memberof Overlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\tvar self = this,\n\t\t\t$html = util.getDocument(),\n\t\t\t$window = util.getWindow();\n\n\t\tthis.$el.appendTo( this.appendToElement );\n\t\tthis.scrollTop = window.pageYOffset;\n\n\t\tif ( this.fullScreen ) {\n\t\t\t$html.addClass( 'overlay-enabled' );\n\t\t\t// skip the URL bar if possible\n\t\t\twindow.scrollTo( 0, 1 );\n\t\t}\n\n\t\tif ( this.closeOnContentTap ) {\n\t\t\t$html.find( '#mw-mf-page-center' ).one( 'click', this.hide.bind( this ) );\n\t\t}\n\n\t\t// prevent scrolling and bouncing outside of .overlay-content\n\t\tif ( this.isIos && this.hasFixedHeader ) {\n\t\t\t$window\n\t\t\t\t.on( 'touchmove.ios', function ( ev ) {\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t} )\n\t\t\t\t.on( 'resize.ios', function () {\n\t\t\t\t\tself._resizeContent( $window.height() );\n\t\t\t\t} );\n\t\t}\n\n\t\tthis.$el.addClass( 'visible' );\n\t},\n\t/**\n\t * Detach the overlay from the current view\n\t * @memberof Overlay\n\t * @instance\n\t * @param {boolean} [force] Whether the overlay should be closed regardless of\n\t * state (see PhotoUploadProgress)\n\t * @return {boolean} Whether the overlay was successfully hidden or not\n\t */\n\thide: function () {\n\t\tvar $window = util.getWindow(),\n\t\t\t$html = util.getDocument();\n\n\t\tif ( this.fullScreen ) {\n\t\t\t$html.removeClass( 'overlay-enabled' );\n\t\t\t// return to last known scroll position\n\t\t\twindow.scrollTo( window.pageXOffset, this.scrollTop );\n\t\t}\n\n\t\tthis.$el.detach();\n\n\t\tif ( this.isIos ) {\n\t\t\t$window.off( '.ios' );\n\t\t}\n\n\t\t/**\n\t\t * Fired when the overlay is closed.\n\t\t * @event Overlay#hide\n\t\t */\n\t\tthis.emit( 'hide' );\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Fit the overlay content height to the window taking overlay header and footer heights\n\t * into consideration.\n\t * @memberof Overlay\n\t * @instance\n\t * @private\n\t * @param {number} windowHeight The height of the window\n\t */\n\t_resizeContent: function ( windowHeight ) {\n\t\tthis.$overlayContent.height(\n\t\t\twindowHeight -\n\t\t\tthis.$( '.overlay-header-container' ).outerHeight() -\n\t\t\tthis.$( '.overlay-footer-container' ).outerHeight()\n\t\t);\n\t},\n\n\t/**\n\t * Resize .overlay-content to occupy 100% of screen space when virtual\n\t * keyboard is shown/hidden on iOS.\n\t *\n\t * This function supplements the custom styles for Overlays on iOS.\n\t * On iOS we scroll the content inside of .overlay-content div instead\n\t * of scrolling the whole page to achieve a consistent sticky header\n\t * effect (position: fixed doesn't work on iOS when the virtual keyboard\n\t * is open).\n\t *\n\t * @memberof Overlay\n\t * @instance\n\t * @private\n\t * @param {jQuery.Object} $el for elements that may trigger virtual\n\t * keyboard (usually inputs, textareas, contenteditables).\n\t */\n\t_fixIosHeader: function ( $el ) {\n\t\tvar self = this,\n\t\t\t$window = util.getWindow();\n\n\t\tif ( this.isIos ) {\n\t\t\tthis._resizeContent( $window.height() );\n\t\t\t$el\n\t\t\t\t.on( 'focus', function () {\n\t\t\t\t\tsetTimeout( function () {\n\t\t\t\t\t\tvar keyboardHeight = 0;\n\n\t\t\t\t\t\t// detect virtual keyboard height\n\t\t\t\t\t\tif ( self.useVirtualKeyboardHack ) {\n\t\t\t\t\t\t\t// this method does not work in iOS 8.02\n\t\t\t\t\t\t\t$window.scrollTop( 999 );\n\t\t\t\t\t\t\tkeyboardHeight = $window.scrollTop();\n\t\t\t\t\t\t\t$window.scrollTop( 0 );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( $window.height() > keyboardHeight ) {\n\t\t\t\t\t\t\tself._resizeContent( $window.height() - keyboardHeight );\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 0 );\n\t\t\t\t} )\n\t\t\t\t.on( 'blur', function () {\n\t\t\t\t\tself._resizeContent( $window.height() );\n\t\t\t\t\t// restore the fixed header in view.\n\t\t\t\t\t$window.scrollTop( 0 );\n\t\t\t\t} );\n\t\t}\n\t},\n\n\t/**\n\t * Show elements that are selected by the className.\n\t * Also hide .hideable elements\n\t * Can't use jQuery's hide() and show() because show() sets display: block.\n\t * And we want display: table for headers.\n\t * @memberof Overlay\n\t * @instance\n\t * @protected\n\t * @param {string} className CSS selector to show\n\t */\n\tshowHidden: function ( className ) {\n\t\tthis.$( '.hideable' ).addClass( 'hidden' );\n\t\tthis.$( className ).removeClass( 'hidden' );\n\t}\n} );\n\n/*\n * Fires when close button is clicked. Not to be confused with hide event.\n * @memberof Overlay\n * @event Overlay#Overlay-exit\n */\nOverlay.EVENT_EXIT = 'Overlay-exit';\n\nmodule.exports = Overlay;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tutil = require( './util' ),\n\tView = require( './View' );\n\n/**\n * An abstract class for a {@link View} that comprises a simple panel.\n * @class Panel\n * @extends View\n *\n * @param {Object} params Configuration options\n */\nfunction Panel( params ) {\n\tvar defaultParams = {\n\t\t\tclassName: 'panel'\n\t\t},\n\t\toptions = util.extend( {}, defaultParams, params );\n\n\tView.call( this, options );\n}\n\nmfExtend( Panel, View, {\n\t// in milliseconds\n\tminHideDelay: 10,\n\tevents: {\n\t\t'click .cancel': 'onCancel'\n\t},\n\n\t/**\n\t * Cancel event handler\n\t * @memberof Panel\n\t * @instance\n\t * @param {Object} ev Event Object\n\t */\n\tonCancel: function ( ev ) {\n\t\tev.preventDefault();\n\t\tthis.hide();\n\t},\n\n\t/**\n\t * Shows panel after a slight delay\n\t * @memberof Panel\n\t * @instance\n\t * @method\n\t */\n\tshow: function () {\n\t\tvar self = this;\n\n\t\tif ( !self.isVisible() ) {\n\t\t\t// use setTimeout to allow the browser to redraw if render() was called\n\t\t\t// just before show(); this is important for animations to work\n\t\t\t// (0ms doesn't work on Firefox, 10ms is enough)\n\t\t\t//\n\t\t\t// FIXME: setTimeout should be reconsidered in T209129\n\t\t\tsetTimeout( function () {\n\t\t\t\tself.$el.addClass( 'visible animated' );\n\t\t\t\tself.emit( 'show' );\n\t\t\t}, self.minHideDelay );\n\t\t}\n\t},\n\n\t/**\n\t * Hides panel\n\t * @memberof Panel\n\t * @instance\n\t */\n\thide: function () {\n\t\tvar self = this;\n\n\t\t// see comment in show()\n\t\tsetTimeout( function () {\n\t\t\tself.$el.removeClass( 'visible' );\n\t\t\tself.emit( 'hide' );\n\t\t}, self.minHideDelay );\n\t},\n\n\t/**\n\t * Determines if panel is visible\n\t * @memberof Panel\n\t * @instance\n\t * @return {boolean} Panel is visible\n\t */\n\tisVisible: function () {\n\t\treturn this.$el.hasClass( 'visible' );\n\t},\n\n\t/**\n\t * Shows or hides panel\n\t * @memberof Panel\n\t * @instance\n\t */\n\ttoggle: function () {\n\t\tif ( this.isVisible() ) {\n\t\t\tthis.hide();\n\t\t} else {\n\t\t\tthis.show();\n\t\t}\n\t}\n} );\n\nmodule.exports = Panel;\n","var units = [ 'seconds', 'minutes', 'hours', 'days', 'months', 'years' ],\n\tutil = require( './util' ),\n\tlimits = [ 1, 60, 3600, 86400, 2592000, 31536000 ];\n\n/** @class time */\n\n/**\n * Calculate the correct unit of timestamp\n * @memberof time\n * @instance\n * @param {number} timestampDelta\n * @return {{value: number, unit: string}}\n */\nfunction timeAgo( timestampDelta ) {\n\tvar i = 0;\n\twhile ( i < limits.length && timestampDelta > limits[i + 1] ) {\n\t\t++i;\n\t}\n\treturn {\n\t\tvalue: Math.round( timestampDelta / limits[i] ),\n\t\tunit: units[i]\n\t};\n}\n\n/**\n * Calculate the correct unit of timestamp delta\n * @memberof time\n * @instance\n * @param {number} timestamp\n * @return {{value: number, unit: string}}\n */\nfunction getTimeAgoDelta( timestamp ) {\n\tvar currentTimestamp = Math.round( new Date().getTime() / 1000 );\n\n\treturn timeAgo( currentTimestamp - timestamp );\n}\n\n/**\n * Whether timestamp delta is less than a day old\n * @memberof time\n * @instance\n * @param {{value: number, unit: string}} delta Object of timestamp and its label\n * @return {boolean}\n */\nfunction isRecent( delta ) {\n\treturn [ 'seconds', 'minutes', 'hours' ].indexOf( delta.unit ) > -1;\n}\n\n/**\n * Is delta less than 10 seconds?\n * @memberof time\n * @instance\n * @param {{value: number, unit: string}} delta Object of timestamp and its label\n * @return {boolean}\n */\nfunction isNow( delta ) {\n\treturn delta.unit === 'seconds' && delta.value < 10;\n}\n\n/**\n * Return a message relating to the last modified relative time.\n * @memberof time\n * @instance\n * @param {number} ts timestamp\n * @param {string} username of the last user to modify the page\n * @param {string} [gender] of the last user to modify the page\n * @param {string} [historyUrl] url to the history page for the message, if omitted\n *  returns plain text string rather than html\n * @return {string}\n */\nfunction getLastModifiedMessage( ts, username, gender, historyUrl ) {\n\tvar delta, html,\n\t\tkeys = {\n\t\t\tseconds: 'mobile-frontend-last-modified-with-user-seconds',\n\t\t\tminutes: 'mobile-frontend-last-modified-with-user-minutes',\n\t\t\thours: 'mobile-frontend-last-modified-with-user-hours',\n\t\t\tdays: 'mobile-frontend-last-modified-with-user-days',\n\t\t\tmonths: 'mobile-frontend-last-modified-with-user-months',\n\t\t\tyears: 'mobile-frontend-last-modified-with-user-years'\n\t\t},\n\t\targs = [];\n\n\tgender = gender || 'unknown';\n\n\tdelta = getTimeAgoDelta( ts );\n\tif ( isNow( delta ) ) {\n\t\targs.push( 'mobile-frontend-last-modified-with-user-just-now', gender, username );\n\t} else {\n\t\targs.push( keys[ delta.unit ], gender, username,\n\t\t\tmw.language.convertNumber( delta.value )\n\t\t);\n\t}\n\n\targs.push(\n\t\thistoryUrl || '#',\n\t\t// Abuse PLURAL support to determine if the user is anonymous or not\n\t\tmw.language.convertNumber( username ? 1 : 0 ),\n\t\t// Our abuse of PLURAL support means we have to pass the relative URL\n\t\t// rather than construct it from a wikilink\n\t\tusername ? mw.util.getUrl( 'User:' + username ) : ''\n\t);\n\thtml = mw.message.apply( this, args ).parse();\n\tif ( historyUrl ) {\n\t\treturn html;\n\t} else {\n\t\treturn util.parseHTML( '<div>' ).html( html ).text();\n\t}\n}\n\n/**\n * Return a message relating to the registration date of the user\n * @memberof time\n * @instance\n * @param {string} ts timestamp\n * @param {string} [gender] of the last user editing this page\n * @return {string}\n */\nfunction getRegistrationMessage( ts, gender ) {\n\tvar delta, html,\n\t\tkeys = {\n\t\t\tseconds: 'mobile-frontend-joined-seconds',\n\t\t\tminutes: 'mobile-frontend-joined-minutes',\n\t\t\thours: 'mobile-frontend-joined-hours',\n\t\t\tdays: 'mobile-frontend-joined-days',\n\t\t\tmonths: 'mobile-frontend-joined-months',\n\t\t\tyears: 'mobile-frontend-joined-years'\n\t\t},\n\t\targs = [];\n\n\tgender = gender || 'unknown';\n\n\tdelta = getTimeAgoDelta( parseInt( ts, 10 ) );\n\tif ( isNow( delta ) ) {\n\t\targs.push( 'mobile-frontend-joined-just-now', gender );\n\t} else {\n\t\targs.push( keys[ delta.unit ], gender, mw.language.convertNumber( delta.value ) );\n\t}\n\thtml = mw.message.apply( this, args ).parse();\n\treturn html;\n}\n\nmodule.exports = {\n\tgetLastModifiedMessage: getLastModifiedMessage,\n\tgetRegistrationMessage: getRegistrationMessage,\n\ttimeAgo: timeAgo,\n\tgetTimeAgoDelta: getTimeAgoDelta,\n\tisNow: isNow,\n\tisRecent: isRecent\n};\n","var\n\tmfExtend = require( './mfExtend' ),\n\ticons = require( './icons' ),\n\tView = require( './View' );\n\n/**\n * Builds a section of a page\n * @class Section\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Section( options ) {\n\tvar self = this;\n\toptions.tag = 'h' + options.level;\n\tthis.line = options.line;\n\tthis.text = options.text;\n\tthis.hasReferences = options.hasReferences || false;\n\tthis.id = options.id || null;\n\tthis.anchor = options.anchor;\n\tthis.subsections = [];\n\t( options.subsections || [] ).forEach( function ( section ) {\n\t\tself.subsections.push( new Section( section ) );\n\t} );\n\tView.call( this, options );\n}\n\nmfExtend( Section, View, {\n\ttemplate: mw.template.get( 'mobile.startup', 'Section.hogan' ),\n\t/**\n\t * @memberof Section\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.text Section text.\n\t * @property {string} defaults.spinner HTML of the spinner icon.\n\t */\n\tdefaults: {\n\t\tline: undefined,\n\t\ttext: '',\n\t\tspinner: icons.spinner().toHtmlString()\n\t}\n} );\n\nmodule.exports = Section;\n","/* This module defines several types of cache classes to use in other\n * modules.\n * The interface, that all types use, is kept synchronous driven by current\n * usage patterns, but will need to be revisited in case usage patterns\n * suggest we need asynchronous caches.\n */\n\n/**\n * In memory cache implementation\n *\n * @class MemoryCache\n */\nfunction MemoryCache() {\n\tthis._cache = {};\n}\n\n/**\n * Retrieve a cached value from a key\n * @memberof MemoryCache\n * @instance\n * @param {string} key\n * @return {Mixed}\n */\nMemoryCache.prototype.get = function ( key ) {\n\treturn this._cache[ key ];\n};\n\n/**\n * Cache a value by key\n * @memberof MemoryCache\n * @instance\n * @param {string} key\n * @param {Mixed} value\n */\nMemoryCache.prototype.set = function ( key, value ) {\n\tthis._cache[ key ] = value;\n};\n\n/**\n * Null object cache implementation\n *\n * @class NoCache\n */\nfunction NoCache() { }\n\n/**\n * NoOp\n * @memberof NoCache\n * @instance\n */\nNoCache.prototype.get = function () { };\n\n/**\n * NoOp\n * @memberof NoCache\n * @instance\n */\nNoCache.prototype.set = function () { };\n\nmodule.exports = {\n\tMemoryCache: MemoryCache,\n\tNoCache: NoCache\n};\n","var\n\tmfExtend = require( './mfExtend' ),\n\tDrawer = require( './Drawer' ),\n\tutil = require( './util' ),\n\tButton = require( './Button' ),\n\tAnchor = require( './Anchor' );\n\n/**\n * @typedef {string|number|boolean|undefined} QueryVal\n * @typedef {Object.<string, QueryVal|QueryVal[]>} QueryParams\n *\n * @typedef {Object} Options\n * @prop {string} [returnTo]\n * @prop {QueryParams} [queryParams]\n * @prop {QueryParams} [signupQueryParams]\n */\n\n/**\n * This creates the drawer at the bottom of the screen that appears when an anonymous\n * user tries to perform an action that requires being logged in. It presents the user\n * with options to log in or sign up for a new account.\n * @class CtaDrawer\n * @extends Drawer\n * @uses Button\n * @uses Icon\n * @uses Anchor\n * @param {...Options} options\n */\nfunction CtaDrawer() {\n\tDrawer.apply( this, arguments );\n}\n\nmfExtend( CtaDrawer, Drawer, {\n\t/**\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t * @mixes Drawer#defaults\n\t\t * @property {Object} defaults Default options hash.\n\t\t * @property {Object} defaults.collapseIcon options for Icon for collapsing the drawer\n\t\t * @property {Object} defaults.progressiveButton options for Button element for signing in\n\t\t * @property {Object} defaults.actionAnchor options for Anchor element for signing up\n\t\t */\n\tdefaults: util.extend( {}, Drawer.prototype.defaults, {\n\t\tprogressiveButton: new Button( {\n\t\t\tprogressive: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-login' )\n\t\t} ).options,\n\t\tactionAnchor: new Anchor( {\n\t\t\tprogressive: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-signup' )\n\t\t} ).options\n\t} ),\n\t/**\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t */\n\ttemplatePartials: util.extend( {}, Drawer.prototype.templatePartials, {\n\t\tbutton: Button.prototype.template,\n\t\tanchor: Anchor.prototype.template\n\t} ),\n\t/**\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'CtaDrawer.hogan' ),\n\t/**\n\t\t * @inheritdoc\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t */\n\tevents: util.extend( {}, Drawer.prototype.events, {\n\t\t// Needed by Minerva's red link drawer in skins.minerva.scripts/init.js. There's no .hide\n\t\t// class in CtaDrawer.\n\t\t'click .hide': 'hide'\n\t} ),\n\t/**\n\t\t * @inheritdoc\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t */\n\tpreRender: function () {\n\t\tvar params = redirectParams( this.options.queryParams, this.options.returnTo );\n\n\t\t// Give the button and the anchor a default target, if it isn't set already. Buttons are\n\t\t// customized by Minerva's red link drawer, skins.minerva.scripts/init.js.\n\t\tif ( !this.options.progressiveButton.href ) {\n\t\t\tthis.options.progressiveButton.href = mw.util.getUrl( 'Special:UserLogin', params );\n\t\t}\n\t\tif ( !this.options.actionAnchor.href ) {\n\t\t\tthis.options.actionAnchor.href = mw.util.getUrl(\n\t\t\t\t'Special:UserLogin', signUpParams( params, this.options.signupQueryParams )\n\t\t\t);\n\t\t}\n\t}\n} );\n\n/**\n * Special:UserLogin post-request redirect query parameters.\n * @param {QueryParams} params\n * @param {string} [redirectURL]\n * @return {QueryParams}\n */\nfunction redirectParams( params, redirectURL ) {\n\treturn util.extend( {\n\t\t// use wgPageName as this includes the namespace if outside Main\n\t\treturnto: redirectURL || mw.config.get( 'wgPageName' )\n\t}, params );\n}\n\n/**\n * Special:UserLogin account creation query parameters.\n * @param {...QueryParams} params\n * @return {QueryParams}\n */\nfunction signUpParams() {\n\t[].push.call( arguments, { type: 'signup' } );\n\treturn util.extend.apply( util, arguments );\n}\n\nCtaDrawer.prototype.test = {\n\tredirectParams: redirectParams,\n\tsignUpParams: signUpParams\n};\n\nmodule.exports = CtaDrawer;\n","var util = require( './util' );\n\n/**\n * Extends the API query parameters to include those parameters required to also fetch Wikibase\n * descriptions and appropriately sized thumbnail images.\n *\n * This function wraps `util.extend` with some Wikibase-specific configuration\n * variable management\n * but, like `util.extend`, is variadic and so can be used as a replacement for it in search\n * gateways, e.g.\n *\n * ```\n * var params = extendSearchParams(\n *   'nearby',\n *   baseParams,\n *   specializedParams,\n *   moreSpecializedParams\n * );\n * ```\n *\n * @param {string} feature The name of the feature\n * @throws {Error} If `feature` isn't one that shows Wikidata descriptions. See the\n *  `wgMFDisplayWikibaseDescriptions` configuration variable for detail\n * @return {Object}\n */\nfunction extendSearchParams( feature ) {\n\tvar displayWikibaseDescriptions = mw.config.get( 'wgMFDisplayWikibaseDescriptions', {} ),\n\t\targs,\n\t\tresult;\n\n\tif ( !Object.prototype.hasOwnProperty.call( displayWikibaseDescriptions, feature ) ) {\n\t\tthrow new Error( '\"' + feature + '\" isn\\'t a feature that shows Wikibase descriptions.' );\n\t}\n\n\t// Construct the arguments for a call to `util.extend`\n\t// such that if it were hand-written, then it\n\t// would look like the following:\n\t//\n\t// ```\n\t// var result = util.extend( {\n\t//   prop: []\n\t// }, params, /* ..., */ mw.config.get( 'wgMFSearchAPIParams' ) );\n\t// ```\n\targs = Array.prototype.slice.call( arguments, 1 );\n\targs.unshift( {\n\t\tprop: []\n\t} );\n\targs.push( mw.config.get( 'wgMFSearchAPIParams' ) );\n\n\tresult = util.extend.apply( {}, args );\n\tresult.prop = result.prop.concat( mw.config.get( 'wgMFQueryPropModules' ) );\n\n\tif ( displayWikibaseDescriptions[feature] ) {\n\t\tif ( result.prop.indexOf( 'description' ) === -1 ) {\n\t\t\tresult.prop.push( 'description' );\n\t\t}\n\t}\n\n\treturn result;\n}\nmodule.exports = extendSearchParams;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tutil = require( './util' ),\n\tView = require( './View' );\n\n/**\n * Representation of a thumbnail\n *\n * @class Thumbnail\n * @extends View\n * @param {Object} options\n */\nfunction Thumbnail( options ) {\n\tView.call( this,\n\t\tutil.extend( { isBorderBox: false }, options )\n\t);\n}\n\nmfExtend( Thumbnail, View, {\n\t/**\n\t * @memberof Thumbnail\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.filename uri decoded filename including File: prefix\n\t *  associated with thumbnail\n\t */\n\tdefaults: {\n\t\tfilename: undefined\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Thumbnail\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tthis.options.description = this.$el.siblings( '.thumbcaption' ).text();\n\t},\n\t/**\n\t * Obtain description for thumbnail\n\t * @memberof Thumbnail\n\t * @instance\n\t * @return {string}\n\t */\n\tgetDescription: function () {\n\t\treturn this.options.description;\n\t},\n\t/**\n\t * Return the page title for the thumbnail\n\t * @memberof Thumbnail\n\t * @instance\n\t * @return {string}\n\t */\n\tgetFileName: function () {\n\t\treturn this.options.filename;\n\t}\n} );\n\nmodule.exports = Thumbnail;\n","var\n\ticons = require( './icons' ),\n\tOverlay = require( './Overlay' );\n\n/**\n * Overlay that initially shows loading animation until\n * caller hides it with .hide()\n *\n * @return {Overlay}\n */\nfunction loadingOverlay() {\n\tvar overlay = new Overlay( {\n\t\tclassName: 'overlay overlay-loading',\n\t\tnoHeader: true\n\t} );\n\ticons.spinner().$el.appendTo( overlay.$( '.overlay-content' ) );\n\treturn overlay;\n}\n\nmodule.exports = loadingOverlay;\n","/**\n * Abstract base class\n * Gateway for retrieving references\n *\n * @class ReferencesGateway\n * @abstract\n *\n * @param {mw.Api} api\n */\nfunction ReferencesGateway( api ) {\n\tthis.api = api;\n}\n\n/**\n * Return the matched reference via API or DOM query\n *\n * @memberof ReferencesGateway\n * @instance\n * @param {string} id CSS selector\n * @param {Page} page to find reference for\n * @return {jQuery.Promise} resolves with an Object representing reference\n *  with a `text` property\n *  The promise should be rejected with ReferenceGateway.ERROR_NOT_EXIST:\n *  if the reference is not found.\n *  If for some reason locating the reference fails return ReferenceGateway.ERROR_OTHER.\n */\nReferencesGateway.prototype.getReference = null;\n\n/**\n * @memberof ReferencesGateway\n * @property ERROR_NOT_EXIST error code to be returned by getReference\n *  when a reference does not exist.\n */\nReferencesGateway.ERROR_NOT_EXIST = 'NOT_EXIST_ERROR';\n/**\n * @memberof ReferencesGateway\n * @property ERROR_OTHER error code to be returned by getReference\n *  under any other circumstance not covered\n *  by ERROR_NOT_EXIST. It should be used if it is unclear whether a reference exists or not.\n */\nReferencesGateway.ERROR_OTHER = 'OTHER_ERROR';\n\nmodule.exports = ReferencesGateway;\n","/**\n * Mobile mode helper class\n *\n * @class context\n * @singleton\n */\nmodule.exports = {\n\t/**\n\t * Gets current mobile mode\n\t * @memberof context\n\t * @instance\n\t * @return {string|null} Name of mode - either `stable` or `beta`. It is `null` if desktop.\n\t */\n\tgetMode: function () {\n\t\treturn mw.config.get( 'wgMFMode' );\n\t}\n};\n","/**\n * Class for managing modules\n *\n * A module in this context is essentially a Javascript class (not to be confused with\n * ResourceLoader modules).\n *\n * @class ModuleLoader\n */\nfunction ModuleLoader() {\n\t/**\n\t * @property {Object} register of defined modules\n\t * @private\n\t */\n\tthis._register = {};\n}\n\nModuleLoader.prototype = {\n\t/**\n\t * Require (import) a module previously defined using define().\n\t * Searches core module registry using mw.loader.require before consulting\n\t * its own local registry. This method is deprecated, please do not use.\n\t * @memberof ModuleLoader\n\t * @instance\n\t * @param {string} id Required module id.\n\t * @return {Object} Required module, can be any JavaScript object.\n\t */\n\trequire: function ( id ) {\n\t\tvar module, args,\n\t\t\tregistry = this._register;\n\n\t\t/**\n\t\t * @return {Object} Module\n\t\t */\n\t\tfunction localRequire() {\n\t\t\tif ( !Object.hasOwnProperty.call( registry, id ) ) {\n\t\t\t\tthrow new Error( 'MobileFrontend Module not found: ' + id );\n\t\t\t}\n\t\t\treturn registry[ id ];\n\t\t}\n\t\targs = id.split( '/' );\n\t\ttry {\n\t\t\tmodule = mw.loader.require( args[0] );\n\t\t\tif ( module[ args[1] ] ) {\n\t\t\t\treturn module[ args[1] ];\n\t\t\t} else {\n\t\t\t\treturn localRequire();\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\treturn localRequire();\n\t\t}\n\t},\n\n\t/**\n\t * Define a module which can be later required (imported) using require().\n\t * @memberof ModuleLoader\n\t * @instance\n\t * @param {string} id Defined module id.\n\t * @param {Object} obj Defined module body, can be any JavaScript object.\n\t * @return {Object}\n\t */\n\tdefine: function ( id, obj ) {\n\t\tvar self = this;\n\n\t\tif ( Object.hasOwnProperty.call( this._register, id ) ) {\n\t\t\tthrow new Error( 'Module already exists: ' + id );\n\t\t}\n\t\tthis._register[ id ] = obj;\n\t\t// return an object of additionally functions to do with the registered module\n\t\treturn {\n\t\t\t/**\n\t\t\t * @see ModuleLoader#deprecate\n\t\t\t * @param {string} deprecatedId Defined module id, which is deprecated.\n\t\t\t * @ignore\n\t\t\t */\n\t\t\tdeprecate: function ( deprecatedId ) {\n\t\t\t\tself.deprecate( deprecatedId, obj, id );\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t * Deprecate a module and give an replacement (if there is any).\n\t * @memberof ModuleLoader\n\t * @instance\n\t * @param {string} id Defined module id, which is deprecated.\n\t * @param {Object} obj Defined module body, can be any JavaScript object.\n\t * @param {string} [replacement] Give an optional replacement for this module (which\n\t * needs to be already defined!)\n\t */\n\tdeprecate: function ( id, obj, replacement ) {\n\t\tvar msg;\n\t\tif ( replacement ) {\n\t\t\t// add an alternative for this module, if any given\n\t\t\tmsg = 'Use ' + replacement + ' instead.';\n\t\t}\n\t\t// register it as a deprecated one\n\t\tmw.log.deprecate( this._register, id, obj, msg );\n\t}\n};\n\nmodule.exports = ModuleLoader;\n","var\n\tutil = require( './util' ),\n\tmfExtend = require( './mfExtend' ),\n\toverlayManager = null;\n\n/**\n * Manages opening and closing overlays when the URL hash changes to one\n * of the registered values (see OverlayManager.add()).\n *\n * This allows overlays to function like real pages, with similar browser back/forward\n * and refresh behavior.\n *\n * @class OverlayManager\n * @param {Router} router\n */\nfunction OverlayManager( router ) {\n\trouter.on( 'route', this._checkRoute.bind( this ) );\n\tthis.router = router;\n\t// use an object instead of an array for entries so that we don't\n\t// duplicate entries that already exist\n\tthis.entries = {};\n\t// stack of all the open overlays, stack[0] is the latest one\n\tthis.stack = [];\n\tthis.hideCurrent = true;\n}\n\nmfExtend( OverlayManager, {\n\t/**\n\t * Don't try to hide the active overlay on a route change event triggered\n\t * by hiding another overlay.\n\t * Called when hiding an overlay.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t */\n\t_onHideOverlay: function () {\n\t\tthis.hideCurrent = false;\n\n\t\tthis.router.back();\n\t},\n\n\t/**\n\t * Show the overlay and bind the '_om_hide' event to _onHideOverlay.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to show\n\t */\n\t_showOverlay: function ( overlay ) {\n\t\t// if hidden using overlay (not hardware) button, update the state\n\t\toverlay.once( '_om_hide', this._onHideOverlay.bind( this ) );\n\n\t\toverlay.show();\n\t},\n\n\t/**\n\t * Hide overlay\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to hide\n\t * @return {boolean} Whether the overlay has been hidden\n\t */\n\t_hideOverlay: function ( overlay ) {\n\t\tvar result;\n\n\t\t// remove the callback for updating state when overlay closed using\n\t\t// overlay close button\n\t\toverlay.off( '_om_hide' );\n\n\t\tresult = overlay.hide( this.stack.length > 1 );\n\n\t\t// if closing prevented, reattach the callback\n\t\tif ( !result ) {\n\t\t\toverlay.once( '_om_hide', this._onHideOverlay.bind( this ) );\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Show match's overlay if match is not null.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Object|null} match Object with factory function's result. null if no match.\n\t */\n\t_processMatch: function ( match ) {\n\t\tvar factoryResult,\n\t\t\tself = this;\n\n\t\t/**\n\t\t * Attach an event to the overlays hide event\n\t\t * @param {Overlay} overlay\n\t\t */\n\t\tfunction attachHideEvent( overlay ) {\n\t\t\toverlay.on( 'hide', function () {\n\t\t\t\toverlay.emit( '_om_hide' );\n\t\t\t} );\n\t\t}\n\n\t\tif ( match ) {\n\t\t\tif ( match.overlay ) {\n\t\t\t\t// if the match is an overlay that was previously opened, reuse it\n\t\t\t\tself._showOverlay( match.overlay );\n\t\t\t} else {\n\t\t\t\t// else create an overlay using the factory function result (either\n\t\t\t\t// a promise or an overlay)\n\t\t\t\tfactoryResult = match.factoryResult;\n\t\t\t\t// http://stackoverflow.com/a/13075985/365238\n\t\t\t\tif ( typeof factoryResult.promise === 'function' ) {\n\t\t\t\t\tfactoryResult.then( function ( overlay ) {\n\t\t\t\t\t\tmatch.overlay = overlay;\n\t\t\t\t\t\tattachHideEvent( overlay );\n\t\t\t\t\t\tself._showOverlay( overlay );\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tmatch.overlay = factoryResult;\n\t\t\t\t\tattachHideEvent( match.overlay );\n\t\t\t\t\tself._showOverlay( factoryResult );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * A callback for Router's `route` event.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {jQuery.Event} ev Event object.\n\t */\n\t_checkRoute: function ( ev ) {\n\t\tvar\n\t\t\tcurrent = this.stack[0],\n\t\t\tmatch;\n\n\t\t// When entering an overlay for the first time,\n\t\t// the manager should remember the user's scroll position\n\t\t// overlays always open at top of page\n\t\t// and we'll want to restore it later.\n\t\t// This should happen before the call to _matchRoute which will \"show\" the overlay.\n\t\t// The Overlay has similar logic for overlays that are not managed via the overlay.\n\t\tif ( !current ) {\n\t\t\tthis.scrollTop = window.pageYOffset;\n\t\t}\n\n\t\tmatch = Object.keys( this.entries ).reduce( function ( m, id ) {\n\t\t\treturn m || this._matchRoute( ev.path, this.entries[ id ] );\n\t\t}.bind( this ), null );\n\n\t\t// if there is an overlay in the stack and it's opened, try to close it\n\t\tif (\n\t\t\tcurrent &&\n\t\t\tcurrent.overlay !== undefined &&\n\t\t\tthis.hideCurrent &&\n\t\t\t!this._hideOverlay( current.overlay )\n\t\t) {\n\t\t\t// if hide prevented, prevent route change event\n\t\t\tev.preventDefault();\n\t\t} else if ( !match ) {\n\t\t\t// if hidden and no new matches, reset the stack\n\t\t\tthis.stack = [];\n\t\t\t// restore the scroll position.\n\t\t\twindow.scrollTo( window.pageXOffset, this.scrollTop );\n\t\t}\n\n\t\tthis.hideCurrent = true;\n\t\tthis._processMatch( match );\n\t},\n\n\t/**\n\t * Check if a given path matches one of the entries.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {string} path Path (hash) to check.\n\t * @param {Object} entry Entry object created in OverlayManager#add.\n\t * @return {Object|null} Match object with factory function's result.\n\t *  Returns null if no match.\n\t */\n\t_matchRoute: function ( path, entry ) {\n\t\tvar\n\t\t\tnext,\n\t\t\tmatch = path.match( entry.route ),\n\t\t\tprevious = this.stack[1],\n\t\t\tself = this;\n\n\t\t/**\n\t\t * Returns object to add to stack\n\t\t * @method\n\t\t * @ignore\n\t\t * @return {Object}\n\t\t */\n\t\tfunction getNext() {\n\t\t\treturn {\n\t\t\t\tpath: path,\n\t\t\t\tfactoryResult: entry.factory.apply( self, match.slice( 1 ) )\n\t\t\t};\n\t\t}\n\n\t\tif ( match ) {\n\t\t\t// if previous stacked overlay's path matches, assume we're going back\n\t\t\t// and reuse a previously opened overlay\n\t\t\tif ( previous && previous.path === path ) {\n\t\t\t\tif ( previous.overlay && previous.overlay.hasLoadError ) {\n\t\t\t\t\tself.stack.shift();\n\t\t\t\t\t// Loading of overlay failed so we want to replace it with a new\n\t\t\t\t\t// overlay (which will try to load successfully)\n\t\t\t\t\tself.stack[0] = getNext();\n\t\t\t\t\treturn self.stack[0];\n\t\t\t\t}\n\n\t\t\t\tself.stack.shift();\n\t\t\t\treturn previous;\n\t\t\t} else {\n\t\t\t\tnext = getNext();\n\t\t\t\tif ( this.stack[0] && next.path === this.stack[0].path ) {\n\t\t\t\t\t// current overlay path is same as path to check which means overlay\n\t\t\t\t\t// is attempting to refresh so just replace current overlay with new\n\t\t\t\t\t// overlay\n\t\t\t\t\tself.stack[0] = next;\n\t\t\t\t} else {\n\t\t\t\t\tself.stack.unshift( next );\n\t\t\t\t}\n\t\t\t\treturn next;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Add an overlay that should be shown for a specific fragment identifier.\n\t *\n\t * The following code will display an overlay whenever a user visits a URL that\n\t * end with '#/hi/name'. The value of `name` will be passed to the overlay.\n\t *\n\t *     @example\n\t *     overlayManager.add( /\\/hi\\/(.*)/, function ( name ) {\n\t *       var factoryResult = $.Deferred();\n\t *\n\t *       mw.using( 'mobile.HiOverlay', function () {\n\t *         var HiOverlay = M.require( 'HiOverlay' );\n\t *         factoryResult.resolve( new HiOverlay( { name: name } ) );\n\t *       } );\n\t *\n\t *       return factoryResult;\n\t *     } );\n\t *\n\t * @memberof OverlayManager\n\t * @instance\n\t * @param {RegExp} route route regular expression, optionally with parameters.\n\t * @param {Function} factory a function returning an overlay or a $.Deferred\n\t * which resolves to an overlay.\n\t */\n\tadd: function ( route, factory ) {\n\t\tvar self = this,\n\t\t\tentry = {\n\t\t\t\troute: route,\n\t\t\t\tfactory: factory\n\t\t\t};\n\n\t\tthis.entries[route] = entry;\n\t\t// Check if overlay should be shown for the current path.\n\t\t// The DOM must fully load before we can show the overlay because Overlay relies on it.\n\t\tutil.docReady( function () {\n\t\t\tself._processMatch( self._matchRoute( self.router.getPath(), entry ) );\n\t\t} );\n\t},\n\n\t/**\n\t * Replace the currently displayed overlay with a new overlay without changing the\n\t * URL. This is useful for when you want to switch overlays, but don't want to\n\t * change the back button or close box behavior.\n\t *\n\t * @memberof OverlayManager\n\t * @instance\n\t * @param {Object} overlay The overlay to display\n\t */\n\treplaceCurrent: function ( overlay ) {\n\t\tif ( this.stack.length === 0 ) {\n\t\t\tthrow new Error( 'Trying to replace OverlayManager\\'s current overlay, but stack is empty' );\n\t\t}\n\t\tthis._hideOverlay( this.stack[0].overlay );\n\t\tthis.stack[0].overlay = overlay;\n\t\tthis._showOverlay( overlay );\n\t}\n} );\n\n/**\n * Retrieve a singleton instance using 'mediawiki.router'.\n * @memberof OverlayManager\n * @return {OverlayManager}\n */\nOverlayManager.getSingleton = function () {\n\tif ( !overlayManager ) {\n\t\toverlayManager = new OverlayManager( mw.loader.require( 'mediawiki.router' ) );\n\t}\n\treturn overlayManager;\n};\n\nmodule.exports = OverlayManager;\n","var sectionTemplate = mw.template.get( 'mobile.startup', 'Section.hogan' ),\n\tutil = require( './util.js' ),\n\tcache = {};\n\n/**\n * Add child to listOfSections if the level of child is the same as the last\n * child of listOfSections, otherwise add it to the children of the last\n * section of listOfSections. If listOfSections is empty, just add child to it.\n * @private\n * @param {Array} listOfSections - Array of section ids\n * @param {Object} child - Section to be added to listOfSections\n */\nfunction assignToParent( listOfSections, child ) {\n\tvar section;\n\tif ( listOfSections.length === 0 ) {\n\t\tlistOfSections.push( child );\n\t} else {\n\t\t// take a look at the last child\n\t\tsection = listOfSections[listOfSections.length - 1];\n\t\t// If the level is the same as another section in this list it is a sibling\n\t\tif ( parseInt( section.level, 10 ) === parseInt( child.level, 10 ) ) {\n\t\t\tlistOfSections.push( child );\n\t\t} else {\n\t\t\t// Otherwise take a look at that sections children recursively\n\t\t\tassignToParent( section.subsections, child );\n\t\t}\n\t}\n}\n\n/**\n * Order sections hierarchically\n * @private\n * @param {Array} sections Array of section objects created from response HTML\n * @return {Array} Ordered array of sections\n */\nfunction transformSections( sections ) {\n\tvar sectionLevels = sections.map( function ( s ) { return s.level; } ),\n\t\texistingSectionLevels = sectionLevels.filter( function ( level ) {\n\t\t\treturn !!level;\n\t\t} ),\n\t\tcollapseLevel = Math.min.apply( this, existingSectionLevels ).toString(),\n\t\tlastSection,\n\t\tresult = [];\n\n\t// if the first section level is not equal to collapseLevel, this first\n\t// section will not have a parent and will be appended to the result.\n\tsections.forEach( function ( section ) {\n\t\tif ( section.line !== undefined ) {\n\t\t\tsection.line = section.line.replace( /<\\/?a\\b[^>]*>/g, '' );\n\t\t}\n\t\tsection.subsections = [];\n\n\t\tif (\n\t\t\t!lastSection ||\n\t\t\t(\n\t\t\t\t!section.level ||\n\t\t\t\tsection.level === collapseLevel\n\t\t\t) ||\n\t\t\t// make sure lastSections first child's level is bigger than section.level\n\t\t\t(\n\t\t\t\tlastSection.subsections.length &&\n\t\t\t\tlastSection.subsections[0].level > section.level\n\t\t\t) ||\n\t\t\t// also make sure section.level is not bigger than the lastSection.level\n\t\t\t(\n\t\t\t\tlastSection.level &&\n\t\t\t\tlastSection.level >= section.level\n\t\t\t)\n\t\t) {\n\t\t\tresult.push( section );\n\t\t\tlastSection = section;\n\t\t} else {\n\t\t\tassignToParent( lastSection.subsections, section );\n\t\t\tlastSection.text += sectionTemplate.render( section );\n\t\t}\n\t} );\n\n\treturn result;\n}\n\n/**\n * API for providing Page data\n * @class PageGateway\n * @param {mw.Api} api\n */\nfunction PageGateway( api ) {\n\tthis.api = api;\n}\n\nPageGateway.prototype = {\n\t/**\n\t * Retrieve a page from the api\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page to be retrieved\n\t * @param {string} endpoint an alternative api url to retrieve the page from\n\t * @param {boolean} leadOnly When set only the lead section content is returned\n\t * @return {jQuery.Deferred} with parameter page data that can be passed to a Page view\n\t */\n\tgetPage: function ( title, endpoint, leadOnly ) {\n\t\tvar timestamp,\n\t\t\td = util.Deferred(),\n\t\t\toptions = endpoint ? {\n\t\t\t\turl: endpoint,\n\t\t\t\tdataType: 'jsonp'\n\t\t\t} : {},\n\t\t\tprotection = {\n\t\t\t\tedit: [ '*' ]\n\t\t\t};\n\n\t\tif ( !cache[title] ) {\n\t\t\tcache[title] = this.api.get( {\n\t\t\t\taction: 'mobileview',\n\t\t\t\tpage: title,\n\t\t\t\tvariant: mw.config.get( 'wgPageContentLanguage' ),\n\t\t\t\tredirect: 'yes',\n\t\t\t\tprop: 'id|sections|text|lastmodified|lastmodifiedby|languagecount|hasvariants|protection|displaytitle|revision',\n\t\t\t\tnoheadings: 'yes',\n\t\t\t\tsectionprop: 'level|line|anchor',\n\t\t\t\tsections: leadOnly ? 0 : 'all'\n\t\t\t}, options ).then( function ( resp ) {\n\t\t\t\tvar sections, lastModified, resolveObj, mv;\n\n\t\t\t\tif ( resp.error ) {\n\t\t\t\t\treturn d.reject( resp.error );\n\t\t\t\t} else if ( !resp.mobileview.sections ) {\n\t\t\t\t\treturn d.reject( 'No sections' );\n\t\t\t\t} else {\n\t\t\t\t\tmv = resp.mobileview;\n\t\t\t\t\tsections = transformSections( mv.sections );\n\t\t\t\t\t// Assume the timestamp is in the form TS_ISO_8601\n\t\t\t\t\t// and we don't care about old browsers\n\t\t\t\t\t// change to seconds to be consistent with PHP\n\t\t\t\t\ttimestamp = new Date( mv.lastmodified ).getTime() / 1000;\n\t\t\t\t\tlastModified = mv.lastmodifiedby;\n\n\t\t\t\t\t// FIXME: [API] the API sometimes returns an object and sometimes an array\n\t\t\t\t\t// There are various quirks with the format of protection level\n\t\t\t\t\t// as returned by api.\n\t\t\t\t\t// Also it is usually incomplete - if something is missing this means\n\t\t\t\t\t// that it has no protection level.\n\t\t\t\t\t// When an array this means there is no protection level set.\n\t\t\t\t\t// To keep the data type consistent either use the predefined\n\t\t\t\t\t// protection level,\n\t\t\t\t\t// or extend it with what is returned by API.\n\t\t\t\t\tprotection = Array.isArray( mv.protection ) ?\n\t\t\t\t\t\tprotection :\n\t\t\t\t\t\tutil.extend( protection, mv.protection );\n\n\t\t\t\t\tresolveObj = {\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tid: mv.id,\n\t\t\t\t\t\trevId: mv.revId,\n\t\t\t\t\t\tprotection: protection,\n\t\t\t\t\t\tlead: sections[0].text,\n\t\t\t\t\t\tsections: sections.slice( 1 ),\n\t\t\t\t\t\tisMainPage: mv.mainpage !== undefined,\n\t\t\t\t\t\thistoryUrl: mw.util.getUrl( title, {\n\t\t\t\t\t\t\taction: 'history'\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\tlastModifiedTimestamp: timestamp,\n\t\t\t\t\t\tlanguageCount: mv.languagecount,\n\t\t\t\t\t\thasVariants: mv.hasvariants !== undefined,\n\t\t\t\t\t\tdisplayTitle: mv.displaytitle\n\t\t\t\t\t};\n\t\t\t\t\t// Add non-anonymous user information\n\t\t\t\t\tif ( lastModified ) {\n\t\t\t\t\t\tutil.extend( resolveObj, {\n\t\t\t\t\t\t\tlastModifiedUserName: lastModified.name,\n\t\t\t\t\t\t\tlastModifiedUserGender: lastModified.gender\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t\t// FIXME: Return a Page class here\n\t\t\t\t\treturn resolveObj;\n\t\t\t\t}\n\t\t\t}, function ( msg ) {\n\t\t\t\treturn d.reject( msg );\n\t\t\t} );\n\t\t}\n\n\t\treturn cache[title];\n\t},\n\n\t/**\n\t * Invalidate the internal cache for a given page\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page who's cache you want to invalidate\n\t */\n\tinvalidatePage: function ( title ) {\n\t\tdelete cache[title];\n\t},\n\n\t/**\n\t * Gets language variant list for a page; helper function for getPageLanguages()\n\t * @memberof PageGateway\n\t * @instance\n\t * @private\n\t * @param  {string} title Name of the page to obtain variants for\n\t * @param  {Object} data Data from API\n\t * @return {Array|boolean} List of language variant objects or false if no variants exist\n\t */\n\t_getLanguageVariantsFromApiResponse: function ( title, data ) {\n\t\tvar generalData = data.query.general,\n\t\t\tvariantPath = generalData.variantarticlepath,\n\t\t\tvariants = [];\n\n\t\tif ( !generalData.variants ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Create the data object for each variant and store it\n\t\tObject.keys( generalData.variants ).forEach( function ( index ) {\n\t\t\tvar item = generalData.variants[ index ],\n\t\t\t\tvariant = {\n\t\t\t\t\tautonym: item.name,\n\t\t\t\t\tlang: item.code\n\t\t\t\t};\n\n\t\t\tif ( variantPath ) {\n\t\t\t\tvariant.url = variantPath\n\t\t\t\t\t.replace( '$1', title )\n\t\t\t\t\t.replace( '$2', item.code );\n\t\t\t} else {\n\t\t\t\tvariant.url = mw.util.getUrl( title, {\n\t\t\t\t\tvariant: item.code\n\t\t\t\t} );\n\t\t\t}\n\t\t\tvariants.push( variant );\n\t\t} );\n\n\t\treturn variants;\n\t},\n\n\t/**\n\t * Retrieve available languages for a given title\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page languages should be retrieved for\n\t * @param {string} [language] when provided the names of the languages returned\n\t *  will be translated additionally into this language.\n\t * @return {jQuery.Deferred} which is called with an object containing langlinks\n\t * and variant links as defined @ https://en.m.wikipedia.org/w/api.php?action=help&modules=query%2Blanglinks\n\t */\n\tgetPageLanguages: function ( title, language ) {\n\t\tvar self = this,\n\t\t\targs = {\n\t\t\t\taction: 'query',\n\t\t\t\tmeta: 'siteinfo',\n\t\t\t\tsiprop: 'general',\n\t\t\t\tprop: 'langlinks',\n\t\t\t\tlllimit: 'max',\n\t\t\t\ttitles: title,\n\t\t\t\tformatversion: 2\n\t\t\t};\n\n\t\tif ( language ) {\n\t\t\targs.llprop = 'url|autonym|langname';\n\t\t\targs.llinlanguagecode = language;\n\t\t} else {\n\t\t\targs.llprop = 'url|autonym';\n\t\t}\n\t\treturn this.api.get( args ).then( function ( resp ) {\n\t\t\treturn {\n\t\t\t\tlanguages: resp.query.pages[0].langlinks || [],\n\t\t\t\tvariants: self._getLanguageVariantsFromApiResponse( title, resp )\n\t\t\t};\n\t\t}, function () {\n\t\t\treturn util.Deferred().reject();\n\t\t} );\n\t},\n\n\t/**\n\t * Extract sections from headings in $el\n\t * @memberof PageGateway\n\t * @instance\n\t * @private\n\t * @param {jQuery.Object} $el object from which sections are extracted\n\t * @return {Array} Array of section objects created from headings in $el\n\t * FIXME: Where's a better place for getSectionsFromHTML and this function to live?\n\t * Answer: Possibly Page.js\n\t */\n\t_getAPIResponseFromHTML: function ( $el ) {\n\t\t// FIXME: use Page.HEADING_SELECTOR\n\t\tvar $headings = $el.find( 'h1,h2,h3,h4,h5,h6' ),\n\t\t\tsections = [];\n\n\t\t$headings.each( function () {\n\t\t\tvar level = this.tagName.substr( 1 ),\n\t\t\t\t$span = $el.find( this ).find( '.mw-headline' );\n\n\t\t\tif ( $span.length ) {\n\t\t\t\tsections.push( {\n\t\t\t\t\tlevel: level,\n\t\t\t\t\tline: $span.html(),\n\t\t\t\t\tanchor: $span.attr( 'id' ) || '',\n\t\t\t\t\ttext: ''\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t\treturn sections;\n\t},\n\n\t/**\n\t * Order sections hierarchically\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {jQuery.Object} $el object from which sections are extracted\n\t * @return {Array} Ordered array of sections\n\t */\n\tgetSectionsFromHTML: function ( $el ) {\n\t\treturn transformSections( this._getAPIResponseFromHTML( $el ) );\n\t}\n};\n\nmodule.exports = PageGateway;\n","var\n\tloadingOverlay = require( './loadingOverlay' ),\n\tutil = require( './util' );\n\n/**\n * Utility library for looking up details on the current user\n * @class loader\n * @singleton\n */\nmodule.exports = {\n\t// Exported to support testing and stubbing\n\tnewLoadingOverlay: function () {\n\t\treturn loadingOverlay();\n\t},\n\t/**\n\t * Loads a module via ResourceLoader\n\t * and displays a full screen LoadingOverlay during load time.\n\t * @memberof loader\n\t * @instance\n\t * @param {string} name ResourceLoader module name to load asynchronously.\n\t * @param {boolean} delegateHide if true the caller is responsible for hiding\n\t *  the intermediate loader.\n\t * @param {boolean} [showLoadingOverlay] if false a loading overlay will be hidden while\n\t *  loading the module. Defaults to true.\n\t * @return {jQuery.Promise}\n\t */\n\tloadModule: function ( name, delegateHide, showLoadingOverlay ) {\n\t\tvar loadingOverlay = this.newLoadingOverlay();\n\n\t\tshowLoadingOverlay = ( showLoadingOverlay !== undefined ) ? showLoadingOverlay : true;\n\t\tif ( showLoadingOverlay ) {\n\t\t\tloadingOverlay.show();\n\t\t}\n\n\t\tfunction hideOverlayIfNeeded() {\n\t\t\tif ( !delegateHide && showLoadingOverlay ) {\n\t\t\t\tloadingOverlay.hide();\n\t\t\t}\n\t\t}\n\t\treturn mw.loader.using( name ).then( function () {\n\t\t\thideOverlayIfNeeded();\n\n\t\t\treturn loadingOverlay;\n\t\t}, function () {\n\t\t\thideOverlayIfNeeded();\n\n\t\t\treturn util.Deferred().reject().promise();\n\t\t} );\n\t}\n};\n","var\n\tbrowser = require( './Browser' ).getSingleton(),\n\tView = require( './View' ),\n\tutil = require( './util' ),\n\tPage = require( './Page' ),\n\tDeferred = util.Deferred,\n\twhen = util.when,\n\ticons = require( './icons' ),\n\tviewport = mw.viewport,\n\tspinner = icons.spinner(),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * Get the id of the section $el belongs to.\n * @param {jQuery.Object} $el\n * @return {string|null} either the anchor (id attribute of the section heading\n *  or null if none found)\n */\nfunction getSectionId( $el ) {\n\tvar id,\n\t\thSelector = Page.HEADING_SELECTOR,\n\t\t$parent = $el.parent(),\n\t\t// e.g. matches Subheading in\n\t\t// <h2>H</h2><div><h3 id=\"subheading\">Subh</h3><a class=\"element\"></a></div>\n\t\t$heading = $el.prevAll( hSelector ).eq( 0 );\n\n\tif ( $heading.length ) {\n\t\tid = $heading.find( '.mw-headline' ).attr( 'id' );\n\t\tif ( id ) {\n\t\t\treturn id;\n\t\t}\n\t}\n\tif ( $parent.length ) {\n\t\t// if we couldnt find a sibling heading, check the sibling of the parents\n\t\t// consider <div><h2 /><div><$el/></div></div>\n\t\treturn getSectionId( $parent );\n\t} else {\n\t\treturn null;\n\t}\n}\n\n/**\n * Representation of the current skin being rendered.\n *\n * @class Skin\n * @extends View\n * @uses Browser\n * @uses Page\n * @fires Skin#click\n * @fires Skin#references-loaded\n * @fires Skin#changed\n * @param {Object} params Configuration options\n * @param {OO.EventEmitter} params.eventBus Object used to listen for\n * before-section-toggled, scroll:throttled, resize:throttled, and\n * section-toggled events\n */\nfunction Skin( params ) {\n\tvar self = this,\n\t\toptions = util.extend( {}, params );\n\n\tthis.page = options.page;\n\tthis.name = options.name;\n\tif ( options.mainMenu ) {\n\t\tthis.mainMenu = options.mainMenu;\n\t\tmw.log.warn( 'Skin: Use of mainMenu is deprecated.' );\n\t}\n\tthis.eventBus = options.eventBus;\n\toptions.isBorderBox = false;\n\tView.call( this, options );\n\tthis.referencesGateway = options.referencesGateway;\n\n\tif (\n\t\tmw.config.get( 'wgMFLazyLoadImages' )\n\t) {\n\t\tutil.docReady( function () {\n\t\t\tself.setupImageLoading();\n\t\t} );\n\t}\n\n\tif ( mw.config.get( 'wgMFLazyLoadReferences' ) ) {\n\t\tthis.eventBus.on( 'before-section-toggled', this.lazyLoadReferences.bind( this ) );\n\t}\n}\n\nmfExtend( Skin, View, {\n\t/**\n\t * @memberof Skin\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {Page} defaults.page page the skin is currently rendering\n\t * @property {ReferencesGateway} defaults.referencesGateway instance of references gateway\n\t */\n\tdefaults: {\n\t\tpage: undefined\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Skin\n\t * @instance\n\t */\n\tevents: {},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Skin\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar $el = this.$el;\n\t\tif ( browser.supportsAnimations() ) {\n\t\t\t$el.addClass( 'animations' );\n\t\t}\n\t\tif ( browser.supportsTouchEvents() ) {\n\t\t\t$el.addClass( 'touch-events' );\n\t\t}\n\t\tutil.parseHTML( '<div class=\"transparent-shield cloaked-element\">' )\n\t\t\t.appendTo( $el.find( '#mw-mf-page-center' ) );\n\t\t/**\n\t\t * Fired when appearance of skin changes.\n\t\t * @event Skin#changed\n\t\t */\n\t\tthis.emit( 'changed' );\n\n\t\t/**\n\t\t * Fired when the skin is clicked.\n\t\t * @event Skin#click\n\t\t */\n\t\tthis.$( '#mw-mf-page-center' ).on( 'click', this.emit.bind( this, 'click' ) );\n\t},\n\t/**\n\t * Get images that have not yet been loaded in the page\n\t * @memberof Skin\n\t * @instance\n\t * @param {jQuery.Object} [$container] The container that should be\n\t *  searched for image placeholders. Defaults to \"#content\".\n\t * @return {Array} of unloaded image placeholders in the page\n\t */\n\tgetUnloadedImages: function ( $container ) {\n\t\t$container = $container || this.$( '#content' );\n\t\treturn $container.find( '.lazy-image-placeholder' ).toArray();\n\t},\n\t/**\n\t * Setup listeners to watch unloaded images and load them into the page\n\t * as and when they are needed.\n\t * @memberof Skin\n\t * @instance\n\t * @param {jQuery.Object} [$container] The container that should be\n\t *  searched for image placeholders. Defaults to \"#content\".\n\t * @return {jQuery.Deferred} which will be resolved when the attempts to\n\t *  load all images subject to loading have been completed.\n\t */\n\tsetupImageLoading: function ( $container ) {\n\t\tvar self = this,\n\t\t\toffset = util.getWindow().height() * 1.5,\n\t\t\tloadImagesList = this.loadImagesList.bind( this ),\n\t\t\timagePlaceholders = this.getUnloadedImages( $container );\n\n\t\t/**\n\t\t * Check whether an image should be loaded based on its proximity to the\n\t\t * viewport; and whether it is displayed to the user.\n\t\t * @param {jQuery.Object} $placeholder\n\t\t * @return {boolean}\n\t\t */\n\t\tfunction shouldLoadImage( $placeholder ) {\n\t\t\treturn viewport.isElementCloseToViewport( $placeholder[0], offset ) &&\n\t\t\t\t// If a placeholder is an inline element without a height attribute set\n\t\t\t\t// it will record as hidden\n\t\t\t\t// to circumvent this we also need to test the height (see T143768).\n\t\t\t\t( $placeholder.is( ':visible' ) || $placeholder.height() === 0 );\n\t\t}\n\n\t\t/**\n\t\t * Load remaining images in viewport\n\t\t * @return {jQuery.Deferred}\n\t\t */\n\t\tfunction _loadImages() {\n\t\t\tvar images = [];\n\t\t\t// Filter unloaded images to only the images that still need to be loaded\n\t\t\timagePlaceholders = util.grep( imagePlaceholders, function ( placeholder ) {\n\t\t\t\tvar $placeholder = self.$( placeholder );\n\t\t\t\t// Check length to ensure the image is still in the DOM.\n\t\t\t\tif ( $placeholder.length && shouldLoadImage( $placeholder ) ) {\n\t\t\t\t\timages.push( placeholder );\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} );\n\n\t\t\t// When no images are left unbind all events\n\t\t\tif ( !imagePlaceholders.length ) {\n\t\t\t\tself.eventBus.off( 'scroll:throttled', _loadImages );\n\t\t\t\tself.eventBus.off( 'resize:throttled', _loadImages );\n\t\t\t\tself.eventBus.off( 'section-toggled', _loadImages );\n\t\t\t\tself.off( 'changed', _loadImages );\n\t\t\t}\n\n\t\t\t// load any remaining images.\n\t\t\treturn loadImagesList( images );\n\t\t}\n\n\t\tthis.eventBus.on( 'scroll:throttled', _loadImages );\n\t\tthis.eventBus.on( 'resize:throttled', _loadImages );\n\t\tthis.eventBus.on( 'section-toggled', _loadImages );\n\t\tthis.on( 'changed', _loadImages );\n\n\t\treturn _loadImages();\n\t},\n\t/**\n\t * Load an image on demand\n\t * @memberof Skin\n\t * @instance\n\t * @param {Array} [images] a list of images that have not been loaded.\n\t *  If none given all will be loaded.\n\t * @return {jQuery.Deferred}\n\t */\n\tloadImagesList: function ( images ) {\n\t\tvar callbacks,\n\t\t\t$ = this.$.bind( this ),\n\t\t\tloadImage = this.loadImage.bind( this );\n\n\t\timages = images || this.getUnloadedImages();\n\t\tcallbacks = images.map( function ( placeholder ) {\n\t\t\treturn loadImage( $( placeholder ) );\n\t\t} );\n\n\t\treturn when.apply( null, callbacks );\n\t},\n\t/**\n\t * Load an image on demand\n\t * @memberof Skin\n\t * @instance\n\t * @param {jQuery.Object} $placeholder\n\t * @return {jQuery.Deferred}\n\t */\n\tloadImage: function ( $placeholder ) {\n\t\tvar\n\t\t\td = Deferred(),\n\t\t\twidth = $placeholder.attr( 'data-width' ),\n\t\t\theight = $placeholder.attr( 'data-height' ),\n\t\t\t// document must be passed to ensure image will start downloading\n\t\t\t$downloadingImage = util.parseHTML( '<img>', this.$el[0].ownerDocument );\n\n\t\t// When the image has loaded\n\t\t$downloadingImage.on( 'load', function () {\n\t\t\t// Swap the HTML inside the placeholder (to keep the layout and\n\t\t\t// dimensions the same and not trigger layouts\n\t\t\t$downloadingImage.addClass( 'image-lazy-loaded' );\n\t\t\t$placeholder.replaceWith( $downloadingImage );\n\t\t\td.resolve();\n\t\t} );\n\t\t$downloadingImage.on( 'error', function () {\n\t\t\td.reject();\n\t\t} );\n\n\t\t// Trigger image download after binding the load handler\n\t\t$downloadingImage.attr( {\n\t\t\t'class': $placeholder.attr( 'data-class' ),\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tsrc: $placeholder.attr( 'data-src' ),\n\t\t\talt: $placeholder.attr( 'data-alt' ),\n\t\t\tstyle: $placeholder.attr( 'style' ),\n\t\t\tsrcset: $placeholder.attr( 'data-srcset' )\n\t\t} );\n\t\treturn d;\n\t},\n\n\t/**\n\t * Load the references section content from API if it's not already loaded.\n\t *\n\t * All references tags content will be loaded per section.\n\t * @memberof Skin\n\t * @instance\n\t * @param {Object} data Information about the section. It's in the following form:\n\t * {\n\t *     @property {string} page,\n\t *     @property {boolean} wasExpanded,\n\t *     @property {jQuery.Object} $heading,\n\t *     @property {boolean} isReferenceSection\n\t * }\n\t * @return {jQuery.Promise} rejected when not a reference section.\n\t */\n\tlazyLoadReferences: function ( data ) {\n\t\tvar $content, $spinner,\n\t\t\tgateway = this.referencesGateway,\n\t\t\tgetUnloadedImages = this.getUnloadedImages.bind( this ),\n\t\t\tloadImagesList = this.loadImagesList.bind( this ),\n\t\t\tself = this;\n\n\t\t// If the section was expanded before toggling, do not load anything as\n\t\t// section is being collapsed now.\n\t\t// Also return early if lazy loading is not required or the section is\n\t\t// not a reference section\n\t\tif (\n\t\t\tdata.wasExpanded ||\n\t\t\t!data.isReferenceSection\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t$content = data.$heading.next();\n\n\t\tfunction loadImagesAndSetData() {\n\t\t\t// lazy load images if any\n\t\t\tloadImagesList( getUnloadedImages( $content ) );\n\t\t\t// Do not attempt further loading even if we're unable to load this time.\n\t\t\t$content.data( 'are-references-loaded', 1 );\n\t\t}\n\n\t\tif ( !$content.data( 'are-references-loaded' ) ) {\n\t\t\t$content.children().addClass( 'hidden' );\n\t\t\t$spinner = spinner.$el.prependTo( $content );\n\n\t\t\t// First ensure we retrieve all of the possible lists\n\t\t\treturn gateway.getReferencesLists( data.page )\n\t\t\t\t.then( function () {\n\t\t\t\t\tvar lastId;\n\n\t\t\t\t\t$content.find( '.mf-lazy-references-placeholder' ).each( function () {\n\t\t\t\t\t\tvar refListIndex = 0,\n\t\t\t\t\t\t\t$placeholder = $content.find( this ),\n\t\t\t\t\t\t\t// search for id of the collapsible heading\n\t\t\t\t\t\t\tid = getSectionId( $placeholder );\n\n\t\t\t\t\t\tif ( lastId !== id ) {\n\t\t\t\t\t\t\t// If the placeholder belongs to a new section reset index\n\t\t\t\t\t\t\trefListIndex = 0;\n\t\t\t\t\t\t\tlastId = id;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// otherwise increment it\n\t\t\t\t\t\t\trefListIndex++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( id ) {\n\t\t\t\t\t\t\tgateway.getReferencesList( data.page, id )\n\t\t\t\t\t\t\t\t.then( function ( refListElements ) {\n\t\t\t\t\t\t\t\t\t// Note if no section html is provided\n\t\t\t\t\t\t\t\t\t// no substitution will happen\n\t\t\t\t\t\t\t\t\t// so user is forced to rely on placeholder link.\n\t\t\t\t\t\t\t\t\tif ( refListElements && refListElements[refListIndex] ) {\n\t\t\t\t\t\t\t\t\t\t$placeholder.replaceWith(\n\t\t\t\t\t\t\t\t\t\t\trefListElements[refListIndex]\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\t// Show the section now the references lists have been placed.\n\t\t\t\t\t$spinner.remove();\n\t\t\t\t\t$content.children().removeClass( 'hidden' );\n\t\t\t\t\t/**\n\t\t\t\t\t * Fired when references list is loaded into the HTML\n\t\t\t\t\t * @event references-loaded\n\t\t\t\t\t */\n\t\t\t\t\tself.emit( 'references-loaded', self.page );\n\n\t\t\t\t\tloadImagesAndSetData();\n\t\t\t\t}, function () {\n\t\t\t\t\t$spinner.remove();\n\t\t\t\t\t// unhide on a failure\n\t\t\t\t\t$content.children().removeClass( 'hidden' );\n\n\t\t\t\t\tloadImagesAndSetData();\n\t\t\t\t} );\n\t\t} else {\n\t\t\treturn Deferred().reject().promise();\n\t\t}\n\t},\n\n\t/**\n\t * Returns the appropriate license message including links/name to\n\t * terms of use (if any) and license page\n\t * @memberof Skin\n\t * @instance\n\t * @return {string}\n\t */\n\tgetLicenseMsg: function () {\n\t\tvar licenseMsg,\n\t\t\tmfLicense = mw.config.get( 'wgMFLicense' ),\n\t\t\tlicensePlural = mw.language.convertNumber( mfLicense.plural );\n\n\t\tif ( mfLicense.link ) {\n\t\t\tif ( this.$( '#footer-places-terms-use' ).length > 0 ) {\n\t\t\t\tlicenseMsg = mw.msg(\n\t\t\t\t\t'mobile-frontend-editor-licensing-with-terms',\n\t\t\t\t\tmw.message(\n\t\t\t\t\t\t'mobile-frontend-editor-terms-link',\n\t\t\t\t\t\tthis.$( '#footer-places-terms-use a' ).attr( 'href' )\n\t\t\t\t\t).parse(),\n\t\t\t\t\tmfLicense.link,\n\t\t\t\t\tlicensePlural\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlicenseMsg = mw.msg(\n\t\t\t\t\t'mobile-frontend-editor-licensing',\n\t\t\t\t\tmfLicense.link,\n\t\t\t\t\tlicensePlural\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn licenseMsg;\n\t}\n} );\n\nSkin.getSectionId = getSectionId;\n\nmodule.exports = Skin;\n","var browser = require( './Browser' ).getSingleton(),\n\tutil = require( './util' ),\n\tescapeHash = util.escapeHash,\n\tarrowOptions = {\n\t\tname: 'arrow',\n\t\tadditionalClassNames: 'indicator'\n\t},\n\tIcon = require( './Icon' );\n\n/**\n* A class for enabling toggling\n*\n* @class Toggler\n* @param {Object} options\n* @param {OO.EventEmitter} options.eventBus Object used to emit before-section-toggled\n* and section-toggled events\n* @param {jQuery.Object} options.$container to apply toggling to\n* @param {string} options.prefix a prefix to use for the id.\n* @param {Page} [options.page] to allow storage of session for future visits\n* @param {Page} [options.isClosed] whether the element should begin closed\n* and section-toggled events\n*/\nfunction Toggler( options ) {\n\tthis.eventBus = options.eventBus;\n\tthis._enable( options.$container, options.prefix, options.page, options.isClosed );\n}\n/**\n* Using the settings module looks at what sections were previously expanded on\n* existing page.\n*\n* @param {Page} page\n* @return {Object} representing open sections\n*/\nfunction getExpandedSections( page ) {\n\tvar expandedSections = JSON.parse(\n\t\tmw.storage.get( 'expandedSections' ) || '{}'\n\t);\n\texpandedSections[page.title] = expandedSections[page.title] || {};\n\treturn expandedSections;\n}\n\n/**\n* @param {Object} expandedSections\n* Save expandedSections to localStorage\n*/\nfunction saveExpandedSections( expandedSections ) {\n\tmw.storage.set(\n\t\t'expandedSections', JSON.stringify( expandedSections )\n\t);\n}\n\n/**\n* Given an expanded heading, store it to localStorage.\n* If the heading is collapsed, remove it from localStorage.\n*\n* @param {jQuery.Object} $heading - A heading belonging to a section\n* @param {Page} page\n*/\nfunction storeSectionToggleState( $heading, page ) {\n\tvar headline = $heading.find( 'span' ).attr( 'id' ),\n\t\tisSectionOpen = $heading.hasClass( 'open-block' ),\n\t\texpandedSections = getExpandedSections( page );\n\n\tif ( headline ) {\n\t\tif ( isSectionOpen ) {\n\t\t\texpandedSections[page.title][headline] = ( new Date() ).getTime();\n\t\t} else {\n\t\t\tdelete expandedSections[page.title][headline];\n\t\t}\n\n\t\tsaveExpandedSections( expandedSections );\n\t}\n}\n\n/**\n* Expand sections that were previously expanded before leaving this page.\n* @param {Toggler} toggler\n* @param {jQuery.Object} $container\n* @param {Page} page\n*/\nfunction expandStoredSections( toggler, $container, page ) {\n\tvar $sectionHeading, $headline,\n\t\texpandedSections = getExpandedSections( page ),\n\t\t$headlines = $container.find( '.section-heading span' );\n\n\t$headlines.each( function () {\n\t\t$headline = $container.find( this );\n\t\t$sectionHeading = $headline.parents( '.section-heading' );\n\t\t// toggle only if the section is not already expanded\n\t\tif (\n\t\t\texpandedSections[page.title][$headline.attr( 'id' )] &&\n\t\t!$sectionHeading.hasClass( 'open-block' )\n\t\t) {\n\t\t\ttoggler.toggle( $sectionHeading, page );\n\t\t}\n\t} );\n}\n\n/**\n* Clean obsolete (saved more than a day ago) expanded sections from\n* localStorage.\n* @param {Page} page\n*/\nfunction cleanObsoleteStoredSections( page ) {\n\tvar now = ( new Date() ).getTime(),\n\t\texpandedSections = getExpandedSections( page ),\n\t\t// the number of days between now and the time a setting was saved\n\t\tdaysDifference;\n\tObject.keys( expandedSections ).forEach( function ( page ) {\n\t\tvar sections = expandedSections[ page ];\n\t\t// clean the setting if it is more than a day old\n\t\tObject.keys( sections ).forEach( function ( section ) {\n\t\t\tvar timestamp = sections[ section ];\n\t\t\tdaysDifference = Math.floor( ( now - timestamp ) / 1000 / 60 / 60 / 24 );\n\t\t\tif ( daysDifference >= 1 ) {\n\t\t\t\tdelete expandedSections[page][section];\n\t\t\t}\n\t\t} );\n\t} );\n\tsaveExpandedSections( expandedSections );\n}\n\n/**\n* Given a heading, toggle it and any of its children\n*\n* @memberof Toggler\n* @instance\n* @param {jQuery.Object} $heading A heading belonging to a section\n*/\nToggler.prototype.toggle = function ( $heading ) {\n\tvar indicator,\n\t\twasExpanded = $heading.is( '.open-block' ),\n\t\tpage = $heading.data( 'page' ),\n\t\tsectionNumber = $heading.data( 'section-number' ),\n\t\t$content = $heading.next();\n\n\t$heading.toggleClass( 'open-block' );\n\t$heading.data( 'indicator' ).remove();\n\n\tarrowOptions.rotation = wasExpanded ? 0 : 180;\n\tindicator = new Icon( arrowOptions ).prependTo( $heading );\n\t$heading.data( 'indicator', indicator );\n\n\t/**\n\t * Global event emitted before a section is being toggled\n\t *\n\t * @event section-toggling\n\t * @type {Object}\n\t * @property {Page} page\n\t * @property {bool} wasExpanded\n\t * @property {bool} isReferenceSection\n\t * @property {jQuery.Object} $heading\n\t */\n\tthis.eventBus.emit( 'before-section-toggled', {\n\t\tpage: page,\n\t\twasExpanded: wasExpanded,\n\t\t$heading: $heading,\n\t\tisReferenceSection: Boolean( $content.attr( 'data-is-reference-section' ) )\n\t} );\n\n\t$content\n\t\t.toggleClass( 'open-block' )\n\t\t.attr( {\n\t\t\t'aria-pressed': !wasExpanded,\n\t\t\t'aria-expanded': !wasExpanded\n\t\t} );\n\n\t/**\n\t * Global event emitted after a section has been toggled\n\t * @event section-toggled\n\t * @type {Object}\n\t * @property {bool} wasExpanded\n\t * @property {number} sectionNumber\n\t */\n\tthis.eventBus.emit( 'section-toggled', wasExpanded, sectionNumber );\n\n\tif ( !browser.isWideScreen() ) {\n\t\tstoreSectionToggleState( $heading, page );\n\t}\n};\n\n/**\n* Enables toggling via enter and space keys\n*\n* @param {Toggler} toggler instance.\n* @param {jQuery.Object} $heading\n*/\nfunction enableKeyboardActions( toggler, $heading ) {\n\t$heading.on( 'keypress', function ( ev ) {\n\t\tif ( ev.which === 13 || ev.which === 32 ) {\n\t\t\t// Only handle keypresses on the \"Enter\" or \"Space\" keys\n\t\t\ttoggler.toggle( $heading );\n\t\t}\n\t} ).find( 'a' ).on( 'keypress mouseup', function ( ev ) {\n\t\tev.stopPropagation();\n\t} );\n}\n\n/**\n* Reveals an element and its parent section as identified by it's id\n*\n* @memberof Toggler\n* @instance\n* @param {string} selector A css selector that identifies a single element\n* @param {Object} $container jQuery element to search in\n*/\nToggler.prototype.reveal = function ( selector, $container ) {\n\tvar $target, $heading;\n\n\t// jQuery will throw for hashes containing certain characters which can break toggling\n\ttry {\n\t\t$target = $container.find( escapeHash( selector ) );\n\t\t$heading = $target.parents( '.collapsible-heading' );\n\t\t// The heading is not a section heading, check if in a content block!\n\t\tif ( !$heading.length ) {\n\t\t\t$heading = $target.parents( '.collapsible-block' ).prev( '.collapsible-heading' );\n\t\t}\n\t\tif ( $heading.length && !$heading.hasClass( 'open-block' ) ) {\n\t\t\tthis.toggle( $heading );\n\t\t}\n\t\tif ( $heading.length ) {\n\t\t\t// scroll again after opening section (opening section makes the page longer)\n\t\t\twindow.scrollTo( 0, $target.offset().top );\n\t\t}\n\t} catch ( e ) {}\n};\n\n/**\n* Enables section toggling in a given container when wgMFCollapseSectionsByDefault\n* is enabled.\n*\n* @memberof Toggler\n* @instance\n* @param {jQuery.Object} $container to apply toggling to\n* @param {string} prefix a prefix to use for the id.\n* @param {Page} [page] to allow storage of session for future visits\n* @param {Page} [isClosed] whether the element should begin closed\n* @private\n*/\nToggler.prototype._enable = function ( $container, prefix, page, isClosed ) {\n\tvar tagName, expandSections, indicator, $content,\n\t\t$firstHeading,\n\t\t$link,\n\t\tself = this,\n\t\tcollapseSectionsByDefault = mw.config.get( 'wgMFCollapseSectionsByDefault' );\n\n\t// Also allow .section-heading if some extensions like Wikibase\n\t// want to toggle other headlines than direct descendants of $container.\n\t$firstHeading = $container.find( '> h1,> h2,> h3,> h4,> h5,> h6,.section-heading' ).eq( 0 );\n\ttagName = $firstHeading.prop( 'tagName' ) || 'H1';\n\n\tif ( collapseSectionsByDefault === undefined ) {\n\t\t// Old default behavior if on cached output\n\t\tcollapseSectionsByDefault = true;\n\t}\n\texpandSections = !collapseSectionsByDefault ||\n\t( mw.config.get( 'wgMFExpandAllSectionsUserOption' ) && mw.storage.get( 'expandSections' ) === 'true' );\n\n\t$container.children( tagName ).each( function ( i ) {\n\t\tvar isReferenceSection,\n\t\t\t$heading = $container.find( this ),\n\t\t\t$indicator = $heading.find( '.indicator' ),\n\t\t\tid = prefix + 'collapsible-block-' + i;\n\t\t// Be sure there is a div wrapping the section content.\n\t\t// Otherwise, collapsible sections for this page is not enabled.\n\t\tif ( $heading.next().is( 'div' ) ) {\n\t\t\t$content = $heading.next( 'div' );\n\t\t\tisReferenceSection = Boolean( $content.attr( 'data-is-reference-section' ) );\n\t\t\t$heading\n\t\t\t\t.addClass( 'collapsible-heading ' )\n\t\t\t\t.data( 'section-number', i )\n\t\t\t\t.data( 'page', page )\n\t\t\t\t.attr( {\n\t\t\t\t\ttabindex: 0,\n\t\t\t\t\t'aria-haspopup': 'true',\n\t\t\t\t\t'aria-controls': id\n\t\t\t\t} )\n\t\t\t\t.on( 'click', function ( ev ) {\n\t\t\t\t\t// don't toggle, if the click target was a link\n\t\t\t\t\t// (a link in a section heading)\n\t\t\t\t\t// See T117880\n\t\t\t\t\tif ( !ev.target.href ) {\n\t\t\t\t\t\t// prevent taps/clicks on edit button after toggling (bug 56209)\n\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\tself.toggle( $heading );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\tarrowOptions.rotation = expandSections ? 180 : 0;\n\t\t\tindicator = new Icon( arrowOptions );\n\t\t\tif ( $indicator.length ) {\n\t\t\t\t// replace the existing indicator\n\t\t\t\t$indicator.replaceWith( indicator.$el );\n\t\t\t} else {\n\t\t\t\tindicator.prependTo( $heading );\n\t\t\t}\n\t\t\t$heading.data( 'indicator', indicator.$el );\n\t\t\t$content\n\t\t\t\t.addClass( 'collapsible-block' )\n\t\t\t\t.eq( 0 )\n\t\t\t\t.attr( {\n\t\t\t\t\t// We need to give each content block a unique id as that's\n\t\t\t\t\t// the only way we can tell screen readers what element we're\n\t\t\t\t\t// referring to (aria-controls)\n\t\t\t\t\tid: id,\n\t\t\t\t\t'aria-pressed': 'false',\n\t\t\t\t\t'aria-expanded': 'false'\n\t\t\t\t} );\n\n\t\t\tenableKeyboardActions( self, $heading );\n\t\t\tif (\n\t\t\t\t!isReferenceSection && (\n\t\t\t\t\t!isClosed && browser.isWideScreen() || expandSections\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// Expand sections by default on wide screen devices\n\t\t\t\t// or if the expand sections setting is set.\n\t\t\t\t// The wide screen logic for determining whether to collapse sections initially\n\t\t\t\t// should be kept in sync with mobileoptions#initLocalStorageElements().\n\t\t\t\tself.toggle( $heading );\n\t\t\t}\n\t\t}\n\t} );\n\n\t/* eslint-disable no-restricted-properties */\n\t/**\n\t * Checks the existing hash and toggles open any section that contains the fragment.\n\t *\n\t * @method\n\t */\n\tfunction checkHash() {\n\t\tvar hash = window.location.hash;\n\t\tif ( hash.indexOf( '#' ) === 0 ) {\n\t\t\tself.reveal( hash, $container );\n\t\t}\n\t}\n\n\t/**\n\t * Checks the value of wgInternalRedirectTargetUrl and reveals the collapsed\n\t * section that contains it if present\n\t *\n\t * @method\n\t */\n\tfunction checkInternalRedirectAndHash() {\n\t\tvar internalRedirect = mw.config.get( 'wgInternalRedirectTargetUrl' ),\n\t\t\tinternalRedirectHash = internalRedirect ? internalRedirect.split( '#' )[1] : false;\n\n\t\tif ( internalRedirectHash ) {\n\t\t\twindow.location.hash = internalRedirectHash;\n\t\t\tself.reveal( internalRedirectHash, $container );\n\t\t}\n\t}\n\t/* eslint-enable no-restricted-properties */\n\n\tcheckInternalRedirectAndHash();\n\tcheckHash();\n\t// Restricted to links created by editors and thus outside our control\n\t// T166544 - don't do this for reference links - they will be handled elsewhere\n\t$link = $container.find( 'a:not(.reference a)' );\n\t$link.on( 'click', function () {\n\t\t// the link might be an internal link with a hash.\n\t\t// if it is check if we need to reveal any sections.\n\t\tif ( $link.attr( 'href' ) !== undefined &&\n\t\t$link.attr( 'href' ).indexOf( '#' ) > -1\n\t\t) {\n\t\t\tcheckHash();\n\t\t}\n\t} );\n\tutil.getWindow().on( 'hashchange', function () {\n\t\tcheckHash();\n\t} );\n\n\tif ( !browser.isWideScreen() && page ) {\n\t\texpandStoredSections( this, $container, page );\n\t\tcleanObsoleteStoredSections( page );\n\t}\n};\n\nToggler._getExpandedSections = getExpandedSections;\nToggler._expandStoredSections = expandStoredSections;\nToggler._cleanObsoleteStoredSections = cleanObsoleteStoredSections;\n\nmodule.exports = Toggler;\n","var ReferencesGateway = require( './ReferencesGateway' ),\n\tmfExtend = require( './../mfExtend' ),\n\tutil = require( './../util' );\n\n/**\n * Gateway for retrieving references via the content of the Page\n *\n * @class ReferencesHtmlScraperGateway\n * @extends ReferencesGateway\n * @inheritdoc\n */\nfunction ReferencesHtmlScraperGateway() {\n\tReferencesGateway.apply( this, arguments );\n}\n\nmfExtend( ReferencesHtmlScraperGateway, ReferencesGateway, {\n\t/**\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @instance\n\t * @param {string} id of a DOM element in the page with '#' prefix.\n\t *  can be encoded or decoded.\n\t * @param {jQuery.Object} $container to scan for an element\n\t * @return {jQuery.Promise} that can be used by getReference\n\t */\n\tgetReferenceFromContainer: function ( id, $container ) {\n\t\tvar $el,\n\t\t\tresult = util.Deferred();\n\n\t\t$el = $container.find( '#' + util.escapeSelector( id.substr( 1 ) ) );\n\t\tif ( $el.length ) {\n\t\t\tresult.resolve( { text: $el.html() } );\n\t\t} else {\n\t\t\tresult.reject( ReferencesGateway.ERROR_NOT_EXIST );\n\t\t}\n\t\treturn result.promise();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @instance\n\t */\n\tgetReference: function ( id, page ) {\n\t\t// If an id is not found it's possible the id passed needs decoding (per T188547).\n\t\treturn this.getReferenceFromContainer( decodeURIComponent( id ), page.$( 'ol.references' ) );\n\t}\n} );\n\nmodule.exports = ReferencesHtmlScraperGateway;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' ),\n\tbrowser = require( './Browser' ).getSingleton();\n\n/**\n * List of items page view\n * @class PageList\n * @extends View\n */\nfunction PageList() {\n\tView.apply( this, arguments );\n}\n\nmfExtend( PageList, View, {\n\t/**\n\t * @memberof PageList\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {Page[]} defaults.pages Array of Page objects. These should match\n\t *                              the Page model and not necessarily the\n\t *                              underlying API format used.\n\t * E.g. [\n\t *   {\n\t *     heading: \"<strong>C</strong>laude Monet\",\n\t *     id: undefined,\n\t *     title: \"Claude Monet\",\n\t *     displayTitle: \"<i>Claude Monet</i>\",\n\t *     url: \"/wiki/Claude_Monet\",\n\t *     thumbnail: {\n\t *       height: 62,\n\t *       source: \"http://127.0.0.1:8080/images/thumb/thumb.jpg\",\n\t *       width: 80,\n\t *       isLandscape: true\n\t *     }\n\t *   }\n\t * ]\n\t */\n\tdefaults: {\n\t\tpages: []\n\t},\n\t/**\n\t * Render page images for the existing page list. Assumes no page images have been loaded.\n\t * @memberof PageList\n\t * @instance\n\t */\n\trenderPageImages: function () {\n\t\tvar self = this;\n\n\t\tsetTimeout( function () {\n\t\t\tself.$( '.list-thumb' ).each( function () {\n\t\t\t\tvar style = self.$( this ).data( 'style' );\n\t\t\t\tself.$( this ).attr( 'style', style );\n\t\t\t} );\n\t\t\t// Delay an unnecessary load of images on mobile (slower?) connections\n\t\t\t// In particular on search results which can be regenerated quickly.\n\t\t}, browser.isWideScreen() ? 0 : 1000 );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof PageList\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tthis.renderPageImages();\n\t},\n\ttemplate: mw.template.get( 'mobile.startup', 'PageList.hogan' ),\n\t/**\n\t * @memberof PageList\n\t * @instance\n\t */\n\ttemplatePartials: {\n\t\t// The server uses a very different structure in\n\t\t// SpecialMobileEditWatchlist.getLineHtml(). Be aware of these differences\n\t\t// when updating server rendered items.\n\t\titem: mw.template.get( 'mobile.startup', 'PageListItem.hogan' )\n\t}\n} );\n\nmodule.exports = PageList;\n","var\n\tutil = require( './util' ),\n\tstorageKey = 'mobileFrontend/toast';\n\n/**\n * Wrapper for one global Toast\n * @class Toast\n */\nfunction Toast() {\n\tmw.requestIdleCallback( this._showPending.bind( this ) );\n}\n\n/**\n * Show a message with the given class in a toast.\n * @memberof Toast\n * @instance\n * @param {string} msg Message to show in the toast\n * @param {Object} options CSS class to add to the element if a string.\n *  If an object, more options for the notification see mw.notification.show.\n *  For backwards compatibility reasons if a string is given it will be\n *  treated as options.type\n */\nToast.prototype.show = function ( msg, options ) {\n\tif ( typeof options === 'string' ) {\n\t\tmw.log.warn( 'The use of the cssClass parameter of Toast.show is deprecated, please convert it to an ' +\n\t\t\t\t'options object.' );\n\t\toptions = {\n\t\t\ttype: options\n\t\t};\n\t}\n\n\toptions = util.extend( {\n\t\ttag: 'toast'\n\t}, options );\n\n\tthis.notification = mw.notify( msg, options );\n};\n\n/**\n * Hide the Toast if it's visible.\n * @memberof Toast\n * @instance\n */\nToast.prototype.hide = function () {\n\tif ( this.notification !== undefined ) {\n\t\tthis.notification.then( function ( notif ) {\n\t\t\tnotif.close();\n\t\t} );\n\t}\n};\n\n/**\n * Save the toast data in storage so that we can show it on page reload.\n * Also check whether there is a pending message that's not shown yet.\n * If yes, output a warning message and discard this message.\n * This is to ensure that the page needs to be reloaded before adding\n * a new message for showing later.\n * @memberof Toast\n * @instance\n * @param {string} content Content to be placed in element\n * @param {string} className class to add to element\n */\nToast.prototype.showOnPageReload = function ( content, className ) {\n\tif ( mw.storage.get( storageKey ) ) {\n\t\tmw.log.warn(\n\t\t\t'A pending toast message already exits. ' +\n\t\t\t\t'The page should have been reloaded by now.'\n\t\t);\n\t\treturn;\n\t}\n\tmw.storage.set( storageKey, JSON.stringify( {\n\t\tcontent: content,\n\t\tclassName: className\n\t} ) );\n};\n\n/**\n * Show the previously saved toast data and delete it from storage\n * @memberof Toast\n * @instance\n * @private\n */\nToast.prototype._showPending = function () {\n\tvar data = mw.storage.get( storageKey );\n\tif ( data ) {\n\t\tdata = JSON.parse( data );\n\t\tthis.show( data.content, data.className );\n\t\tmw.storage.remove( storageKey );\n\t}\n};\n\nmodule.exports = new Toast();\n","var View = require( '../View' ),\n\tWatchstarGateway = require( './WatchstarGateway' ),\n\ticons = require( '../icons' ),\n\tutil = require( '../util' ),\n\tmfExtend = require( '../mfExtend' ),\n\ttoast = require( '../toast' ),\n\tuser = mw.user,\n\tCtaDrawer = require( '../CtaDrawer' );\n\n/**\n * A clickable watchstar\n * @class Watchstar\n * @extends View\n * @uses CtaDrawer\n * @uses Icon\n * @uses WatchstarGateway\n * @uses Toast\n * @fires Watchstar#unwatch\n * @fires Watchstar#watch\n *\n * @param {Object} options Configuration options\n */\nfunction Watchstar( options ) {\n\tView.call( this,\n\t\tutil.extend( {\n\t\t\tclassName: icons.watchIcon().getClassName()\n\t\t}, options )\n\t);\n}\n\nmfExtend( Watchstar, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tevents: {\n\t\t// Disable clicks on original link\n\t\t'click a': 'onLinksClick',\n\t\tclick: 'onStatusToggle'\n\t},\n\t/**\n\t * @memberof Watchstar\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {mw.Api} defaults.api\n\t * @property {Page} defaults.page Current page.\n\t * @property {string} defaults.funnel to log events with\n\t */\n\tdefaults: {\n\t\tpage: undefined,\n\t\tfunnel: 'unknown'\n\t},\n\t/**\n\t * @memberof Watchstar\n\t * @instance\n\t * @property {Object} ctaDrawerOptions Default options hash for the anonymous CtaDrawer.\n\t */\n\tctaDrawerOptions: {\n\t\tcontent: mw.msg( 'mobile-frontend-watchlist-cta' ),\n\t\tqueryParams: {\n\t\t\twarning: 'mobile-frontend-watchlist-purpose',\n\t\t\tcampaign: 'mobile_watchPageActionCta',\n\t\t\treturntoquery: 'article_action=watch'\n\t\t},\n\t\tsignupQueryParams: {\n\t\t\twarning: 'mobile-frontend-watchlist-signup-action'\n\t\t}\n\t},\n\t/**\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\ttemplate: mw.template.compile( '<a role=\"button\">{{tooltip}}</a>', 'hogan' ),\n\t/**\n\t * @inheritdoc\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tinitialize: function ( options ) {\n\t\tvar self = this,\n\t\t\t_super = View.prototype.initialize;\n\n\t\tthis._watched = options.isWatched;\n\t\tthis.gateway = new WatchstarGateway( options.api );\n\n\t\t_super.call( self, options );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tpreRender: function () {\n\t\tthis.options.tooltip = this._watched ? mw.msg( 'unwatchthispage' ) : mw.msg( 'watchthispage' );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar unwatchedClass = icons.watchIcon().getGlyphClassName(),\n\t\t\twatchedClass = icons.watchedIcon().getGlyphClassName() + ' watched';\n\n\t\t// add tooltip to the div, not the <a> inside\n\t\t// because that <a> has zero width/height so cannot be hovered\n\t\tthis.$el.attr( 'title', this.options.tooltip );\n\n\t\t// Add watched class if necessary\n\t\tif ( !user.isAnon() && this._watched ) {\n\t\t\tthis.$el.addClass( watchedClass ).removeClass( unwatchedClass );\n\t\t} else {\n\t\t\tthis.$el.addClass( unwatchedClass ).removeClass( watchedClass );\n\t\t}\n\t\tthis.$el.removeClass( 'hidden' );\n\t},\n\n\t/**\n\t * Prevent default on incoming events\n\t * @memberof Watchstar\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonLinksClick: function ( ev ) {\n\t\tev.preventDefault();\n\t},\n\n\t/**\n\t * Triggered when a user anonymously clicks on the watchstar.\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tonStatusToggleAnon: function () {\n\t\tif ( !this.drawer ) {\n\t\t\tthis.drawer = new CtaDrawer( this.ctaDrawerOptions );\n\n\t\t}\n\t\tthis.drawer.show();\n\t},\n\n\t/**\n\t * Triggered when a logged in user clicks on the watchstar.\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tonStatusToggleUser: function () {\n\t\tvar\n\t\t\tself = this,\n\t\t\tgateway = this.gateway,\n\t\t\tpage = this.options.page,\n\t\t\tchecker,\n\t\t\tpostWatched = !this._watched;\n\n\t\tchecker = setInterval( function () {\n\t\t\ttoast.show( mw.msg( 'mobile-frontend-watchlist-please-wait' ) );\n\t\t}, 1000 );\n\t\tfunction stopInterval() {\n\t\t\tclearInterval( checker );\n\t\t}\n\t\tgateway.postStatusesByTitle( [ page.getTitle() ], postWatched ).then( function () {\n\t\t\tstopInterval();\n\n\t\t\tself._watched = postWatched;\n\t\t\tif ( postWatched ) {\n\t\t\t\tself.render();\n\t\t\t\t/**\n\t\t\t\t * Fired when the watch star is changed to watched status\n\t\t\t\t * @event Watchstar#watch\n\t\t\t\t */\n\t\t\t\tself.emit( 'watch' );\n\t\t\t\ttoast.show( mw.msg( 'mobile-frontend-watchlist-add', page.title ) );\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * Fired when the watch star is changed to unwatched status\n\t\t\t\t * @event Watchstar#unwatch\n\t\t\t\t */\n\t\t\t\tself.emit( 'unwatch' );\n\t\t\t\tself.render();\n\t\t\t\ttoast.show( mw.msg( 'mobile-frontend-watchlist-removed', page.title ) );\n\t\t\t}\n\t\t}, function () {\n\t\t\tstopInterval();\n\n\t\t\ttoast.show( mw.msg( 'mobile-frontend-watchlist-error' ), 'error' );\n\t\t} );\n\t},\n\n\t/**\n\t * Event handler for clicking on watch star.\n\t * Make an API request if user is not anonymous.\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tonStatusToggle: function () {\n\t\tif ( user.isAnon() ) {\n\t\t\tthis.onStatusToggleAnon.apply( this, arguments );\n\t\t} else {\n\t\t\tthis.onStatusToggleUser.apply( this, arguments );\n\t\t}\n\t}\n\n} );\n\nmodule.exports = Watchstar;\n","var util = require( '../util' );\n\n/**\n * @typedef {string|number} PageID Page ID. 0 / \"0\" is a special no-ID value.\n * {@link https://www.mediawiki.org/wiki/Manual:Page_table#page_id Page ID}\n *\n * @typedef {string} PageTitle Canonical page title.\n * {@link https://www.mediawiki.org/wiki/Manual:Title.php#Canonical_forms Canonical forms}\n *\n * @typedef {boolean} WatchStatus Page watch status; true if watched, false if\n *                                unwatched.\n * {@link https://www.mediawiki.org/wiki/API:Info API:Info} (see inprop.watched)\n * {@link https://www.mediawiki.org/wiki/API:Watch API:Watch} (see unwatch)\n *\n * @typedef {Object.<PageTitle, WatchStatus>} WatchStatusMap\n */\n\n/**\n * API for retrieving and modifying page watch statuses. This module interacts\n * with two endpoints, API:Info for GETs and API:Watch and for POSTs.\n *\n * @class WatchstarGateway\n * @param {mw.Api} api\n */\nfunction WatchstarGateway( api ) {\n\tthis.api = api;\n}\n\nWatchstarGateway.prototype = {\n\t/**\n\t * Issues zero to two asynchronous HTTP requests for the watch status of\n\t * each page ID and title passed.\n\t *\n\t * Every watch entry has a title but not necessarily a page ID. Entries\n\t * without IDs are missing pages, i.e., pages that do not exist. These\n\t * entries are used to observe when a page with a given title is created.\n\t * Although it is convenient to use titles because they're always present,\n\t * IDs are preferred since they're far less likely to exceed the URL length\n\t * limit.\n\t *\n\t * No request is issued when no IDs and no titles are passed. Given that the\n\t * server state does not change between the two requests, overlapping title\n\t * and ID members will behave as expected but there is no reason to issue\n\t * such a request.\n\t *\n\t * @memberof WatchstarGateway\n\t * @instance\n\t * @param {PageID[]} ids\n\t * @param {PageTitle[]} titles\n\t * @return {JQuery.Deferred<WatchStatusMap>}\n\t */\n\tgetStatuses: function ( ids, titles ) {\n\t\t// Issue two requests and coalesce the results.\n\t\treturn util.when(\n\t\t\tthis.getStatusesByID( ids ),\n\t\t\tthis.getStatusesByTitle( titles )\n\t\t).then( function () { return util.extend.apply( util, arguments ); } );\n\t},\n\n\t/**\n\t * @memberof WatchstarGateway\n\t * @instance\n\t * @param {PageID[]} ids\n\t * @return {JQuery.Deferred<WatchStatusMap>}\n\t */\n\tgetStatusesByID: function ( ids ) {\n\t\tvar self = this;\n\t\tif ( !ids.length ) { return util.Deferred().resolve( {} ); }\n\n\t\treturn this.api.get( {\n\t\t\tformatversion: 2,\n\t\t\taction: 'query',\n\t\t\tprop: 'info',\n\t\t\tinprop: 'watched',\n\t\t\tpageids: ids\n\t\t} ).then( function ( rsp ) {\n\t\t\treturn self._unmarshalGetResponse( rsp );\n\t\t} );\n\t},\n\n\t/**\n\t * @memberof WatchstarGateway\n\t * @instance\n\t * @param {PageTitle[]} titles\n\t * @return {JQuery.Deferred<WatchStatusMap>}\n\t */\n\tgetStatusesByTitle: function ( titles ) {\n\t\tvar self = this;\n\t\tif ( !titles.length ) { return util.Deferred().resolve( {} ); }\n\n\t\treturn this.api.get( {\n\t\t\tformatversion: 2,\n\t\t\taction: 'query',\n\t\t\tprop: 'info',\n\t\t\tinprop: 'watched',\n\t\t\ttitles: titles\n\t\t} ).then( function ( rsp ) {\n\t\t\treturn self._unmarshalGetResponse( rsp );\n\t\t} );\n\t},\n\n\t/**\n\t * @memberof WatchstarGateway\n\t * @instance\n\t * @param {PageTitle[]} titles\n\t * @param {WatchStatus} watched\n\t * @return {JQuery.Deferred}\n\t */\n\tpostStatusesByTitle: function ( titles, watched ) {\n\t\tvar params = {\n\t\t\taction: 'watch',\n\t\t\ttitles: titles\n\t\t};\n\t\tif ( !watched ) {\n\t\t\tparams.unwatch = !watched;\n\t\t}\n\t\treturn this.api.postWithToken( 'watch', params );\n\t},\n\n\t/**\n\t * @memberof WatchstarGateway\n\t * @instance\n\t * @param {Object} rsp The API:Info response.\n\t * @return {JQuery.Deferred<WatchStatusMap>}\n\t * @see getStatusesByID\n\t * @see getStatusesByTitle\n\t */\n\t_unmarshalGetResponse: function ( rsp ) {\n\t\tvar pages = rsp && rsp.query && rsp.query.pages || [];\n\t\treturn pages.reduce( function ( statuses, page ) {\n\t\t\tstatuses[page.title] = page.watched;\n\t\t\treturn statuses;\n\t\t}, {} );\n\t}\n};\n\nmodule.exports = WatchstarGateway;\n","var PageList = require( '../PageList' ),\n\tWatchstar = require( './Watchstar' ),\n\tuser = mw.user,\n\tutil = require( '../util' ),\n\tPage = require( '../Page' ),\n\tmfExtend = require( '../mfExtend' ),\n\tWatchstarGateway = require( './WatchstarGateway' );\n\n/**\n * @typedef {Object.<PageTitle, PageID>} PageTitleToPageIDMap\n */\n\n/**\n * List of items page view\n * @class WatchstarPageList\n * @uses Page\n * @uses WatchstarGateway\n * @uses Watchstar\n * @extends PageList\n *\n * @fires WatchstarPageList#unwatch\n * @fires WatchstarPageList#watch\n * @param {Object} options Configuration options\n */\nfunction WatchstarPageList( options ) {\n\tthis.wsGateway = new WatchstarGateway( options.api );\n\tPageList.apply( this, arguments );\n}\n\nmfExtend( WatchstarPageList, PageList, {\n\t/**\n\t * @memberof WatchstarPageList\n\t * @instance\n\t * @mixes PageList#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {mw.Api} defaults.api\n\t */\n\n\tpostRender: function () {\n\t\tvar\n\t\t\tself = this,\n\t\t\t$items,\n\t\t\tpages,\n\t\t\tids = [],\n\t\t\ttitles = [];\n\n\t\tPageList.prototype.postRender.apply( this );\n\n\t\t$items = this.queryUnitializedItems();\n\t\tpages = this.parsePagesFromItems( $items );\n\n\t\tObject.keys( pages ).forEach( function ( title ) {\n\t\t\tvar id = pages[title];\n\t\t\t// Favor IDs since they're short and unlikely to exceed URL length\n\t\t\t// limits when batched.\n\t\t\tif ( id && id !== '0' ) {\n\t\t\t\t// ID is present and valid.\n\t\t\t\tids.push( id );\n\t\t\t} else {\n\t\t\t\t// Only titles are available for missing pages.\n\t\t\t\ttitles.push( title );\n\t\t\t}\n\t\t} );\n\n\t\treturn this.getPages( ids, titles ).then( function ( statuses ) {\n\t\t\tself.renderItems( $items, statuses );\n\t\t} );\n\t},\n\n\t/**\n\t * @param {JQuery.Element} $items\n\t * @param {WatchStatusMap} statuses\n\t * @return {void}\n\t */\n\tqueryUnitializedItems: function () {\n\t\treturn this.$( 'li:not(.with-watchstar)' );\n\t},\n\n\t/**\n\t * Retrieve pages\n\t *\n\t * @memberof WatchstarPageList\n\t * @instance\n\t * @param {PageID[]} ids\n\t * @param {PageTitle[]} titles\n\t * @return {JQuery.Deferred<WatchStatusMap>}\n\t */\n\tgetPages: function ( ids, titles ) {\n\t\t// Rendering Watchstars for anonymous users is not useful. Short-circuit\n\t\t// the request.\n\t\tif ( user.isAnon() ) {\n\t\t\treturn util.Deferred().resolve( {} );\n\t\t}\n\n\t\treturn this.wsGateway.getStatuses( ids, titles );\n\t},\n\n\t/**\n\t * @param {JQuery.Element} $items\n\t * @return {PageTitleToPageIDMap}\n\t * @memberof WatchstarPageList\n\t * @instance\n\t */\n\tparsePagesFromItems: function ( $items ) {\n\t\tvar\n\t\t\tself = this,\n\t\t\tpages = {};\n\t\t$items.each( function ( _, item ) {\n\t\t\tvar $item = self.$( item );\n\t\t\tpages[ $item.attr( 'title' ) ] = $item.data( 'id' );\n\t\t} );\n\t\treturn pages;\n\t},\n\n\t/**\n\t * @param {JQuery.Element} $items\n\t * @param {WatchStatusMap} statuses\n\t * @return {void}\n\t */\n\trenderItems: function ( $items, statuses ) {\n\t\tvar self = this;\n\n\t\t// Rendering Watchstars for anonymous users is not useful. Nothing to do.\n\t\tif ( user.isAnon() ) { return; }\n\n\t\t// Create watch stars for each entry in list\n\t\t$items.each( function ( _, item ) {\n\t\t\tvar\n\t\t\t\t$item = self.$( item ),\n\t\t\t\tpage = new Page( {\n\t\t\t\t\t// FIXME: Set sections so we don't hit the api (hacky)\n\t\t\t\t\tsections: [],\n\t\t\t\t\ttitle: $item.attr( 'title' ),\n\t\t\t\t\tid: $item.data( 'id' )\n\t\t\t\t} ),\n\t\t\t\tel = self.parseHTML( '<div>' ).appendTo( $item ),\n\t\t\t\twatched = statuses[ page.getTitle() ];\n\n\t\t\tself._appendWatchstar( el, page, watched );\n\t\t\t$item.addClass( 'with-watchstar' );\n\t\t} );\n\t},\n\n\t/**\n\t * @param {HTMLElement} el\n\t * @param {Page} page\n\t * @param {WatchStatus} watched\n\t * @return {Watchstar}\n\t */\n\t_appendWatchstar: function ( el, page, watched ) {\n\t\tvar watchstar = new Watchstar( {\n\t\t\tapi: this.options.api,\n\t\t\tfunnel: this.options.funnel,\n\t\t\tisAnon: user.isAnon(),\n\t\t\t// WatchstarPageList.getPages() already retrieved the status of\n\t\t\t// each page. Explicitly set the watch state so another request\n\t\t\t// will not be issued by the Watchstar.\n\t\t\tisWatched: watched,\n\t\t\tpage: page,\n\t\t\tel: el\n\t\t} );\n\n\t\t/**\n\t\t * @event watch\n\t\t * Fired when an article in the PageList is watched.\n\t\t */\n\t\tutil.repeatEvent( watchstar, this, 'watch' );\n\n\t\t/**\n\t\t * @event unwatch\n\t\t * Fired when an article in the PageList is watched.\n\t\t */\n\t\tutil.repeatEvent( watchstar, this, 'unwatch' );\n\n\t\treturn watchstar;\n\t}\n} );\n\nmodule.exports = WatchstarPageList;\n","var\n\tmoduleLoader = require( './moduleLoaderSingleton' ),\n\tmfExtend = require( './mfExtend' ),\n\tcontext = require( './context' ),\n\ttime = require( './time' ),\n\tutil = require( './util' ),\n\tView = require( './View' ),\n\tPageGateway = require( './PageGateway' ),\n\tBrowser = require( './Browser' ),\n\tcache = require( './cache' ),\n\tButton = require( './Button' ),\n\tIcon = require( './Icon' ),\n\tReferencesDrawer = require( './references/ReferencesDrawer' ),\n\tReferencesGateway = require( './references/ReferencesGateway' ),\n\tReferencesHtmlScraperGateway = require( './references/ReferencesHtmlScraperGateway' ),\n\tReferencesMobileViewGateway = require( './references/ReferencesMobileViewGateway' ),\n\ticons = require( './icons' ),\n\tPanel = require( './Panel' ),\n\tSection = require( './Section' ),\n\tThumbnail = require( './Thumbnail' ),\n\tPage = require( './Page' ),\n\tAnchor = require( './Anchor' ),\n\tSkin = require( './Skin' ),\n\tOverlayManager = require( './OverlayManager' ),\n\tOverlay = require( './Overlay' ),\n\tloadingOverlay = require( './loadingOverlay' ),\n\tDrawer = require( './Drawer' ),\n\tCtaDrawer = require( './CtaDrawer' ),\n\tPageList = require( './PageList' ),\n\ttoast = require( './toast' ),\n\textendSearchParams = require( './extendSearchParams' ),\n\tWatchstar = require( './watchstar/Watchstar' ),\n\tWatchstarPageList = require( './watchstar/WatchstarPageList' ),\n\trlModuleLoader = require( './rlModuleLoader' ),\n\teventBusSingleton = require( './eventBusSingleton' ),\n\tToggler = require( './Toggler' ),\n\tSearchOverlay = require( './search/SearchOverlay' ),\n\tschemaMobileWebSearch = require( './search/schemaMobileWebSearch' ),\n\tMobileWebSearchLogger = require( './search/MobileWebSearchLogger' ),\n\tSearchGateway = require( './search/SearchGateway' );\n\nmw.mobileFrontend = moduleLoader;\n\nOO.mfExtend = mfExtend;\n\n// I know there is a temptation to use moduleLoader here, but if you do resource-modules will fail\n// as webpack might change the variable name. Using mw.mobileFrontend means that the variable\n// will not be recast.\n// These will soon be deprecated - please use the import path mobile.startup going forward.\nmw.mobileFrontend.define( 'mobile.startup/util', util );\nmw.mobileFrontend.define( 'mobile.startup/View', View );\nmw.mobileFrontend.define( 'mobile.startup/Browser', Browser );\nmw.mobileFrontend.define( 'mobile.startup/cache', cache );\nmw.mobileFrontend.define( 'mobile.startup/time', time );\nmw.mobileFrontend.define( 'mobile.startup/context', context );\nmw.mobileFrontend.define( 'mobile.startup/PageGateway', PageGateway );\nmw.mobileFrontend.define( 'mobile.startup/Button', Button );\nmw.mobileFrontend.define( 'mobile.startup/Icon', Icon );\nmw.mobileFrontend.define( 'mobile.startup/icons', icons );\nmw.mobileFrontend.define( 'mobile.startup/Panel', Panel );\nmw.mobileFrontend.define( 'mobile.startup/Section', Section );\nmw.mobileFrontend.define( 'mobile.startup/Thumbnail', Thumbnail );\nmw.mobileFrontend.define( 'mobile.startup/Page', Page );\nmw.mobileFrontend.define( 'mobile.startup/Anchor', Anchor );\nmw.mobileFrontend.define( 'mobile.startup/Skin', Skin );\nmw.mobileFrontend.define( 'mobile.startup/OverlayManager', OverlayManager );\nmw.mobileFrontend.define( 'mobile.startup/Overlay', Overlay );\nmw.mobileFrontend.define( 'mobile.startup/Drawer', Drawer );\nmw.mobileFrontend.define( 'mobile.startup/CtaDrawer', CtaDrawer );\nmw.mobileFrontend.define( 'mobile.startup/PageList', PageList );\nmw.mobileFrontend.define( 'mobile.startup/toast', toast );\nmw.mobileFrontend.define( 'mobile.startup/rlModuleLoader', rlModuleLoader );\nmw.mobileFrontend.define( 'mobile.startup/eventBusSingleton', eventBusSingleton );\nmw.mobileFrontend.deprecate( 'mobile.startup/LoadingOverlay', loadingOverlay, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search.util/extendSearchParams', extendSearchParams, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references/ReferencesDrawer', ReferencesDrawer, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references.gateway/ReferencesGateway', ReferencesGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references.gateway/ReferencesHtmlScraperGateway',\n\tReferencesHtmlScraperGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references.gateway/ReferencesMobileViewGateway',\n\tReferencesMobileViewGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.watchstar/Watchstar', Watchstar, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.pagelist.scripts/WatchstarPageList', WatchstarPageList, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.toggle/Toggler', Toggler, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search/SearchOverlay', SearchOverlay, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search/MobileWebSearchLogger', MobileWebSearchLogger, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search.api/SearchGateway', SearchGateway, 'mobile.startup' );\n\n// Expose the entry chunk through libraryTarget and library. This allows\n// arbitrary file access via ResourceLoader like\n// `mfModules['mobile.startup'].moduleLoader.require('mobile.startup/LoadingOverlay')`.\nmodule.exports = {\n\textendSearchParams: extendSearchParams,\n\tReferencesDrawer: ReferencesDrawer,\n\tReferencesGateway: ReferencesGateway,\n\tReferencesHtmlScraperGateway: ReferencesHtmlScraperGateway,\n\tReferencesMobileViewGateway: ReferencesMobileViewGateway,\n\tmoduleLoader: moduleLoader,\n\ttime: time,\n\tutil: util,\n\tView: View,\n\tBrowser: Browser,\n\tcontext: context,\n\tcache: cache,\n\tButton: Button,\n\tIcon: Icon,\n\ticons: icons,\n\tPanel: Panel,\n\tSection: Section,\n\tPage: Page,\n\tAnchor: Anchor,\n\tSkin: Skin,\n\tOverlayManager: OverlayManager,\n\tOverlay: Overlay,\n\tloadingOverlay: loadingOverlay,\n\tDrawer: Drawer,\n\tCtaDrawer: CtaDrawer,\n\tPageList: PageList,\n\ttoast: toast,\n\tWatchstar: Watchstar,\n\tWatchstarPageList: WatchstarPageList,\n\trlModuleLoader: rlModuleLoader,\n\teventBusSingleton: eventBusSingleton,\n\tToggler: Toggler,\n\tsearch: {\n\t\tSearchOverlay: SearchOverlay,\n\t\tMobileWebSearchLogger: MobileWebSearchLogger,\n\t\tSearchGateway: SearchGateway\n\t}\n};\n\n// Setup a single export for new modules to fold all of the above lines into.\n// One export to rule them all!\nmw.mobileFrontend.define( 'mobile.startup', module.exports );\n\nschemaMobileWebSearch.subscribeMobileWebSearchSchema();\n","var ModuleLoader = require( './moduleLoader' );\n\nmodule.exports = new ModuleLoader();\n","var Drawer = require( './../Drawer' ),\n\tutil = require( './../util' ),\n\ticons = require( './../icons' ),\n\tmfExtend = require( './../mfExtend' ),\n\tReferencesGateway = require( './ReferencesGateway' ),\n\tIcon = require( './../Icon' );\n\n/**\n * Drawer for references\n * @class ReferencesDrawer\n * @extends Drawer\n * @uses Icon\n * @param {Object} props\n */\nfunction ReferencesDrawer( props ) {\n\tDrawer.call( this,\n\t\tutil.extend( {\n\t\t\tclassName: 'drawer position-fixed text references'\n\t\t}, props )\n\t);\n}\n\nmfExtend( ReferencesDrawer, Drawer, {\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @mixes Drawer#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.cancelButton HTML of the button that closes the drawer.\n\t * @property {boolean} defaults.error whether an error message is being shown\n\t */\n\tdefaults: util.extend( {}, Drawer.prototype.defaults, {\n\t\tspinner: icons.spinner().toHtmlString(),\n\t\tcancelButton: icons.cancel( 'gray' ).toHtmlString(),\n\t\tcitation: new Icon( {\n\t\t\tisSmall: true,\n\t\t\tname: 'citation',\n\t\t\tadditionalClassNames: 'text',\n\t\t\thasText: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-references-citation' )\n\t\t} ).toHtmlString(),\n\t\terrorClassName: new Icon( {\n\t\t\tname: 'error',\n\t\t\thasText: true,\n\t\t\tisSmall: true\n\t\t} ).getClassName()\n\t} ),\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tevents: {\n\t\t'click sup a': 'showNestedReference'\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tshow: function () {\n\t\treturn Drawer.prototype.show.apply( this, arguments );\n\t},\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'ReferencesDrawer.hogan' ),\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tcloseOnScroll: false,\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar windowHeight = util.getWindow().height();\n\n\t\tDrawer.prototype.postRender.apply( this );\n\n\t\t// make sure the drawer doesn't take up more than 50% of the viewport height\n\t\tif ( windowHeight / 2 < 400 ) {\n\t\t\tthis.$el.css( 'max-height', windowHeight / 2 );\n\t\t}\n\n\t\tthis.on( 'show', this.onShow.bind( this ) );\n\t\tthis.on( 'hide', this.onHide.bind( this ) );\n\t},\n\t/**\n\t * Make body not scrollable\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tonShow: function () {\n\t\tutil.getDocument().find( 'body' ).addClass( 'drawer-enabled' );\n\t},\n\t/**\n\t * Restore body scroll\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tonHide: function () {\n\t\tutil.getDocument().find( 'body' ).removeClass( 'drawer-enabled' );\n\t},\n\t/**\n\t * Fetch and render nested reference upon click\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @param {string} id of the reference to be retrieved\n\t * @param {Page} page to locate reference for\n\t * @param {string} refNumber the number it identifies as in the page\n\t * @return {jQuery.Deferred}\n\t */\n\tshowReference: function ( id, page, refNumber ) {\n\t\tvar drawer = this,\n\t\t\tgateway = this.options.gateway;\n\n\t\t// Save the page in case we have to show a nested reference.\n\t\tthis.options.page = page;\n\t\t// If API is being used we want to show the drawer with the spinner while query runs\n\t\tdrawer.show();\n\t\treturn gateway.getReference( id, page ).then( function ( reference ) {\n\t\t\tdrawer.render( {\n\t\t\t\ttitle: refNumber,\n\t\t\t\ttext: reference.text\n\t\t\t} );\n\t\t}, function ( err ) {\n\t\t\tif ( err === ReferencesGateway.ERROR_NOT_EXIST ) {\n\t\t\t\tdrawer.hide();\n\t\t\t} else {\n\t\t\t\tdrawer.render( {\n\t\t\t\t\terror: true,\n\t\t\t\t\ttitle: refNumber,\n\t\t\t\t\ttext: mw.msg( 'mobile-frontend-references-citation-error' )\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\t/**\n\t * Fetch and render nested reference upon click\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t * @return {boolean} False to cancel the native event\n\t */\n\tshowNestedReference: function ( ev ) {\n\t\tvar $dest = this.$( ev.target );\n\n\t\tthis.showReference( $dest.attr( 'href' ), this.options.page, $dest.text() );\n\t\t// Don't hide the already shown drawer via propagation\n\t\t// and stop default scroll behaviour.\n\t\treturn false;\n\t}\n} );\n\nmodule.exports = ReferencesDrawer;\n","var ReferencesHtmlScraperGateway =\n\trequire( './ReferencesHtmlScraperGateway' ),\n\tcache = require( './../cache' ),\n\tReferencesGateway = require( './ReferencesGateway' ),\n\tMemoryCache = cache.MemoryCache,\n\tutil = require( './../util' ),\n\tmfExtend = require( './../mfExtend' ),\n\tNoCache = cache.NoCache,\n\treferencesMobileViewGateway = null;\n\n/**\n * Gateway for retrieving references via the MobileView API\n *\n * By default not cached, if it receives a cache instance then it will be\n * used to store and get references sections.\n *\n * @class ReferencesMobileViewGateway\n * @extends ReferencesHtmlScraperGateway\n * @inheritdoc\n *\n * @param {mw.Api} api class to use for making requests\n * @param {NoCache|MemoryCache} [cache] class to use for caching request\n * results. By default it uses the NoCache implementation, which doesn't\n * cache anything. The singleton instance exposed by this module uses\n * a MemoryCache which caches requests in-memory. Any other Cache class\n * compatible with mobile.startup/cache's interface will actually work.\n */\nfunction ReferencesMobileViewGateway( api, cache ) {\n\tReferencesHtmlScraperGateway.call( this, api );\n\tthis.cache = cache || new NoCache();\n}\n\nmfExtend( ReferencesMobileViewGateway, ReferencesHtmlScraperGateway, {\n\t/**\n\t * Retrieve references list for a given page.\n\t * Also cache the result for a later use.\n\t *\n\t * @memberof ReferencesMobileViewGateway\n\t * @instance\n\t * @param {Page} page\n\t * @return {jQuery.Deferred} promise that resolves with the list of\n\t *  sections on the page\n\t */\n\tgetReferencesLists: function ( page ) {\n\t\tvar self = this,\n\t\t\tresult = util.Deferred(),\n\t\t\tcachedReferencesSections = this.cache.get( page.id );\n\n\t\tif ( cachedReferencesSections ) {\n\t\t\treturn result.resolve( cachedReferencesSections ).promise();\n\t\t}\n\n\t\tthis.api.get( {\n\t\t\taction: 'mobileview',\n\t\t\tpage: page.getTitle(),\n\t\t\tsections: 'references',\n\t\t\tprop: 'text',\n\t\t\trevision: page.getRevisionId()\n\t\t} ).then( function ( data ) {\n\t\t\tvar sections = {};\n\n\t\t\tdata.mobileview.sections.forEach( function ( section ) {\n\t\t\t\tvar $section = util.parseHTML( '<div>' ).html( section.text );\n\n\t\t\t\tsections[ $section.find( '.mw-headline' ).attr( 'id' ) ] = $section.find( '.references' );\n\t\t\t} );\n\n\t\t\tself.cache.set( page.id, sections );\n\t\t\tresult.resolve( sections );\n\t\t}, function () {\n\t\t\tresult.reject( ReferencesGateway.ERROR_OTHER );\n\t\t} );\n\n\t\treturn result.promise();\n\t},\n\t/**\n\t * Retrieve all the references lists for a given page and section ID.\n\t *\n\t * @memberof ReferencesMobileViewGateway\n\t * @instance\n\t * @param {Page} page\n\t * @param {string} headingId\n\t * @return {jQuery.Promise} promise that resolves with the section\n\t *  HTML or `false` if no such section exists\n\t */\n\tgetReferencesList: function ( page, headingId ) {\n\t\treturn this.getReferencesLists( page ).then( function ( data ) {\n\t\t\treturn Object.prototype.hasOwnProperty.call( data, headingId ) ?\n\t\t\t\tdata[ headingId ] : false;\n\t\t} );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesMobileViewGateway\n\t * @instance\n\t */\n\tgetReference: function ( id, page ) {\n\t\tvar self = this;\n\n\t\treturn this.getReferencesLists( page ).then( function ( sections ) {\n\t\t\tvar $container = util.parseHTML( '<div>' );\n\n\t\t\tObject.keys( sections ).forEach( function ( sectionId ) {\n\t\t\t\t$container.append( sections[ sectionId ] );\n\t\t\t} );\n\n\t\t\treturn self.getReferenceFromContainer( id, $container );\n\t\t} );\n\t}\n} );\n\n/**\n * Retrieve a singleton instance w/ cache that uses mw.Api\n * @memberof ReferencesMobileViewGateway\n * @return {ReferencesMobileViewGateway}\n */\nReferencesMobileViewGateway.getSingleton = function () {\n\tif ( !referencesMobileViewGateway ) {\n\t\treferencesMobileViewGateway = new ReferencesMobileViewGateway(\n\t\t\tnew mw.Api(),\n\t\t\tnew MemoryCache()\n\t\t);\n\t}\n\treturn referencesMobileViewGateway;\n};\n\nmodule.exports = ReferencesMobileViewGateway;\n","/**\n * T156186: Please make judicious use of this singleton whose purpose is to\n * allow disparate components the ability to subscribe to a set of events and\n * react to those events.\n *\n * Prefer to use a more localized event bus when possible. (e.g.\n * mobile.special.nearby.scripts/nearby.js in Change-Id:\n * I632124515d4c26ae5ce77dd503d00a62e5a65dda)\n *\n * Only import this in files at the edges. For example:\n *\n * Good: initialization scripts responsible for initializing classes such as\n * mobile.init/init.js\n * Bad: ImageOverlay.js or in any other component.\n *\n * By doing this, and using dependency injection of the event bus in the\n * components themselves, it will make it easier to switch this event bus out\n * for something more localized later on in our refactoring efforts.\n */\nmodule.exports = new OO.EventEmitter();\n","var\n\tmfExtend = require( '../mfExtend' ),\n\tOverlay = require( '../Overlay' ),\n\tutil = require( '../util' ),\n\tAnchor = require( '../Anchor' ),\n\tIcon = require( '../Icon' ),\n\tWatchstarPageList = require( '../watchstar/WatchstarPageList' ),\n\tSEARCH_DELAY = 300,\n\tSEARCH_SPINNER_DELAY = 2000,\n\tfeedbackLink = mw.config.get( 'wgCirrusSearchFeedbackLink' );\n\n/**\n * Overlay displaying search results\n * @class SearchOverlay\n * @extends Overlay\n * @uses SearchGateway\n * @uses Icon\n *\n * @param {Object} params Configuration options\n * @fires SearchOverlay#search-show\n * @fires SearchOverlay#search-start\n * @fires SearchOverlay#search-results\n * @fires SearchOverlay#search-result-click\n */\nfunction SearchOverlay( params ) {\n\tvar defaultParams = {\n\t\t\tisBorderBox: false,\n\t\t\tclassName: 'overlay search-overlay'\n\t\t},\n\t\toptions = util.extend( {}, defaultParams, params );\n\n\tOverlay.call( this, options );\n\n\tthis.api = options.api;\n\t// eslint-disable-next-line new-cap\n\tthis.gateway = new options.gatewayClass( this.api );\n\n\tthis.router = options.router;\n}\n\nmfExtend( SearchOverlay, Overlay, {\n\t/**\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, Overlay.prototype.templatePartials, {\n\t\theader: mw.template.get( 'mobile.startup', 'search/SearchHeader.hogan' ),\n\t\tcontent: mw.template.get( 'mobile.startup', 'search/SearchContent.hogan' ),\n\t\ticon: Icon.prototype.template\n\t} ),\n\t/**\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @mixes Overlay#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {SearchGateway} defaults.gatewayClass The class to use to setup an API gateway.\n\t *  FIXME: Should be removed when wikidata descriptions in stable (T101719)\n\t * @property {Router} defaults.router instance\n\t * @property {Object} defaults.clearIcon options for the button that clears the search text.\n\t * @property {Object} defaults.searchContentIcon options for the button that allows you to\n\t *  search within content\n\t * @property {string} defaults.searchTerm Search text.\n\t * @property {string} defaults.placeholderMsg Search input placeholder text.\n\t * @property {string} defaults.clearMsg Tooltip for clear button that appears when you type\n\t * into search box.\n\t * @property {string} defaults.searchContentMsg Caption for a button performing full text\n\t * search of a given search query.\n\t * @property {string} defaults.noResultsMsg Message informing user that no pages were found\n\t * for a given query.\n\t * @property {string} defaults.searchContentNoResultsMsg Used when no pages with matching\n\t * titles were found.\n\t * @property {string} defaults.action The value of wgScript\n\t * @property {Object} defaults.feedback options for the feedback link\n\t *  below the search results\n\t */\n\tdefaults: util.extend( {}, Overlay.prototype.defaults, {\n\t\theaderChrome: true,\n\t\tclearIcon: new Icon( {\n\t\t\ttagName: 'button',\n\t\t\tname: 'search-clear',\n\t\t\tisSmall: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-clear-search' ),\n\t\t\tadditionalClassNames: 'clear'\n\t\t} ).options,\n\t\tsearchContentIcon: new Icon( {\n\t\t\ttagName: 'a',\n\t\t\t// When this icon is clicked we want to reset the hash for subsequent views\n\t\t\thref: '#',\n\t\t\tname: 'search-content',\n\t\t\tlabel: mw.msg( 'mobile-frontend-search-content' )\n\t\t} ).options,\n\t\tsearchTerm: '',\n\t\tplaceholderMsg: '',\n\t\tnoResultsMsg: mw.msg( 'mobile-frontend-search-no-results' ),\n\t\tsearchContentNoResultsMsg: mw.message( 'mobile-frontend-search-content-no-results' ).parse(),\n\t\taction: mw.config.get( 'wgScript' ),\n\t\tfeedback: !feedbackLink ? false : {\n\t\t\tfeedback: new Anchor( {\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-search-feedback-link-text' ),\n\t\t\t\thref: feedbackLink\n\t\t\t} ).options,\n\t\t\tprompt: mw.msg( 'mobile-frontend-search-feedback-prompt' )\n\t\t}\n\t} ),\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tevents: util.extend( {}, Overlay.prototype.events, {\n\t\t'input input': 'onInputInput',\n\t\t'click .clear': 'onClickClear',\n\t\t'click .search-content': 'onClickSearchContent',\n\t\t'click .overlay-content': 'onClickOverlayContent',\n\t\t'click .overlay-content > div': 'onClickOverlayContentDiv',\n\t\t'touchstart .results': 'hideKeyboardOnScroll',\n\t\t'mousedown .results': 'hideKeyboardOnScroll',\n\t\t'click .results a': 'onClickResult'\n\t} ),\n\n\t/**\n\t * Make sure search header is docked to the top of the screen when the\n\t * user begins typing so that there is adequate space for search results\n\t * above the keyboard. (This is only a potential issue when sitenotices\n\t * are displayed.)\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonInputInput: function () {\n\t\tthis.performSearch();\n\t\tthis.$clear.toggle( this.$input.val() !== '' );\n\t},\n\n\t/**\n\t * Initialize the button that clears the search field\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @return {boolean} False to cancel the native event\n\t */\n\tonClickClear: function () {\n\t\tthis.$input.val( '' ).focus();\n\t\tthis.performSearch();\n\t\tthis.$clear.hide();\n\t\t// In beta the clear button is on top of the search input.\n\t\t// Stop propagation so that the input doesn't receive the click.\n\t\treturn false;\n\t},\n\n\t/**\n\t * Initialize 'search within pages' functionality\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickSearchContent: function () {\n\t\tvar $el = util.getDocument().find( 'body' ),\n\t\t\t$form = this.$( 'form' );\n\n\t\t// Add fulltext input to force fulltext search\n\t\tthis.parseHTML( '<input>' )\n\t\t\t.attr( {\n\t\t\t\ttype: 'hidden',\n\t\t\t\tname: 'fulltext',\n\t\t\t\tvalue: 'search'\n\t\t\t} )\n\t\t\t.appendTo( $form );\n\t\t// history.back queues a task so might run after this call. Thus we use setTimeout\n\t\t// http://www.w3.org/TR/2011/WD-html5-20110113/webappapis.html#queue-a-task\n\t\tsetTimeout( function () {\n\t\t\t// Firefox doesn't allow submission of a form not in the DOM\n\t\t\t// so temporarily re-add it\n\t\t\t$form.appendTo( $el );\n\t\t\t$form.submit();\n\t\t}, 0 );\n\t},\n\n\t/**\n\t * Tapping on background only should hide the overlay\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickOverlayContent: function () {\n\t\tthis.$( '.cancel' ).trigger( 'click' );\n\t},\n\n\t/**\n\t * Stop propagation\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonClickOverlayContentDiv: function ( ev ) {\n\t\tev.stopPropagation();\n\t},\n\n\t/**\n\t * Hide the keyboard when scrolling starts (avoid weird situation when\n\t * user taps on an item, the keyboard hides and wrong item is clicked).\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\thideKeyboardOnScroll: function () {\n\t\tthis.$input.blur();\n\t},\n\n\t/**\n\t * Handle the user clicking a result.\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonClickResult: function ( ev ) {\n\t\tvar $link = this.$( ev.currentTarget ),\n\t\t\t$result = $link.closest( 'li' );\n\t\t/**\n\t\t * Fired when the user clicks a search result\n\t\t * @event SearchOverlay#search-result-click\n\t\t * @type {Object}\n\t\t * @property {jQuery.Object} result The jQuery-wrapped DOM element that\n\t\t *  the user clicked\n\t\t * @property {number} resultIndex The zero-based index of the\n\t\t *  result in the set of results\n\t\t * @property {jQuery.Event} originalEvent The original event\n\t\t */\n\t\tthis.emit( 'search-result-click', {\n\t\t\tresult: $result,\n\t\t\tresultIndex: this.$results.index( $result ),\n\t\t\toriginalEvent: ev\n\t\t} );\n\n\t\t// FIXME: ugly hack that removes search from browser history\n\t\t// when navigating to search results\n\t\tev.preventDefault();\n\t\tthis.router.back().then( function () {\n\t\t\t// Router.navigate does not support changing href.\n\t\t\t// FIXME: Needs upstream change T189173\n\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\twindow.location.href = $link.attr( 'href' );\n\t\t} );\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this,\n\t\t\ttimer;\n\n\t\tOverlay.prototype.postRender.call( this );\n\n\t\tthis.$input = this.$( 'input' );\n\t\tthis.$clear = this.$( '.clear' );\n\t\tthis.$searchContent = this.$( '.search-content' ).hide();\n\t\tthis.$searchFeedback = this.$( '.search-feedback' ).hide();\n\t\tthis.$resultContainer = this.$( '.results-list-container' );\n\n\t\t/**\n\t\t * Hide the spinner and abort timed spinner shows.\n\t\t */\n\t\tfunction clearSearch() {\n\t\t\tself.$spinner.hide();\n\t\t\tclearTimeout( timer );\n\t\t}\n\n\t\t// Show a spinner on top of search results\n\t\tthis.$spinner = this.$( '.spinner-container' );\n\t\tthis.on( 'search-start', function ( searchData ) {\n\t\t\tif ( timer ) {\n\t\t\t\tclearSearch();\n\t\t\t}\n\t\t\ttimer = setTimeout( function () {\n\t\t\t\tself.$spinner.show();\n\t\t\t}, SEARCH_SPINNER_DELAY - searchData.delay );\n\t\t} );\n\t\tthis.on( 'search-results', clearSearch );\n\n\t\t// Hide the clear button if the search input is empty\n\t\tif ( self.$input.val() === '' ) {\n\t\t\tthis.$clear.hide();\n\t\t}\n\t},\n\n\t/**\n\t * Trigger a focus() event on search input in order to\n\t * bring up the virtual keyboard.\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshowKeyboard: function () {\n\t\tvar len = this.$input.val().length;\n\t\tthis.$input.focus();\n\t\t// Cursor to the end of the input\n\t\tif ( this.$input[0].setSelectionRange ) {\n\t\t\tthis.$input[0].setSelectionRange( len, len );\n\t\t}\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\t// Overlay#show defines the actual overlay visibility.\n\t\tOverlay.prototype.show.apply( this, arguments );\n\n\t\tthis.showKeyboard();\n\t\t/**\n\t\t * Fired after the search overlay is shown\n\t\t * @event SearchOverlay#search-show\n\t\t */\n\t\tthis.emit( 'search-show' );\n\t},\n\n\t/**\n\t * Fade out if the browser supports animations\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\thide: function () {\n\t\tvar self = this,\n\t\t\t$html = util.getDocument();\n\n\t\tif ( $html.hasClass( 'animations' ) ) {\n\t\t\tself.$el.addClass( 'fade-out' );\n\t\t\tsetTimeout( function () {\n\t\t\t\tOverlay.prototype.hide.apply( self, arguments );\n\t\t\t}, 500 );\n\t\t} else {\n\t\t\tOverlay.prototype.hide.apply( self, arguments );\n\t\t}\n\t\treturn true;\n\t},\n\n\t/**\n\t * Perform search and render results inside current view.\n\t * FIXME: Much of the logic for caching and pending queries inside this function should\n\t * actually live in SearchGateway, please move out.\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tperformSearch: function () {\n\t\tvar\n\t\t\tself = this,\n\t\t\tapi = this.api,\n\t\t\tquery = this.$input.val(),\n\t\t\tdelay = this.gateway.isCached( query ) ? 0 : SEARCH_DELAY;\n\n\t\t// it seems the input event can be fired when virtual keyboard is closed\n\t\t// (Chrome for Android)\n\t\tif ( query !== this.lastQuery ) {\n\t\t\tif ( self._pendingQuery ) {\n\t\t\t\tself._pendingQuery.abort();\n\t\t\t}\n\t\t\tclearTimeout( this.timer );\n\n\t\t\tif ( query.length ) {\n\t\t\t\tthis.timer = setTimeout( function () {\n\t\t\t\t\tvar xhr;\n\t\t\t\t\t/**\n\t\t\t\t\t * Fired immediately before the search API request is sent\n\t\t\t\t\t * @event SearchOverlay#search-start\n\t\t\t\t\t * @property {Object} data related to the current search\n\t\t\t\t\t */\n\t\t\t\t\tself.emit( 'search-start', {\n\t\t\t\t\t\tquery: query,\n\t\t\t\t\t\tdelay: delay\n\t\t\t\t\t} );\n\n\t\t\t\t\txhr = self.gateway.search( query );\n\t\t\t\t\tself._pendingQuery = xhr.then( function ( data ) {\n\t\t\t\t\t\t// check if we're getting the rights response in case of out of\n\t\t\t\t\t\t// order responses (need to get the current value of the input)\n\t\t\t\t\t\tif ( data && data.query === self.$input.val() ) {\n\t\t\t\t\t\t\tself.$el.toggleClass( 'no-results', data.results.length === 0 );\n\t\t\t\t\t\t\tself.$searchContent\n\t\t\t\t\t\t\t\t.show()\n\t\t\t\t\t\t\t\t.find( 'p' )\n\t\t\t\t\t\t\t\t.hide()\n\t\t\t\t\t\t\t\t.filter( data.results.length ? '.with-results' : '.without-results' )\n\t\t\t\t\t\t\t\t.show();\n\n\t\t\t\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\t\t\t\tnew WatchstarPageList( {\n\t\t\t\t\t\t\t\tapi: api,\n\t\t\t\t\t\t\t\tfunnel: 'search',\n\t\t\t\t\t\t\t\tpages: data.results,\n\t\t\t\t\t\t\t\tel: self.$resultContainer\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\tself.$results = self.$resultContainer.find( 'li' );\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Fired when search API returns results\n\t\t\t\t\t\t\t * @event SearchOverlay#search-results\n\t\t\t\t\t\t\t * @type {Object}\n\t\t\t\t\t\t\t * @property {Object[]} results The results returned by the search\n\t\t\t\t\t\t\t *  API\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tself.emit( 'search-results', {\n\t\t\t\t\t\t\t\tresults: data.results\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ).promise( { abort: function () { xhr.abort(); } } );\n\t\t\t\t}, delay );\n\t\t\t} else {\n\t\t\t\tself.resetSearch();\n\t\t\t}\n\n\t\t\tthis.lastQuery = query;\n\t\t}\n\t},\n\t/**\n\t * Clear results\n\t *\n\t * @private\n\t */\n\tresetSearch: function () {\n\t\tthis.$spinner.hide();\n\t\tthis.$searchContent.hide();\n\t\tthis.$searchFeedback.hide();\n\t\tthis.$resultContainer.empty();\n\t}\n} );\n\nmodule.exports = SearchOverlay;\n","function subscribeMobileWebSearchSchema() {\n\tmw.loader.using( [\n\t\t'ext.eventLogging.subscriber'\n\t] ).then( function () {\n\t\tvar M = mw.mobileFrontend,\n\t\t\tcontext = M.require( 'mobile.startup/context' ),\n\t\t\t// Schema provided by ext.eventLogging.subscriber class\n\t\t\tSchema = mw.eventLog.Schema, // resource-modules-disable-line\n\t\t\t/**\n\t\t * MobileWebSearch schema\n\t\t * https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n\t\t */\n\t\t\tschemaMobileWebSearch = new Schema(\n\t\t\t\t'MobileWebSearch',\n\t\t\t\t// todo: use a default value of 0 once config lands in production.\n\t\t\t\tmw.config.get( 'wgMFSchemaSearchSampleRate', 1 / 1000 ),\n\t\t\t\t/**\n\t\t\t * @property {Object} defaults Default options hash.\n\t\t\t * @property {string} defaults.platform Always \"mobileweb\"\n\t\t\t * @property {string} defaults.platformVersion The version of MobileFrontend\n\t\t\t *  that the user is using. One of \"stable\" or \"beta\"\n\t\t\t */\n\t\t\t\t{\n\t\t\t\t\tplatform: 'mobileweb',\n\t\t\t\t\tplatformVersion: context.getMode()\n\t\t\t\t}\n\t\t\t);\n\n\t\tmw.trackSubscribe( 'mf.schemaMobileWebSearch', function ( topic, data ) {\n\t\t\tschemaMobileWebSearch.log( data );\n\t\t} );\n\t} );\n}\n\nmodule.exports = {\n\tsubscribeMobileWebSearchSchema: subscribeMobileWebSearchSchema\n};\n","/**\n * Coordinates the logging of MobileWebSchema events.\n * Implements schema defined at https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n *\n * @class\n */\nfunction MobileWebSearchLogger() {\n\tthis.userSessionToken = null;\n\tthis.searchSessionToken = null;\n}\n\nMobileWebSearchLogger.prototype = {\n\t/**\n\t * Sets the internal state required to deal with logging user session\n\t * data.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newUserSession: function () {\n\t\tthis.userSessionToken = mw.user.generateRandomSessionId();\n\t},\n\n\t/**\n\t * Sets the internal state required to deal with logging search session\n\t * data.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newSearchSession: function () {\n\t\tthis.searchSessionToken = mw.user.generateRandomSessionId();\n\t\tthis.searchSessionCreatedAt = new Date().getTime();\n\t},\n\n\t/**\n\t * Handles the 'search-show' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchShow: function () {\n\t\tthis._newUserSession();\n\t},\n\n\t/**\n\t * Handles the 'search-start' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchStart: function () {\n\t\tthis._newSearchSession();\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'session-start',\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: 0\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-results' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {Object[]} event.results\n\t */\n\tonSearchResults: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'impression-results',\n\t\t\tresultSetType: 'prefix',\n\t\t\tnumberOfResults: event.results.length,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\t// FIXME: Unless I'm mistaken, the timeToDisplayResults\n\t\t\t// property isn't necessary.\n\t\t\ttimeToDisplayResults: timeOffsetSinceStart,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-result-click' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {number} event.index\n\t *  The zero-based index of the result in the set of results.\n\t */\n\tonSearchResultClick: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'click-result',\n\t\t\t// NOTE: clickIndex is 1-based.\n\t\t\tclickIndex: event.resultIndex + 1,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t}\n};\n\n/**\n * Convenience function that wires up an instance of the\n * MobileWebSearchLogger class to the search-* events emitted by the\n * search overlay.\n * @memberof MobileWebSearchLogger\n * @param {SearchOverlay} searchOverlay\n */\nMobileWebSearchLogger.register = function ( searchOverlay ) {\n\tvar logger = new MobileWebSearchLogger();\n\n\tsearchOverlay.on( 'search-show', logger.onSearchShow.bind( logger ) );\n\tsearchOverlay.on( 'search-start', logger.onSearchStart.bind( logger ) );\n\tsearchOverlay.on( 'search-results', logger.onSearchResults.bind( logger ) );\n\tsearchOverlay.on( 'search-result-click', logger.onSearchResultClick.bind( logger ) );\n};\n\nmodule.exports = MobileWebSearchLogger;\n","var\n\tPage = require( '../Page' ),\n\tutil = require( '../util' ),\n\textendSearchParams = require( '../extendSearchParams' );\n\n/**\n * @class SearchGateway\n * @uses mw.Api\n * @param {mw.Api} api\n */\nfunction SearchGateway( api ) {\n\tthis.api = api;\n\tthis.searchCache = {};\n\tthis.generator = mw.config.get( 'wgMFSearchGenerator' );\n}\n\nSearchGateway.prototype = {\n\t/**\n\t * The namespace to search in.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @type {number}\n\t */\n\tsearchNamespace: 0,\n\n\t/**\n\t * Get the data used to do the search query api call.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @return {Object}\n\t */\n\tgetApiData: function ( query ) {\n\t\tvar prefix = this.generator.prefix,\n\t\t\tdata = extendSearchParams( 'search', {\n\t\t\t\tgenerator: this.generator.name\n\t\t\t} );\n\n\t\tdata.redirects = '';\n\n\t\tdata['g' + prefix + 'search'] = query;\n\t\tdata['g' + prefix + 'namespace'] = this.searchNamespace;\n\t\tdata['g' + prefix + 'limit'] = 15;\n\n\t\t// If PageImages is being used configure further.\n\t\tif ( data.pilimit ) {\n\t\t\tdata.pilimit = 15;\n\t\t\tdata.pithumbsize = mw.config.get( 'wgMFThumbnailSizes' ).tiny;\n\t\t}\n\t\treturn data;\n\t},\n\n\t/**\n\t * Escapes regular expression wildcards (metacharacters) by adding a \\\\ prefix\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} str a string\n\t * @return {Object} a regular expression that can be used to search for that str\n\t * @private\n\t */\n\t_createSearchRegEx: function ( str ) {\n\t\t// '\\[' can be unescaped, but leave it balanced with '`]'\n\t\t// eslint-disable-next-line no-useless-escape\n\t\tstr = str.replace( /[-\\[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&' );\n\t\treturn new RegExp( '^(' + str + ')', 'ig' );\n\t},\n\n\t/**\n\t * Takes a label potentially beginning with term\n\t * and highlights term if it is present with strong\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} label a piece of text\n\t * @param {string} term a string to search for from the start\n\t * @return {string} safe html string with matched terms encapsulated in strong tags\n\t * @private\n\t */\n\t_highlightSearchTerm: function ( label, term ) {\n\t\tlabel = util.parseHTML( '<span>' ).text( label ).html();\n\t\tterm = util.parseHTML( '<span>' ).text( term ).html();\n\n\t\treturn label.replace( this._createSearchRegEx( term ), '<strong>$1</strong>' );\n\t},\n\n\t/**\n\t * Return data used for creating {Page} objects\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @param {Object} pageInfo from the API\n\t * @return {Object} data needed to create a {Page}\n\t * @private\n\t */\n\t_getPage: function ( query, pageInfo ) {\n\t\tvar page = Page.newFromJSON( pageInfo );\n\n\t\t// If displaytext is set in the generator result (eg. by Wikibase),\n\t\t// use that as display title.\n\t\t// Otherwise default to the page's title.\n\t\t// FIXME: Given that displayTitle could have html in it be safe and just highlight text.\n\t\t// Note that highlightSearchTerm does full HTML escaping before highlighting.\n\t\tpage.displayTitle = this._highlightSearchTerm(\n\t\t\tpageInfo.displaytext ? pageInfo.displaytext : page.title,\n\t\t\tquery\n\t\t);\n\t\tpage.index = pageInfo.index;\n\n\t\treturn page;\n\t},\n\n\t/**\n\t * Process the data returned by the api call.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @param {Object} data from api\n\t * @return {Array}\n\t * @private\n\t */\n\t_processData: function ( query, data ) {\n\t\tvar self = this,\n\t\t\tresults = [];\n\n\t\tif ( data.query ) {\n\n\t\t\tresults = data.query.pages || {};\n\t\t\tresults = Object.keys( results ).map( function ( id ) {\n\t\t\t\treturn self._getPage( query, results[ id ] );\n\t\t\t} );\n\t\t\t// sort in order of index\n\t\t\tresults.sort( function ( a, b ) {\n\t\t\t\treturn a.index < b.index ? -1 : 1;\n\t\t\t} );\n\t\t}\n\n\t\treturn results;\n\t},\n\n\t/**\n\t * Perform a search for the given query.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @return {jQuery.Deferred}\n\t */\n\tsearch: function ( query ) {\n\t\tvar xhr, request,\n\t\t\tself = this;\n\n\t\tif ( !this.isCached( query ) ) {\n\t\t\txhr = this.api.get( this.getApiData( query ) );\n\t\t\trequest = xhr\n\t\t\t\t.then( function ( data ) {\n\t\t\t\t\t// resolve the Deferred object\n\t\t\t\t\treturn {\n\t\t\t\t\t\tquery: query,\n\t\t\t\t\t\tresults: self._processData( query, data )\n\t\t\t\t\t};\n\t\t\t\t}, function () {\n\t\t\t\t\t// reset cached result, it maybe contains no value\n\t\t\t\t\tself.searchCache[query] = undefined;\n\t\t\t\t} );\n\n\t\t\t// cache the result to prevent the execution of one search query twice\n\t\t\t// in one session\n\t\t\tthis.searchCache[query] = request.promise( {\n\t\t\t\tabort: function () { xhr.abort(); }\n\t\t\t} );\n\t\t}\n\n\t\treturn this.searchCache[query];\n\t},\n\n\t/**\n\t * Check if the search has already been performed in given session.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query\n\t * @return {boolean}\n\t */\n\tisCached: function ( query ) {\n\t\treturn Boolean( this.searchCache[ query ] );\n\t}\n};\n\nmodule.exports = SearchGateway;\n"],"sourceRoot":""}