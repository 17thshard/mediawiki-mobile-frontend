{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.startup/util.js","webpack://mfModules.[name]/./src/mobile.startup/mfExtend.js","webpack://mfModules.[name]/./src/mobile.startup/View.js","webpack://mfModules.[name]/./src/mobile.startup/Browser.js","webpack://mfModules.[name]/./src/mobile.startup/icons.js","webpack://mfModules.[name]/./src/mobile.startup/Page.js","webpack://mfModules.[name]/./src/mobile.startup/Icon.js","webpack://mfModules.[name]/./src/mobile.startup/time.js","webpack://mfModules.[name]/./src/mobile.startup/modules.js","webpack://mfModules.[name]/./src/mobile.startup/Section.js","webpack://mfModules.[name]/./src/mobile.startup/Thumbnail.js","webpack://mfModules.[name]/./src/mobile.startup/moduleSingleton.js","webpack://mfModules.[name]/./src/mobile.startup/cache.js","webpack://mfModules.[name]/./src/mobile.startup/OverlayManager.js","webpack://mfModules.[name]/./src/mobile.startup/PageGateway.js","webpack://mfModules.[name]/./src/mobile.startup/Skin.js","webpack://mfModules.[name]/./src/mobile.startup/Button.js","webpack://mfModules.[name]/./src/mobile.startup/Anchor.js","webpack://mfModules.[name]/./src/mobile.startup/Panel.js","webpack://mfModules.[name]/./src/mobile.startup/Overlay.js","webpack://mfModules.[name]/./src/mobile.startup/LoadingOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/Drawer.js","webpack://mfModules.[name]/./src/mobile.startup/mobile.startup.js","webpack://mfModules.[name]/./src/mobile.startup/context.js","webpack://mfModules.[name]/./src/mobile.startup/user.js","webpack://mfModules.[name]/./src/mobile.startup/CtaDrawer.js","webpack://mfModules.[name]/./src/mobile.startup/PageList.js","webpack://mfModules.[name]/./src/mobile.startup/toast.js","webpack://mfModules.[name]/./src/mobile.startup/rlModuleLoader.js"],"names":["module","exports","escapeSelector","selector","$","grep","apply","arguments","docReady","fn","when","Deferred","d","warning","mw","log","deprecate","fail","always","done","getDocument","document","documentElement","getWindow","window","parseHTML","html","ctx","isNumeric","extend","escapeHash","hash","replace","isModifiedEvent","ev","altKey","ctrlKey","metaKey","shiftKey","repeatEvent","src","proxy","event","args","on","emit","Child","ParentOrPrototype","prototype","key","OO","inheritClass","initClass","util","__webpack_require__","mfExtend","delegateEventSplitter","idCounter","View","this","initialize","mixinClass","EventEmitter","className","undefined","tagName","isTemplateMode","isBorderBox","template","templatePartials","defaults","events","options","self","call","cid","prefix","id","toString","uniqueId","compile","el","$el","length","_postInitialize","addClass","render","preRender","postRender","data","undelegateEvents","skipTemplateRender","delegateEvents","query","find","match","method","delegate","bind","eventName","listener","off","undelegate","forEach","prop","browser","memoize","memoized","cache","cacheId","join","Object","hasOwnProperty","Date","now","Math","random","Browser","ua","$container","userAgent","_fixIosLandscapeBug","isIos","lockViewport","addEventListener","version","ios","test","attr","isWideScreen","val","parseInt","config","get","innerWidth","innerHeight","supportsAnimations","elemStyle","createElement","style","supportsProperty","property","toUpperCase","slice","supportsTouchEvents","supportsGeoLocation","navigator","getSingleton","$html","Icon","spinner","name","label","msg","additionalClassNames","HTML","time","Section","Thumbnail","HEADING_SELECTOR","BLACKLISTED_THUMBNAIL_CLASS_SELECTORS","Page","thumb","thumbnail","languageUrl","getUrl","title","displayTitle","getDisplayTitle","url","isMissing","width","isLandscape","height","wikidataDescription","namespaceNumber","protection","edit","sections","isMainPage","source","escape","inNamespace","namespace","findSectionHeadingByIndex","sectionIndex","filter","eq","findChildInSectionLead","$heading","$nextHeading","$lead","headingSelector","withNestedChildren","$matchingNodes","addBack","getLeadSectionElement","children","prevAll","hasClass","next","nextAll","nextUntil","isWikiText","isWatched","getRevisionId","revId","getTitle","getId","getNamespaceId","split","toLowerCase","isTalkPage","ns","_sectionLookup","sectionData","section","push","getThumbnails","blacklistSelector","thumbs","_thumbs","not","each","$a","$lazyImage","valid","parents","legacyMatch","RegExp","filename","decodeURIComponent","getSection","getSections","getRedLinks","newFromJSON","resp","revision","pageprops","displaytitle","terms","description","revisions","lastModified","getLastModifiedMessage","timestamp","getTime","user","pageid","missing","hasText","modifier","href","setRotationClass","rotation","_rotationClass","Error","glyphPrefix","isSmall","base","getClassName","getGlyphClassName","toHtmlString","append","units","limits","timeAgo","timestampDelta","i","value","round","unit","getTimeAgoDelta","isNow","delta","ts","username","gender","historyUrl","seconds","minutes","hours","days","months","years","language","convertNumber","message","parse","text","getRegistrationMessage","isRecent","indexOf","ModuleLoader","_register","require","registry","localRequire","loader","e","define","obj","deprecatedId","replacement","icons","tag","level","line","hasReferences","anchor","subsections","siblings","getDescription","getFileName","MemoryCache","_cache","NoCache","set","OverlayManager","router","_checkRoute","entries","stack","hideCurrent","_onHideOverlay","back","_showOverlay","overlay","once","show","_hideOverlay","result","hide","_processMatch","factoryResult","attachHideEvent","promise","then","current","scrollTop","pageYOffset","keys","reduce","m","_matchRoute","path","preventDefault","scrollTo","pageXOffset","entry","route","previous","getNext","factory","hasLoadError","shift","unshift","add","getPath","replaceCurrent","sectionTemplate","transformSections","lastSection","existingSectionLevels","map","s","collapseLevel","min","assignToParent","listOfSections","child","PageGateway","api","getPage","endpoint","leadOnly","dataType","action","page","variant","redirect","noheadings","sectionprop","resolveObj","mv","error","reject","mobileview","lastmodified","lastmodifiedby","Array","isArray","lead","mainpage","lastModifiedTimestamp","languageCount","languagecount","hasVariants","hasvariants","lastModifiedUserName","lastModifiedUserGender","invalidatePage","_getLanguageVariantsFromApiResponse","generalData","general","variantPath","variantarticlepath","variants","index","item","autonym","lang","code","getPageLanguages","meta","siprop","lllimit","titles","formatversion","llprop","llinlanguagecode","languages","pages","langlinks","_getAPIResponseFromHTML","substr","$span","getSectionsFromHTML","viewport","M","getSectionId","hSelector","$parent","parent","Skin","mainMenu","warn","referencesGateway","setupImageLoading","lazyLoadReferences","appendTo","getUnloadedImages","toArray","offset","loadImagesList","imagePlaceholders","_loadImages","images","placeholder","$placeholder","isElementCloseToViewport","is","shouldLoadImage","callbacks","loadImage","$downloadingImage","ownerDocument","replaceWith","resolve","class","alt","srcset","$content","$spinner","gateway","wasExpanded","isReferenceSection","prependTo","getReferencesLists","lastId","refListIndex","getReferencesList","refListElements","remove","removeClass","loadImagesAndSetData","getLicenseMsg","licenseMsg","mfLicense","licensePlural","plural","link","Button","block","progressive","destructive","quiet","Anchor","Panel","minHideDelay","click .cancel","onCancel","isVisible","setTimeout","toggle","Overlay","useVirtualKeyboardHack","hasFixedHeader","fullScreen","hideOnExitClick","appendToElement","header","button","saveMsg","cancelButton","backButton","headerButtonsListClassName","headerChrome","fixedHeader","click .cancel, .confirm, .initial-header .back","click","closeOnContentTap","showSpinner","hideSpinner","$overlayContent","setupEmulatedIosOverlayScrolling","onTouchStart","onTouchMove","_fixIosHeader","onExitClick","stopPropagation","EVENT_EXIT","startY","originalEvent","touches","pageY","y","contentOuterHeight","outerHeight","contentLength","$window","one","_resizeContent","detach","windowHeight","keyboardHeight","showHidden","LoadingOverlay","Drawer","collapseIcon","icon","closeOnScroll","onShowDrawer","onHideDrawer","moduleLoader","context","CtaDrawer","PageList","toast","rlModuleLoader","mobileFrontend","getMode","mwUser","tokens","isAnon","getName","getEditCount","getGroups","getSessionId","sessionId","inUserBucketA","progressiveButton","actionAnchor","click .hide","params","returnto","returnTo","queryParams","signupParams","type","signupQueryParams","renderPageImages","storageKey","Toast","requestIdleCallback","_showPending","notification","notify","notif","close","showOnPageReload","content","storage","JSON","stringify","loadModule","delegateHide","showLoadingOverlay","loadingOverlay","hideOverlayIfNeeded","using"],"mappings":"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","file":"mobile.startup.js","sourcesContent":["/* global $ */\n\n/**\n * Utility library\n * @class util\n * @singleton\n */\nmodule.exports = {\n\t/**\n\t * Escape a string for use as a css selector\n\t * @memberof util\n\t * @instance\n\t * @param {string} selector\n\t * @return {string}\n\t */\n\tescapeSelector: function ( selector ) {\n\t\treturn $.escapeSelector( selector );\n\t},\n\t/**\n\t * Wrapper class for the $.grep\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Deferred}\n\t */\n\tgrep: function () {\n\t\treturn $.grep.apply( $, arguments );\n\t},\n\t/**\n\t * Run method when document is ready.\n\t * @memberof util\n\t * @instance\n\t * @param {Function} fn\n\t * @return {jQuery.Object}\n\t */\n\tdocReady: function ( fn ) {\n\t\treturn $( fn );\n\t},\n\t/**\n\t * Wrapper class for the $.when\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Deferred}\n\t */\n\twhen: function () {\n\t\treturn $.when.apply( $, arguments );\n\t},\n\t/**\n\t * Wrapper class for the Deferred method\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Deferred}\n\t */\n\tDeferred: function () {\n\t\tvar d = $.Deferred(),\n\t\t\twarning = 'Use Promise compatible methods `then` and `catch` instead.';\n\n\t\t/* eslint-disable no-restricted-properties */\n\t\tmw.log.deprecate( d, 'fail', d.fail, warning );\n\t\tmw.log.deprecate( d, 'always', d.always, warning );\n\t\tmw.log.deprecate( d, 'done', d.done, warning );\n\t\t/* eslint-enable no-restricted-properties */\n\t\treturn d;\n\t},\n\t/**\n\t * Adds a class to the document\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Object} element representing the documentElement\n\t */\n\tgetDocument: function () {\n\t\treturn $( document.documentElement );\n\t},\n\t/**\n\t * Get the window object\n\t * @memberof util\n\t * @instance\n\t * @return {jQuery.Object}\n\t */\n\tgetWindow: function () {\n\t\treturn $( window );\n\t},\n\t/**\n\t * Given some html, create new element(s).\n\t * Unlike jQuery.parseHTML this will return a jQuery object\n\t * not an array.\n\t * @memberof util\n\t * @instance\n\t * @param {string} html\n\t * @param {Element} [ctx] Document element to serve as the context\n\t *  in which the HTML fragment will be created\n\t * @return {jQuery.Object}\n\t */\n\tparseHTML: function ( html, ctx ) {\n\t\treturn $( $.parseHTML( html, ctx ) );\n\t},\n\t/**\n\t * wrapper for jQuery util function to check if something is numeric\n\t * @memberof util\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisNumeric: function () {\n\t\treturn $.isNumeric.apply( $, arguments );\n\t},\n\t/**\n\t * Wrapper for jQuery.extend method. In future this can be bound to Object.assign\n\t * when support allows.\n\t * @memberof util\n\t * @instance\n\t * @return {Object}\n\t */\n\textend: function () {\n\t\treturn $.extend.apply( $, arguments );\n\t},\n\t/**\n\t * Escape dots and colons in a hash, jQuery doesn't like them because they\n\t * look like CSS classes and pseudoclasses. See\n\t * http://bugs.jquery.com/ticket/5241\n\t * http://stackoverflow.com/questions/350292/how-do-i-get-jquery-to-select-elements-with-a-period-in-their-id\n\t * @memberof util\n\t * @instance\n\t * @param {string} hash A hash to escape\n\t * @return {string}\n\t */\n\tescapeHash: function ( hash ) {\n\t\treturn hash.replace( /(:|\\.)/g, '\\\\$1' );\n\t},\n\n\t/**\n\t * Heuristic for determining whether an Event should be handled by\n\t * MobileFrontend or allowed to bubble to the browser.\n\t * @memberof util\n\t * @instance\n\t * @param {Event} ev\n\t * @return {boolean} True if event is modified with control, alt, meta, or\n\t *                   shift keys and should probably be handled by the\n\t *                   browser.\n\t *\n\t * todo: move this function to a ClickUtil file once bundling and code\n\t * splitting is supported.\n\t */\n\tisModifiedEvent: function ( ev ) {\n\t\treturn ev.altKey || ev.ctrlKey || ev.metaKey || ev.shiftKey;\n\t},\n\n\t/**\n\t * Pipe event emitted by source through proxy. Subscribers to proxy will receive the event as\n\t * though proxy was the originator.\n\t *\n\t * @param {OO.EventEmitter} src\n\t * @param {OO.EventEmitter} proxy\n\t * @param {string} event Event type to listen for.\n\t * @param {any[]} [args] Arguments to pass to\n\t *  subscribers, will be prepended to emitted arguments.\n\t * @return {OO.EventEmitter} The source.\n\t */\n\trepeatEvent: function ( src, proxy, event, args ) {\n\t\treturn src.on( event, function ( args ) { return proxy.emit( event, args ); }, args );\n\t}\n};\n","/**\n * Extends a class with new methods and member properties.\n *\n * @param {Function} Child function\n * @param {Object|Function} ParentOrPrototype class to inherit from\n *  OR if no inheriting class a prototype to extend the class with\n * @param {Object} [prototype]\n */\nfunction mfExtend( Child, ParentOrPrototype, prototype ) {\n\tvar key;\n\tif ( prototype ) {\n\t\tOO.inheritClass( Child, ParentOrPrototype );\n\t} else {\n\t\tOO.initClass( Child );\n\t\tprototype = ParentOrPrototype;\n\t}\n\tfor ( key in prototype ) {\n\t\tChild.prototype[key] = prototype[key];\n\t}\n}\n\nmodule.exports = mfExtend;\n","/* global $ */\nvar util = require( './util' ),\n\tmfExtend = require( './mfExtend' ),\n\t// Cached regex to split keys for `delegate`.\n\tdelegateEventSplitter = /^(\\S+)\\s*(.*)$/,\n\tidCounter = 0;\n\n/**\n * Generate a unique integer id (unique within the entire client session).\n * Useful for temporary DOM ids.\n * @param {string} prefix Prefix to be used when generating the id.\n * @return {string}\n */\nfunction uniqueId( prefix ) {\n\tvar id = ( ++idCounter ).toString();\n\treturn prefix ? prefix + id : id;\n}\n\n/**\n * Should be extended using extend().\n *\n * When options contains el property, this.$el in the constructed object\n * will be set to the corresponding jQuery object. Otherwise, this.$el\n * will be an empty div.\n *\n * When extended using extend(), if the extended prototype contains\n * template property, this.$el will be filled with rendered template (with\n * options parameter used as template data).\n *\n * template property can be a string which will be passed to mw.template.compile()\n * or an object that has a render() function which accepts an object with\n * template data as its argument (similarly to an object created by\n * mw.template.compile()).\n *\n * You can also define a defaults property which should be an object\n * containing default values for the template (if they're not present in\n * the options parameter).\n *\n * If this.$el is not a jQuery object bound to existing DOM element, the\n * view can be attached to an element using appendTo(), prependTo(),\n * insertBefore(), insertAfter() proxy functions.\n *\n * append(), prepend(), before(), after() can be used to modify $el. on()\n * can be used to bind events.\n *\n * You can also use declarative DOM events binding by specifying an `events`\n * map on the class. The keys will be 'event selector' and the value can be\n * either the name of a method to call, or a function. All methods and\n * functions will be executed on the context of the View.\n *\n * Inspired from Backbone.js\n * https://github.com/jashkenas/backbone/blob/master/backbone.js#L1128\n *\n * Example:\n * ```js\n *     var MyComponent = View.extend( {\n *       events: {\n *\t       'mousedown .title': 'edit',\n *\t       'click .button': 'save',\n *\t       'click .open': function(e) { ... }\n *       },\n *       edit: function ( ev ) {\n *         //...\n *       },\n *       save: function ( ev ) {\n *         //...\n *       }\n *     } );\n * ```\n *\n * Example:\n * ```js\n *     var View, section;\n *     function Section( options ) {\n *       View.call( this, options );\n *     }\n *     View = require( './View' );\n *     require( './mfExtend' )( Section, View, {\n *       template: mw.template.compile( \"&lt;h2&gt;{{title}}&lt;/h2&gt;\" ),\n *     } );\n *     section = new Section( { title: 'Test', text: 'Test section body' } );\n *     section.appendTo( 'body' );\n * ```\n *\n * @class View\n * @mixins OO.EventEmitter\n */\nfunction View() {\n\tthis.initialize.apply( this, arguments );\n}\nOO.mixinClass( View, OO.EventEmitter );\nmfExtend( View, {\n\t/**\n\t * A css class to apply to the containing element of the View.\n\t * @memberof View\n\t * @instance\n\t * @property {string} className\n\t */\n\tclassName: undefined,\n\t/**\n\t * Name of tag that contains the rendered template\n\t * @memberof View\n\t * @instance\n\t * @property {string} tagName\n\t */\n\ttagName: 'div',\n\t/**\n\t * Tells the View to ignore tagName and className when constructing the element\n\t * and to rely solely on the template\n\t * @memberof View\n\t * @instance\n\t * @property {boolean} isTemplateMode\n\t */\n\tisTemplateMode: false,\n\n\t/**\n\t * Whether border box box sizing model should be used\n\t * @memberof View\n\t * @instance\n\t * @property {boolean} isBorderBox\n\t */\n\tisBorderBox: true,\n\t/**\n\t * @memberof View\n\t * @instance\n\t * @property {Mixed}\n\t * Specifies the template used in render(). Object|string|HoganTemplate\n\t */\n\ttemplate: undefined,\n\n\t/**\n\t * Specifies partials (sub-templates) for the main template. Example:\n\t *\n\t *     @example\n\t *     // example content for the \"some\" template (sub-template will be\n\t *     // inserted where {{>content}} is):\n\t *     // <h1>Heading</h1>\n\t *     // {{>content}}\n\t *\n\t *     oo.mfExtend( SomeView, View, {\n\t *       template: M.template.get( 'some.hogan' ),\n\t *       templatePartials: { content: M.template.get( 'sub.hogan' ) }\n\t *     }\n\t *\n\t * @memberof View\n\t * @instance\n\t * @property {Object}\n\t */\n\ttemplatePartials: {},\n\n\t/**\n\t * A set of default options that are merged with options passed into the initialize\n\t * function.\n\t * @memberof View\n\t * @instance\n\t * @property {Object} defaults Default options hash.\n\t * @property {jQuery.Object|string} [defaults.el] jQuery selector to use for rendering.\n\t * @property {boolean} [defaults.skipTemplateRender] Whether to enhance views already in\n\t * DOM. When enabled, the template is disabled so that it is not rendered in the DOM.\n\t * Use in conjunction with View::defaults.$el to associate the View with an existing\n\t * already rendered element in the DOM.\n\t */\n\tdefaults: {},\n\n\t/**\n\t * Default events map\n\t * @memberof View\n\t * @instance\n\t */\n\tevents: null,\n\n\t/**\n\t * Run once during construction to set up the View\n\t * @memberof View\n\t * @instance\n\t * @param {Object} options Object passed to the constructor.\n\t */\n\tinitialize: function ( options ) {\n\t\tvar self = this;\n\n\t\tOO.EventEmitter.call( this );\n\t\toptions = util.extend( {}, this.defaults, options );\n\t\tthis.options = options;\n\t\t// Assign a unique id for dom events binding/unbinding\n\t\tthis.cid = uniqueId( 'view' );\n\n\t\t// TODO: if template compilation is too slow, don't compile them on a\n\t\t// per object basis, but don't worry about it now (maybe add cache to\n\t\t// M.template.compile())\n\t\tif ( typeof this.template === 'string' ) {\n\t\t\tthis.template = mw.template.compile( this.template );\n\t\t}\n\n\t\tif ( options.el ) {\n\t\t\t// Note the element may not be in the document so must use global jQuery here\n\t\t\tthis.$el = $( options.el );\n\t\t} else {\n\t\t\tthis.$el = this.parseHTML( '<' + this.tagName + '>' );\n\t\t}\n\n\t\t// Make sure the element is ready to be manipulated\n\t\tif ( this.$el.length ) {\n\t\t\tthis._postInitialize();\n\t\t} else {\n\t\t\tutil.docReady( function () {\n\t\t\t\t// Note the element may not be in the document so must use global jQuery here\n\t\t\t\tself.$el = $( options.el );\n\t\t\t\tself._postInitialize();\n\t\t\t} );\n\t\t}\n\t},\n\n\t/**\n\t * Called when this.$el is ready.\n\t * @memberof View\n\t * @instance\n\t * @private\n\t */\n\t_postInitialize: function () {\n\t\tthis.$el.addClass( this.className );\n\t\tif ( this.isBorderBox ) {\n\t\t\t// FIXME: Merge with className property (?)\n\t\t\tthis.$el.addClass( 'view-border-box' );\n\t\t}\n\t\tthis.render( this.options );\n\t},\n\n\t/**\n\t * Function called before the view is rendered. Can be redefined in\n\t * objects that extend View.\n\t * @memberof View\n\t * @instance\n\t */\n\tpreRender: function () {},\n\n\t/**\n\t * Function called after the view is rendered. Can be redefined in\n\t * objects that extend View.\n\t *\n\t * @memberof View\n\t * @instance\n\t */\n\tpostRender: function () {},\n\n\t// eslint-disable-next-line valid-jsdoc\n\t/**\n\t * Fill this.$el with template rendered using data if template is set.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {Object} data Template data. Will be merged into the view's\n\t * options\n\t * @chainable\n\t */\n\trender: function ( data ) {\n\t\tvar html;\n\t\tutil.extend( this.options, data );\n\t\tthis.preRender();\n\t\tthis.undelegateEvents();\n\t\tif ( this.template && !this.options.skipTemplateRender ) {\n\t\t\thtml = this.template.render( this.options, this.templatePartials );\n\t\t\tif ( this.isTemplateMode ) {\n\t\t\t\tthis.$el = $( html );\n\t\t\t} else {\n\t\t\t\tthis.$el.html( html );\n\t\t\t}\n\t\t}\n\t\tthis.postRender();\n\t\tthis.delegateEvents();\n\t\treturn this;\n\t},\n\n\t/**\n\t * Wraps this.$el.find, so that you can search for elements in the view's\n\t * ($el's) scope.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {string} query A jQuery CSS selector.\n\t * @return {JQuery.Object} jQuery object containing results of the search.\n\t */\n\t$: function ( query ) {\n\t\treturn this.$el.find( query );\n\t},\n\n\t/**\n\t * Set callbacks, where `this.events` is a hash of\n\t *\n\t * {\"event selector\": \"callback\"}\n\t *\n\t * {\n\t *\t'mousedown .title': 'edit',\n\t *\t'click .button': 'save',\n\t *\t'click .open': function(e) { ... }\n\t * }\n\t *\n\t * pairs. Callbacks will be bound to the view, with `this` set properly.\n\t * Uses event delegation for efficiency.\n\t * Omitting the selector binds the event to `this.el`.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {Object} events Optionally set this events instead of the ones on this.\n\t */\n\tdelegateEvents: function ( events ) {\n\t\tvar match, key, method;\n\t\t// Take either the events parameter or the this.events to process\n\t\tevents = events || this.events;\n\t\tif ( events ) {\n\t\t\t// Remove current events before re-binding them\n\t\t\tthis.undelegateEvents();\n\t\t\tfor ( key in events ) {\n\t\t\t\tmethod = events[ key ];\n\t\t\t\t// If the method is a string name of this.method, get it\n\t\t\t\tif ( typeof method !== 'function' ) {\n\t\t\t\t\tmethod = this[ events[ key ] ];\n\t\t\t\t}\n\t\t\t\tif ( method ) {\n\t\t\t\t\t// Extract event and selector from the key\n\t\t\t\t\tmatch = key.match( delegateEventSplitter );\n\t\t\t\t\tthis.delegate( match[ 1 ], match[ 2 ], method.bind( this ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Add a single event listener to the view's element (or a child element\n\t * using `selector`). This only works for delegate-able events: not `focus`,\n\t * `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {string} eventName\n\t * @param {string} selector\n\t * @param {Function} listener\n\t */\n\tdelegate: function ( eventName, selector, listener ) {\n\t\tthis.$el.on( eventName + '.delegateEvents' + this.cid, selector,\n\t\t\tlistener );\n\t},\n\n\t/**\n\t * Clears all callbacks previously bound to the view by `delegateEvents`.\n\t * You usually don't need to use this, but may wish to if you have multiple\n\t * views attached to the same DOM element.\n\t * @memberof View\n\t * @instance\n\t */\n\tundelegateEvents: function () {\n\t\tif ( this.$el ) {\n\t\t\tthis.$el.off( '.delegateEvents' + this.cid );\n\t\t}\n\t},\n\n\t/**\n\t * A finer-grained `undelegateEvents` for removing a single delegated event.\n\t * `selector` and `listener` are both optional.\n\t *\n\t * @memberof View\n\t * @instance\n\t * @param {string} eventName\n\t * @param {string} selector\n\t * @param {Function} listener\n\t */\n\tundelegate: function ( eventName, selector, listener ) {\n\t\tthis.$el.off( eventName + '.delegateEvents' + this.cid, selector,\n\t\t\tlistener );\n\t},\n\n\t/**\n\t * See parseHTML method of util singleton\n\t *\n\t * @memberof View\n\t * @instance\n\t */\n\tparseHTML: util.parseHTML\n} );\n\n/**\n * @memberof View\n * @instance\n * @func append\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func append\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func prepend\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func prepend\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func appendTo\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func prependTo\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func after\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func after\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func before\n * @param {...(string|Node|Node[]|JQuery)} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func before\n * @param {function(number, string): string|Node|Node[]|JQuery} contents\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func insertAfter\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func insertBefore\n * @param {string|Node|Node[]|JQuery} target\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func remove\n * @param {string} [selector]\n * @return {this}\n */\n\n/**\n * @memberof View\n * @instance\n * @func detach\n * @param {string} [selector]\n * @return {this}\n */\n\n[\n\t'append',\n\t'prepend',\n\t'appendTo',\n\t'prependTo',\n\t'after',\n\t'before',\n\t'insertAfter',\n\t'insertBefore',\n\t'remove',\n\t'detach'\n].forEach( function ( prop ) {\n\tView.prototype[prop] = function () {\n\t\tthis.$el[prop].apply( this.$el, arguments );\n\t\treturn this;\n\t};\n} );\n\nmodule.exports = View;\n","var\n\tutil = require( './util' ),\n\tbrowser;\n\n/**\n * Memoize a class method. Caches the result of the method based on the\n * arguments. Instances do not share a cache.\n * @param {Function} method Method to be memoized\n * @return {Function}\n */\nfunction memoize( method ) {\n\t/**\n\t * Memoized version of the method\n\t * @return {Function}\n\t */\n\tvar memoized = function () {\n\t\tvar cache = this[ '__cache' + memoized.cacheId ] ||\n\t\t\t( this[ '__cache' + memoized.cacheId ] = {} ),\n\t\t\tkey = [].join.call( arguments, '|' );\n\t\tif ( Object.prototype.hasOwnProperty.call( cache, key ) ) {\n\t\t\treturn cache[ key ];\n\t\t}\n\t\treturn ( cache[ key ] = method.apply( this, arguments ) );\n\t};\n\tmemoized.cacheId = Date.now().toString() + Math.random().toString();\n\treturn memoized;\n}\n\n/**\n * Representation of user's current browser\n * @class Browser\n * @param {string} ua the user agent of the current browser\n * @param {jQuery.Object} $container an element to associate with the Browser object\n */\nfunction Browser( ua, $container ) {\n\tthis.userAgent = ua;\n\tthis.$el = $container;\n\tthis._fixIosLandscapeBug();\n}\n\nBrowser.prototype = {\n\t/**\n\t * When rotating to landscape stop page zooming on ios 4 and 5.\n\t * @memberof Browser\n\t * @instance\n\t * @private\n\t */\n\t_fixIosLandscapeBug: function () {\n\t\tvar self = this,\n\t\t\tviewport = this.$el.find( 'meta[name=\"viewport\"]' )[0];\n\n\t\t// see http://adactio.com/journal/4470/ (fixed in ios 6)\n\t\tif ( viewport && ( this.isIos( 4 ) || this.isIos( 5 ) ) ) {\n\t\t\tthis.lockViewport();\n\t\t\tdocument.addEventListener( 'gesturestart', function () {\n\t\t\t\tself.lockViewport();\n\t\t\t}, false );\n\t\t}\n\t},\n\t/**\n\t * Returns whether the current browser is an ios device.\n\t * FIXME: jquery.client does not support iPad detection so we cannot use it.\n\t * @memberof Browser\n\t * @instance\n\t * @param {number} [version] integer describing a specific version you want to test against.\n\t * @return {boolean}\n\t */\n\tisIos: memoize( function ( version ) {\n\t\tvar ua = this.userAgent,\n\t\t\tios = /ipad|iphone|ipod/i.test( ua );\n\n\t\tif ( ios && version ) {\n\t\t\tswitch ( version ) {\n\t\t\t\tcase 8:\n\t\t\t\t\t// Test UA for iOS8. Or for simulator look for Version 8\n\t\t\t\t\t// In the iOS simulator the OS is the host machine OS version\n\t\t\t\t\t// This makes testing in iOS8 simulator work as expected\n\t\t\t\t\treturn /OS 8_/.test( ua ) || /Version\\/8/.test( ua );\n\t\t\t\tcase 4:\n\t\t\t\t\treturn /OS 4_/.test( ua );\n\t\t\t\tcase 5:\n\t\t\t\t\treturn /OS 5_/.test( ua );\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn ios;\n\t\t}\n\t} ),\n\t/**\n\t * Locks the viewport so that pinch zooming is disabled\n\t * @memberof Browser\n\t * @instance\n\t */\n\tlockViewport: function () {\n\t\tif ( this.$el ) {\n\t\t\tthis.$el.find( 'meta[name=\"viewport\"]' )\n\t\t\t\t.attr( 'content', 'initial-scale=1.0, maximum-scale=1.0, user-scalable=no' );\n\t\t}\n\t},\n\t/**\n\t * Determine if a device has a widescreen.\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisWideScreen: memoize( function () {\n\t\tvar val = parseInt( mw.config.get( 'wgMFDeviceWidthTablet' ), 10 );\n\t\t// Check portrait and landscape mode to be consistent\n\t\treturn window.innerWidth >= val || window.innerHeight >= val;\n\t} ),\n\t/**\n\t * Checks browser support for CSS transforms, transitions\n\t * and CSS animation.\n\t * Currently assumes support for the latter 2 in the case of the\n\t * former.\n\t * See http://stackoverflow.com/a/12621264/365238\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tsupportsAnimations: memoize( function () {\n\t\tvar elemStyle = document.createElement( 'foo' ).style;\n\t\tfunction supportsProperty( property ) {\n\t\t\t// We only test \"webkit-\", because that's the only prefix needed for the relevant\n\t\t\t// properties (in supportsAnimations) and supported browsers. If usage is expanded,\n\t\t\t// other prefixes may need to be checked as well.\n\t\t\treturn property in elemStyle ||\n\t\t\t\t( 'webkit' + property[ 0 ].toUpperCase() + property.slice( 1 ) ) in elemStyle;\n\t\t}\n\t\treturn supportsProperty( 'animationName' ) &&\n\t\t\tsupportsProperty( 'transform' ) &&\n\t\t\tsupportsProperty( 'transition' );\n\t} ),\n\t/**\n\t * Whether touchstart and other touch events are supported by the current browser.\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tsupportsTouchEvents: memoize( function () {\n\t\treturn 'ontouchstart' in window;\n\t} ),\n\t/**\n\t * Detect if browser supports geolocation\n\t * @memberof Browser\n\t * @instance\n\t * @return {boolean}\n\t */\n\tsupportsGeoLocation: memoize( function () {\n\t\treturn 'geolocation' in window.navigator;\n\t} )\n};\n\n/**\n * @memberof Browser\n * @return {Browser}\n */\nBrowser.getSingleton = function () {\n\tvar $html;\n\tif ( !browser ) {\n\t\t$html = util.getDocument();\n\t\tbrowser = new Browser( window.navigator.userAgent, $html );\n\t}\n\treturn browser;\n};\n\nmodule.exports = Browser;\n","var\n\tIcon = require( './Icon' ),\n\tutil = require( './util' );\n\n/**\n * A set of shared icons.\n *\n * Factory methods are used to keep separate features that use the same icons\n * from accidentally manipulating one another's DOM when calling methods like\n * `remove`.\n *\n * @class icons\n * @singleton\n * @uses Icon\n */\nmodule.exports = {\n\t/**\n\t * Gets a spinner icon.\n\t *\n\t * The icon should be used to inform the user that the front-end is\n\t * communicating with the back-end.\n\t * @memberof icons\n\t * @instance\n\t * @param {Object} [options] See `Icon` for more details\n\t * @return {Icon}\n\t */\n\tspinner: function ( options ) {\n\t\toptions = options || {};\n\n\t\treturn new Icon( util.extend( options, {\n\t\t\tname: 'spinner',\n\t\t\tlabel: mw.msg( 'mobile-frontend-loading-message' ),\n\t\t\tadditionalClassNames: 'spinner loading'\n\t\t} ) );\n\t}\n};\n","var\n\tHTML = mw.html,\n\tmfExtend = require( './mfExtend' ),\n\ttime = require( './time' ),\n\tutil = require( './util' ),\n\tSection = require( './Section' ),\n\tThumbnail = require( './Thumbnail' ),\n\tView = require( './View' ),\n\tHEADING_SELECTOR = mw.config.get( 'wgMFMobileFormatterHeadings' ).join( ',' ),\n\tBLACKLISTED_THUMBNAIL_CLASS_SELECTORS = [ 'noviewer', 'metadata' ];\n\n/**\n * Mobile page view object\n *\n * @class Page\n * @uses Section\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Page( options ) {\n\tvar thumb;\n\t// If thumbnail is not passed it should be made false (truthy) so that it\n\t// renders a placeholder when absent.\n\tif ( options.thumbnail === undefined ) {\n\t\toptions.thumbnail = false;\n\t}\n\tthis.options = options;\n\toptions.languageUrl = mw.util.getUrl( 'Special:MobileLanguages/' + options.title );\n\tView.call( this, options );\n\t// Fallback if no displayTitle provided\n\toptions.displayTitle = this.getDisplayTitle();\n\t// allow usage in templates.\n\t// FIXME: Should View map all options to properties?\n\tthis.title = options.title;\n\tthis.displayTitle = options.displayTitle;\n\tthis.thumbnail = options.thumbnail;\n\tthis.url = options.url || mw.util.getUrl( options.title );\n\tthis.id = options.id;\n\tthis.isMissing = options.isMissing !== undefined ? options.isMissing : options.id === 0;\n\tthumb = this.thumbnail;\n\tif ( thumb && thumb.width ) {\n\t\tthis.thumbnail.isLandscape = thumb.width > thumb.height;\n\t}\n\tthis.wikidataDescription = options.wikidataDescription;\n}\n\nmfExtend( Page, View, {\n\t/**\n\t * @memberof Page\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {number} defaults.id Page ID. The default value of 0 represents a\n\t * new or missing page. Be sure to override it to avoid side effects.\n\t * @property {string} defaults.title Title of the page. It includes prefix where needed and\n\t * is human readable, e.g. Talk:The man who lived.\n\t * @property {string} defaults.displayTitle HTML title of the page for display. Falls back\n\t * to defaults.title (escaped) if no value is provided. Must be safe HTML!\n\t * @property {number} defaults.namespaceNumber the number of the\n\t *  namespace the page belongs to\n\t * @property {Object} defaults.protection List of permissions as returned by API,\n\t * e.g. [{ edit: ['*'] }]\n\t * @property {Array} defaults.sections Array of {Section} objects.\n\t * @property {boolean} defaults.isMainPage Whether the page is the Main Page.\n\t * @property {boolean} defaults.isMissing Whether the page exists in the wiki.\n\t * @property {Object} defaults.thumbnail thumbnail definition corresponding to page image\n\t * @property {boolean} defaults.thumbnail.isLandscape whether the image is in\n\t *  landscape format\n\t * @property {number} defaults.thumbnail.width of image in pixels.\n\t * @property {number} defaults.thumbnail.height of image in pixels.\n\t * @property {string} defaults.thumbnail.source url for image\n\t */\n\tdefaults: {\n\t\tid: 0,\n\t\ttitle: '',\n\t\tdisplayTitle: '',\n\t\tnamespaceNumber: 0,\n\t\tprotection: {\n\t\t\tedit: [ '*' ]\n\t\t},\n\t\tsections: [],\n\t\tisMissing: false,\n\t\tisMainPage: false,\n\t\turl: undefined,\n\t\tthumbnail: {\n\t\t\tisLandscape: undefined,\n\t\t\tsource: undefined,\n\t\t\twidth: undefined,\n\t\t\theight: undefined\n\t\t}\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Page\n\t * @instance\n\t */\n\tisBorderBox: false,\n\t/**\n\t * Retrieve the title that should be displayed to the user\n\t * @memberof Page\n\t * @instance\n\t * @return {string} HTML\n\t */\n\tgetDisplayTitle: function () {\n\t\treturn this.options.displayTitle || HTML.escape( this.options.title );\n\t},\n\t/**\n\t * Determine if current page is in a specified namespace\n\t * @memberof Page\n\t * @instance\n\t * @param {string} namespace Name of namespace\n\t * @return {boolean}\n\t */\n\tinNamespace: function ( namespace ) {\n\t\treturn this.options.namespaceNumber === mw.config.get( 'wgNamespaceIds' )[namespace];\n\t},\n\n\t/**\n\t * Find the heading in the page.\n\t * This has the benefit of excluding any additional h2s and h3s that may\n\t * have been added programatically.\n\t * @method\n\t * @param {number} sectionIndex as defined by the PHP parser.\n\t *  It should correspond to the section id\n\t *  used in the edit link for the section.\n\t *  Note, confusingly, this is different from section \"ID\" which is\n\t * used in methods\n\t * @return {jQuery.Object}\n\t */\n\tfindSectionHeadingByIndex: function ( sectionIndex ) {\n\t\tif ( sectionIndex < 1 ) {\n\t\t\t// negative indexes will search from the end, which is behaviour we do not want.\n\t\t\t// return an empty set when this happens.\n\t\t\treturn this.$();\n\t\t} else {\n\t\t\treturn this.$( HEADING_SELECTOR )\n\t\t\t\t// Headings must strictly be a child element of a section element\n\t\t\t\t// or the parser-output.\n\t\t\t\t// Not an ancestor!\n\t\t\t\t.filter( '.mw-parser-output > *, [class^=\"mf-section-\"] > *' ).eq( sectionIndex - 1 );\n\t\t}\n\t},\n\t/**\n\t * Finds all child elements that match the selector in a given section or subsection.\n\t * Returns any direct child elements that match the selector,\n\t * (i.e. searches only one level deep)\n\t * as well as any elements that match the selector within those children.\n\t * If the Page has no headings (e.g. a stub),\n\t * then the search will target all nodes within the page.\n\t *\n\t * This code should work on desktop (PHP parser HTML)\n\t * as well as mobile formatted HTML (PHP parser + MobileFormatter)\n\t * @method\n\t * @param {number} sectionIndex as defined by the PHP parser. It should correspond to\n\t *  the section id used in the edit link for the section.\n\t *  Note, confusingly, this is different from section \"ID\" which is\n\t *  used in methods\n\t * @param {string} selector to match\n\t * @return {jQuery.Object}\n\t */\n\tfindChildInSectionLead: function ( sectionIndex, selector ) {\n\t\tvar $heading, $nextHeading, $container, $lead,\n\t\t\theadingSelector = HEADING_SELECTOR;\n\n\t\tfunction withNestedChildren( $matchingNodes ) {\n\t\t\treturn $matchingNodes.find( selector ).addBack();\n\t\t}\n\n\t\tif ( sectionIndex === 0 ) {\n\t\t\t// lead is easy\n\t\t\t$lead = this.getLeadSectionElement();\n\t\t\tif ( $lead && $lead.length ) {\n\t\t\t\treturn withNestedChildren( $lead.children( selector ) );\n\t\t\t} else {\n\t\t\t\t$heading = this.findSectionHeadingByIndex( 1 );\n\t\t\t\treturn $heading.length ? withNestedChildren( $heading.prevAll( selector ) ) :\n\t\t\t\t\t// this page is a stub so search entire page\n\t\t\t\t\tthis.$( selector );\n\t\t\t}\n\t\t}\n\n\t\t// find heading associated with the section by looking at its\n\t\t// index position in the article\n\t\t// section ids relate to the element position in the page and the first heading\n\t\t// lead has been dealt with above, so first heading corresponds to section 1,\n\t\t// the first heading in the article.\n\t\t$heading = this.findSectionHeadingByIndex( sectionIndex );\n\n\t\t// If section-heading is present on the heading,\n\t\t// then we know the page has been MobileFormatted\n\t\t// and that this is a wrapped section\n\t\tif ( $heading.hasClass( 'section-heading' ) ) {\n\t\t\t// get content of section\n\t\t\t$container = $heading.next();\n\t\t\t// inside section find the first heading\n\t\t\t$nextHeading = $container.find( headingSelector ).eq( 0 );\n\t\t\treturn $nextHeading.length ?\n\t\t\t\t// find all amboxes before the next heading\n\t\t\t\twithNestedChildren( $nextHeading.prevAll( selector ) ) :\n\t\t\t\t// There is no subheadings inside\n\t\t\t\t// Grab all issues in section\n\t\t\t\twithNestedChildren( $container.children( selector ) );\n\t\t} else {\n\t\t\t// the heading relates to a subsection (or unwrapped desktop section),\n\t\t\t// so grab elements between this and the next one\n\t\t\t$nextHeading = $heading.eq( 0 ).nextAll( headingSelector ).eq( 0 );\n\t\t\treturn $heading.nextUntil( $nextHeading, selector );\n\t\t}\n\t},\n\n\t/**\n\t * Get the lead section of the page view.\n\t * @memberof Page\n\t * @instance\n\t * @return {jQuery.Object|null}\n\t */\n\tgetLeadSectionElement: function () {\n\t\t/*\n\t\t * The page is formatted as follows:\n\t\t * <div id=\"bodyContent\">\n\t\t *   <!-- content of the page.. -->\n\t\t *   <div id=\"mw-content-text\">\n\t\t *     <div class=\"mf-section-0\">lead section</div>\n\t\t *     <h2></h2>\n\t\t *     <div class=\"mf-section-1\">second section</div>\n\t\t *   </div>\n\t\t * </div>\n\t\t */\n\t\tif ( this.$( '.mf-section-0' ).length ) {\n\t\t\treturn this.$( '.mf-section-0' );\n\t\t}\n\t\t// no lead section found\n\t\treturn null;\n\t},\n\n\t/**\n\t * Determines if content model is wikitext\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisWikiText: function () {\n\t\treturn mw.config.get( 'wgPageContentModel' ) === 'wikitext';\n\t},\n\n\t/**\n\t * Checks whether the current page is the main page\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisMainPage: function () {\n\t\treturn this.options.isMainPage;\n\t},\n\t/**\n\t * Checks whether the current page is watched\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisWatched: function () {\n\t\treturn this.options.isWatched;\n\t},\n\n\t/**\n\t * Return the latest revision id for this page\n\t * @memberof Page\n\t * @instance\n\t * @return {number}\n\t */\n\tgetRevisionId: function () {\n\t\treturn this.options.revId;\n\t},\n\n\t/**\n\t * Return prefixed page title\n\t * @memberof Page\n\t * @instance\n\t * @return {string}\n\t */\n\tgetTitle: function () {\n\t\treturn this.options.title;\n\t},\n\n\t/**\n\t * Return page id\n\t * @memberof Page\n\t * @instance\n\t * @return {number}\n\t */\n\tgetId: function () {\n\t\treturn this.options.id;\n\t},\n\n\t/**\n\t * return namespace id\n\t * @memberof Page\n\t * @instance\n\t * @return {number} namespace Number\n\t */\n\tgetNamespaceId: function () {\n\t\tvar nsId,\n\t\t\targs = this.options.title.split( ':' );\n\n\t\tif ( args[1] ) {\n\t\t\tnsId = mw.config.get( 'wgNamespaceIds' )[ args[0].toLowerCase().replace( ' ', '_' ) ] || 0;\n\t\t} else {\n\t\t\tnsId = 0;\n\t\t}\n\t\treturn nsId;\n\t},\n\n\t/**\n\t * Determines if current page is a talk page\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean} Whether the page is a talk page or not\n\t */\n\tisTalkPage: function () {\n\t\tvar ns = this.getNamespaceId();\n\t\t// all talk pages are odd Numbers (except the case of special pages)\n\t\treturn ns > 0 && ns % 2 === 1;\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Page\n\t * @instance\n\t */\n\tpreRender: function () {\n\t\tthis.sections = [];\n\t\tthis._sectionLookup = {};\n\t\tthis.title = this.options.title;\n\n\t\tthis.options.sections.forEach( function ( sectionData ) {\n\t\t\tvar section = new Section( sectionData );\n\t\t\tthis.sections.push( section );\n\t\t\tthis._sectionLookup[section.id] = section;\n\t\t}.bind( this ) );\n\t},\n\n\t/**\n\t * Return all the thumbnails in the article.\n\t * Images which have a class or link container (.image|.thumbimage)\n\t * that matches one of the items of the constant BLACKLISTED_THUMBNAIL_CLASS_SELECTORS\n\t * will be excluded.\n\t * A thumbnail nested inside one of these classes will still be returned.\n\t * e.g. `<div class=\"noviewer\"><a class=\"image\"><img></a></div>` is not a valid thumbnail\n\t * `<a class=\"image noviewer\"><img></a>` is not a valid thumbnail\n\t * `<a class=\"image\"><img class=\"noviewer\"></a>` is not a valid thumbnail\n\t * @memberof Page\n\t * @instance\n\t * @return {Thumbnail[]}\n\t */\n\tgetThumbnails: function () {\n\t\tvar $thumbs,\n\t\t\t$el = this.$el,\n\t\t\tblacklistSelector = '.' + BLACKLISTED_THUMBNAIL_CLASS_SELECTORS.join( ',.' ),\n\t\t\tthumbs = [];\n\n\t\tif ( !this._thumbs ) {\n\t\t\t$thumbs = $el.find( 'a.image, a.thumbimage' )\n\t\t\t\t.not( blacklistSelector );\n\n\t\t\t$thumbs.each( function () {\n\t\t\t\tvar $a = $el.find( this ),\n\t\t\t\t\t$lazyImage = $a.find( '.lazy-image-placeholder' ),\n\t\t\t\t\t// Parents need to be checked as well.\n\t\t\t\t\tvalid = $a.parents( blacklistSelector ).length === 0 &&\n\t\t\t\t\t\t$a.find( blacklistSelector ).length === 0,\n\t\t\t\t\tlegacyMatch = $a.attr( 'href' ).match( /title=([^/&]+)/ ),\n\t\t\t\t\tmatch = $a.attr( 'href' ).match( /[^/]+$/ );\n\n\t\t\t\t// filter out invalid lazy loaded images if so far image is valid\n\t\t\t\tif ( $lazyImage.length && valid ) {\n\t\t\t\t\t// if the regex matches it means the image has one of the classes\n\t\t\t\t\t// thus we must invert the result\n\t\t\t\t\tvalid = !new RegExp( '\\\\b(' + BLACKLISTED_THUMBNAIL_CLASS_SELECTORS.join( '|' ) + ')\\\\b' )\n\t\t\t\t\t\t.test( $lazyImage.data( 'class' ) );\n\t\t\t\t}\n\n\t\t\t\tif ( valid && ( legacyMatch || match ) ) {\n\t\t\t\t\tthumbs.push(\n\t\t\t\t\t\tnew Thumbnail( {\n\t\t\t\t\t\t\tel: $a,\n\t\t\t\t\t\t\tfilename: decodeURIComponent(\n\t\t\t\t\t\t\t\tlegacyMatch ? legacyMatch[1] : match[0]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} );\n\t\t\tthis._thumbs = thumbs;\n\t\t}\n\t\treturn this._thumbs;\n\t},\n\n\t/**\n\t * FIXME: Change function signature to take the anchor of the heading\n\t * @memberof Page\n\t * @instance\n\t * @param {string} id of the section as defined by MobileFormatter.\n\t * Note, that currently, this is different from\n\t * the PHP parser in that it relates to top-level sections.\n\t * For example, mf-section-1 would relate to section 1. See FIXME.\n\t * @return {Section}\n\t */\n\tgetSection: function ( id ) {\n\t\treturn this._sectionLookup[ id ];\n\t},\n\n\t/**\n\t * Obtain the list of high level (and grouped) sections.\n\t * Note that this list will not include subsections.\n\t * @memberof Page\n\t * @instance\n\t * @return {Array} of Section instances\n\t */\n\tgetSections: function () {\n\t\treturn this.sections;\n\t},\n\n\t/**\n\t * Returns a jQuery object representing all redlinks on the page.\n\t * @memberof Page\n\t * @instance\n\t * @return {jQuery.Object}\n\t */\n\tgetRedLinks: function () {\n\t\treturn this.$( '.new' );\n\t}\n} );\n\n/**\n * Create a Page object from an API response.\n *\n * @memberof Page\n * @param {Object} resp as representing a page in the API\n * @return {Page}\n */\nPage.newFromJSON = function ( resp ) {\n\tvar revision, displayTitle,\n\t\tthumb = resp.thumbnail,\n\t\tpageprops = resp.pageprops || {\n\t\t\tdisplaytitle: HTML.escape( resp.title )\n\t\t},\n\t\tterms = resp.terms;\n\n\tif ( pageprops || terms ) {\n\t\t// The label is either the display title or the label pageprop\n\t\t// (the latter used by Wikidata)\n\t\t// Long term we want to consolidate these.\n\t\t// Note that pageprops.displaytitle is HTML, while\n\t\t// terms.label[0] is plain text.\n\t\tdisplayTitle = terms && terms.label ?\n\t\t\tHTML.escape( terms.label[0] ) : pageprops.displaytitle;\n\t}\n\t// Add Wikidata descriptions if available (T101719)\n\tresp.wikidataDescription = resp.description || undefined;\n\n\tif ( thumb ) {\n\t\tresp.thumbnail.isLandscape = thumb.width > thumb.height;\n\t}\n\n\t// page may or may not exist.\n\tif ( resp.revisions && resp.revisions[0] ) {\n\t\trevision = resp.revisions[0];\n\t\tresp.lastModified = time.getLastModifiedMessage(\n\t\t\tnew Date( revision.timestamp ).getTime() / 1000,\n\t\t\trevision.user\n\t\t);\n\t}\n\n\treturn new Page(\n\t\tutil.extend( resp, {\n\t\t\tid: resp.pageid,\n\t\t\tisMissing: !!resp.missing,\n\t\t\turl: mw.util.getUrl( resp.title ),\n\t\t\tdisplayTitle: displayTitle // this is HTML!\n\t\t} )\n\t);\n};\n\n/**\n * Selector for matching headings\n *\n * @memberof Page\n */\nPage.HEADING_SELECTOR = HEADING_SELECTOR;\n\nmodule.exports = Page;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' );\n\n/**\n * A wrapper for creating an icon.\n * @class Icon\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Icon( options ) {\n\tif ( options.hasText ) {\n\t\toptions.modifier = 'mw-ui-icon-before';\n\t}\n\tif ( options.href ) {\n\t\toptions.tagName = 'a';\n\t}\n\tView.call( this, options );\n}\n\nmfExtend( Icon, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Icon\n\t * @instance\n\t */\n\tpreRender: function () {\n\t\tthis.setRotationClass();\n\t},\n\t/**\n\t * Internal method that sets the correct rotation class for the icon\n\t * based on the value of rotation\n\t * @memberof Icon\n\t * @instance\n\t * @private\n\t */\n\tsetRotationClass: function () {\n\t\tvar options = this.options;\n\t\tif ( options.rotation ) {\n\t\t\tswitch ( options.rotation ) {\n\t\t\t\tcase -180:\n\t\t\t\tcase 180:\n\t\t\t\t\toptions._rotationClass = 'mf-mw-ui-icon-rotate-flip';\n\t\t\t\t\tbreak;\n\t\t\t\tcase -90:\n\t\t\t\t\toptions._rotationClass = 'mf-mw-ui-icon-rotate-anti-clockwise';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 90:\n\t\t\t\t\toptions._rotationClass = 'mf-mw-ui-icon-rotate-clockwise';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Bad value for rotation given. Must be ±90, 0 or ±180.' );\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Icon\n\t * @instance\n\t */\n\tisTemplateMode: true,\n\t/**\n\t * @memberof Icon\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {boolean} defaults.hasText Whether the icon has text.\n\t * @property {boolean} defaults.isSmall Whether the icon should be small.\n\t * @property {string} [defaults.href] value of href attribute,\n\t *  when set tagName will default to anchor tag\n\t * @property {string} defaults.tagName The name of the tag in which the icon is wrapped.\n\t *  Defaults to 'a' when href option present.\n\t * @property {string} defaults.base String used as a base for generating class names.\n\t * Defaults to 'mw-ui-icon'.\n\t * @property {string} defaults.name Name of the icon.\n\t * @property {string} defaults.modifier Additional class name.\n\t * Defaults to 'mw-ui-icon-element'.\n\t * @property {string} defaults.title Tooltip text.\n\t * @property {boolean} defaults.rotation will rotate the icon by a certain number\n\t *  of degrees.\n\t *  Must be ±90, 0 or ±180 or will throw exception.\n\t */\n\tdefaults: {\n\t\trotation: 0,\n\t\thasText: false,\n\t\thref: undefined,\n\t\tglyphPrefix: 'mf',\n\t\ttagName: 'div',\n\t\tisSmall: false,\n\t\tbase: 'mw-ui-icon',\n\t\tname: '',\n\t\tmodifier: 'mw-ui-icon-element',\n\t\ttitle: ''\n\t},\n\t/**\n\t * Return the full class name that is required for the icon to render\n\t * @memberof Icon\n\t * @instance\n\t * @return {string}\n\t */\n\tgetClassName: function () {\n\t\treturn this.$el.attr( 'class' );\n\t},\n\t/**\n\t * Return the class that relates to the icon glyph\n\t * @memberof Icon\n\t * @instance\n\t * @return {string}\n\t */\n\tgetGlyphClassName: function () {\n\t\treturn this.options.base + '-' + this.options.glyphPrefix + '-' + this.options.name;\n\t},\n\t/**\n\t * Return the HTML representation of this view\n\t * @memberof Icon\n\t * @instance\n\t * @return {string}\n\t */\n\ttoHtmlString: function () {\n\t\treturn this.parseHTML( '<div>' ).append( this.$el ).html();\n\t},\n\ttemplate: mw.template.get( 'mobile.startup', 'icon.hogan' )\n} );\n\nmodule.exports = Icon;\n","var units = [ 'seconds', 'minutes', 'hours', 'days', 'months', 'years' ],\n\tutil = require( './util' ),\n\tlimits = [ 1, 60, 3600, 86400, 2592000, 31536000 ];\n\n/** @class time */\n\n/**\n * Calculate the correct unit of timestamp\n * @memberof time\n * @instance\n * @param {number} timestampDelta\n * @return {{value: number, unit: string}}\n */\nfunction timeAgo( timestampDelta ) {\n\tvar i = 0;\n\twhile ( i < limits.length && timestampDelta > limits[i + 1] ) {\n\t\t++i;\n\t}\n\treturn {\n\t\tvalue: Math.round( timestampDelta / limits[i] ),\n\t\tunit: units[i]\n\t};\n}\n\n/**\n * Calculate the correct unit of timestamp delta\n * @memberof time\n * @instance\n * @param {number} timestamp\n * @return {{value: number, unit: string}}\n */\nfunction getTimeAgoDelta( timestamp ) {\n\tvar currentTimestamp = Math.round( new Date().getTime() / 1000 );\n\n\treturn timeAgo( currentTimestamp - timestamp );\n}\n\n/**\n * Whether timestamp delta is less than a day old\n * @memberof time\n * @instance\n * @param {{value: number, unit: string}} delta Object of timestamp and its label\n * @return {boolean}\n */\nfunction isRecent( delta ) {\n\treturn [ 'seconds', 'minutes', 'hours' ].indexOf( delta.unit ) > -1;\n}\n\n/**\n * Is delta less than 10 seconds?\n * @memberof time\n * @instance\n * @param {{value: number, unit: string}} delta Object of timestamp and its label\n * @return {boolean}\n */\nfunction isNow( delta ) {\n\treturn delta.unit === 'seconds' && delta.value < 10;\n}\n\n/**\n * Return a message relating to the last modified relative time.\n * @memberof time\n * @instance\n * @param {number} ts timestamp\n * @param {string} username of the last user to modify the page\n * @param {string} [gender] of the last user to modify the page\n * @param {string} [historyUrl] url to the history page for the message, if omitted\n *  returns plain text string rather than html\n * @return {string}\n */\nfunction getLastModifiedMessage( ts, username, gender, historyUrl ) {\n\tvar delta, html,\n\t\tkeys = {\n\t\t\tseconds: 'mobile-frontend-last-modified-with-user-seconds',\n\t\t\tminutes: 'mobile-frontend-last-modified-with-user-minutes',\n\t\t\thours: 'mobile-frontend-last-modified-with-user-hours',\n\t\t\tdays: 'mobile-frontend-last-modified-with-user-days',\n\t\t\tmonths: 'mobile-frontend-last-modified-with-user-months',\n\t\t\tyears: 'mobile-frontend-last-modified-with-user-years'\n\t\t},\n\t\targs = [];\n\n\tgender = gender || 'unknown';\n\n\tdelta = getTimeAgoDelta( ts );\n\tif ( isNow( delta ) ) {\n\t\targs.push( 'mobile-frontend-last-modified-with-user-just-now', gender, username );\n\t} else {\n\t\targs.push( keys[ delta.unit ], gender, username,\n\t\t\tmw.language.convertNumber( delta.value )\n\t\t);\n\t}\n\n\targs.push(\n\t\thistoryUrl || '#',\n\t\t// Abuse PLURAL support to determine if the user is anonymous or not\n\t\tmw.language.convertNumber( username ? 1 : 0 ),\n\t\t// Our abuse of PLURAL support means we have to pass the relative URL\n\t\t// rather than construct it from a wikilink\n\t\tusername ? mw.util.getUrl( 'User:' + username ) : ''\n\t);\n\thtml = mw.message.apply( this, args ).parse();\n\tif ( historyUrl ) {\n\t\treturn html;\n\t} else {\n\t\treturn util.parseHTML( '<div>' ).html( html ).text();\n\t}\n}\n\n/**\n * Return a message relating to the registration date of the user\n * @memberof time\n * @instance\n * @param {string} ts timestamp\n * @param {string} [gender] of the last user editing this page\n * @return {string}\n */\nfunction getRegistrationMessage( ts, gender ) {\n\tvar delta, html,\n\t\tkeys = {\n\t\t\tseconds: 'mobile-frontend-joined-seconds',\n\t\t\tminutes: 'mobile-frontend-joined-minutes',\n\t\t\thours: 'mobile-frontend-joined-hours',\n\t\t\tdays: 'mobile-frontend-joined-days',\n\t\t\tmonths: 'mobile-frontend-joined-months',\n\t\t\tyears: 'mobile-frontend-joined-years'\n\t\t},\n\t\targs = [];\n\n\tgender = gender || 'unknown';\n\n\tdelta = getTimeAgoDelta( parseInt( ts, 10 ) );\n\tif ( isNow( delta ) ) {\n\t\targs.push( 'mobile-frontend-joined-just-now', gender );\n\t} else {\n\t\targs.push( keys[ delta.unit ], gender, mw.language.convertNumber( delta.value ) );\n\t}\n\thtml = mw.message.apply( this, args ).parse();\n\treturn html;\n}\n\nmodule.exports = {\n\tgetLastModifiedMessage: getLastModifiedMessage,\n\tgetRegistrationMessage: getRegistrationMessage,\n\ttimeAgo: timeAgo,\n\tgetTimeAgoDelta: getTimeAgoDelta,\n\tisNow: isNow,\n\tisRecent: isRecent\n};\n","/**\n * Class for managing modules\n *\n * A module in this context is essentially a Javascript class (not to be confused with\n * ResourceLoader modules).\n *\n * @class ModuleLoader\n * @extends OO.EventEmitter\n */\nfunction ModuleLoader() {\n\t/**\n\t * @property {Object} register of defined modules\n\t * @private\n\t */\n\tthis._register = {};\n\tOO.EventEmitter.call( this );\n}\n\nModuleLoader.prototype = {\n\t/**\n\t * Require (import) a module previously defined using define().\n\t * Searches core module registry using mw.loader.require before consulting\n\t * its own local registry. This method is deprecated, please do not use.\n\t * @memberof ModuleLoader\n\t * @instance\n\t * @param {string} id Required module id.\n\t * @return {Object} Required module, can be any JavaScript object.\n\t */\n\trequire: function ( id ) {\n\t\tvar module, args,\n\t\t\tregistry = this._register;\n\n\t\t/**\n\t\t * @return {Object} Module\n\t\t */\n\t\tfunction localRequire() {\n\t\t\tif ( !Object.hasOwnProperty.call( registry, id ) ) {\n\t\t\t\tthrow new Error( 'MobileFrontend Module not found: ' + id );\n\t\t\t}\n\t\t\treturn registry[ id ];\n\t\t}\n\t\targs = id.split( '/' );\n\t\ttry {\n\t\t\tmodule = mw.loader.require( args[0] );\n\t\t\tif ( module[ args[1] ] ) {\n\t\t\t\treturn module[ args[1] ];\n\t\t\t} else {\n\t\t\t\treturn localRequire();\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\treturn localRequire();\n\t\t}\n\t},\n\n\t/**\n\t * Define a module which can be later required (imported) using require().\n\t * @memberof ModuleLoader\n\t * @instance\n\t * @param {string} id Defined module id.\n\t * @param {Object} obj Defined module body, can be any JavaScript object.\n\t * @return {Object}\n\t */\n\tdefine: function ( id, obj ) {\n\t\tvar self = this;\n\n\t\tif ( Object.hasOwnProperty.call( this._register, id ) ) {\n\t\t\tthrow new Error( 'Module already exists: ' + id );\n\t\t}\n\t\tthis._register[ id ] = obj;\n\t\t// return an object of additionally functions to do with the registered module\n\t\treturn {\n\t\t\t/**\n\t\t\t * @see ModuleLoader#deprecate\n\t\t\t * @param {string} deprecatedId Defined module id, which is deprecated.\n\t\t\t * @ignore\n\t\t\t */\n\t\t\tdeprecate: function ( deprecatedId ) {\n\t\t\t\tself.deprecate( deprecatedId, obj, id );\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t * Deprecate a module and give an replacement (if there is any).\n\t * @memberof ModuleLoader\n\t * @instance\n\t * @param {string} id Defined module id, which is deprecated.\n\t * @param {Object} obj Defined module body, can be any JavaScript object.\n\t * @param {string} [replacement] Give an optional replacement for this module (which\n\t * needs to be already defined!)\n\t */\n\tdeprecate: function ( id, obj, replacement ) {\n\t\tvar msg;\n\t\tif ( replacement ) {\n\t\t\t// add an alternative for this module, if any given\n\t\t\tmsg = 'Use ' + replacement + ' instead.';\n\t\t}\n\t\t// register it as a deprecated one\n\t\tmw.log.deprecate( this._register, id, obj, msg );\n\t}\n};\n\nOO.mixinClass( ModuleLoader, OO.EventEmitter );\n\nmodule.exports = ModuleLoader;\n","var\n\tmfExtend = require( './mfExtend' ),\n\ticons = require( './icons' ),\n\tView = require( './View' );\n\n/**\n * Builds a section of a page\n * @class Section\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Section( options ) {\n\tvar self = this;\n\toptions.tag = 'h' + options.level;\n\tthis.line = options.line;\n\tthis.text = options.text;\n\tthis.hasReferences = options.hasReferences || false;\n\tthis.id = options.id || null;\n\tthis.anchor = options.anchor;\n\tthis.subsections = [];\n\t( options.subsections || [] ).forEach( function ( section ) {\n\t\tself.subsections.push( new Section( section ) );\n\t} );\n\tView.call( this, options );\n}\n\nmfExtend( Section, View, {\n\ttemplate: mw.template.get( 'mobile.startup', 'Section.hogan' ),\n\t/**\n\t * @memberof Section\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.text Section text.\n\t * @property {string} defaults.spinner HTML of the spinner icon.\n\t */\n\tdefaults: {\n\t\tline: undefined,\n\t\ttext: '',\n\t\tspinner: icons.spinner().toHtmlString()\n\t}\n} );\n\nmodule.exports = Section;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' );\n\n/**\n * Representation of a thumbnail\n *\n * @class Thumbnail\n * @extends View\n */\nfunction Thumbnail() {\n\tView.apply( this, arguments );\n}\n\nmfExtend( Thumbnail, View, {\n\t/**\n\t * @memberof Thumbnail\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.filename uri decoded filename including File: prefix\n\t *  associated with thumbnail\n\t */\n\tdefaults: {\n\t\tfilename: undefined\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Thumbnail\n\t * @instance\n\t */\n\tisBorderBox: false,\n\t/**\n\t * @inheritdoc\n\t * @memberof Thumbnail\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tthis.options.description = this.$el.siblings( '.thumbcaption' ).text();\n\t},\n\t/**\n\t * Obtain description for thumbnail\n\t * @memberof Thumbnail\n\t * @instance\n\t * @return {string}\n\t */\n\tgetDescription: function () {\n\t\treturn this.options.description;\n\t},\n\t/**\n\t * Return the page title for the thumbnail\n\t * @memberof Thumbnail\n\t * @instance\n\t * @return {string}\n\t */\n\tgetFileName: function () {\n\t\treturn this.options.filename;\n\t}\n} );\n\nmodule.exports = Thumbnail;\n","var ModuleLoader = require( './modules' );\n\nmodule.exports = new ModuleLoader();\n","/* This module defines several types of cache classes to use in other\n * modules.\n * The interface, that all types use, is kept synchronous driven by current\n * usage patterns, but will need to be revisited in case usage patterns\n * suggest we need asynchronous caches.\n */\n\n/**\n * In memory cache implementation\n *\n * @class MemoryCache\n */\nfunction MemoryCache() {\n\tthis._cache = {};\n}\n\n/**\n * Retrieve a cached value from a key\n * @memberof MemoryCache\n * @instance\n * @param {string} key\n * @return {Mixed}\n */\nMemoryCache.prototype.get = function ( key ) {\n\treturn this._cache[ key ];\n};\n\n/**\n * Cache a value by key\n * @memberof MemoryCache\n * @instance\n * @param {string} key\n * @param {Mixed} value\n */\nMemoryCache.prototype.set = function ( key, value ) {\n\tthis._cache[ key ] = value;\n};\n\n/**\n * Null object cache implementation\n *\n * @class NoCache\n */\nfunction NoCache() { }\n\n/**\n * NoOp\n * @memberof NoCache\n * @instance\n */\nNoCache.prototype.get = function () { };\n\n/**\n * NoOp\n * @memberof NoCache\n * @instance\n */\nNoCache.prototype.set = function () { };\n\nmodule.exports = {\n\tMemoryCache: MemoryCache,\n\tNoCache: NoCache\n};\n","var\n\tutil = require( './util' ),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * Manages opening and closing overlays when the URL hash changes to one\n * of the registered values (see OverlayManager.add()).\n *\n * This allows overlays to function like real pages, with similar browser back/forward\n * and refresh behavior.\n *\n * @class OverlayManager\n * @param {Router} router\n */\nfunction OverlayManager( router ) {\n\trouter.on( 'route', this._checkRoute.bind( this ) );\n\tthis.router = router;\n\t// use an object instead of an array for entries so that we don't\n\t// duplicate entries that already exist\n\tthis.entries = {};\n\t// stack of all the open overlays, stack[0] is the latest one\n\tthis.stack = [];\n\tthis.hideCurrent = true;\n}\n\nmfExtend( OverlayManager, {\n\t/**\n\t * Don't try to hide the active overlay on a route change event triggered\n\t * by hiding another overlay.\n\t * Called when hiding an overlay.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t */\n\t_onHideOverlay: function () {\n\t\tthis.hideCurrent = false;\n\n\t\tthis.router.back();\n\t},\n\n\t/**\n\t * Show the overlay and bind the '_om_hide' event to _onHideOverlay.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to show\n\t */\n\t_showOverlay: function ( overlay ) {\n\t\t// if hidden using overlay (not hardware) button, update the state\n\t\toverlay.once( '_om_hide', this._onHideOverlay.bind( this ) );\n\n\t\toverlay.show();\n\t},\n\n\t/**\n\t * Hide overlay\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to hide\n\t * @return {boolean} Whether the overlay has been hidden\n\t */\n\t_hideOverlay: function ( overlay ) {\n\t\tvar result;\n\n\t\t// remove the callback for updating state when overlay closed using\n\t\t// overlay close button\n\t\toverlay.off( '_om_hide' );\n\n\t\tresult = overlay.hide( this.stack.length > 1 );\n\n\t\t// if closing prevented, reattach the callback\n\t\tif ( !result ) {\n\t\t\toverlay.once( '_om_hide', this._onHideOverlay.bind( this ) );\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Show match's overlay if match is not null.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Object|null} match Object with factory function's result. null if no match.\n\t */\n\t_processMatch: function ( match ) {\n\t\tvar factoryResult,\n\t\t\tself = this;\n\n\t\t/**\n\t\t * Attach an event to the overlays hide event\n\t\t * @param {Overlay} overlay\n\t\t */\n\t\tfunction attachHideEvent( overlay ) {\n\t\t\toverlay.on( 'hide', function () {\n\t\t\t\toverlay.emit( '_om_hide' );\n\t\t\t} );\n\t\t}\n\n\t\tif ( match ) {\n\t\t\tif ( match.overlay ) {\n\t\t\t\t// if the match is an overlay that was previously opened, reuse it\n\t\t\t\tself._showOverlay( match.overlay );\n\t\t\t} else {\n\t\t\t\t// else create an overlay using the factory function result (either\n\t\t\t\t// a promise or an overlay)\n\t\t\t\tfactoryResult = match.factoryResult;\n\t\t\t\t// http://stackoverflow.com/a/13075985/365238\n\t\t\t\tif ( typeof factoryResult.promise === 'function' ) {\n\t\t\t\t\tfactoryResult.then( function ( overlay ) {\n\t\t\t\t\t\tmatch.overlay = overlay;\n\t\t\t\t\t\tattachHideEvent( overlay );\n\t\t\t\t\t\tself._showOverlay( overlay );\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tmatch.overlay = factoryResult;\n\t\t\t\t\tattachHideEvent( match.overlay );\n\t\t\t\t\tself._showOverlay( factoryResult );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * A callback for Router's `route` event.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {jQuery.Event} ev Event object.\n\t */\n\t_checkRoute: function ( ev ) {\n\t\tvar\n\t\t\tcurrent = this.stack[0],\n\t\t\tmatch;\n\n\t\t// When entering an overlay for the first time,\n\t\t// the manager should remember the user's scroll position\n\t\t// overlays always open at top of page\n\t\t// and we'll want to restore it later.\n\t\t// This should happen before the call to _matchRoute which will \"show\" the overlay.\n\t\t// The Overlay has similar logic for overlays that are not managed via the overlay.\n\t\tif ( !current ) {\n\t\t\tthis.scrollTop = window.pageYOffset;\n\t\t}\n\n\t\tmatch = Object.keys( this.entries ).reduce( function ( m, id ) {\n\t\t\treturn m || this._matchRoute( ev.path, this.entries[ id ] );\n\t\t}.bind( this ), null );\n\n\t\t// if there is an overlay in the stack and it's opened, try to close it\n\t\tif (\n\t\t\tcurrent &&\n\t\t\tcurrent.overlay !== undefined &&\n\t\t\tthis.hideCurrent &&\n\t\t\t!this._hideOverlay( current.overlay )\n\t\t) {\n\t\t\t// if hide prevented, prevent route change event\n\t\t\tev.preventDefault();\n\t\t} else if ( !match ) {\n\t\t\t// if hidden and no new matches, reset the stack\n\t\t\tthis.stack = [];\n\t\t\t// restore the scroll position.\n\t\t\twindow.scrollTo( window.pageXOffset, this.scrollTop );\n\t\t}\n\n\t\tthis.hideCurrent = true;\n\t\tthis._processMatch( match );\n\t},\n\n\t/**\n\t * Check if a given path matches one of the entries.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {string} path Path (hash) to check.\n\t * @param {Object} entry Entry object created in OverlayManager#add.\n\t * @return {Object|null} Match object with factory function's result.\n\t *  Returns null if no match.\n\t */\n\t_matchRoute: function ( path, entry ) {\n\t\tvar\n\t\t\tnext,\n\t\t\tmatch = path.match( entry.route ),\n\t\t\tprevious = this.stack[1],\n\t\t\tself = this;\n\n\t\t/**\n\t\t * Returns object to add to stack\n\t\t * @method\n\t\t * @ignore\n\t\t * @return {Object}\n\t\t */\n\t\tfunction getNext() {\n\t\t\treturn {\n\t\t\t\tpath: path,\n\t\t\t\tfactoryResult: entry.factory.apply( self, match.slice( 1 ) )\n\t\t\t};\n\t\t}\n\n\t\tif ( match ) {\n\t\t\t// if previous stacked overlay's path matches, assume we're going back\n\t\t\t// and reuse a previously opened overlay\n\t\t\tif ( previous && previous.path === path ) {\n\t\t\t\tif ( previous.overlay && previous.overlay.hasLoadError ) {\n\t\t\t\t\tself.stack.shift();\n\t\t\t\t\t// Loading of overlay failed so we want to replace it with a new\n\t\t\t\t\t// overlay (which will try to load successfully)\n\t\t\t\t\tself.stack[0] = getNext();\n\t\t\t\t\treturn self.stack[0];\n\t\t\t\t}\n\n\t\t\t\tself.stack.shift();\n\t\t\t\treturn previous;\n\t\t\t} else {\n\t\t\t\tnext = getNext();\n\t\t\t\tif ( this.stack[0] && next.path === this.stack[0].path ) {\n\t\t\t\t\t// current overlay path is same as path to check which means overlay\n\t\t\t\t\t// is attempting to refresh so just replace current overlay with new\n\t\t\t\t\t// overlay\n\t\t\t\t\tself.stack[0] = next;\n\t\t\t\t} else {\n\t\t\t\t\tself.stack.unshift( next );\n\t\t\t\t}\n\t\t\t\treturn next;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Add an overlay that should be shown for a specific fragment identifier.\n\t *\n\t * The following code will display an overlay whenever a user visits a URL that\n\t * end with '#/hi/name'. The value of `name` will be passed to the overlay.\n\t *\n\t *     @example\n\t *     overlayManager.add( /\\/hi\\/(.*)/, function ( name ) {\n\t *       var factoryResult = $.Deferred();\n\t *\n\t *       mw.using( 'mobile.HiOverlay', function () {\n\t *         var HiOverlay = M.require( 'HiOverlay' );\n\t *         factoryResult.resolve( new HiOverlay( { name: name } ) );\n\t *       } );\n\t *\n\t *       return factoryResult;\n\t *     } );\n\t *\n\t * @memberof OverlayManager\n\t * @instance\n\t * @param {RegExp} route route regular expression, optionally with parameters.\n\t * @param {Function} factory a function returning an overlay or a $.Deferred\n\t * which resolves to an overlay.\n\t */\n\tadd: function ( route, factory ) {\n\t\tvar self = this,\n\t\t\tentry = {\n\t\t\t\troute: route,\n\t\t\t\tfactory: factory\n\t\t\t};\n\n\t\tthis.entries[route] = entry;\n\t\t// Check if overlay should be shown for the current path.\n\t\t// The DOM must fully load before we can show the overlay because Overlay relies on it.\n\t\tutil.docReady( function () {\n\t\t\tself._processMatch( self._matchRoute( self.router.getPath(), entry ) );\n\t\t} );\n\t},\n\n\t/**\n\t * Replace the currently displayed overlay with a new overlay without changing the\n\t * URL. This is useful for when you want to switch overlays, but don't want to\n\t * change the back button or close box behavior.\n\t *\n\t * @memberof OverlayManager\n\t * @instance\n\t * @param {Object} overlay The overlay to display\n\t */\n\treplaceCurrent: function ( overlay ) {\n\t\tif ( this.stack.length === 0 ) {\n\t\t\tthrow new Error( 'Trying to replace OverlayManager\\'s current overlay, but stack is empty' );\n\t\t}\n\t\tthis._hideOverlay( this.stack[0].overlay );\n\t\tthis.stack[0].overlay = overlay;\n\t\tthis._showOverlay( overlay );\n\t}\n} );\n\nmodule.exports = OverlayManager;\n","var sectionTemplate = mw.template.get( 'mobile.startup', 'Section.hogan' ),\n\tutil = require( './util.js' ),\n\tcache = {};\n\n/**\n * Add child to listOfSections if the level of child is the same as the last\n * child of listOfSections, otherwise add it to the children of the last\n * section of listOfSections. If listOfSections is empty, just add child to it.\n * @private\n * @param {Array} listOfSections - Array of section ids\n * @param {Object} child - Section to be added to listOfSections\n */\nfunction assignToParent( listOfSections, child ) {\n\tvar section;\n\tif ( listOfSections.length === 0 ) {\n\t\tlistOfSections.push( child );\n\t} else {\n\t\t// take a look at the last child\n\t\tsection = listOfSections[listOfSections.length - 1];\n\t\t// If the level is the same as another section in this list it is a sibling\n\t\tif ( parseInt( section.level, 10 ) === parseInt( child.level, 10 ) ) {\n\t\t\tlistOfSections.push( child );\n\t\t} else {\n\t\t\t// Otherwise take a look at that sections children recursively\n\t\t\tassignToParent( section.subsections, child );\n\t\t}\n\t}\n}\n\n/**\n * Order sections hierarchically\n * @private\n * @param {Array} sections Array of section objects created from response HTML\n * @return {Array} Ordered array of sections\n */\nfunction transformSections( sections ) {\n\tvar sectionLevels = sections.map( function ( s ) { return s.level; } ),\n\t\texistingSectionLevels = sectionLevels.filter( function ( level ) {\n\t\t\treturn !!level;\n\t\t} ),\n\t\tcollapseLevel = Math.min.apply( this, existingSectionLevels ).toString(),\n\t\tlastSection,\n\t\tresult = [];\n\n\t// if the first section level is not equal to collapseLevel, this first\n\t// section will not have a parent and will be appended to the result.\n\tsections.forEach( function ( section ) {\n\t\tif ( section.line !== undefined ) {\n\t\t\tsection.line = section.line.replace( /<\\/?a\\b[^>]*>/g, '' );\n\t\t}\n\t\tsection.subsections = [];\n\n\t\tif (\n\t\t\t!lastSection ||\n\t\t\t(\n\t\t\t\t!section.level ||\n\t\t\t\tsection.level === collapseLevel\n\t\t\t) ||\n\t\t\t// make sure lastSections first child's level is bigger than section.level\n\t\t\t(\n\t\t\t\tlastSection.subsections.length &&\n\t\t\t\tlastSection.subsections[0].level > section.level\n\t\t\t) ||\n\t\t\t// also make sure section.level is not bigger than the lastSection.level\n\t\t\t(\n\t\t\t\tlastSection.level &&\n\t\t\t\tlastSection.level >= section.level\n\t\t\t)\n\t\t) {\n\t\t\tresult.push( section );\n\t\t\tlastSection = section;\n\t\t} else {\n\t\t\tassignToParent( lastSection.subsections, section );\n\t\t\tlastSection.text += sectionTemplate.render( section );\n\t\t}\n\t} );\n\n\treturn result;\n}\n\n/**\n * API for providing Page data\n * @class PageGateway\n * @param {mw.Api} api\n */\nfunction PageGateway( api ) {\n\tthis.api = api;\n}\n\nPageGateway.prototype = {\n\t/**\n\t * Retrieve a page from the api\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page to be retrieved\n\t * @param {string} endpoint an alternative api url to retrieve the page from\n\t * @param {boolean} leadOnly When set only the lead section content is returned\n\t * @return {jQuery.Deferred} with parameter page data that can be passed to a Page view\n\t */\n\tgetPage: function ( title, endpoint, leadOnly ) {\n\t\tvar timestamp,\n\t\t\td = util.Deferred(),\n\t\t\toptions = endpoint ? {\n\t\t\t\turl: endpoint,\n\t\t\t\tdataType: 'jsonp'\n\t\t\t} : {},\n\t\t\tprotection = {\n\t\t\t\tedit: [ '*' ]\n\t\t\t};\n\n\t\tif ( !cache[title] ) {\n\t\t\tcache[title] = this.api.get( {\n\t\t\t\taction: 'mobileview',\n\t\t\t\tpage: title,\n\t\t\t\tvariant: mw.config.get( 'wgPageContentLanguage' ),\n\t\t\t\tredirect: 'yes',\n\t\t\t\tprop: 'id|sections|text|lastmodified|lastmodifiedby|languagecount|hasvariants|protection|displaytitle|revision',\n\t\t\t\tnoheadings: 'yes',\n\t\t\t\tsectionprop: 'level|line|anchor',\n\t\t\t\tsections: leadOnly ? 0 : 'all'\n\t\t\t}, options ).then( function ( resp ) {\n\t\t\t\tvar sections, lastModified, resolveObj, mv;\n\n\t\t\t\tif ( resp.error ) {\n\t\t\t\t\treturn d.reject( resp.error );\n\t\t\t\t} else if ( !resp.mobileview.sections ) {\n\t\t\t\t\treturn d.reject( 'No sections' );\n\t\t\t\t} else {\n\t\t\t\t\tmv = resp.mobileview;\n\t\t\t\t\tsections = transformSections( mv.sections );\n\t\t\t\t\t// Assume the timestamp is in the form TS_ISO_8601\n\t\t\t\t\t// and we don't care about old browsers\n\t\t\t\t\t// change to seconds to be consistent with PHP\n\t\t\t\t\ttimestamp = new Date( mv.lastmodified ).getTime() / 1000;\n\t\t\t\t\tlastModified = mv.lastmodifiedby;\n\n\t\t\t\t\t// FIXME: [API] the API sometimes returns an object and sometimes an array\n\t\t\t\t\t// There are various quirks with the format of protection level\n\t\t\t\t\t// as returned by api.\n\t\t\t\t\t// Also it is usually incomplete - if something is missing this means\n\t\t\t\t\t// that it has no protection level.\n\t\t\t\t\t// When an array this means there is no protection level set.\n\t\t\t\t\t// To keep the data type consistent either use the predefined\n\t\t\t\t\t// protection level,\n\t\t\t\t\t// or extend it with what is returned by API.\n\t\t\t\t\tprotection = Array.isArray( mv.protection ) ?\n\t\t\t\t\t\tprotection :\n\t\t\t\t\t\tutil.extend( protection, mv.protection );\n\n\t\t\t\t\tresolveObj = {\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tid: mv.id,\n\t\t\t\t\t\trevId: mv.revId,\n\t\t\t\t\t\tprotection: protection,\n\t\t\t\t\t\tlead: sections[0].text,\n\t\t\t\t\t\tsections: sections.slice( 1 ),\n\t\t\t\t\t\tisMainPage: mv.mainpage !== undefined,\n\t\t\t\t\t\thistoryUrl: mw.util.getUrl( title, {\n\t\t\t\t\t\t\taction: 'history'\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\tlastModifiedTimestamp: timestamp,\n\t\t\t\t\t\tlanguageCount: mv.languagecount,\n\t\t\t\t\t\thasVariants: mv.hasvariants !== undefined,\n\t\t\t\t\t\tdisplayTitle: mv.displaytitle\n\t\t\t\t\t};\n\t\t\t\t\t// Add non-anonymous user information\n\t\t\t\t\tif ( lastModified ) {\n\t\t\t\t\t\tutil.extend( resolveObj, {\n\t\t\t\t\t\t\tlastModifiedUserName: lastModified.name,\n\t\t\t\t\t\t\tlastModifiedUserGender: lastModified.gender\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t\t// FIXME: Return a Page class here\n\t\t\t\t\treturn resolveObj;\n\t\t\t\t}\n\t\t\t}, function ( msg ) {\n\t\t\t\treturn d.reject( msg );\n\t\t\t} );\n\t\t}\n\n\t\treturn cache[title];\n\t},\n\n\t/**\n\t * Invalidate the internal cache for a given page\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page who's cache you want to invalidate\n\t */\n\tinvalidatePage: function ( title ) {\n\t\tdelete cache[title];\n\t},\n\n\t/**\n\t * Gets language variant list for a page; helper function for getPageLanguages()\n\t * @memberof PageGateway\n\t * @instance\n\t * @private\n\t * @param  {string} title Name of the page to obtain variants for\n\t * @param  {Object} data Data from API\n\t * @return {Array|boolean} List of language variant objects or false if no variants exist\n\t */\n\t_getLanguageVariantsFromApiResponse: function ( title, data ) {\n\t\tvar generalData = data.query.general,\n\t\t\tvariantPath = generalData.variantarticlepath,\n\t\t\tvariants = [];\n\n\t\tif ( !generalData.variants ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Create the data object for each variant and store it\n\t\tObject.keys( generalData.variants ).forEach( function ( index ) {\n\t\t\tvar item = generalData.variants[ index ],\n\t\t\t\tvariant = {\n\t\t\t\t\tautonym: item.name,\n\t\t\t\t\tlang: item.code\n\t\t\t\t};\n\n\t\t\tif ( variantPath ) {\n\t\t\t\tvariant.url = variantPath\n\t\t\t\t\t.replace( '$1', title )\n\t\t\t\t\t.replace( '$2', item.code );\n\t\t\t} else {\n\t\t\t\tvariant.url = mw.util.getUrl( title, {\n\t\t\t\t\tvariant: item.code\n\t\t\t\t} );\n\t\t\t}\n\t\t\tvariants.push( variant );\n\t\t} );\n\n\t\treturn variants;\n\t},\n\n\t/**\n\t * Retrieve available languages for a given title\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page languages should be retrieved for\n\t * @param {string} [language] when provided the names of the languages returned\n\t *  will be translated additionally into this language.\n\t * @return {jQuery.Deferred} which is called with an object containing langlinks\n\t * and variant links as defined @ https://en.m.wikipedia.org/w/api.php?action=help&modules=query%2Blanglinks\n\t */\n\tgetPageLanguages: function ( title, language ) {\n\t\tvar self = this,\n\t\t\targs = {\n\t\t\t\taction: 'query',\n\t\t\t\tmeta: 'siteinfo',\n\t\t\t\tsiprop: 'general',\n\t\t\t\tprop: 'langlinks',\n\t\t\t\tlllimit: 'max',\n\t\t\t\ttitles: title,\n\t\t\t\tformatversion: 2\n\t\t\t};\n\n\t\tif ( language ) {\n\t\t\targs.llprop = 'url|autonym|langname';\n\t\t\targs.llinlanguagecode = language;\n\t\t} else {\n\t\t\targs.llprop = 'url|autonym';\n\t\t}\n\t\treturn this.api.get( args ).then( function ( resp ) {\n\t\t\treturn {\n\t\t\t\tlanguages: resp.query.pages[0].langlinks || [],\n\t\t\t\tvariants: self._getLanguageVariantsFromApiResponse( title, resp )\n\t\t\t};\n\t\t}, function () {\n\t\t\treturn util.Deferred().reject();\n\t\t} );\n\t},\n\n\t/**\n\t * Extract sections from headings in $el\n\t * @memberof PageGateway\n\t * @instance\n\t * @private\n\t * @param {jQuery.Object} $el object from which sections are extracted\n\t * @return {Array} Array of section objects created from headings in $el\n\t * FIXME: Where's a better place for getSectionsFromHTML and this function to live?\n\t * Answer: Possibly Page.js\n\t */\n\t_getAPIResponseFromHTML: function ( $el ) {\n\t\t// FIXME: use Page.HEADING_SELECTOR\n\t\tvar $headings = $el.find( 'h1,h2,h3,h4,h5,h6' ),\n\t\t\tsections = [];\n\n\t\t$headings.each( function () {\n\t\t\tvar level = this.tagName.substr( 1 ),\n\t\t\t\t$span = $el.find( this ).find( '.mw-headline' );\n\n\t\t\tif ( $span.length ) {\n\t\t\t\tsections.push( {\n\t\t\t\t\tlevel: level,\n\t\t\t\t\tline: $span.html(),\n\t\t\t\t\tanchor: $span.attr( 'id' ) || '',\n\t\t\t\t\ttext: ''\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t\treturn sections;\n\t},\n\n\t/**\n\t * Order sections hierarchically\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {jQuery.Object} $el object from which sections are extracted\n\t * @return {Array} Ordered array of sections\n\t */\n\tgetSectionsFromHTML: function ( $el ) {\n\t\treturn transformSections( this._getAPIResponseFromHTML( $el ) );\n\t}\n};\n\nmodule.exports = PageGateway;\n","var\n\tbrowser = require( './Browser' ).getSingleton(),\n\tView = require( './View' ),\n\tutil = require( './util' ),\n\tPage = require( './Page' ),\n\tDeferred = util.Deferred,\n\twhen = util.when,\n\ticons = require( './icons' ),\n\tviewport = mw.viewport,\n\tspinner = icons.spinner(),\n\tmfExtend = require( './mfExtend' ),\n\tM = require( './moduleSingleton' );\n\n/**\n * Get the id of the section $el belongs to.\n * @param {jQuery.Object} $el\n * @return {string|null} either the anchor (id attribute of the section heading\n *  or null if none found)\n */\nfunction getSectionId( $el ) {\n\tvar id,\n\t\thSelector = Page.HEADING_SELECTOR,\n\t\t$parent = $el.parent(),\n\t\t// e.g. matches Subheading in\n\t\t// <h2>H</h2><div><h3 id=\"subheading\">Subh</h3><a class=\"element\"></a></div>\n\t\t$heading = $el.prevAll( hSelector ).eq( 0 );\n\n\tif ( $heading.length ) {\n\t\tid = $heading.find( '.mw-headline' ).attr( 'id' );\n\t\tif ( id ) {\n\t\t\treturn id;\n\t\t}\n\t}\n\tif ( $parent.length ) {\n\t\t// if we couldnt find a sibling heading, check the sibling of the parents\n\t\t// consider <div><h2 /><div><$el/></div></div>\n\t\treturn getSectionId( $parent );\n\t} else {\n\t\treturn null;\n\t}\n}\n\n/**\n * Representation of the current skin being rendered.\n *\n * @class Skin\n * @extends View\n * @uses Browser\n * @uses Page\n * @fires Skin#click\n * @fires Skin#references-loaded\n * @fires Skin#changed\n *\n * @param {Object} options Configuration options\n */\nfunction Skin( options ) {\n\tvar self = this;\n\n\tthis.page = options.page;\n\tthis.name = options.name;\n\tif ( options.mainMenu ) {\n\t\tthis.mainMenu = options.mainMenu;\n\t\tmw.log.warn( 'Skin: Use of mainMenu is deprecated.' );\n\t}\n\tView.call( this, options );\n\tthis.referencesGateway = options.referencesGateway;\n\n\tif (\n\t\tmw.config.get( 'wgMFLazyLoadImages' )\n\t) {\n\t\tutil.docReady( function () {\n\t\t\tself.setupImageLoading();\n\t\t} );\n\t}\n\n\tif ( mw.config.get( 'wgMFLazyLoadReferences' ) ) {\n\t\tM.on( 'before-section-toggled', this.lazyLoadReferences.bind( this ) );\n\t}\n}\n\nmfExtend( Skin, View, {\n\t/**\n\t * Skin contains components that we do not control\n\t * @inheritdoc\n\t * @memberof Skin\n\t * @instance\n\t */\n\tisBorderBox: false,\n\t/**\n\t * @memberof Skin\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {Page} defaults.page page the skin is currently rendering\n\t * @property {ReferencesGateway} defaults.referencesGateway instance of references gateway\n\t */\n\tdefaults: {\n\t\tpage: undefined\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Skin\n\t * @instance\n\t */\n\tevents: {},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Skin\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar $el = this.$el;\n\t\tif ( browser.supportsAnimations() ) {\n\t\t\t$el.addClass( 'animations' );\n\t\t}\n\t\tif ( browser.supportsTouchEvents() ) {\n\t\t\t$el.addClass( 'touch-events' );\n\t\t}\n\t\tutil.parseHTML( '<div class=\"transparent-shield cloaked-element\">' )\n\t\t\t.appendTo( $el.find( '#mw-mf-page-center' ) );\n\t\t/**\n\t\t * Fired when appearance of skin changes.\n\t\t * @event Skin#changed\n\t\t */\n\t\tthis.emit( 'changed' );\n\n\t\t/**\n\t\t * Fired when the skin is clicked.\n\t\t * @event Skin#click\n\t\t */\n\t\tthis.$( '#mw-mf-page-center' ).on( 'click', this.emit.bind( this, 'click' ) );\n\t},\n\t/**\n\t * Get images that have not yet been loaded in the page\n\t * @memberof Skin\n\t * @instance\n\t * @param {jQuery.Object} [$container] The container that should be\n\t *  searched for image placeholders. Defaults to \"#content\".\n\t * @return {Array} of unloaded image placeholders in the page\n\t */\n\tgetUnloadedImages: function ( $container ) {\n\t\t$container = $container || this.$( '#content' );\n\t\treturn $container.find( '.lazy-image-placeholder' ).toArray();\n\t},\n\t/**\n\t * Setup listeners to watch unloaded images and load them into the page\n\t * as and when they are needed.\n\t * @memberof Skin\n\t * @instance\n\t * @param {jQuery.Object} [$container] The container that should be\n\t *  searched for image placeholders. Defaults to \"#content\".\n\t * @return {jQuery.Deferred} which will be resolved when the attempts to\n\t *  load all images subject to loading have been completed.\n\t */\n\tsetupImageLoading: function ( $container ) {\n\t\tvar self = this,\n\t\t\toffset = util.getWindow().height() * 1.5,\n\t\t\tloadImagesList = this.loadImagesList.bind( this ),\n\t\t\timagePlaceholders = this.getUnloadedImages( $container );\n\n\t\t/**\n\t\t * Check whether an image should be loaded based on its proximity to the\n\t\t * viewport; and whether it is displayed to the user.\n\t\t * @param {jQuery.Object} $placeholder\n\t\t * @return {boolean}\n\t\t */\n\t\tfunction shouldLoadImage( $placeholder ) {\n\t\t\treturn viewport.isElementCloseToViewport( $placeholder[0], offset ) &&\n\t\t\t\t// If a placeholder is an inline element without a height attribute set\n\t\t\t\t// it will record as hidden\n\t\t\t\t// to circumvent this we also need to test the height (see T143768).\n\t\t\t\t( $placeholder.is( ':visible' ) || $placeholder.height() === 0 );\n\t\t}\n\n\t\t/**\n\t\t * Load remaining images in viewport\n\t\t * @return {jQuery.Deferred}\n\t\t */\n\t\tfunction _loadImages() {\n\t\t\tvar images = [];\n\t\t\t// Filter unloaded images to only the images that still need to be loaded\n\t\t\timagePlaceholders = util.grep( imagePlaceholders, function ( placeholder ) {\n\t\t\t\tvar $placeholder = self.$( placeholder );\n\t\t\t\t// Check length to ensure the image is still in the DOM.\n\t\t\t\tif ( $placeholder.length && shouldLoadImage( $placeholder ) ) {\n\t\t\t\t\timages.push( placeholder );\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} );\n\n\t\t\t// When no images are left unbind all events\n\t\t\tif ( !imagePlaceholders.length ) {\n\t\t\t\tM.off( 'scroll:throttled', _loadImages );\n\t\t\t\tM.off( 'resize:throttled', _loadImages );\n\t\t\t\tM.off( 'section-toggled', _loadImages );\n\t\t\t\tself.off( 'changed', _loadImages );\n\t\t\t}\n\n\t\t\t// load any remaining images.\n\t\t\treturn loadImagesList( images );\n\t\t}\n\n\t\tM.on( 'scroll:throttled', _loadImages );\n\t\tM.on( 'resize:throttled', _loadImages );\n\t\tM.on( 'section-toggled', _loadImages );\n\t\tthis.on( 'changed', _loadImages );\n\n\t\treturn _loadImages();\n\t},\n\t/**\n\t * Load an image on demand\n\t * @memberof Skin\n\t * @instance\n\t * @param {Array} [images] a list of images that have not been loaded.\n\t *  If none given all will be loaded.\n\t * @return {jQuery.Deferred}\n\t */\n\tloadImagesList: function ( images ) {\n\t\tvar callbacks,\n\t\t\t$ = this.$.bind( this ),\n\t\t\tloadImage = this.loadImage.bind( this );\n\n\t\timages = images || this.getUnloadedImages();\n\t\tcallbacks = images.map( function ( placeholder ) {\n\t\t\treturn loadImage( $( placeholder ) );\n\t\t} );\n\n\t\treturn when.apply( null, callbacks );\n\t},\n\t/**\n\t * Load an image on demand\n\t * @memberof Skin\n\t * @instance\n\t * @param {jQuery.Object} $placeholder\n\t * @return {jQuery.Deferred}\n\t */\n\tloadImage: function ( $placeholder ) {\n\t\tvar\n\t\t\td = Deferred(),\n\t\t\twidth = $placeholder.attr( 'data-width' ),\n\t\t\theight = $placeholder.attr( 'data-height' ),\n\t\t\t// document must be passed to ensure image will start downloading\n\t\t\t$downloadingImage = util.parseHTML( '<img>', this.$el[0].ownerDocument );\n\n\t\t// When the image has loaded\n\t\t$downloadingImage.on( 'load', function () {\n\t\t\t// Swap the HTML inside the placeholder (to keep the layout and\n\t\t\t// dimensions the same and not trigger layouts\n\t\t\t$downloadingImage.addClass( 'image-lazy-loaded' );\n\t\t\t$placeholder.replaceWith( $downloadingImage );\n\t\t\td.resolve();\n\t\t} );\n\t\t$downloadingImage.on( 'error', function () {\n\t\t\td.reject();\n\t\t} );\n\n\t\t// Trigger image download after binding the load handler\n\t\t$downloadingImage.attr( {\n\t\t\t'class': $placeholder.attr( 'data-class' ),\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tsrc: $placeholder.attr( 'data-src' ),\n\t\t\talt: $placeholder.attr( 'data-alt' ),\n\t\t\tstyle: $placeholder.attr( 'style' ),\n\t\t\tsrcset: $placeholder.attr( 'data-srcset' )\n\t\t} );\n\t\treturn d;\n\t},\n\n\t/**\n\t * Load the references section content from API if it's not already loaded.\n\t *\n\t * All references tags content will be loaded per section.\n\t * @memberof Skin\n\t * @instance\n\t * @param {Object} data Information about the section. It's in the following form:\n\t * {\n\t *     @property {string} page,\n\t *     @property {boolean} wasExpanded,\n\t *     @property {jQuery.Object} $heading,\n\t *     @property {boolean} isReferenceSection\n\t * }\n\t * @return {jQuery.Promise} rejected when not a reference section.\n\t */\n\tlazyLoadReferences: function ( data ) {\n\t\tvar $content, $spinner,\n\t\t\tgateway = this.referencesGateway,\n\t\t\tgetUnloadedImages = this.getUnloadedImages.bind( this ),\n\t\t\tloadImagesList = this.loadImagesList.bind( this ),\n\t\t\tself = this;\n\n\t\t// If the section was expanded before toggling, do not load anything as\n\t\t// section is being collapsed now.\n\t\t// Also return early if lazy loading is not required or the section is\n\t\t// not a reference section\n\t\tif (\n\t\t\tdata.wasExpanded ||\n\t\t\t!data.isReferenceSection\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t$content = data.$heading.next();\n\n\t\tfunction loadImagesAndSetData() {\n\t\t\t// lazy load images if any\n\t\t\tloadImagesList( getUnloadedImages( $content ) );\n\t\t\t// Do not attempt further loading even if we're unable to load this time.\n\t\t\t$content.data( 'are-references-loaded', 1 );\n\t\t}\n\n\t\tif ( !$content.data( 'are-references-loaded' ) ) {\n\t\t\t$content.children().addClass( 'hidden' );\n\t\t\t$spinner = spinner.$el.prependTo( $content );\n\n\t\t\t// First ensure we retrieve all of the possible lists\n\t\t\treturn gateway.getReferencesLists( data.page )\n\t\t\t\t.then( function () {\n\t\t\t\t\tvar lastId;\n\n\t\t\t\t\t$content.find( '.mf-lazy-references-placeholder' ).each( function () {\n\t\t\t\t\t\tvar refListIndex = 0,\n\t\t\t\t\t\t\t$placeholder = $content.find( this ),\n\t\t\t\t\t\t\t// search for id of the collapsible heading\n\t\t\t\t\t\t\tid = getSectionId( $placeholder );\n\n\t\t\t\t\t\tif ( lastId !== id ) {\n\t\t\t\t\t\t\t// If the placeholder belongs to a new section reset index\n\t\t\t\t\t\t\trefListIndex = 0;\n\t\t\t\t\t\t\tlastId = id;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// otherwise increment it\n\t\t\t\t\t\t\trefListIndex++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( id ) {\n\t\t\t\t\t\t\tgateway.getReferencesList( data.page, id )\n\t\t\t\t\t\t\t\t.then( function ( refListElements ) {\n\t\t\t\t\t\t\t\t\t// Note if no section html is provided\n\t\t\t\t\t\t\t\t\t// no substitution will happen\n\t\t\t\t\t\t\t\t\t// so user is forced to rely on placeholder link.\n\t\t\t\t\t\t\t\t\tif ( refListElements && refListElements[refListIndex] ) {\n\t\t\t\t\t\t\t\t\t\t$placeholder.replaceWith(\n\t\t\t\t\t\t\t\t\t\t\trefListElements[refListIndex]\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\t// Show the section now the references lists have been placed.\n\t\t\t\t\t$spinner.remove();\n\t\t\t\t\t$content.children().removeClass( 'hidden' );\n\t\t\t\t\t/**\n\t\t\t\t\t * Fired when references list is loaded into the HTML\n\t\t\t\t\t * @event references-loaded\n\t\t\t\t\t */\n\t\t\t\t\tself.emit( 'references-loaded', self.page );\n\n\t\t\t\t\tloadImagesAndSetData();\n\t\t\t\t}, function () {\n\t\t\t\t\t$spinner.remove();\n\t\t\t\t\t// unhide on a failure\n\t\t\t\t\t$content.children().removeClass( 'hidden' );\n\n\t\t\t\t\tloadImagesAndSetData();\n\t\t\t\t} );\n\t\t} else {\n\t\t\treturn Deferred().reject().promise();\n\t\t}\n\t},\n\n\t/**\n\t * Returns the appropriate license message including links/name to\n\t * terms of use (if any) and license page\n\t * @memberof Skin\n\t * @instance\n\t * @return {string}\n\t */\n\tgetLicenseMsg: function () {\n\t\tvar licenseMsg,\n\t\t\tmfLicense = mw.config.get( 'wgMFLicense' ),\n\t\t\tlicensePlural = mw.language.convertNumber( mfLicense.plural );\n\n\t\tif ( mfLicense.link ) {\n\t\t\tif ( this.$( '#footer-places-terms-use' ).length > 0 ) {\n\t\t\t\tlicenseMsg = mw.msg(\n\t\t\t\t\t'mobile-frontend-editor-licensing-with-terms',\n\t\t\t\t\tmw.message(\n\t\t\t\t\t\t'mobile-frontend-editor-terms-link',\n\t\t\t\t\t\tthis.$( '#footer-places-terms-use a' ).attr( 'href' )\n\t\t\t\t\t).parse(),\n\t\t\t\t\tmfLicense.link,\n\t\t\t\t\tlicensePlural\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlicenseMsg = mw.msg(\n\t\t\t\t\t'mobile-frontend-editor-licensing',\n\t\t\t\t\tmfLicense.link,\n\t\t\t\t\tlicensePlural\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn licenseMsg;\n\t}\n} );\n\nSkin.getSectionId = getSectionId;\n\nmodule.exports = Skin;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' );\n\n/**\n * A wrapper for creating a button.\n * @class Button\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Button( options ) {\n\tif ( options.href ) {\n\t\toptions.tagName = 'a';\n\t}\n\tView.call( this, options );\n}\n\nmfExtend( Button, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Button\n\t * @instance\n\t */\n\tisTemplateMode: true,\n\t/**\n\t * @memberof Button\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.tagName The name of the tag in which the button is wrapped.\n\t * @property {boolean} defaults.block is stacked button\n\t * @property {boolean} defaults.progressive is progressive action\n\t *   This option is deprecated. Please use `progressive`.\n\t * @property {boolean} defaults.quiet is quiet button\n\t * @property {boolean} defaults.destructive is destructive action\n\t * @property {string} defaults.additionalClassNames Additional class name(s).\n\t * @property {string} defaults.href url\n\t * @property {string} defaults.label of button\n\t */\n\tdefaults: {\n\t\ttagName: 'a',\n\t\tblock: undefined,\n\t\tprogressive: undefined,\n\t\tdestructive: undefined,\n\t\tquiet: undefined,\n\t\tadditionalClassNames: '',\n\t\thref: undefined,\n\t\tlabel: undefined\n\t},\n\t/**\n\t * @memberof Button\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'button.hogan' )\n} );\n\nmodule.exports = Button;\n","var\n\tView = require( './View' ),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * A wrapper for creating an anchor.\n * @class Anchor\n * @extends View\n */\nfunction Anchor() {\n\tView.apply( this, arguments );\n}\n\nmfExtend( Anchor, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Anchor\n\t * @instance\n\t */\n\tisTemplateMode: true,\n\t/**\n\t * @memberof Anchor\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {boolean} defaults.progressive is progressive action\n\t * @property {boolean} defaults.destructive is destructive action\n\t * @property {string} defaults.additionalClassNames Additional class name(s).\n\t * @property {string} defaults.href url\n\t * @property {string} defaults.label of anchor\n\t */\n\tdefaults: {\n\t\tprogressive: undefined,\n\t\tdestructive: undefined,\n\t\tadditionalClassNames: '',\n\t\thref: undefined,\n\t\tlabel: undefined\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Anchor\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'anchor.hogan' )\n} );\n\nmodule.exports = Anchor;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' );\n\n/**\n * An abstract class for a {@link View} that comprises a simple panel.\n * @class Panel\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Panel() {\n\tView.apply( this, arguments );\n}\n\nmfExtend( Panel, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Panel\n\t * @instance\n\t */\n\tclassName: 'panel',\n\t// in milliseconds\n\tminHideDelay: 10,\n\tevents: {\n\t\t'click .cancel': 'onCancel'\n\t},\n\n\t/**\n\t * Cancel event handler\n\t * @memberof Panel\n\t * @instance\n\t * @param {Object} ev Event Object\n\t */\n\tonCancel: function ( ev ) {\n\t\tev.preventDefault();\n\t\tthis.hide();\n\t},\n\n\t/**\n\t * Shows panel after a slight delay\n\t * @memberof Panel\n\t * @instance\n\t * @method\n\t */\n\tshow: function () {\n\t\tvar self = this;\n\n\t\tif ( !self.isVisible() ) {\n\t\t\t// use setTimeout to allow the browser to redraw if render() was called\n\t\t\t// just before show(); this is important for animations to work\n\t\t\t// (0ms doesn't work on Firefox, 10ms is enough)\n\t\t\tsetTimeout( function () {\n\t\t\t\tself.$el.addClass( 'visible animated' );\n\t\t\t\tself.emit( 'show' );\n\t\t\t}, self.minHideDelay );\n\t\t}\n\t},\n\n\t/**\n\t * Hides panel\n\t * @memberof Panel\n\t * @instance\n\t */\n\thide: function () {\n\t\tvar self = this;\n\n\t\t// see comment in show()\n\t\tsetTimeout( function () {\n\t\t\tself.$el.removeClass( 'visible' );\n\t\t\tself.emit( 'hide' );\n\t\t}, self.minHideDelay );\n\t},\n\n\t/**\n\t * Determines if panel is visible\n\t * @memberof Panel\n\t * @instance\n\t * @return {boolean} Panel is visible\n\t */\n\tisVisible: function () {\n\t\treturn this.$el.hasClass( 'visible' );\n\t},\n\n\t/**\n\t * Shows or hides panel\n\t * @memberof Panel\n\t * @instance\n\t */\n\ttoggle: function () {\n\t\tif ( this.isVisible() ) {\n\t\t\tthis.hide();\n\t\t} else {\n\t\t\tthis.show();\n\t\t}\n\t}\n} );\n\nmodule.exports = Panel;\n","var\n\tView = require( './View' ),\n\tIcon = require( './Icon' ),\n\tButton = require( './Button' ),\n\tAnchor = require( './Anchor' ),\n\ticons = require( './icons' ),\n\tutil = require( './util' ),\n\tbrowser = require( './Browser' ).getSingleton(),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * Mobile modal window\n * @class Overlay\n * @extends View\n * @uses Icon\n * @uses Button\n * @fires Overlay#Overlay-exit\n * @fires Overlay#hide\n */\nfunction Overlay() {\n\tthis.isIos = browser.isIos();\n\tthis.useVirtualKeyboardHack = browser.isIos( 4 ) || browser.isIos( 5 );\n\t// Set to true when overlay has failed to load\n\tthis.hasLoadError = false;\n\tView.apply( this, arguments );\n}\n\nmfExtend( Overlay, View, {\n\t/**\n\t * Identify whether the element contains position fixed elements\n\t * @memberof Overlay\n\t * @instance\n\t * @property {boolean}\n\t */\n\thasFixedHeader: true,\n\t/**\n\t * Is overlay fullscreen\n\t * @memberof Overlay\n\t * @instance\n\t * @property {boolean}\n\t */\n\tfullScreen: true,\n\n\t/**\n\t * True if this.hide() should be invoked before firing the Overlay-exit\n\t * event\n\t * @memberof Overlay\n\t * @instance\n\t * @property {boolean}\n\t */\n\thideOnExitClick: true,\n\n\t/**\n\t * use '#mw-mf-viewport' rather than 'body' - for some reasons this has\n\t * odd consequences on Opera Mobile (see bug 52361)\n\t * @memberof Overlay\n\t * @instance\n\t * @property {string|jQuery.Object}\n\t */\n\tappendToElement: '#mw-mf-viewport',\n\n\t/**\n\t * Default class name\n\t * @memberof Overlay\n\t * @instance\n\t * @property {string}\n\t */\n\tclassName: 'overlay',\n\ttemplatePartials: {\n\t\theader: mw.template.get( 'mobile.startup', 'header.hogan' ),\n\t\tanchor: Anchor.prototype.template,\n\t\tbutton: Button.prototype.template\n\t},\n\ttemplate: mw.template.get( 'mobile.startup', 'Overlay.hogan' ),\n\t/**\n\t * @memberof Overlay\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.saveMessage Caption for save button on edit form.\n\t * @property {string} defaults.cancelButton HTML of the cancel button.\n\t * @property {string} defaults.backButton HTML of the back button.\n\t * @property {string} defaults.headerButtonsListClassName A comma separated string of class\n\t * names of the wrapper of the header buttons.\n\t * @property {boolean} defaults.headerChrome Whether the header has chrome.\n\t * @property {boolean} defaults.fixedHeader Whether the header is fixed.\n\t * @property {string} defaults.spinner HTML of the spinner icon.\n\t * @property {Object} [defaults.footerAnchor] options for an optional Anchor\n\t *  that can appear in the footer\n\t */\n\tdefaults: {\n\t\tsaveMsg: mw.msg( 'mobile-frontend-editor-save' ),\n\t\tcancelButton: new Icon( {\n\t\t\ttagName: 'button',\n\t\t\tname: 'overlay-close',\n\t\t\tadditionalClassNames: 'cancel',\n\t\t\tlabel: mw.msg( 'mobile-frontend-overlay-close' )\n\t\t} ).toHtmlString(),\n\t\tbackButton: new Icon( {\n\t\t\ttagName: 'button',\n\t\t\tname: 'back',\n\t\t\tadditionalClassNames: 'back',\n\t\t\tlabel: mw.msg( 'mobile-frontend-overlay-close' )\n\t\t} ).toHtmlString(),\n\t\theaderButtonsListClassName: '',\n\t\theaderChrome: false,\n\t\tfixedHeader: true,\n\t\tspinner: icons.spinner().toHtmlString()\n\t},\n\t/**\n\t * @memberof Overlay\n\t * @instance\n\t */\n\tevents: {\n\t\t// FIXME: Remove .initial-header selector when bug 71203 resolved.\n\t\t'click .cancel, .confirm, .initial-header .back': 'onExitClick',\n\t\tclick: 'stopPropagation'\n\t},\n\t/**\n\t * Flag overlay to close on content tap\n\t * @memberof Overlay\n\t * @instance\n\t * @property {boolean}\n\t */\n\tcloseOnContentTap: false,\n\n\t/**\n\t * Shows the spinner right to the input field.\n\t * @memberof Overlay\n\t * @instance\n\t * @method\n\t */\n\tshowSpinner: function () {\n\t\tthis.$spinner.removeClass( 'hidden' );\n\t},\n\n\t/**\n\t * Hide the spinner near to the input field.\n\t * @memberof Overlay\n\t * @instance\n\t * @method\n\t */\n\thideSpinner: function () {\n\t\tthis.$spinner.addClass( 'hidden' );\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Overlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\n\t\tthis.$overlayContent = this.$( '.overlay-content' );\n\t\tthis.$spinner = this.$( '.spinner' );\n\t\tif ( this.isIos ) {\n\t\t\tthis.$el.addClass( 'overlay-ios' );\n\t\t}\n\t\t// Truncate any text inside in the overlay header.\n\t\tthis.$( '.overlay-header h2 span' ).addClass( 'truncated-text' );\n\t\tthis.setupEmulatedIosOverlayScrolling();\n\t},\n\n\t/**\n\t * Setups an emulated scroll behaviour for overlays in ios.\n\t * @memberof Overlay\n\t * @instance\n\t */\n\tsetupEmulatedIosOverlayScrolling: function () {\n\t\tvar self = this;\n\t\tif ( this.isIos && this.hasFixedHeader ) {\n\t\t\tthis.$( '.overlay-content' ).on( 'touchstart', this.onTouchStart.bind( this ) )\n\t\t\t\t.on( 'touchmove', this.onTouchMove.bind( this ) );\n\t\t\t// wait for things to render before doing any calculations\n\t\t\tsetTimeout( function () {\n\t\t\t\tself._fixIosHeader( self.$( 'textarea, input' ) );\n\t\t\t}, 0 );\n\t\t}\n\t},\n\t/**\n\t * ClickBack event handler\n\t * @memberof Overlay\n\t * @instance\n\t * @param {Object} ev event object\n\t */\n\tonExitClick: function ( ev ) {\n\t\tev.preventDefault();\n\t\tev.stopPropagation();\n\t\tif ( this.hideOnExitClick ) {\n\t\t\tthis.hide();\n\t\t}\n\t\tthis.emit( Overlay.EVENT_EXIT );\n\t},\n\t/**\n\t * Event handler for touchstart, for IOS\n\t * @memberof Overlay\n\t * @instance\n\t * @param {Object} ev Event Object\n\t */\n\tonTouchStart: function ( ev ) {\n\t\tthis.startY = ev.originalEvent.touches[0].pageY;\n\t},\n\t/**\n\t * Event handler for touch move, for IOS\n\t * @memberof Overlay\n\t * @instance\n\t * @param {Object} ev Event Object\n\t */\n\tonTouchMove: function ( ev ) {\n\t\tvar\n\t\t\ty = ev.originalEvent.touches[0].pageY,\n\t\t\tcontentOuterHeight = this.$overlayContent.outerHeight(),\n\t\t\tcontentLength = this.$overlayContent.prop( 'scrollHeight' ) - contentOuterHeight;\n\n\t\tev.stopPropagation();\n\t\t// prevent scrolling and bouncing outside of .overlay-content\n\t\tif (\n\t\t\t( this.$overlayContent.scrollTop() === 0 && this.startY < y ) ||\n\t\t\t( this.$overlayContent.scrollTop() === contentLength && this.startY > y )\n\t\t) {\n\t\t\tev.preventDefault();\n\t\t}\n\t},\n\t/**\n\t * Stop clicks in the overlay from propagating to the page\n\t * (prevents non-fullscreen overlays from being closed when they're tapped)\n\t * @memberof Overlay\n\t * @instance\n\t * @param {Object} ev Event Object\n\t */\n\tstopPropagation: function ( ev ) {\n\t\tev.stopPropagation();\n\t},\n\t/**\n\t * Attach overlay to current view and show it.\n\t * @memberof Overlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\tvar self = this,\n\t\t\t$html = util.getDocument(),\n\t\t\t$window = util.getWindow();\n\n\t\tthis.$el.appendTo( this.appendToElement );\n\t\tthis.scrollTop = window.pageYOffset;\n\n\t\tif ( this.fullScreen ) {\n\t\t\t$html.addClass( 'overlay-enabled' );\n\t\t\t// skip the URL bar if possible\n\t\t\twindow.scrollTo( 0, 1 );\n\t\t}\n\n\t\tif ( this.closeOnContentTap ) {\n\t\t\t$html.find( '#mw-mf-page-center' ).one( 'click', this.hide.bind( this ) );\n\t\t}\n\n\t\t// prevent scrolling and bouncing outside of .overlay-content\n\t\tif ( this.isIos && this.hasFixedHeader ) {\n\t\t\t$window\n\t\t\t\t.on( 'touchmove.ios', function ( ev ) {\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t} )\n\t\t\t\t.on( 'resize.ios', function () {\n\t\t\t\t\tself._resizeContent( $window.height() );\n\t\t\t\t} );\n\t\t}\n\n\t\tthis.$el.addClass( 'visible' );\n\t},\n\t/**\n\t * Detach the overlay from the current view\n\t * @memberof Overlay\n\t * @instance\n\t * @param {boolean} [force] Whether the overlay should be closed regardless of\n\t * state (see PhotoUploadProgress)\n\t * @return {boolean} Whether the overlay was successfully hidden or not\n\t */\n\thide: function () {\n\t\tvar $window = util.getWindow(),\n\t\t\t$html = util.getDocument();\n\n\t\tif ( this.fullScreen ) {\n\t\t\t$html.removeClass( 'overlay-enabled' );\n\t\t\t// return to last known scroll position\n\t\t\twindow.scrollTo( window.pageXOffset, this.scrollTop );\n\t\t}\n\n\t\tthis.$el.detach();\n\n\t\tif ( this.isIos ) {\n\t\t\t$window.off( '.ios' );\n\t\t}\n\n\t\t/**\n\t\t * Fired when the overlay is closed.\n\t\t * @event Overlay#hide\n\t\t */\n\t\tthis.emit( 'hide' );\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Fit the overlay content height to the window taking overlay header and footer heights\n\t * into consideration.\n\t * @memberof Overlay\n\t * @instance\n\t * @private\n\t * @param {number} windowHeight The height of the window\n\t */\n\t_resizeContent: function ( windowHeight ) {\n\t\tthis.$overlayContent.height(\n\t\t\twindowHeight -\n\t\t\tthis.$( '.overlay-header-container' ).outerHeight() -\n\t\t\tthis.$( '.overlay-footer-container' ).outerHeight()\n\t\t);\n\t},\n\n\t/**\n\t * Resize .overlay-content to occupy 100% of screen space when virtual\n\t * keyboard is shown/hidden on iOS.\n\t *\n\t * This function supplements the custom styles for Overlays on iOS.\n\t * On iOS we scroll the content inside of .overlay-content div instead\n\t * of scrolling the whole page to achieve a consistent sticky header\n\t * effect (position: fixed doesn't work on iOS when the virtual keyboard\n\t * is open).\n\t *\n\t * @memberof Overlay\n\t * @instance\n\t * @private\n\t * @param {jQuery.Object} $el for elements that may trigger virtual\n\t * keyboard (usually inputs, textareas, contenteditables).\n\t */\n\t_fixIosHeader: function ( $el ) {\n\t\tvar self = this,\n\t\t\t$window = util.getWindow();\n\n\t\tif ( this.isIos ) {\n\t\t\tthis._resizeContent( $window.height() );\n\t\t\t$el\n\t\t\t\t.on( 'focus', function () {\n\t\t\t\t\tsetTimeout( function () {\n\t\t\t\t\t\tvar keyboardHeight = 0;\n\n\t\t\t\t\t\t// detect virtual keyboard height\n\t\t\t\t\t\tif ( self.useVirtualKeyboardHack ) {\n\t\t\t\t\t\t\t// this method does not work in iOS 8.02\n\t\t\t\t\t\t\t$window.scrollTop( 999 );\n\t\t\t\t\t\t\tkeyboardHeight = $window.scrollTop();\n\t\t\t\t\t\t\t$window.scrollTop( 0 );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( $window.height() > keyboardHeight ) {\n\t\t\t\t\t\t\tself._resizeContent( $window.height() - keyboardHeight );\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 0 );\n\t\t\t\t} )\n\t\t\t\t.on( 'blur', function () {\n\t\t\t\t\tself._resizeContent( $window.height() );\n\t\t\t\t\t// restore the fixed header in view.\n\t\t\t\t\t$window.scrollTop( 0 );\n\t\t\t\t} );\n\t\t}\n\t},\n\n\t/**\n\t * Show elements that are selected by the className.\n\t * Also hide .hideable elements\n\t * Can't use jQuery's hide() and show() because show() sets display: block.\n\t * And we want display: table for headers.\n\t * @memberof Overlay\n\t * @instance\n\t * @protected\n\t * @param {string} className CSS selector to show\n\t */\n\tshowHidden: function ( className ) {\n\t\tthis.$( '.hideable' ).addClass( 'hidden' );\n\t\tthis.$( className ).removeClass( 'hidden' );\n\t}\n} );\n\n/*\n * Fires when close button is clicked. Not to be confused with hide event.\n * @memberof Overlay\n * @event Overlay#Overlay-exit\n */\nOverlay.EVENT_EXIT = 'Overlay-exit';\n\nmodule.exports = Overlay;\n","var\n\tOverlay = require( './Overlay' ),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * Overlay that initially shows loading animation until\n * caller hides it with .hide()\n * @class LoadingOverlay\n * @extends Overlay\n */\nfunction LoadingOverlay() {\n\tOverlay.apply( this, arguments );\n}\n\nmfExtend( LoadingOverlay, Overlay, {\n\t/**\n\t * @memberof LoadingOverlay\n\t * @instance\n\t */\n\tclassName: 'overlay overlay-loading',\n\t/**\n\t * @memberof LoadingOverlay\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'LoadingOverlay.hogan' )\n} );\n\nmodule.exports = LoadingOverlay;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tPanel = require( './Panel' ),\n\tutil = require( './util' ),\n\tIcon = require( './Icon' );\n\n/**\n * A {@link View} that pops up from the bottom of the screen.\n * @class Drawer\n * @extends Panel\n */\nfunction Drawer() {\n\tPanel.apply( this, arguments );\n}\n\nmfExtend( Drawer, Panel, {\n\t/**\n\t * @memberof Drawer\n\t * @instance\n\t * @mixes Panel#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.cancelButton HTML of the button that closes the drawer.\n\t */\n\tdefaults: util.extend( {}, Panel.prototype.defaults, {\n\t\tcancelButton: new Icon( {\n\t\t\ttagName: 'a',\n\t\t\tname: 'close-invert',\n\t\t\tadditionalClassNames: 'cancel',\n\t\t\tlabel: mw.msg( 'mobile-frontend-overlay-close' )\n\t\t} ).toHtmlString(),\n\t\tcollapseIcon: new Icon( {\n\t\t\tname: 'arrow',\n\t\t\tadditionalClassNames: 'cancel'\n\t\t} ).options\n\t} ),\n\t/**\n\t * @memberof Drawer\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, Panel.prototype.templatePartials, {\n\t\ticon: Icon.prototype.template\n\t} ),\n\t/**\n\t * @memberof Drawer\n\t * @instance\n\t */\n\tclassName: 'drawer position-fixed',\n\t/**\n\t * Defines an element that the Drawer should automatically be appended to.\n\t * @memberof Drawer\n\t * @instance\n\t * @property {string}\n\t */\n\tappendToElement: 'body',\n\t/**\n\t * Whether the drawer should disappear on a scroll event\n\t * @memberof Drawer\n\t * @instance\n\t * @property {boolean}\n\t */\n\tcloseOnScroll: true,\n\tevents: util.extend( {}, Panel.prototype.events, {\n\t\tclick: 'stopPropagation'\n\t} ),\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Drawer\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this;\n\t\t// This module might be loaded at the top of the page e.g. Special:Uploads\n\t\t// Thus ensure we wait for the DOM to be loaded\n\t\tutil.docReady( function () {\n\t\t\tself.appendTo( self.appendToElement );\n\t\t\tself.$el.parent().addClass( 'has-drawer' );\n\t\t} );\n\t\tthis.on( 'show', this.onShowDrawer.bind( this ) );\n\t\tthis.on( 'hide', this.onHideDrawer.bind( this ) );\n\t},\n\t/**\n\t * Stop Propagation event handler\n\t * @memberof Drawer\n\t * @instance\n\t * @param {Object} ev event object\n\t * Allow the drawer itself to be clickable (e.g. for copying and pasting references\n\t * clicking links in reference)\n\t */\n\tstopPropagation: function ( ev ) {\n\t\tev.stopPropagation();\n\t},\n\n\t/**\n\t * ShowDrawer event handler\n\t * @memberof Drawer\n\t * @instance\n\t */\n\tonShowDrawer: function () {\n\t\tvar self = this;\n\n\t\tthis.$el.parent().addClass( 'drawer-visible' );\n\n\t\tsetTimeout( function () {\n\t\t\tvar $window = util.getWindow();\n\t\t\t$window.one( 'click.drawer', self.hide.bind( self ) );\n\t\t\tif ( self.closeOnScroll ) {\n\t\t\t\t$window.one( 'scroll.drawer', self.hide.bind( self ) );\n\t\t\t}\n\t\t}, self.minHideDelay );\n\t},\n\n\t/**\n\t * HideDrawer event handler\n\t * @memberof Drawer\n\t * @instance\n\t */\n\tonHideDrawer: function () {\n\t\tthis.$el.parent().removeClass( 'drawer-visible' );\n\t\t// .one() registers one callback for scroll and click independently\n\t\t// if one fired, get rid of the other one\n\t\tutil.getWindow().off( '.drawer' );\n\t}\n} );\n\nmodule.exports = Drawer;\n","var\n\tmoduleLoader = require( './moduleSingleton' ),\n\tmfExtend = require( './mfExtend' ),\n\tcontext = require( './context' ),\n\ttime = require( './time' ),\n\tuser = require( './user' ),\n\tutil = require( './util' ),\n\tView = require( './View' ),\n\tPageGateway = require( './PageGateway' ),\n\tBrowser = require( './Browser' ),\n\tcache = require( './cache' ),\n\tButton = require( './Button' ),\n\tIcon = require( './Icon' ),\n\ticons = require( './icons' ),\n\tPanel = require( './Panel' ),\n\tSection = require( './Section' ),\n\tThumbnail = require( './Thumbnail' ),\n\tPage = require( './Page' ),\n\tAnchor = require( './Anchor' ),\n\tSkin = require( './Skin' ),\n\tOverlayManager = require( './OverlayManager' ),\n\tOverlay = require( './Overlay' ),\n\tLoadingOverlay = require( './LoadingOverlay' ),\n\tDrawer = require( './Drawer' ),\n\tCtaDrawer = require( './CtaDrawer' ),\n\tPageList = require( './PageList' ),\n\ttoast = require( './toast' ),\n\trlModuleLoader = require( './rlModuleLoader' );\n\nmw.mobileFrontend = moduleLoader;\nmw.log.deprecate( moduleLoader, 'on', moduleLoader.on,\n\t'The global EventEmitter should not be used (T156186).' );\n\nOO.mfExtend = mfExtend;\n\n// I know there is a temptation to use moduleLoader here, but if you do resource-modules will fail\n// as webpack might change the variable name. Using mw.mobileFrontend means that the variable\n// will not be recast.\nmw.mobileFrontend.define( 'mobile.startup/util', util );\nmw.mobileFrontend.define( 'mobile.startup/View', View );\nmw.mobileFrontend.define( 'mobile.startup/Browser', Browser );\nmw.mobileFrontend.define( 'mobile.startup/cache', cache );\nmw.mobileFrontend.define( 'mobile.startup/time', time );\nmw.mobileFrontend.define( 'mobile.startup/context', context );\nmw.mobileFrontend.define( 'mobile.startup/user', user );\nmw.mobileFrontend.define( 'mobile.startup/PageGateway', PageGateway );\nmw.mobileFrontend.define( 'mobile.startup/Button', Button );\nmw.mobileFrontend.define( 'mobile.startup/Icon', Icon );\nmw.mobileFrontend.define( 'mobile.startup/icons', icons );\nmw.mobileFrontend.define( 'mobile.startup/Panel', Panel );\nmw.mobileFrontend.define( 'mobile.startup/Section', Section );\nmw.mobileFrontend.define( 'mobile.startup/Thumbnail', Thumbnail );\nmw.mobileFrontend.define( 'mobile.startup/Page', Page );\nmw.mobileFrontend.define( 'mobile.startup/Anchor', Anchor );\nmw.mobileFrontend.define( 'mobile.startup/Skin', Skin );\nmw.mobileFrontend.define( 'mobile.startup/OverlayManager', OverlayManager );\nmw.mobileFrontend.define( 'mobile.startup/Overlay', Overlay );\nmw.mobileFrontend.define( 'mobile.startup/LoadingOverlay', LoadingOverlay );\nmw.mobileFrontend.define( 'mobile.startup/Drawer', Drawer );\nmw.mobileFrontend.define( 'mobile.startup/CtaDrawer', CtaDrawer );\nmw.mobileFrontend.define( 'mobile.startup/PageList', PageList );\nmw.mobileFrontend.define( 'mobile.startup/toast', toast );\nmw.mobileFrontend.define( 'mobile.startup/rlModuleLoader', rlModuleLoader );\n\n// Expose the entry chunk through libraryTarget and library. This allows\n// arbitrary file access via ResourceLoader like\n// `mfModules['mobile.startup'].moduleLoader.require('mobile.startup/LoadingOverlay')`.\nmodule.exports = {\n\tmoduleLoader: moduleLoader,\n\ttime: time,\n\tutil: util,\n\tView: View,\n\tBrowser: Browser,\n\tcontext: context,\n\tcache: cache,\n\tButton: Button,\n\tIcon: Icon,\n\ticons: icons,\n\tPanel: Panel,\n\tSection: Section,\n\tPage: Page,\n\tAnchor: Anchor,\n\tSkin: Skin,\n\tOverlayManager: OverlayManager,\n\tOverlay: Overlay,\n\tLoadingOverlay: LoadingOverlay,\n\tDrawer: Drawer,\n\tCtaDrawer: CtaDrawer,\n\tPageList: PageList,\n\ttoast: toast,\n\trlModuleLoader: rlModuleLoader\n};\n","/**\n * Mobile mode helper class\n *\n * @class context\n * @singleton\n */\nvar context = {\n\t/**\n\t * Gets current mobile mode\n\t * @memberof context\n\t * @instance\n\t * @return {string} Name of mode\n\t */\n\tgetMode: function () {\n\t\treturn mw.config.get( 'wgMFMode' );\n\t}\n};\n\nmodule.exports = context;\n","var user,\n\tmwUser = mw.user,\n\tutil = require( './util' );\n\n/**\n * Utility library for looking up details on the current user\n * Note: most of this module is just for convenience. It should be removed\n * in favor of mw.user, or at very least reduced to convenience functions.\n * @class user\n * @singleton\n */\nuser = {\n\t/**\n\t * @memberof user\n\t * @instance\n\t * @see mediaWiki.user\n\t */\n\ttokens: mwUser.tokens,\n\t/**\n\t * @memberof user\n\t * @instance\n\t * @see mediaWiki.user\n\t */\n\tisAnon: mwUser.isAnon,\n\t/**\n\t * @memberof user\n\t * @instance\n\t * @see mediaWiki.user\n\t */\n\tgetName: mwUser.getName,\n\t/**\n\t * @memberof user\n\t * @instance\n\t * @see mediaWiki.user\n\t */\n\tgetId: mwUser.getId,\n\t/**\n\t * Find current users edit count\n\t * @memberof user\n\t * @instance\n\t * @return {number} the edit count of the current user on the current wiki.\n\t */\n\tgetEditCount: function () {\n\t\treturn mw.config.get( 'wgUserEditCount' );\n\t},\n\t/**\n\t * FIXME: Not sure why mw.user is asynchronous when the information is available\n\t * For reasons I do not understand getGroups in core causes an unnecessary ajax request\n\t * The information this returns is identical to the content of the config variable.\n\t * To avoid an unnecessary ajax request on every page view simply use config variable.\n\t * @memberof user\n\t * @instance\n\t * @return {jQuery.Deferred}\n\t */\n\tgetGroups: function () {\n\t\treturn util.Deferred().resolve( mw.config.get( 'wgUserGroups' ) );\n\t},\n\t/**\n\t * Wrapper for mw.user.sessionId().\n\t * @memberof user\n\t * @instance\n\t * @method\n\t * @return {string}\n\t */\n\tgetSessionId: function () {\n\t\treturn mwUser.sessionId();\n\t},\n\n\t/**\n\t * User Bucketing for A/B testing\n\t * (we want this to be the same everywhere)\n\t * @memberof user\n\t * @instance\n\t * @return {boolean}\n\t */\n\tinUserBucketA: function () {\n\t\treturn mw.config.get( 'wgUserId' ) % 2 === 0;\n\t}\n\n};\nmodule.exports = user;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tDrawer = require( './Drawer' ),\n\tutil = require( './util' ),\n\tButton = require( './Button' ),\n\tAnchor = require( './Anchor' );\n\n/**\n\t * This creates the drawer at the bottom of the screen that appears when an anonymous\n\t * user tries to perform an action that requires being logged in. It presents the user\n\t * with options to log in or sign up for a new account.\n\t * @class CtaDrawer\n\t * @extends Drawer\n\t * @uses Button\n\t * @uses Icon\n\t * @uses Anchor\n\t */\nfunction CtaDrawer() {\n\tDrawer.apply( this, arguments );\n}\n\nmfExtend( CtaDrawer, Drawer, {\n\t/**\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t * @mixes Drawer#defaults\n\t\t * @property {Object} defaults Default options hash.\n\t\t * @property {Object} defaults.collapseIcon options for Icon for collapsing the drawer\n\t\t * @property {Object} defaults.progressiveButton options for Button element for signing in\n\t\t * @property {Object} defaults.actionAnchor options for Anchor element for signing up\n\t\t */\n\tdefaults: util.extend( {}, Drawer.prototype.defaults, {\n\t\tprogressiveButton: new Button( {\n\t\t\tprogressive: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-login' )\n\t\t} ).options,\n\t\tactionAnchor: new Anchor( {\n\t\t\tprogressive: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-signup' )\n\t\t} ).options\n\t} ),\n\t/**\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t */\n\ttemplatePartials: util.extend( {}, Drawer.prototype.templatePartials, {\n\t\tbutton: Button.prototype.template,\n\t\tanchor: Anchor.prototype.template\n\t} ),\n\t/**\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'Cta.hogan' ),\n\t/**\n\t\t * @inheritdoc\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t */\n\tevents: util.extend( {}, Drawer.prototype.events, {\n\t\t'click .hide': 'hide'\n\t} ),\n\t/**\n\t\t * @inheritdoc\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t */\n\tpreRender: function () {\n\t\tvar params = util.extend( {\n\t\t\t\t// use wgPageName as this includes the namespace if outside Main\n\t\t\t\treturnto: this.options.returnTo || mw.config.get( 'wgPageName' )\n\t\t\t}, this.options.queryParams ),\n\t\t\tsignupParams = util.extend( {\n\t\t\t\ttype: 'signup'\n\t\t\t}, this.options.signupQueryParams );\n\n\t\t// Give the button and the anchor a default target, if it isn't set already\n\t\tif ( !this.options.progressiveButton.href ) {\n\t\t\tthis.options.progressiveButton.href = mw.util.getUrl( 'Special:UserLogin', params );\n\t\t}\n\t\tif ( !this.options.actionAnchor.href ) {\n\t\t\tthis.options.actionAnchor.href = mw.util.getUrl( 'Special:UserLogin', util.extend( params, signupParams ) );\n\t\t}\n\t}\n} );\n\nmodule.exports = CtaDrawer;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' ),\n\tbrowser = require( './Browser' ).getSingleton();\n\n/**\n * List of items page view\n * @class PageList\n * @extends View\n */\nfunction PageList() {\n\tView.apply( this, arguments );\n}\n\nmfExtend( PageList, View, {\n\t/**\n\t * @memberof PageList\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {Page[]} defaults.pages Array of Page objects. These should match\n\t *                              the Page model and not necessarily the\n\t *                              underlying API format used.\n\t * E.g. [\n\t *   {\n\t *     heading: \"<strong>C</strong>laude Monet\",\n\t *     id: undefined,\n\t *     title: \"Claude Monet\",\n\t *     displayTitle: \"<i>Claude Monet</i>\",\n\t *     url: \"/wiki/Claude_Monet\",\n\t *     thumbnail: {\n\t *       height: 62,\n\t *       source: \"http://127.0.0.1:8080/images/thumb/thumb.jpg\",\n\t *       width: 80,\n\t *       isLandscape: true\n\t *     }\n\t *   }\n\t * ]\n\t */\n\tdefaults: {\n\t\tpages: []\n\t},\n\t/**\n\t * Render page images for the existing page list. Assumes no page images have been loaded.\n\t * @memberof PageList\n\t * @instance\n\t */\n\trenderPageImages: function () {\n\t\tvar self = this;\n\n\t\tsetTimeout( function () {\n\t\t\tself.$( '.list-thumb' ).each( function () {\n\t\t\t\tvar style = self.$( this ).data( 'style' );\n\t\t\t\tself.$( this ).attr( 'style', style );\n\t\t\t} );\n\t\t\t// Delay an unnecessary load of images on mobile (slower?) connections\n\t\t\t// In particular on search results which can be regenerated quickly.\n\t\t}, browser.isWideScreen() ? 0 : 1000 );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof PageList\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tthis.renderPageImages();\n\t},\n\ttemplate: mw.template.get( 'mobile.startup', 'PageList.hogan' ),\n\t/**\n\t * @memberof PageList\n\t * @instance\n\t */\n\ttemplatePartials: {\n\t\t// The server uses a very different structure in\n\t\t// SpecialMobileEditWatchlist.getLineHtml(). Be aware of these differences\n\t\t// when updating server rendered items.\n\t\titem: mw.template.get( 'mobile.startup', 'PageListItem.hogan' )\n\t}\n} );\n\nmodule.exports = PageList;\n","var\n\tutil = require( './util' ),\n\tstorageKey = 'mobileFrontend/toast';\n\n/**\n * Wrapper for one global Toast\n * @class Toast\n */\nfunction Toast() {\n\tmw.requestIdleCallback( this._showPending.bind( this ) );\n}\n\n/**\n * Show a message with the given class in a toast.\n * @memberof Toast\n * @instance\n * @param {string} msg Message to show in the toast\n * @param {Object} options CSS class to add to the element if a string.\n *  If an object, more options for the notification see mw.notification.show.\n *  For backwards compatibility reasons if a string is given it will be\n *  treated as options.type\n */\nToast.prototype.show = function ( msg, options ) {\n\tif ( typeof options === 'string' ) {\n\t\tmw.log.warn( 'The use of the cssClass parameter of Toast.show is deprecated, please convert it to an ' +\n\t\t\t\t'options object.' );\n\t\toptions = {\n\t\t\ttype: options\n\t\t};\n\t}\n\n\toptions = util.extend( {\n\t\ttag: 'toast'\n\t}, options );\n\n\tthis.notification = mw.notify( msg, options );\n};\n\n/**\n * Hide the Toast if it's visible.\n * @memberof Toast\n * @instance\n */\nToast.prototype.hide = function () {\n\tif ( this.notification !== undefined ) {\n\t\tthis.notification.then( function ( notif ) {\n\t\t\tnotif.close();\n\t\t} );\n\t}\n};\n\n/**\n * Save the toast data in storage so that we can show it on page reload.\n * Also check whether there is a pending message that's not shown yet.\n * If yes, output a warning message and discard this message.\n * This is to ensure that the page needs to be reloaded before adding\n * a new message for showing later.\n * @memberof Toast\n * @instance\n * @param {string} content Content to be placed in element\n * @param {string} className class to add to element\n */\nToast.prototype.showOnPageReload = function ( content, className ) {\n\tif ( mw.storage.get( storageKey ) ) {\n\t\tmw.log.warn(\n\t\t\t'A pending toast message already exits. ' +\n\t\t\t\t'The page should have been reloaded by now.'\n\t\t);\n\t\treturn;\n\t}\n\tmw.storage.set( storageKey, JSON.stringify( {\n\t\tcontent: content,\n\t\tclassName: className\n\t} ) );\n};\n\n/**\n * Show the previously saved toast data and delete it from storage\n * @memberof Toast\n * @instance\n * @private\n */\nToast.prototype._showPending = function () {\n\tvar data = mw.storage.get( storageKey );\n\tif ( data ) {\n\t\tdata = JSON.parse( data );\n\t\tthis.show( data.content, data.className );\n\t\tmw.storage.remove( storageKey );\n\t}\n};\n\nmodule.exports = new Toast();\n","var LoadingOverlay = require( './LoadingOverlay' );\n\n/**\n * Utility library for looking up details on the current user\n * @class loader\n * @singleton\n */\nmodule.exports = {\n\t/**\n\t * Loads a module via ResourceLoader\n\t * and displays a full screen LoadingOverlay during load time.\n\t * @memberof loader\n\t * @instance\n\t * @param {string} name ResourceLoader module name to load asynchronously.\n\t * @param {boolean} delegateHide if true the caller is responsible for hiding\n\t *  the intermediate loader.\n\t * @param {boolean} [showLoadingOverlay] if false a loading overlay will be hidden while\n\t *  loading the module. Defaults to true.\n\t * @return {jQuery.Promise}\n\t */\n\tloadModule: function ( name, delegateHide, showLoadingOverlay ) {\n\t\tvar loadingOverlay = new LoadingOverlay();\n\n\t\tshowLoadingOverlay = ( showLoadingOverlay !== undefined ) ? showLoadingOverlay : true;\n\t\tif ( showLoadingOverlay ) {\n\t\t\tloadingOverlay.show();\n\t\t}\n\n\t\tfunction hideOverlayIfNeeded() {\n\t\t\tif ( !delegateHide && showLoadingOverlay ) {\n\t\t\t\tloadingOverlay.hide();\n\t\t\t}\n\t\t}\n\t\treturn mw.loader.using( name ).then( function () {\n\t\t\thideOverlayIfNeeded();\n\n\t\t\treturn loadingOverlay;\n\t\t}, function () {\n\t\t\thideOverlayIfNeeded();\n\t\t} );\n\t}\n};\n"],"sourceRoot":""}