{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.startup/Toggler.js","webpack://mfModules.[name]/./src/mobile.startup/mobile.startup.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesDrawer.js","webpack://mfModules.[name]/./src/mobile.startup/search/MobileWebSearchLogger.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/search/schemaMobileWebSearch.js","webpack://mfModules.[name]/./src/mobile.startup/toc/TableOfContents.js"],"names":["browser","__webpack_require__","getSingleton","util","escapeHash","arrowOptions","name","additionalClassNames","Icon","Toggler","options","this","eventBus","_enable","$container","prefix","page","isClosed","getExpandedSections","expandedSections","JSON","parse","mw","storage","get","title","saveExpandedSections","set","stringify","expandStoredSections","toggler","$sectionHeading","$headline","find","each","parents","attr","hasClass","toggle","cleanObsoleteStoredSections","now","Date","getTime","Object","keys","forEach","sections","section","timestamp","Math","floor","prototype","$heading","indicator","wasExpanded","is","data","$content","next","toggleClass","remove","rotation","prependTo","aria-pressed","aria-expanded","emit","expanded","isReferenceSection","Boolean","isWideScreen","headline","isSectionOpen","storeSectionToggleState","reveal","selector","$target","length","prev","window","scrollTo","offset","top","e","tagName","expandSections","$link","self","collapseSectionsByDefault","config","checkHash","hash","location","indexOf","eq","prop","undefined","children","i","$indicator","id","addClass","tabindex","aria-haspopup","aria-controls","on","ev","target","href","preventDefault","replaceWith","$el","which","stopPropagation","enableKeyboardActions","internalRedirect","internalRedirectHash","split","checkInternalRedirectAndHash","getWindow","_getExpandedSections","_expandStoredSections","_cleanObsoleteStoredSections","module","exports","moduleLoader","mfExtend","context","time","actionParams","View","PageGateway","Browser","cache","Button","ReferencesDrawer","ReferencesGateway","ReferencesHtmlScraperGateway","ReferencesMobileViewGateway","icons","Panel","Section","Thumbnail","Page","Anchor","Skin","OverlayManager","Overlay","loadingOverlay","Drawer","TableOfContents","CtaDrawer","PageList","toast","extendSearchParams","Watchstar","WatchstarPageList","rlModuleLoader","eventBusSingleton","SearchOverlay","schemaMobileWebSearch","MobileWebSearchLogger","SearchGateway","ScrollEndEventEmitter","lazyImageLoader","MessageBox","mobileFrontend","OO","define","deprecate","toc","search","lazyImages","subscribeMobileWebSearchSchema","props","call","extend","className","defaults","spinner","toHtmlString","cancelButton","cancel","citation","isSmall","hasText","label","msg","errorClassName","getClassName","events","click sup a","show","apply","arguments","template","closeOnScroll","postRender","windowHeight","height","css","onShow","bind","onHide","getDocument","removeClass","showReference","refNumber","drawer","gateway","getReference","then","reference","render","text","err","ERROR_NOT_EXIST","hide","error","showNestedReference","$dest","$","userSessionToken","searchSessionToken","_newUserSession","user","generateRandomSessionId","_newSearchSession","searchSessionCreatedAt","onSearchShow","onSearchStart","track","action","timeOffsetSinceStart","onSearchResults","event","resultSetType","numberOfResults","results","timeToDisplayResults","onSearchResultClick","clickIndex","resultIndex","register","searchOverlay","logger","feedbackLink","params","isBorderBox","api","gatewayClass","router","templatePartials","header","content","icon","headerChrome","clearIcon","searchContentIcon","searchTerm","placeholderMsg","noResultsMsg","searchContentNoResultsMsg","message","feedback","prompt","input input","click .clear","click .search-content","click .overlay-content","click .overlay-content > div","touchstart .results","mousedown .results","click .results a","onInputInput","performSearch","$clear","$input","val","onClickClear","focus","onClickSearchContent","$form","parseHTML","type","value","appendTo","setTimeout","trigger","onClickOverlayContent","onClickOverlayContentDiv","hideKeyboardOnScroll","blur","onClickResult","currentTarget","$result","closest","result","$results","index","originalEvent","back","timer","clearSearch","$spinner","clearTimeout","$searchContent","$searchFeedback","$resultContainer","searchData","delay","showKeyboard","len","setSelectionRange","query","isCached","lastQuery","_pendingQuery","abort","xhr","filter","funnel","pages","el","promise","resetSearch","empty","loader","using","Schema","eventLog","platform","platformVersion","getMode","trackSubscribe","topic","log","contentsMsg","tocHeading"],"mappings":"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","file":"mobile.startup.js","sourcesContent":["var browser = require( './Browser' ).getSingleton(),\n\tutil = require( './util' ),\n\tescapeHash = util.escapeHash,\n\tarrowOptions = {\n\t\tname: 'arrow',\n\t\tadditionalClassNames: 'indicator'\n\t},\n\tIcon = require( './Icon' );\n\n/**\n *\n * @typedef {Object} ToggledEvent\n * @prop {boolean} expanded True if section is opened, false if closed.\n * @prop {Page} page\n * @prop {boolean} isReferenceSection\n * @prop {JQuery.Object} $heading\n */\n\n/**\n * A class for enabling toggling\n *\n * @class Toggler\n * @param {Object} options\n * @param {OO.EventEmitter} options.eventBus Object used to emit section-toggled events.\n * @param {jQuery.Object} options.$container to apply toggling to\n * @param {string} options.prefix a prefix to use for the id.\n * @param {Page} [options.page] to allow storage of session for future visits\n * @param {Page} [options.isClosed]\n */\nfunction Toggler( options ) {\n\tthis.eventBus = options.eventBus;\n\tthis._enable( options.$container, options.prefix, options.page, options.isClosed );\n}\n\n/**\n * Using the settings module looks at what sections were previously expanded on\n * existing page.\n *\n * @param {Page} page\n * @return {Object} representing open sections\n */\nfunction getExpandedSections( page ) {\n\tvar expandedSections = JSON.parse( mw.storage.get( 'expandedSections' ) || '{}' );\n\texpandedSections[page.title] = expandedSections[page.title] || {};\n\treturn expandedSections;\n}\n\n/**\n* @param {Object} expandedSections\n* Save expandedSections to localStorage\n*/\nfunction saveExpandedSections( expandedSections ) {\n\tmw.storage.set(\n\t\t'expandedSections', JSON.stringify( expandedSections )\n\t);\n}\n\n/**\n * Given an expanded heading, store it to localStorage.\n * If the heading is collapsed, remove it from localStorage.\n *\n * @param {jQuery.Object} $heading - A heading belonging to a section\n * @param {Page} page\n */\nfunction storeSectionToggleState( $heading, page ) {\n\tvar headline = $heading.find( 'span' ).attr( 'id' ),\n\t\tisSectionOpen = $heading.hasClass( 'open-block' ),\n\t\texpandedSections = getExpandedSections( page );\n\n\tif ( headline ) {\n\t\tif ( isSectionOpen ) {\n\t\t\texpandedSections[page.title][headline] = ( new Date() ).getTime();\n\t\t} else {\n\t\t\tdelete expandedSections[page.title][headline];\n\t\t}\n\n\t\tsaveExpandedSections( expandedSections );\n\t}\n}\n\n/**\n * Expand sections that were previously expanded before leaving this page.\n * @param {Toggler} toggler\n * @param {jQuery.Object} $container\n * @param {Page} page\n */\nfunction expandStoredSections( toggler, $container, page ) {\n\tvar $sectionHeading, $headline,\n\t\texpandedSections = getExpandedSections( page ),\n\t\t$headlines = $container.find( '.section-heading span' );\n\n\t$headlines.each( function () {\n\t\t$headline = $container.find( this );\n\t\t$sectionHeading = $headline.parents( '.section-heading' );\n\t\t// toggle only if the section is not already expanded\n\t\tif (\n\t\t\texpandedSections[page.title][$headline.attr( 'id' )] &&\n\t\t!$sectionHeading.hasClass( 'open-block' )\n\t\t) {\n\t\t\ttoggler.toggle( $sectionHeading, page );\n\t\t}\n\t} );\n}\n\n/**\n * Clean obsolete (saved more than a day ago) expanded sections from\n * localStorage.\n * @param {Page} page\n */\nfunction cleanObsoleteStoredSections( page ) {\n\tvar now = ( new Date() ).getTime(),\n\t\texpandedSections = getExpandedSections( page ),\n\t\t// the number of days between now and the time a setting was saved\n\t\tdaysDifference;\n\tObject.keys( expandedSections ).forEach( function ( page ) {\n\t\tvar sections = expandedSections[ page ];\n\t\t// clean the setting if it is more than a day old\n\t\tObject.keys( sections ).forEach( function ( section ) {\n\t\t\tvar timestamp = sections[ section ];\n\t\t\tdaysDifference = Math.floor( ( now - timestamp ) / 1000 / 60 / 60 / 24 );\n\t\t\tif ( daysDifference >= 1 ) {\n\t\t\t\tdelete expandedSections[page][section];\n\t\t\t}\n\t\t} );\n\t} );\n\tsaveExpandedSections( expandedSections );\n}\n\n/**\n * Given a heading, toggle it and any of its children\n *\n * @memberof Toggler\n * @instance\n * @param {jQuery.Object} $heading A heading belonging to a section\n */\nToggler.prototype.toggle = function ( $heading ) {\n\tvar indicator,\n\t\twasExpanded = $heading.is( '.open-block' ),\n\t\tpage = $heading.data( 'page' ),\n\t\t$content = $heading.next();\n\n\t$heading.toggleClass( 'open-block' );\n\t$heading.data( 'indicator' ).remove();\n\n\tarrowOptions.rotation = wasExpanded ? 0 : 180;\n\tindicator = new Icon( arrowOptions ).prependTo( $heading );\n\t$heading.data( 'indicator', indicator );\n\n\t$content\n\t\t.toggleClass( 'open-block' )\n\t\t.attr( {\n\t\t\t'aria-pressed': !wasExpanded,\n\t\t\t'aria-expanded': !wasExpanded\n\t\t} );\n\n\t/**\n\t * Global event emitted after a section has been toggled\n\t * @event section-toggled\n\t * @type {ToggledEvent}\n\t */\n\tthis.eventBus.emit( 'section-toggled', {\n\t\texpanded: wasExpanded,\n\t\tpage: page,\n\t\tisReferenceSection: Boolean( $content.attr( 'data-is-reference-section' ) ),\n\t\t$heading: $heading\n\t} );\n\n\tif ( !browser.isWideScreen() ) {\n\t\tstoreSectionToggleState( $heading, page );\n\t}\n};\n\n/**\n * Enables toggling via enter and space keys\n *\n * @param {Toggler} toggler instance.\n * @param {jQuery.Object} $heading\n */\nfunction enableKeyboardActions( toggler, $heading ) {\n\t$heading.on( 'keypress', function ( ev ) {\n\t\tif ( ev.which === 13 || ev.which === 32 ) {\n\t\t\t// Only handle keypresses on the \"Enter\" or \"Space\" keys\n\t\t\ttoggler.toggle( $heading );\n\t\t}\n\t} ).find( 'a' ).on( 'keypress mouseup', function ( ev ) {\n\t\tev.stopPropagation();\n\t} );\n}\n\n/**\n * Reveals an element and its parent section as identified by it's id\n *\n * @memberof Toggler\n * @instance\n * @param {string} selector A css selector that identifies a single element\n * @param {Object} $container jQuery element to search in\n */\nToggler.prototype.reveal = function ( selector, $container ) {\n\tvar $target, $heading;\n\n\t// jQuery will throw for hashes containing certain characters which can break toggling\n\ttry {\n\t\t$target = $container.find( escapeHash( selector ) );\n\t\t$heading = $target.parents( '.collapsible-heading' );\n\t\t// The heading is not a section heading, check if in a content block!\n\t\tif ( !$heading.length ) {\n\t\t\t$heading = $target.parents( '.collapsible-block' ).prev( '.collapsible-heading' );\n\t\t}\n\t\tif ( $heading.length && !$heading.hasClass( 'open-block' ) ) {\n\t\t\tthis.toggle( $heading );\n\t\t}\n\t\tif ( $heading.length ) {\n\t\t\t// scroll again after opening section (opening section makes the page longer)\n\t\t\twindow.scrollTo( 0, $target.offset().top );\n\t\t}\n\t} catch ( e ) {}\n};\n\n/**\n * Enables section toggling in a given container when wgMFCollapseSectionsByDefault\n * is enabled.\n *\n * @memberof Toggler\n * @instance\n * @param {jQuery.Object} $container to apply toggling to\n * @param {string} prefix a prefix to use for the id.\n * @param {Page} [page] to allow storage of session for future visits\n * @param {Page} [isClosed] whether the element should begin closed\n * @private\n */\nToggler.prototype._enable = function ( $container, prefix, page, isClosed ) {\n\tvar tagName, expandSections, indicator, $content,\n\t\t$firstHeading,\n\t\t$link,\n\t\tself = this,\n\t\tcollapseSectionsByDefault = mw.config.get( 'wgMFCollapseSectionsByDefault' );\n\n\t// Also allow .section-heading if some extensions like Wikibase\n\t// want to toggle other headlines than direct descendants of $container.\n\t$firstHeading = $container.find( '> h1,> h2,> h3,> h4,> h5,> h6,.section-heading' ).eq( 0 );\n\ttagName = $firstHeading.prop( 'tagName' ) || 'H1';\n\n\tif ( collapseSectionsByDefault === undefined ) {\n\t\t// Old default behavior if on cached output\n\t\tcollapseSectionsByDefault = true;\n\t}\n\texpandSections = !collapseSectionsByDefault ||\n\t( mw.config.get( 'wgMFExpandAllSectionsUserOption' ) && mw.storage.get( 'expandSections' ) === 'true' );\n\n\t$container.children( tagName ).each( function ( i ) {\n\t\tvar isReferenceSection,\n\t\t\t$heading = $container.find( this ),\n\t\t\t$indicator = $heading.find( '.indicator' ),\n\t\t\tid = prefix + 'collapsible-block-' + i;\n\t\t// Be sure there is a div wrapping the section content.\n\t\t// Otherwise, collapsible sections for this page is not enabled.\n\t\tif ( $heading.next().is( 'div' ) ) {\n\t\t\t$content = $heading.next( 'div' );\n\t\t\tisReferenceSection = Boolean( $content.attr( 'data-is-reference-section' ) );\n\t\t\t$heading\n\t\t\t\t.addClass( 'collapsible-heading ' )\n\t\t\t\t.data( 'section-number', i )\n\t\t\t\t.data( 'page', page )\n\t\t\t\t.attr( {\n\t\t\t\t\ttabindex: 0,\n\t\t\t\t\t'aria-haspopup': 'true',\n\t\t\t\t\t'aria-controls': id\n\t\t\t\t} )\n\t\t\t\t.on( 'click', function ( ev ) {\n\t\t\t\t\t// don't toggle, if the click target was a link\n\t\t\t\t\t// (a link in a section heading)\n\t\t\t\t\t// See T117880\n\t\t\t\t\tif ( !ev.target.href ) {\n\t\t\t\t\t\t// prevent taps/clicks on edit button after toggling (bug 56209)\n\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\tself.toggle( $heading );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\tarrowOptions.rotation = expandSections ? 180 : 0;\n\t\t\tindicator = new Icon( arrowOptions );\n\t\t\tif ( $indicator.length ) {\n\t\t\t\t// replace the existing indicator\n\t\t\t\t$indicator.replaceWith( indicator.$el );\n\t\t\t} else {\n\t\t\t\tindicator.prependTo( $heading );\n\t\t\t}\n\t\t\t$heading.data( 'indicator', indicator.$el );\n\t\t\t$content\n\t\t\t\t.addClass( 'collapsible-block' )\n\t\t\t\t.eq( 0 )\n\t\t\t\t.attr( {\n\t\t\t\t\t// We need to give each content block a unique id as that's\n\t\t\t\t\t// the only way we can tell screen readers what element we're\n\t\t\t\t\t// referring to (aria-controls)\n\t\t\t\t\tid: id,\n\t\t\t\t\t'aria-pressed': 'false',\n\t\t\t\t\t'aria-expanded': 'false'\n\t\t\t\t} );\n\n\t\t\tenableKeyboardActions( self, $heading );\n\t\t\tif (\n\t\t\t\t!isReferenceSection && (\n\t\t\t\t\t!isClosed && browser.isWideScreen() || expandSections\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// Expand sections by default on wide screen devices\n\t\t\t\t// or if the expand sections setting is set.\n\t\t\t\t// The wide screen logic for determining whether to collapse sections initially\n\t\t\t\t// should be kept in sync with mobileoptions#initLocalStorageElements().\n\t\t\t\tself.toggle( $heading );\n\t\t\t}\n\t\t}\n\t} );\n\n\t/* eslint-disable no-restricted-properties */\n\t/**\n\t * Checks the existing hash and toggles open any section that contains the fragment.\n\t *\n\t * @method\n\t */\n\tfunction checkHash() {\n\t\tvar hash = window.location.hash;\n\t\tif ( hash.indexOf( '#' ) === 0 ) {\n\t\t\tself.reveal( hash, $container );\n\t\t}\n\t}\n\n\t/**\n\t * Checks the value of wgInternalRedirectTargetUrl and reveals the collapsed\n\t * section that contains it if present\n\t *\n\t * @method\n\t */\n\tfunction checkInternalRedirectAndHash() {\n\t\tvar internalRedirect = mw.config.get( 'wgInternalRedirectTargetUrl' ),\n\t\t\tinternalRedirectHash = internalRedirect ? internalRedirect.split( '#' )[1] : false;\n\n\t\tif ( internalRedirectHash ) {\n\t\t\twindow.location.hash = internalRedirectHash;\n\t\t\tself.reveal( internalRedirectHash, $container );\n\t\t}\n\t}\n\t/* eslint-enable no-restricted-properties */\n\n\tcheckInternalRedirectAndHash();\n\tcheckHash();\n\t// Restricted to links created by editors and thus outside our control\n\t// T166544 - don't do this for reference links - they will be handled elsewhere\n\t$link = $container.find( 'a:not(.reference a)' );\n\t$link.on( 'click', function () {\n\t\t// the link might be an internal link with a hash.\n\t\t// if it is check if we need to reveal any sections.\n\t\tif ( $link.attr( 'href' ) !== undefined &&\n\t\t$link.attr( 'href' ).indexOf( '#' ) > -1\n\t\t) {\n\t\t\tcheckHash();\n\t\t}\n\t} );\n\tutil.getWindow().on( 'hashchange', function () {\n\t\tcheckHash();\n\t} );\n\n\tif ( !browser.isWideScreen() && page ) {\n\t\texpandStoredSections( this, $container, page );\n\t\tcleanObsoleteStoredSections( page );\n\t}\n};\n\nToggler._getExpandedSections = getExpandedSections;\nToggler._expandStoredSections = expandStoredSections;\nToggler._cleanObsoleteStoredSections = cleanObsoleteStoredSections;\n\nmodule.exports = Toggler;\n","var\n\tmoduleLoader = require( './moduleLoaderSingleton' ),\n\tmfExtend = require( './mfExtend' ),\n\tcontext = require( './context' ),\n\ttime = require( './time' ),\n\tactionParams = require( './actionParams' ),\n\tutil = require( './util' ),\n\tView = require( './View' ),\n\tPageGateway = require( './PageGateway' ),\n\tBrowser = require( './Browser' ),\n\tcache = require( './cache' ),\n\tButton = require( './Button' ),\n\tIcon = require( './Icon' ),\n\tReferencesDrawer = require( './references/ReferencesDrawer' ),\n\tReferencesGateway = require( './references/ReferencesGateway' ),\n\tReferencesHtmlScraperGateway = require( './references/ReferencesHtmlScraperGateway' ),\n\tReferencesMobileViewGateway = require( './references/ReferencesMobileViewGateway' ),\n\ticons = require( './icons' ),\n\tPanel = require( './Panel' ),\n\tSection = require( './Section' ),\n\tThumbnail = require( './Thumbnail' ),\n\tPage = require( './Page' ),\n\tAnchor = require( './Anchor' ),\n\tSkin = require( './Skin' ),\n\tOverlayManager = require( './OverlayManager' ),\n\tOverlay = require( './Overlay' ),\n\tloadingOverlay = require( './loadingOverlay' ),\n\tDrawer = require( './Drawer' ),\n\tTableOfContents = require( './toc/TableOfContents' ),\n\tCtaDrawer = require( './CtaDrawer' ),\n\tPageList = require( './PageList' ),\n\ttoast = require( './toast' ),\n\textendSearchParams = require( './extendSearchParams' ),\n\tWatchstar = require( './watchstar/Watchstar' ),\n\tWatchstarPageList = require( './watchstar/WatchstarPageList' ),\n\trlModuleLoader = require( './rlModuleLoader' ),\n\teventBusSingleton = require( './eventBusSingleton' ),\n\tToggler = require( './Toggler' ),\n\tSearchOverlay = require( './search/SearchOverlay' ),\n\tschemaMobileWebSearch = require( './search/schemaMobileWebSearch' ),\n\tMobileWebSearchLogger = require( './search/MobileWebSearchLogger' ),\n\tSearchGateway = require( './search/SearchGateway' ),\n\tScrollEndEventEmitter = require( './ScrollEndEventEmitter' ),\n\tlazyImageLoader = require( './lazyImages/lazyImageLoader' ),\n\tMessageBox = require( './MessageBox' );\n\nmw.mobileFrontend = moduleLoader;\n\nOO.mfExtend = mfExtend;\n\n// I know there is a temptation to use moduleLoader here, but if you do resource-modules will fail\n// as webpack might change the variable name. Using mw.mobileFrontend means that the variable\n// will not be recast.\n// These will soon be deprecated - please use the import path mobile.startup going forward.\nmw.mobileFrontend.define( 'mobile.startup/util', util );\nmw.mobileFrontend.define( 'mobile.startup/View', View );\nmw.mobileFrontend.define( 'mobile.startup/Browser', Browser );\nmw.mobileFrontend.define( 'mobile.startup/cache', cache );\nmw.mobileFrontend.define( 'mobile.startup/time', time );\nmw.mobileFrontend.define( 'mobile.startup/context', context );\nmw.mobileFrontend.define( 'mobile.startup/PageGateway', PageGateway );\nmw.mobileFrontend.define( 'mobile.startup/Button', Button );\nmw.mobileFrontend.define( 'mobile.startup/Icon', Icon );\nmw.mobileFrontend.define( 'mobile.startup/icons', icons );\nmw.mobileFrontend.define( 'mobile.startup/Panel', Panel );\nmw.mobileFrontend.define( 'mobile.startup/Section', Section );\nmw.mobileFrontend.define( 'mobile.startup/Thumbnail', Thumbnail );\nmw.mobileFrontend.define( 'mobile.startup/Page', Page );\nmw.mobileFrontend.define( 'mobile.startup/Anchor', Anchor );\nmw.mobileFrontend.define( 'mobile.startup/Skin', Skin );\nmw.mobileFrontend.define( 'mobile.startup/OverlayManager', OverlayManager );\nmw.mobileFrontend.define( 'mobile.startup/Overlay', Overlay );\nmw.mobileFrontend.define( 'mobile.startup/Drawer', Drawer );\nmw.mobileFrontend.define( 'mobile.startup/CtaDrawer', CtaDrawer );\nmw.mobileFrontend.define( 'mobile.startup/PageList', PageList );\nmw.mobileFrontend.define( 'mobile.startup/toast', toast );\nmw.mobileFrontend.define( 'mobile.startup/rlModuleLoader', rlModuleLoader );\nmw.mobileFrontend.define( 'mobile.startup/eventBusSingleton', eventBusSingleton );\nmw.mobileFrontend.deprecate( 'mobile.startup/LoadingOverlay', loadingOverlay, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search.util/extendSearchParams', extendSearchParams, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references/ReferencesDrawer', ReferencesDrawer, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references.gateway/ReferencesGateway', ReferencesGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references.gateway/ReferencesHtmlScraperGateway',\n\tReferencesHtmlScraperGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references.gateway/ReferencesMobileViewGateway',\n\tReferencesMobileViewGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.watchstar/Watchstar', Watchstar, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.pagelist.scripts/WatchstarPageList', WatchstarPageList, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.toggle/Toggler', Toggler, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search/SearchOverlay', SearchOverlay, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search/MobileWebSearchLogger', MobileWebSearchLogger, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search.api/SearchGateway', SearchGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.toc/TableOfContents', TableOfContents, 'mobile.startup' );\n\n// Expose the entry chunk through libraryTarget and library. This allows\n// arbitrary file access via ResourceLoader like\n// `mfModules['mobile.startup'].moduleLoader.require('mobile.startup/LoadingOverlay')`.\nmodule.exports = {\n\textendSearchParams: extendSearchParams,\n\tReferencesDrawer: ReferencesDrawer,\n\tReferencesGateway: ReferencesGateway,\n\tReferencesHtmlScraperGateway: ReferencesHtmlScraperGateway,\n\tReferencesMobileViewGateway: ReferencesMobileViewGateway,\n\tmoduleLoader: moduleLoader,\n\ttime: time,\n\tutil: util,\n\tactionParams: actionParams,\n\tView: View,\n\tBrowser: Browser,\n\tcontext: context,\n\tcache: cache,\n\tButton: Button,\n\tIcon: Icon,\n\ticons: icons,\n\tPanel: Panel,\n\tSection: Section,\n\tPage: Page,\n\tAnchor: Anchor,\n\tSkin: Skin,\n\tOverlayManager: OverlayManager,\n\tOverlay: Overlay,\n\tloadingOverlay: loadingOverlay,\n\tDrawer: Drawer,\n\tCtaDrawer: CtaDrawer,\n\tPageList: PageList,\n\ttoast: toast,\n\tWatchstar: Watchstar,\n\tWatchstarPageList: WatchstarPageList,\n\trlModuleLoader: rlModuleLoader,\n\teventBusSingleton: eventBusSingleton,\n\tToggler: Toggler,\n\ttoc: {\n\t\tTableOfContents: TableOfContents\n\t},\n\tsearch: {\n\t\tSearchOverlay: SearchOverlay,\n\t\tMobileWebSearchLogger: MobileWebSearchLogger,\n\t\tSearchGateway: SearchGateway\n\t},\n\tlazyImages: {\n\t\tlazyImageLoader: lazyImageLoader\n\t},\n\tScrollEndEventEmitter: ScrollEndEventEmitter,\n\tMessageBox: MessageBox\n};\n\n// Setup a single export for new modules to fold all of the above lines into.\n// One export to rule them all!\nmw.mobileFrontend.define( 'mobile.startup', module.exports );\n\nschemaMobileWebSearch.subscribeMobileWebSearchSchema();\n","var Drawer = require( './../Drawer' ),\n\tutil = require( './../util' ),\n\ticons = require( './../icons' ),\n\tmfExtend = require( './../mfExtend' ),\n\tReferencesGateway = require( './ReferencesGateway' ),\n\tIcon = require( './../Icon' );\n\n/**\n * Drawer for references\n * @class ReferencesDrawer\n * @extends Drawer\n * @uses Icon\n * @param {Object} props\n */\nfunction ReferencesDrawer( props ) {\n\tDrawer.call( this,\n\t\tutil.extend( {\n\t\t\tclassName: 'drawer position-fixed text references'\n\t\t}, props )\n\t);\n}\n\nmfExtend( ReferencesDrawer, Drawer, {\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @mixes Drawer#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.cancelButton HTML of the button that closes the drawer.\n\t * @property {boolean} defaults.error whether an error message is being shown\n\t */\n\tdefaults: util.extend( {}, Drawer.prototype.defaults, {\n\t\tspinner: icons.spinner().toHtmlString(),\n\t\tcancelButton: icons.cancel( 'gray' ).toHtmlString(),\n\t\tcitation: new Icon( {\n\t\t\tisSmall: true,\n\t\t\tname: 'citation',\n\t\t\tadditionalClassNames: 'text',\n\t\t\thasText: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-references-citation' )\n\t\t} ).toHtmlString(),\n\t\terrorClassName: new Icon( {\n\t\t\tname: 'error',\n\t\t\thasText: true,\n\t\t\tisSmall: true\n\t\t} ).getClassName()\n\t} ),\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tevents: {\n\t\t'click sup a': 'showNestedReference'\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tshow: function () {\n\t\treturn Drawer.prototype.show.apply( this, arguments );\n\t},\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'ReferencesDrawer.hogan' ),\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tcloseOnScroll: false,\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar windowHeight = util.getWindow().height();\n\n\t\tDrawer.prototype.postRender.apply( this );\n\n\t\t// make sure the drawer doesn't take up more than 50% of the viewport height\n\t\tif ( windowHeight / 2 < 400 ) {\n\t\t\tthis.$el.css( 'max-height', windowHeight / 2 );\n\t\t}\n\n\t\tthis.on( 'show', this.onShow.bind( this ) );\n\t\tthis.on( 'hide', this.onHide.bind( this ) );\n\t},\n\t/**\n\t * Make body not scrollable\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tonShow: function () {\n\t\tutil.getDocument().find( 'body' ).addClass( 'drawer-enabled' );\n\t},\n\t/**\n\t * Restore body scroll\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tonHide: function () {\n\t\tutil.getDocument().find( 'body' ).removeClass( 'drawer-enabled' );\n\t},\n\t/**\n\t * Fetch and render nested reference upon click\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @param {string} id of the reference to be retrieved\n\t * @param {Page} page to locate reference for\n\t * @param {string} refNumber the number it identifies as in the page\n\t * @return {jQuery.Deferred}\n\t */\n\tshowReference: function ( id, page, refNumber ) {\n\t\tvar drawer = this,\n\t\t\tgateway = this.options.gateway;\n\n\t\t// Save the page in case we have to show a nested reference.\n\t\tthis.options.page = page;\n\t\t// If API is being used we want to show the drawer with the spinner while query runs\n\t\tdrawer.show();\n\t\treturn gateway.getReference( id, page ).then( function ( reference ) {\n\t\t\tdrawer.render( {\n\t\t\t\ttitle: refNumber,\n\t\t\t\ttext: reference.text\n\t\t\t} );\n\t\t}, function ( err ) {\n\t\t\tif ( err === ReferencesGateway.ERROR_NOT_EXIST ) {\n\t\t\t\tdrawer.hide();\n\t\t\t} else {\n\t\t\t\tdrawer.render( {\n\t\t\t\t\terror: true,\n\t\t\t\t\ttitle: refNumber,\n\t\t\t\t\ttext: mw.msg( 'mobile-frontend-references-citation-error' )\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\t/**\n\t * Fetch and render nested reference upon click\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t * @return {boolean} False to cancel the native event\n\t */\n\tshowNestedReference: function ( ev ) {\n\t\tvar $dest = this.$( ev.target );\n\n\t\tthis.showReference( $dest.attr( 'href' ), this.options.page, $dest.text() );\n\t\t// Don't hide the already shown drawer via propagation\n\t\t// and stop default scroll behaviour.\n\t\treturn false;\n\t}\n} );\n\nmodule.exports = ReferencesDrawer;\n","/**\n * Coordinates the logging of MobileWebSchema events.\n * Implements schema defined at https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n *\n * @class\n */\nfunction MobileWebSearchLogger() {\n\tthis.userSessionToken = null;\n\tthis.searchSessionToken = null;\n}\n\nMobileWebSearchLogger.prototype = {\n\t/**\n\t * Sets the internal state required to deal with logging user session\n\t * data.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newUserSession: function () {\n\t\tthis.userSessionToken = mw.user.generateRandomSessionId();\n\t},\n\n\t/**\n\t * Sets the internal state required to deal with logging search session\n\t * data.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newSearchSession: function () {\n\t\tthis.searchSessionToken = mw.user.generateRandomSessionId();\n\t\tthis.searchSessionCreatedAt = new Date().getTime();\n\t},\n\n\t/**\n\t * Handles the 'search-show' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchShow: function () {\n\t\tthis._newUserSession();\n\t},\n\n\t/**\n\t * Handles the 'search-start' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchStart: function () {\n\t\tthis._newSearchSession();\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'session-start',\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: 0\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-results' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {Object[]} event.results\n\t */\n\tonSearchResults: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'impression-results',\n\t\t\tresultSetType: 'prefix',\n\t\t\tnumberOfResults: event.results.length,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\t// FIXME: Unless I'm mistaken, the timeToDisplayResults\n\t\t\t// property isn't necessary.\n\t\t\ttimeToDisplayResults: timeOffsetSinceStart,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-result-click' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {number} event.index\n\t *  The zero-based index of the result in the set of results.\n\t */\n\tonSearchResultClick: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'click-result',\n\t\t\t// NOTE: clickIndex is 1-based.\n\t\t\tclickIndex: event.resultIndex + 1,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t}\n};\n\n/**\n * Convenience function that wires up an instance of the\n * MobileWebSearchLogger class to the search-* events emitted by the\n * search overlay.\n * @memberof MobileWebSearchLogger\n * @param {SearchOverlay} searchOverlay\n */\nMobileWebSearchLogger.register = function ( searchOverlay ) {\n\tvar logger = new MobileWebSearchLogger();\n\n\tsearchOverlay.on( 'search-show', logger.onSearchShow.bind( logger ) );\n\tsearchOverlay.on( 'search-start', logger.onSearchStart.bind( logger ) );\n\tsearchOverlay.on( 'search-results', logger.onSearchResults.bind( logger ) );\n\tsearchOverlay.on( 'search-result-click', logger.onSearchResultClick.bind( logger ) );\n};\n\nmodule.exports = MobileWebSearchLogger;\n","var\n\tmfExtend = require( '../mfExtend' ),\n\tOverlay = require( '../Overlay' ),\n\tutil = require( '../util' ),\n\tAnchor = require( '../Anchor' ),\n\tIcon = require( '../Icon' ),\n\tWatchstarPageList = require( '../watchstar/WatchstarPageList' ),\n\tSEARCH_DELAY = 300,\n\tSEARCH_SPINNER_DELAY = 2000,\n\tfeedbackLink = mw.config.get( 'wgCirrusSearchFeedbackLink' );\n\n/**\n * Overlay displaying search results\n * @class SearchOverlay\n * @extends Overlay\n * @uses SearchGateway\n * @uses Icon\n *\n * @param {Object} params Configuration options\n * @fires SearchOverlay#search-show\n * @fires SearchOverlay#search-start\n * @fires SearchOverlay#search-results\n * @fires SearchOverlay#search-result-click\n */\nfunction SearchOverlay( params ) {\n\tvar defaultParams = {\n\t\t\tisBorderBox: false,\n\t\t\tclassName: 'overlay search-overlay'\n\t\t},\n\t\toptions = util.extend( {}, defaultParams, params );\n\n\tOverlay.call( this, options );\n\n\tthis.api = options.api;\n\t// eslint-disable-next-line new-cap\n\tthis.gateway = new options.gatewayClass( this.api );\n\n\tthis.router = options.router;\n}\n\nmfExtend( SearchOverlay, Overlay, {\n\t/**\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, Overlay.prototype.templatePartials, {\n\t\theader: mw.template.get( 'mobile.startup', 'search/SearchHeader.hogan' ),\n\t\tcontent: mw.template.get( 'mobile.startup', 'search/SearchContent.hogan' ),\n\t\ticon: Icon.prototype.template\n\t} ),\n\t/**\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @mixes Overlay#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {SearchGateway} defaults.gatewayClass The class to use to setup an API gateway.\n\t *  FIXME: Should be removed when wikidata descriptions in stable (T101719)\n\t * @property {Router} defaults.router instance\n\t * @property {Object} defaults.clearIcon options for the button that clears the search text.\n\t * @property {Object} defaults.searchContentIcon options for the button that allows you to\n\t *  search within content\n\t * @property {string} defaults.searchTerm Search text.\n\t * @property {string} defaults.placeholderMsg Search input placeholder text.\n\t * @property {string} defaults.clearMsg Tooltip for clear button that appears when you type\n\t * into search box.\n\t * @property {string} defaults.searchContentMsg Caption for a button performing full text\n\t * search of a given search query.\n\t * @property {string} defaults.noResultsMsg Message informing user that no pages were found\n\t * for a given query.\n\t * @property {string} defaults.searchContentNoResultsMsg Used when no pages with matching\n\t * titles were found.\n\t * @property {string} defaults.action The value of wgScript\n\t * @property {Object} defaults.feedback options for the feedback link\n\t *  below the search results\n\t */\n\tdefaults: util.extend( {}, Overlay.prototype.defaults, {\n\t\theaderChrome: true,\n\t\tclearIcon: new Icon( {\n\t\t\ttagName: 'button',\n\t\t\tname: 'search-clear',\n\t\t\tisSmall: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-clear-search' ),\n\t\t\tadditionalClassNames: 'clear'\n\t\t} ).options,\n\t\tsearchContentIcon: new Icon( {\n\t\t\ttagName: 'a',\n\t\t\t// When this icon is clicked we want to reset the hash for subsequent views\n\t\t\thref: '#',\n\t\t\tname: 'search-content',\n\t\t\tlabel: mw.msg( 'mobile-frontend-search-content' )\n\t\t} ).options,\n\t\tsearchTerm: '',\n\t\tplaceholderMsg: '',\n\t\tnoResultsMsg: mw.msg( 'mobile-frontend-search-no-results' ),\n\t\tsearchContentNoResultsMsg: mw.message( 'mobile-frontend-search-content-no-results' ).parse(),\n\t\taction: mw.config.get( 'wgScript' ),\n\t\tfeedback: !feedbackLink ? false : {\n\t\t\tfeedback: new Anchor( {\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-search-feedback-link-text' ),\n\t\t\t\thref: feedbackLink\n\t\t\t} ).options,\n\t\t\tprompt: mw.msg( 'mobile-frontend-search-feedback-prompt' )\n\t\t}\n\t} ),\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tevents: util.extend( {}, Overlay.prototype.events, {\n\t\t'input input': 'onInputInput',\n\t\t'click .clear': 'onClickClear',\n\t\t'click .search-content': 'onClickSearchContent',\n\t\t'click .overlay-content': 'onClickOverlayContent',\n\t\t'click .overlay-content > div': 'onClickOverlayContentDiv',\n\t\t'touchstart .results': 'hideKeyboardOnScroll',\n\t\t'mousedown .results': 'hideKeyboardOnScroll',\n\t\t'click .results a': 'onClickResult'\n\t} ),\n\n\t/**\n\t * Make sure search header is docked to the top of the screen when the\n\t * user begins typing so that there is adequate space for search results\n\t * above the keyboard. (This is only a potential issue when sitenotices\n\t * are displayed.)\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonInputInput: function () {\n\t\tthis.performSearch();\n\t\tthis.$clear.toggle( this.$input.val() !== '' );\n\t},\n\n\t/**\n\t * Initialize the button that clears the search field\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @return {boolean} False to cancel the native event\n\t */\n\tonClickClear: function () {\n\t\tthis.$input.val( '' ).focus();\n\t\tthis.performSearch();\n\t\tthis.$clear.hide();\n\t\t// In beta the clear button is on top of the search input.\n\t\t// Stop propagation so that the input doesn't receive the click.\n\t\treturn false;\n\t},\n\n\t/**\n\t * Initialize 'search within pages' functionality\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickSearchContent: function () {\n\t\tvar $el = util.getDocument().find( 'body' ),\n\t\t\t$form = this.$( 'form' );\n\n\t\t// Add fulltext input to force fulltext search\n\t\tthis.parseHTML( '<input>' )\n\t\t\t.attr( {\n\t\t\t\ttype: 'hidden',\n\t\t\t\tname: 'fulltext',\n\t\t\t\tvalue: 'search'\n\t\t\t} )\n\t\t\t.appendTo( $form );\n\t\t// history.back queues a task so might run after this call. Thus we use setTimeout\n\t\t// http://www.w3.org/TR/2011/WD-html5-20110113/webappapis.html#queue-a-task\n\t\tsetTimeout( function () {\n\t\t\t// Firefox doesn't allow submission of a form not in the DOM\n\t\t\t// so temporarily re-add it\n\t\t\t$form.appendTo( $el );\n\t\t\t$form.trigger( 'submit' );\n\t\t}, 0 );\n\t},\n\n\t/**\n\t * Tapping on background only should hide the overlay\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickOverlayContent: function () {\n\t\tthis.$( '.cancel' ).trigger( 'click' );\n\t},\n\n\t/**\n\t * Stop propagation\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonClickOverlayContentDiv: function ( ev ) {\n\t\tev.stopPropagation();\n\t},\n\n\t/**\n\t * Hide the keyboard when scrolling starts (avoid weird situation when\n\t * user taps on an item, the keyboard hides and wrong item is clicked).\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\thideKeyboardOnScroll: function () {\n\t\tthis.$input.blur();\n\t},\n\n\t/**\n\t * Handle the user clicking a result.\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonClickResult: function ( ev ) {\n\t\tvar $link = this.$( ev.currentTarget ),\n\t\t\t$result = $link.closest( 'li' );\n\t\t/**\n\t\t * Fired when the user clicks a search result\n\t\t * @event SearchOverlay#search-result-click\n\t\t * @type {Object}\n\t\t * @property {jQuery.Object} result The jQuery-wrapped DOM element that\n\t\t *  the user clicked\n\t\t * @property {number} resultIndex The zero-based index of the\n\t\t *  result in the set of results\n\t\t * @property {jQuery.Event} originalEvent The original event\n\t\t */\n\t\tthis.emit( 'search-result-click', {\n\t\t\tresult: $result,\n\t\t\tresultIndex: this.$results.index( $result ),\n\t\t\toriginalEvent: ev\n\t\t} );\n\n\t\t// FIXME: ugly hack that removes search from browser history\n\t\t// when navigating to search results\n\t\tev.preventDefault();\n\t\tthis.router.back().then( function () {\n\t\t\t// Router.navigate does not support changing href.\n\t\t\t// FIXME: Needs upstream change T189173\n\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\twindow.location.href = $link.attr( 'href' );\n\t\t} );\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this,\n\t\t\ttimer;\n\n\t\tOverlay.prototype.postRender.call( this );\n\n\t\tthis.$input = this.$( 'input' );\n\t\tthis.$clear = this.$( '.clear' );\n\t\tthis.$searchContent = this.$( '.search-content' ).hide();\n\t\tthis.$searchFeedback = this.$( '.search-feedback' ).hide();\n\t\tthis.$resultContainer = this.$( '.results-list-container' );\n\n\t\t/**\n\t\t * Hide the spinner and abort timed spinner shows.\n\t\t */\n\t\tfunction clearSearch() {\n\t\t\tself.$spinner.hide();\n\t\t\tclearTimeout( timer );\n\t\t}\n\n\t\t// Show a spinner on top of search results\n\t\tthis.$spinner = this.$( '.spinner-container' );\n\t\tthis.on( 'search-start', function ( searchData ) {\n\t\t\tif ( timer ) {\n\t\t\t\tclearSearch();\n\t\t\t}\n\t\t\ttimer = setTimeout( function () {\n\t\t\t\tself.$spinner.show();\n\t\t\t}, SEARCH_SPINNER_DELAY - searchData.delay );\n\t\t} );\n\t\tthis.on( 'search-results', clearSearch );\n\n\t\t// Hide the clear button if the search input is empty\n\t\tif ( self.$input.val() === '' ) {\n\t\t\tthis.$clear.hide();\n\t\t}\n\t},\n\n\t/**\n\t * Trigger a focus() event on search input in order to\n\t * bring up the virtual keyboard.\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshowKeyboard: function () {\n\t\tvar len = this.$input.val().length;\n\t\tthis.$input.focus();\n\t\t// Cursor to the end of the input\n\t\tif ( this.$input[0].setSelectionRange ) {\n\t\t\tthis.$input[0].setSelectionRange( len, len );\n\t\t}\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\t// Overlay#show defines the actual overlay visibility.\n\t\tOverlay.prototype.show.apply( this, arguments );\n\n\t\tthis.showKeyboard();\n\t\t/**\n\t\t * Fired after the search overlay is shown\n\t\t * @event SearchOverlay#search-show\n\t\t */\n\t\tthis.emit( 'search-show' );\n\t},\n\n\t/**\n\t * Fade out if the browser supports animations\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\thide: function () {\n\t\tvar self = this,\n\t\t\t$html = util.getDocument();\n\n\t\tif ( $html.hasClass( 'animations' ) ) {\n\t\t\tself.$el.addClass( 'fade-out' );\n\t\t\tsetTimeout( function () {\n\t\t\t\tOverlay.prototype.hide.apply( self, arguments );\n\t\t\t}, 500 );\n\t\t} else {\n\t\t\tOverlay.prototype.hide.apply( self, arguments );\n\t\t}\n\t\treturn true;\n\t},\n\n\t/**\n\t * Perform search and render results inside current view.\n\t * FIXME: Much of the logic for caching and pending queries inside this function should\n\t * actually live in SearchGateway, please move out.\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tperformSearch: function () {\n\t\tvar\n\t\t\tself = this,\n\t\t\tapi = this.api,\n\t\t\tquery = this.$input.val(),\n\t\t\tdelay = this.gateway.isCached( query ) ? 0 : SEARCH_DELAY;\n\n\t\t// it seems the input event can be fired when virtual keyboard is closed\n\t\t// (Chrome for Android)\n\t\tif ( query !== this.lastQuery ) {\n\t\t\tif ( self._pendingQuery ) {\n\t\t\t\tself._pendingQuery.abort();\n\t\t\t}\n\t\t\tclearTimeout( this.timer );\n\n\t\t\tif ( query.length ) {\n\t\t\t\tthis.timer = setTimeout( function () {\n\t\t\t\t\tvar xhr;\n\t\t\t\t\t/**\n\t\t\t\t\t * Fired immediately before the search API request is sent\n\t\t\t\t\t * @event SearchOverlay#search-start\n\t\t\t\t\t * @property {Object} data related to the current search\n\t\t\t\t\t */\n\t\t\t\t\tself.emit( 'search-start', {\n\t\t\t\t\t\tquery: query,\n\t\t\t\t\t\tdelay: delay\n\t\t\t\t\t} );\n\n\t\t\t\t\txhr = self.gateway.search( query );\n\t\t\t\t\tself._pendingQuery = xhr.then( function ( data ) {\n\t\t\t\t\t\t// check if we're getting the rights response in case of out of\n\t\t\t\t\t\t// order responses (need to get the current value of the input)\n\t\t\t\t\t\tif ( data && data.query === self.$input.val() ) {\n\t\t\t\t\t\t\tself.$el.toggleClass( 'no-results', data.results.length === 0 );\n\t\t\t\t\t\t\tself.$searchContent\n\t\t\t\t\t\t\t\t.show()\n\t\t\t\t\t\t\t\t.find( 'p' )\n\t\t\t\t\t\t\t\t.hide()\n\t\t\t\t\t\t\t\t.filter( data.results.length ? '.with-results' : '.without-results' )\n\t\t\t\t\t\t\t\t.show();\n\n\t\t\t\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\t\t\t\tnew WatchstarPageList( {\n\t\t\t\t\t\t\t\tapi: api,\n\t\t\t\t\t\t\t\tfunnel: 'search',\n\t\t\t\t\t\t\t\tpages: data.results,\n\t\t\t\t\t\t\t\tel: self.$resultContainer\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\tself.$results = self.$resultContainer.find( 'li' );\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Fired when search API returns results\n\t\t\t\t\t\t\t * @event SearchOverlay#search-results\n\t\t\t\t\t\t\t * @type {Object}\n\t\t\t\t\t\t\t * @property {Object[]} results The results returned by the search\n\t\t\t\t\t\t\t *  API\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tself.emit( 'search-results', {\n\t\t\t\t\t\t\t\tresults: data.results\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ).promise( { abort: function () { xhr.abort(); } } );\n\t\t\t\t}, delay );\n\t\t\t} else {\n\t\t\t\tself.resetSearch();\n\t\t\t}\n\n\t\t\tthis.lastQuery = query;\n\t\t}\n\t},\n\t/**\n\t * Clear results\n\t *\n\t * @private\n\t */\n\tresetSearch: function () {\n\t\tthis.$spinner.hide();\n\t\tthis.$searchContent.hide();\n\t\tthis.$searchFeedback.hide();\n\t\tthis.$resultContainer.empty();\n\t}\n} );\n\nmodule.exports = SearchOverlay;\n","var context = require( '../context' );\n\nfunction subscribeMobileWebSearchSchema() {\n\tmw.loader.using( [\n\t\t'ext.eventLogging.subscriber'\n\t] ).then( function () {\n\t\tvar // Schema provided by ext.eventLogging.subscriber class\n\t\t\tSchema = mw.eventLog.Schema, // resource-modules-disable-line\n\t\t\t/**\n\t\t * MobileWebSearch schema\n\t\t * https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n\t\t */\n\t\t\tschemaMobileWebSearch = new Schema(\n\t\t\t\t'MobileWebSearch',\n\t\t\t\t// todo: use a default value of 0 once config lands in production.\n\t\t\t\tmw.config.get( 'wgMFSchemaSearchSampleRate', 1 / 1000 ),\n\t\t\t\t/**\n\t\t\t * @property {Object} defaults Default options hash.\n\t\t\t * @property {string} defaults.platform Always \"mobileweb\"\n\t\t\t * @property {string} defaults.platformVersion The version of MobileFrontend\n\t\t\t *  that the user is using. One of \"stable\" or \"beta\"\n\t\t\t */\n\t\t\t\t{\n\t\t\t\t\tplatform: 'mobileweb',\n\t\t\t\t\tplatformVersion: context.getMode()\n\t\t\t\t}\n\t\t\t);\n\n\t\tmw.trackSubscribe( 'mf.schemaMobileWebSearch', function ( topic, data ) {\n\t\t\tschemaMobileWebSearch.log( data );\n\t\t} );\n\t} );\n}\n\nmodule.exports = {\n\tsubscribeMobileWebSearchSchema: subscribeMobileWebSearchSchema\n};\n","var View = require( '../View' ),\n\tmfExtend = require( '../mfExtend' ),\n\tutil = require( '../util' ),\n\tIcon = require( '../Icon' );\n\n/**\n * View for table of contents\n * @class TableOfContents\n * @extends View\n * @uses Icon\n * @param {Object} props\n * @param {Section[]} props.sections\n */\nfunction TableOfContents( props ) {\n\tView.call( this, util.extend( {\n\t\tclassName: 'toc-mobile',\n\t\tcontentsMsg: mw.msg( 'toc' )\n\t}, props ) );\n}\n\nmfExtend( TableOfContents, View, {\n\t/**\n\t * @memberof TableOfContents\n\t * @instance\n\t */\n\ttemplatePartials: {\n\t\ttocHeading: mw.template.get( 'mobile.startup', 'TableOfContentsHeading.hogan' )\n\t},\n\t/**\n\t * @memberof TableOfContents\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'TableOfContents.hogan' ),\n\t/** @inheritdoc */\n\tpostRender: function () {\n\t\tnew Icon( {\n\t\t\tname: 'toc',\n\t\t\tadditionalClassNames: 'toc-button'\n\t\t} ).$el.prependTo( this.$( 'h2' ) );\n\t}\n} );\n\nmodule.exports = TableOfContents;\n"],"sourceRoot":""}