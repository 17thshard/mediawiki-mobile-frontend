{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.startup/Toggler.js","webpack://mfModules.[name]/./src/mobile.startup/languageOverlay/getDeviceLanguage.js","webpack://mfModules.[name]/./src/mobile.startup/languageOverlay/languageOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/mediaViewer/overlay.js","webpack://mfModules.[name]/./src/mobile.startup/mobile.startup.js","webpack://mfModules.[name]/./src/mobile.startup/notifications/overlay.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesDrawer.js","webpack://mfModules.[name]/./src/mobile.startup/search/MobileWebSearchLogger.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/search/schemaMobileWebSearch.js","webpack://mfModules.[name]/./src/mobile.startup/talk/overlay.js","webpack://mfModules.[name]/./src/mobile.startup/toc/TableOfContents.js"],"names":["browser","require","getSingleton","util","escapeHash","arrowOptions","name","additionalClassNames","Icon","Toggler","options","this","eventBus","_enable","$container","prefix","page","isClosed","getExpandedSections","expandedSections","JSON","parse","mw","storage","get","title","saveExpandedSections","set","stringify","expandStoredSections","toggler","$sectionHeading","$headline","find","each","parents","attr","hasClass","toggle","cleanObsoleteStoredSections","now","Date","getTime","Object","keys","forEach","sections","section","timestamp","Math","floor","prototype","$heading","indicator","wasExpanded","is","data","$content","next","toggleClass","remove","rotation","prependTo","aria-pressed","aria-expanded","emit","expanded","isReferenceSection","Boolean","isWideScreen","headline","isSectionOpen","storeSectionToggleState","reveal","selector","$target","length","prev","window","scrollTo","offset","top","e","tagName","expandSections","$link","self","collapseSectionsByDefault","config","checkHash","hash","location","indexOf","decodeURIComponent","eq","prop","undefined","children","i","$indicator","id","addClass","tabindex","aria-haspopup","aria-controls","on","ev","target","href","preventDefault","replaceWith","$el","which","stopPropagation","enableKeyboardActions","internalRedirect","internalRedirectHash","split","checkInternalRedirectAndHash","getWindow","_getExpandedSections","_expandStoredSections","_cleanObsoleteStoredSections","module","exports","navigator","lang","languages","language","userLanguage","browserLanguage","systemLanguage","toLowerCase","m","getDeviceLanguage","Overlay","promisedView","loadLanguageSearcher","gateway","loader","using","then","getPageLanguages","variants","deviceLanguage","languageOverlay","pageGateway","make","heading","msg","className","test","header","icons","headers","cancel","Promise","all","ImageCarousel","moduleLoader","schemaMobileWebSearch","mfExtend","context","time","View","PageGateway","Browser","Button","ReferencesDrawer","ReferencesGateway","ReferencesHtmlScraperGateway","ReferencesMobileViewGateway","Page","Anchor","Skin","OverlayManager","loadingOverlay","CtaDrawer","toast","Watchstar","rlModuleLoader","eventBusSingleton","toc","TableOfContents","notifications","overlay","search","SearchOverlay","MobileWebSearchLogger","SearchGateway","lazyImages","lazyImageLoader","talk","mediaViewer","mobileFrontend","define","subscribeMobileWebSearchSchema","onCountChange","onNotificationListRendered","markAllReadButton","oouiPromise","OO","ui","ButtonWidget","icon","class","$element","markAllReadButtonView","hide","message","escaped","footerAnchor","getUrl","progressive","label","headerActions","isBorderBox","list","echo","Drawer","props","call","extend","events","click sup a","defaults","errorClassName","hasText","isSmall","getClassName","show","apply","arguments","template","closeOnScroll","postRender","windowHeight","height","append","text","spinner","css","onShow","bind","onHide","getDocument","removeClass","showReference","refNumber","drawer","getReference","reference","render","err","ERROR_NOT_EXIST","error","showNestedReference","$dest","userSessionToken","searchSessionToken","_newUserSession","user","generateRandomSessionId","_newSearchSession","searchSessionCreatedAt","onSearchShow","onSearchStart","track","action","timeOffsetSinceStart","onSearchResults","event","resultSetType","numberOfResults","results","timeToDisplayResults","onSearchResultClick","clickIndex","resultIndex","register","searchOverlay","logger","formHeader","WatchstarPageList","feedbackLink","params","placeholderMsg","input input","click .clear","click .search-content","click .overlay-content","click .overlay-content > div","touchstart .results","mousedown .results","click .results a","api","gatewayClass","router","templatePartials","content","headerChrome","clearIcon","searchContentIcon","searchContentLabel","searchTerm","noResultsMsg","searchContentNoResultsMsg","feedback","prompt","onInputInput","performSearch","$clear","$input","val","onClickClear","trigger","onClickSearchContent","$form","parseHTML","type","value","appendTo","setTimeout","onClickOverlayContent","onClickOverlayContentDiv","hideKeyboardOnScroll","onClickResult","currentTarget","$result","closest","result","$results","index","originalEvent","back","timer","clearSearch","$spinner","clearTimeout","$searchContent","$searchFeedback","$resultContainer","searchData","delay","showKeyboard","len","setSelectionRange","query","isCached","lastQuery","_pendingQuery","abort","xhr","filter","funnel","pages","el","promise","resetSearch","empty","Schema","eventLog","platform","platformVersion","getMode","trackSubscribe","topic","log","isAnon","getSections","talkBoard","contentsMsg","tocHeading"],"mappings":"8KAAA,IAAIA,EAAUC,EAAS,mCAAcC,eACpCC,EAAOF,EAAS,gCAChBG,EAAaD,EAAKC,WAClBC,GACCC,KAAM,QACNC,qBAAsB,aAEvBC,EAAOP,EAAS,gCAsBjB,SAASQ,EAASC,GACjBC,KAAKC,SAAWF,EAAQE,SACxBD,KAAKE,QAASH,EAAQI,WAAYJ,EAAQK,OAAQL,EAAQM,KAAMN,EAAQO,UAUzE,SAASC,EAAqBF,GAC7B,IAAIG,EAAmBC,KAAKC,MAAOC,GAAGC,QAAQC,IAAK,qBAAwB,MAE3E,OADAL,EAAiBH,EAAKS,OAASN,EAAiBH,EAAKS,WAC9CN,EAOR,SAASO,EAAsBP,GAC9BG,GAAGC,QAAQI,IACV,mBAAoBP,KAAKQ,UAAWT,IAiCtC,SAASU,EAAsBC,EAAShB,EAAYE,GACnD,IAAIe,EAAiBC,EACpBb,EAAmBD,EAAqBF,GAC3BF,EAAWmB,KAAM,yBAEpBC,KAAM,WAChBF,EAAYlB,EAAWmB,KAAMtB,MAC7BoB,EAAkBC,EAAUG,QAAS,oBAGpChB,EAAiBH,EAAKS,OAAOO,EAAUI,KAAM,SAC7CL,EAAgBM,SAAU,eAE1BP,EAAQQ,OAAQP,EAAiBf,KAUpC,SAASuB,EAA6BvB,GACrC,IAAIwB,GAAQ,IAAIC,MAASC,UACxBvB,EAAmBD,EAAqBF,GAGzC2B,OAAOC,KAAMzB,GAAmB0B,QAAS,SAAW7B,GACnD,IAAI8B,EAAW3B,EAAkBH,GAEjC2B,OAAOC,KAAME,GAAWD,QAAS,SAAWE,GAC3C,IAAIC,EAAYF,EAAUC,GACTE,KAAKC,OAASV,EAAMQ,GAAc,IAAO,GAAK,GAAK,KAC7C,UACf7B,EAAiBH,GAAM+B,OAIjCrB,EAAsBP,GAUvBV,EAAQ0C,UAAUb,OAAS,SAAWc,GACrC,IAAIC,EACHC,EAAcF,EAASG,GAAI,eAC3BvC,EAAOoC,EAASI,KAAM,QACtBC,EAAWL,EAASM,OAErBN,EAASO,YAAa,cACtBP,EAASI,KAAM,aAAcI,SAE7BvD,EAAawD,SAAWP,EAAc,EAAI,IAC1CD,EAAY,IAAI7C,EAAMH,GAAeyD,UAAWV,GAChDA,EAASI,KAAM,YAAaH,GAE5BI,EACEE,YAAa,cACbvB,MACA2B,gBAAiBT,EACjBU,iBAAkBV,IAQpB3C,KAAKC,SAASqD,KAAM,mBACnBC,SAAUZ,EACVtC,KAAMA,EACNmD,mBAAoBC,QAASX,EAASrB,KAAM,8BAC5CgB,SAAUA,IAGLpD,EAAQqE,gBAvGf,SAAkCjB,EAAUpC,GAC3C,IAAIsD,EAAWlB,EAASnB,KAAM,QAASG,KAAM,MAC5CmC,EAAgBnB,EAASf,SAAU,cACnClB,EAAmBD,EAAqBF,GAEpCsD,IACCC,EACJpD,EAAiBH,EAAKS,OAAO6C,IAAc,IAAI7B,MAASC,iBAEjDvB,EAAiBH,EAAKS,OAAO6C,GAGrC5C,EAAsBP,IA4FtBqD,CAAyBpB,EAAUpC,IA6BrCP,EAAQ0C,UAAUsB,OAAS,SAAWC,EAAU5D,GAC/C,IAAI6D,EAASvB,EAGb,KAECA,GADAuB,EAAU7D,EAAWmB,KAAM7B,EAAYsE,KACpBvC,QAAS,yBAEbyC,SACdxB,EAAWuB,EAAQxC,QAAS,sBAAuB0C,KAAM,yBAErDzB,EAASwB,SAAWxB,EAASf,SAAU,eAC3C1B,KAAK2B,OAAQc,GAETA,EAASwB,QAEbE,OAAOC,SAAU,EAAGJ,EAAQK,SAASC,KAErC,MAAQC,MAeXzE,EAAQ0C,UAAUtC,QAAU,SAAWC,EAAYC,EAAQC,EAAMC,GAChE,IAAIkE,EAASC,EAAgB/B,EAAWI,EAEvC4B,EACAC,EAAO3E,KACP4E,EAA4BjE,GAAGkE,OAAOhE,IAAK,iCAqF5C,SAASiE,IACR,IAAIC,EAAOZ,OAAOa,SAASD,KACE,IAAxBA,EAAKE,QAAS,MAGlBN,EAAKb,OAAQoB,mBAAoBH,GAAQ5E,GArF3CqE,EADgBrE,EAAWmB,KAAM,kDAAmD6D,GAAI,GAChEC,KAAM,YAAe,UAEVC,IAA9BT,IAEJA,GAA4B,GAE7BH,GAAkBG,GAAoE,SAAvCjE,GAAGC,QAAQC,IAAK,kBAE/DV,EAAWmF,SAAUd,GAAUjD,KAAM,SAAWgE,GAC/C,IAAI/B,EACHf,EAAWtC,EAAWmB,KAAMtB,MAC5BwF,EAAa/C,EAASnB,KAAM,cAC5BmE,EAAKrF,EAAS,qBAAuBmF,EAGjC9C,EAASM,OAAOH,GAAI,SACxBE,EAAWL,EAASM,KAAM,OAC1BS,EAAqBC,QAASX,EAASrB,KAAM,8BAC7CgB,EACEiD,SAAU,wBACV7C,KAAM,iBAAkB0C,GACxB1C,KAAM,OAAQxC,GACdoB,MACAkE,SAAU,EACVC,gBAAiB,OACjBC,gBAAiBJ,IAEjBK,GAAI,QAAS,SAAWC,GAIlBA,EAAGC,OAAOC,OAEfF,EAAGG,iBACHvB,EAAKhD,OAAQc,MAIhB/C,EAAawD,SAAWuB,EAAiB,IAAM,EAC/C/B,EAAY,IAAI7C,EAAMH,GACjB8F,EAAWvB,OAEfuB,EAAWW,YAAazD,EAAU0D,KAElC1D,EAAUS,UAAWV,GAEtBA,EAASI,KAAM,YAAaH,EAAU0D,KACtCtD,EACE4C,SAAU,qBACVP,GAAI,GACJ1D,MAIAgE,GAAIA,EACJrC,eAAgB,QAChBC,gBAAiB,UAtHtB,SAAgClC,EAASsB,GACxCA,EAASqD,GAAI,WAAY,SAAWC,GACjB,KAAbA,EAAGM,OAA6B,KAAbN,EAAGM,OAE1BlF,EAAQQ,OAAQc,KAEdnB,KAAM,KAAMwE,GAAI,mBAAoB,SAAWC,GAClDA,EAAGO,oBAkHFC,CAAuB5B,EAAMlC,IAE3Be,KACClD,GAAYjB,EAAQqE,gBAAkBe,IAOxCE,EAAKhD,OAAQc,MA0BhB,WACC,IAAI+D,EAAmB7F,GAAGkE,OAAOhE,IAAK,+BACrC4F,IAAuBD,GAAmBA,EAAiBE,MAAO,KAAM,GAEpED,IACJtC,OAAOa,SAASD,KAAO0B,EACvB9B,EAAKb,OAAQ2C,EAAsBtG,IAKrCwG,GACA7B,KAGAJ,EAAQvE,EAAWmB,KAAM,wBACnBwE,GAAI,QAAS,gBAGYT,IAAzBX,EAAMjD,KAAM,SACjBiD,EAAMjD,KAAM,QAASwD,QAAS,MAAS,GAEtCH,MAGFtF,EAAKoH,YAAYd,GAAI,aAAc,WAClChB,OAGKzF,EAAQqE,gBAAkBrD,IAC/Ba,EAAsBlB,KAAMG,EAAYE,GACxCuB,EAA6BvB,KAI/BP,EAAQ+G,qBAAuBtG,EAC/BT,EAAQgH,sBAAwB5F,EAChCpB,EAAQiH,6BAA+BnF,EAEvCoF,EAAOC,QAAUnH,6ECtWjBkH,EAAOC,QATP,SAA4BC,GAC3B,IAAMC,EAAOD,EAAUE,UACtBF,EAAUE,UAAW,GACrBF,EAAUG,UAAYH,EAAUI,cAC9BJ,EAAUK,iBAAmBL,EAAUM,eAE1C,OAAOL,EAAOA,EAAKM,mBAAgBpC,8ECbpC,IACCqC,EAAIpI,EAAS,iDACbqI,EAAoBrI,EAAS,6DAC7BsI,EAAUtI,EAAS,mCACnBuI,EAAevI,EAAS,wCAOzB,SAASwI,EAAsBC,GAC9B,OAAOpH,GAAGqH,OAAOC,MAAO,+BAAgCC,KAAM,WAC7D,OAAOH,EAAQI,iBAAkBxH,GAAGkE,OAAOhE,IAAK,cAAgBF,GAAGkE,OAAOhE,IAAK,qBAC5EqH,KAAM,SAAWrF,GAGpB,OAAO,IAFkB6E,EAAEpI,QAAS,gDAE7B,EACN8H,UAAWvE,EAAKuE,UAChBgB,SAAUvF,EAAKuF,SACfC,eAAgBV,EAAmBT,eAYtC,SAASoB,EAAiBC,GACzB,OAAOX,EAAQY,MAEbC,QAAS9H,GAAG+H,IAAK,oCACjBC,UAAW,4BACTd,EAAcC,EAAsBS,KAKzCD,EAAgBM,MACfd,qBAAsBA,GAGvBd,EAAOC,QAAUqB,iEC9CjB,IAAIZ,EAAIpI,EAAS,iDAChBuI,EAAevI,EAAS,wCACxBE,EAAOF,EAAS,gCAChBuJ,EAASvJ,EAAS,mCAAeuJ,OACjCC,EAAQxJ,EAAS,iCACjBsI,EAAUtI,EAAS,mCA4BpB0H,EAAOC,QArBP,SAA6BlH,GAkB5B,OAjBc6H,EAAQY,MAEpBO,SACCF,EAAQ,MAAQC,EAAME,OAAQ,UAE/BL,UAAW,wBAEZd,EACCrI,EAAKyJ,QAAQC,KACZvI,GAAGqH,OAAOC,MAAO,wBACdC,KAAM,WAET,OAAO,IAAIiB,EADSzB,EAAEpI,QAAS,sBAAuB6J,eAC5BpJ,kECzB9B,IACCqJ,EAAe9J,EAAS,iDACxB+J,EAAwB/J,EAAS,wDAKlC0H,EAAOC,SACNmC,aAAcA,EACdE,SAAUhK,EAAS,oCACnBiK,QAASjK,EAAS,mCAClBkK,KAAMlK,EAAS,gCACfE,KAAMF,EAAS,gCACfmK,KAAMnK,EAAS,gCACfoK,YAAapK,EAAS,uCACtBqK,QAASrK,EAAS,mCAClBsK,OAAQtK,EAAS,kCACjBO,KAAMP,EAAS,gCACfuK,iBAAkBvK,EAAS,uDAC3BwK,kBAAmBxK,EAAS,wDAC5ByK,6BAA8BzK,EAAS,mEACvC0K,4BAA6B1K,EAAS,kEACtCwJ,MAAOxJ,EAAS,iCAChB2K,KAAM3K,EAAS,gCACf4K,OAAQ5K,EAAS,kCACjB6K,KAAM7K,EAAS,gCACf8K,eAAgB9K,EAAS,0CACzBsI,QAAStI,EAAS,mCAClB+K,eAAgB/K,EAAS,0CACzBgL,UAAWhL,EAAS,qCACpBiL,MAAOjL,EAAS,iCAChBkL,UAAWlL,EAAS,+CACpBmL,eAAgBnL,EAAS,0CACzBoL,kBAAmBpL,EAAS,6CAC5BQ,QAASR,EAAS,mCAClBqL,KACCC,gBAAiBtL,EAAS,gDAE3BuL,eACCC,QAASxL,EAAS,kDAEnByL,QACCC,cAAe1L,EAAS,gDACxB2L,sBAAuB3L,EAAS,wDAChC4L,cAAe5L,EAAS,iDAEzB6L,YACCC,gBAAiB9L,EAAS,uDAE3B+L,MACCP,QAASxL,EAAS,yCAEnBgJ,gBAAiBhJ,EAAS,2DAC1BgM,aACCR,QAASxL,EAAS,iDAIpBqB,GAAG4K,eAAiBnC,EAIpBA,EAAaoC,OAAQ,iBAAkBxE,EAAOC,SAE9CoC,EAAsBoC,kGChEtB,IAAI7D,EAAUtI,EAAS,mCACtBoI,EAAIpI,EAAS,iDACbuI,EAAevI,EAAS,wCACxBmK,EAAOnK,EAAS,gCAChB4K,EAAS5K,EAAS,kCAuDnB0H,EAAOC,QAvCP,SAA+ByE,EAAeC,GAC7C,IAAIC,EACHC,EAAclL,GAAGqH,OAAOC,MAAO,gCAAiCC,KAAM,WAKrE,OAJA0D,EAAoB,IAAIE,GAAGC,GAAGC,cAC7BC,KAAM,WACNnL,MAAOH,GAAG+H,IAAK,2BAETe,EAAKjB,MACT0D,MAAO,6CACPN,EAAkBO,aAGtBC,EAAwBvE,EAAcgE,GAIvC,OAFAO,EAAsBhG,IAAIiG,OAEnBzE,EAAQY,MAEbC,QAAS,WAAa9H,GAAG2L,QAAS,iBAAkBC,UAAY,YAChEC,aAAc,IAAItC,GACjBjE,KAAMtF,GAAGnB,KAAKiN,OAAQ,yBACtBC,aAAa,EACb9M,qBAAsB,yCACtB+M,MAAOhM,GAAG+H,IAAK,uBACZ3I,QACJ6M,eAAiBR,GACjBS,aAAa,EACblE,UAAW,mDAEZd,EACCgE,EAAY3D,KAAM,WAEjB,OAAO4E,EADIpF,EAAEpI,QAAS,gCAAiCwN,MAC1CnM,GAAGoM,KAAMnB,EAAmBF,EACxCC,+ECrDL,IAAIqB,EAAS1N,EAAS,kCACrBE,EAAOF,EAAS,gCAChBwJ,EAAQxJ,EAAS,iCACjBgK,EAAWhK,EAAS,oCACpBwK,EAAoBxK,EAAS,wDAC7BO,EAAOP,EAAS,gCASjB,SAASuK,EAAkBoD,GAC1BD,EAAOE,KACNlN,KACAR,EAAK2N,QAEHxE,UAAW,+CACXyE,QAAUC,cAAe,wBAE1BJ,IAKH3D,EAAUO,EAAkBmD,GAQ3BM,SAAU9N,EAAK2N,UAAYH,EAAOxK,UAAU8K,UAC3CC,eAAgB,IAAI1N,GACnBF,KAAM,QACN6N,SAAS,EACTC,SAAS,IACNC,iBAOLC,KAAM,WACL,OAAOX,EAAOxK,UAAUmL,KAAKC,MAAO5N,KAAM6N,YAM3CC,SAAUtO,EAAKsO,SAAL,yMAgBVC,eAAe,EAMfC,WAAY,WACX,IAAIC,EAAezO,EAAKoH,YAAYsH,SAEpClB,EAAOxK,UAAUwL,WAAWJ,MAAO5N,MACnCA,KAAKoG,IAAI9E,KAAM,8BAA+B6M,QAC7C,IAAItO,GACH4N,SAAS,EACT9N,KAAM,kBACNC,qBAAsB,2BACtB4N,SAAS,EACTb,MAAOhM,GAAG+H,IAAK,yCACZtC,IACJ0C,EAAME,OAAQ,QAAS5C,MAGlBpG,KAAKD,QAAQqO,MAClBpO,KAAKoG,IAAI+H,OAAQrF,EAAMuF,UAAUjI,KAI7B6H,EAAe,EAAI,KACvBjO,KAAKoG,IAAIkI,IAAK,aAAcL,EAAe,GAG5CjO,KAAK8F,GAAI,OAAQ9F,KAAKuO,OAAOC,KAAMxO,OACnCA,KAAK8F,GAAI,OAAQ9F,KAAKyO,OAAOD,KAAMxO,QAOpCuO,OAAQ,WACP/O,EAAKkP,cAAcpN,KAAM,QAASoE,SAAU,mBAO7C+I,OAAQ,WACPjP,EAAKkP,cAAcpN,KAAM,QAASqN,YAAa,mBAWhDC,cAAe,SAAWnJ,EAAIpF,EAAMwO,GACnC,IAAIC,EAAS9O,KACZ+H,EAAU/H,KAAKD,QAAQgI,QAMxB,OAHA/H,KAAKD,QAAQM,KAAOA,EAEpByO,EAAOnB,OACA5F,EAAQgH,aAActJ,EAAIpF,GAAO6H,KAAM,SAAW8G,GACxDF,EAAOG,QACNnO,MAAO+N,EACPT,KAAMY,EAAUZ,QAEf,SAAWc,GACRA,IAAQpF,EAAkBqF,gBAC9BL,EAAOzC,OAEPyC,EAAOG,QACNG,OAAO,EACPtO,MAAO+N,EACPT,KAAMzN,GAAG+H,IAAK,kDAYlB2G,oBAAqB,SAAWtJ,GAC/B,IAAIuJ,EAAQtP,KAAKoG,IAAI9E,KAAMyE,EAAGC,QAK9B,OAHAhG,KAAK4O,cAAeU,EAAM7N,KAAM,QAAUzB,KAAKD,QAAQM,KAAMiP,EAAMlB,SAG5D,KAITpH,EAAOC,QAAU4C,wECpKjB,SAASoB,IACRjL,KAAKuP,iBAAmB,KACxBvP,KAAKwP,mBAAqB,KAG3BvE,EAAsBzI,WAQrBiN,gBAAiB,WAChBzP,KAAKuP,iBAAmB5O,GAAG+O,KAAKC,2BAUjCC,kBAAmB,WAClB5P,KAAKwP,mBAAqB7O,GAAG+O,KAAKC,0BAClC3P,KAAK6P,wBAAyB,IAAI/N,MAAOC,WAQ1C+N,aAAc,WACb9P,KAAKyP,mBAQNM,cAAe,WACd/P,KAAK4P,oBACLjP,GAAGqP,MAAO,4BACTC,OAAQ,gBACRV,iBAAkBvP,KAAKuP,iBACvBC,mBAAoBxP,KAAKwP,mBACzBU,qBAAsB,KAUxBC,gBAAiB,SAAWC,GAC3B,IAAIF,GACH,IAAIpO,MAAOC,UAAY/B,KAAK6P,uBAE7BlP,GAAGqP,MAAO,4BACTC,OAAQ,qBACRI,cAAe,SACfC,gBAAiBF,EAAMG,QAAQtM,OAC/BsL,iBAAkBvP,KAAKuP,iBACvBC,mBAAoBxP,KAAKwP,mBAGzBgB,qBAAsBN,EACtBA,qBAAsBA,KAWxBO,oBAAqB,SAAWL,GAC/B,IAAIF,GACH,IAAIpO,MAAOC,UAAY/B,KAAK6P,uBAE7BlP,GAAGqP,MAAO,4BACTC,OAAQ,eAERS,WAAYN,EAAMO,YAAc,EAChCpB,iBAAkBvP,KAAKuP,iBACvBC,mBAAoBxP,KAAKwP,mBACzBU,qBAAsBA,MAYzBjF,EAAsB2F,SAAW,SAAWC,GAC3C,IAAIC,EAAS,IAAI7F,EAEjB4F,EAAc/K,GAAI,cAAegL,EAAOhB,aAAatB,KAAMsC,IAC3DD,EAAc/K,GAAI,eAAgBgL,EAAOf,cAAcvB,KAAMsC,IAC7DD,EAAc/K,GAAI,iBAAkBgL,EAAOX,gBAAgB3B,KAAMsC,IACjED,EAAc/K,GAAI,sBAAuBgL,EAAOL,oBAAoBjC,KAAMsC,KAG3E9J,EAAOC,QAAUgE,kECxHjB,IACC3B,EAAWhK,EAAS,oCACpBsI,EAAUtI,EAAS,mCACnBE,EAAOF,EAAS,gCAChByR,EAAazR,EAAS,mCAAeyR,WACrC7G,EAAS5K,EAAS,kCAClBO,EAAOP,EAAS,gCAChBwJ,EAAQxJ,EAAS,iCACjB+O,EAAUvF,EAAMuF,UAAUjI,IAC1B4K,EAAoB1R,EAAS,uDAG7B2R,EAAetQ,GAAGkE,OAAOhE,IAAK,8BAiB/B,SAASmK,EAAekG,GACvB,IAAInR,EAAUP,EAAK2N,QAClB,GAECN,aAAa,EACblE,UAAW,yBACXI,SACCgI,EAICvR,EAAKsO,SAAL,yRAKImB,QACHkC,eAAgBD,EAAOC,eACvBlB,OAAQiB,EAAOjB,QAAUtP,GAAGkE,OAAOhE,IAAK,eAGxCiI,EAAME,WAEP,IAGFoE,QACCgE,cAAe,eACfC,eAAgB,eAChBC,wBAAyB,uBACzBC,yBAA0B,wBAC1BC,+BAAgC,2BAChCC,sBAAuB,uBACvBC,qBAAsB,uBACtBC,mBAAoB,kBAGtBT,GAGDtJ,EAAQsF,KAAMlN,KAAMD,GAEpBC,KAAK4R,IAAM7R,EAAQ6R,IAEnB5R,KAAK+H,QAAU,IAAIhI,EAAQ8R,aAAc7R,KAAK4R,KAE9C5R,KAAK8R,OAAS/R,EAAQ+R,OAGvBxI,EAAU0B,EAAepD,GAKxBmK,iBAAkBvS,EAAK2N,UAAYvF,EAAQpF,UAAUuP,kBACpDC,QAASxS,EAAKsO,SAAL,+jBA8CVR,SAAU9N,EAAK2N,UAAYvF,EAAQpF,UAAU8K,UAC5C2E,cAAc,EACdC,UAAW,IAAIrS,GACd2E,QAAS,SACT7E,KAAM,eACN8N,SAAS,EACTd,MAAOhM,GAAG+H,IAAK,gCACf9I,qBAAsB,UAEvBuS,kBAAmB,IAAItS,GACtB2E,QAAS,IAETyB,KAAM,IACNtG,KAAM,iBACNgN,MAAOhM,GAAG+H,IAAK,oCAEhB0J,mBAAoBzR,GAAG+H,IAAK,kCAC5B2J,WAAY,GACZC,aAAc3R,GAAG+H,IAAK,qCACtB6J,0BAA2B5R,GAAG2L,QAAS,6CAA8C5L,QACrF8R,WAAWvB,IACVuB,SAAU,IAAItI,GACbyC,MAAOhM,GAAG+H,IAAK,6CACfzC,KAAMgL,IAEPwB,OAAQ9R,GAAG+H,IAAK,6CAYlBgK,aAAc,WACb1S,KAAK2S,gBACL3S,KAAK4S,OAAOjR,OAA8B,KAAtB3B,KAAK6S,OAAOC,QASjCC,aAAc,WAMb,OALA/S,KAAK6S,OAAOC,IAAK,IAAKE,QAAS,SAC/BhT,KAAK2S,gBACL3S,KAAK4S,OAAOvG,QAGL,GAQR4G,qBAAsB,WACrB,IAAI7M,EAAM5G,EAAKkP,cAAcpN,KAAM,QAClC4R,EAAQlT,KAAKoG,IAAI9E,KAAM,QAGxBtB,KAAKmT,UAAW,WACd1R,MACA2R,KAAM,SACNzT,KAAM,WACN0T,MAAO,WAEPC,SAAUJ,GAGZK,WAAY,WAGXL,EAAMI,SAAUlN,GAChB8M,EAAMF,QAAS,WACb,IAQJQ,sBAAuB,WACtBxT,KAAKoG,IAAI9E,KAAM,WAAY0R,QAAS,UASrCS,yBAA0B,SAAW1N,GACpCA,EAAGO,mBASJoN,qBAAsB,WACrB1T,KAAK6S,OAAOG,QAAS,SAUtBW,cAAe,SAAW5N,GACzB,IAAIrB,EAAQ1E,KAAKoG,IAAI9E,KAAMyE,EAAG6N,eAC7BC,EAAUnP,EAAMoP,QAAS,MAW1B9T,KAAKsD,KAAM,uBACVyQ,OAAQF,EACRlD,YAAa3Q,KAAKgU,SAASC,MAAOJ,GAClCK,cAAenO,IAKhBA,EAAGG,iBACHlG,KAAK8R,OAAOqC,OAAOjM,KAAM,WAIxB/D,OAAOa,SAASiB,KAAOvB,EAAMjD,KAAM,WASrCuM,WAAY,WACX,IAECoG,EAFGzP,EAAO3E,KACVD,EAAUC,KAAKD,QAgBhB,SAASsU,IACR1P,EAAK2P,SAASjI,OACdkI,aAAcH,GAffxM,EAAQpF,UAAUwL,WAAWd,KAAMlN,MAEnCA,KAAK6S,OAAS7S,KAAKoG,IAAI9E,KAAM,SAC7BtB,KAAK4S,OAAS5S,KAAKoG,IAAI9E,KAAM,UAC7BtB,KAAKwU,eAAiBxU,KAAKoG,IAAI9E,KAAM,mBAAoB+K,OACzDrM,KAAKyU,gBAAkBzU,KAAKoG,IAAI9E,KAAM,oBAAqB+K,OAC3DrM,KAAK0U,iBAAmB1U,KAAKoG,IAAI9E,KAAM,2BAEvCtB,KAAKoG,IAAI9E,KAAM,kBAAmB6M,OAAQpO,EAAQmS,UAAU9L,KAC5DpG,KAAKwU,eAAelT,KAAM,MAAO6M,OAAQpO,EAAQoS,kBAAkB/L,KAUnEpG,KAAKsU,SAAWtU,KAAKoG,IAAI9E,KAAM,sBAC/BtB,KAAKsU,SAASnG,OAAQE,GACtBrO,KAAK8F,GAAI,eAAgB,SAAW6O,GAC9BP,GACJC,IAEDD,EAAQb,WAAY,WACnB5O,EAAK2P,SAAS3G,QAjTM,IAkTKgH,EAAWC,SAEtC5U,KAAK8F,GAAI,iBAAkBuO,GAGA,KAAtB1P,EAAKkO,OAAOC,OAChB9S,KAAK4S,OAAOvG,OAERtM,EAAQyS,UAAYzS,EAAQyS,SAASA,UACzCxS,KAAKoG,IAAI9E,KAAM,oBAAqB6M,OAAQpO,EAAQyS,SAASA,SAASpM,MAUxEyO,aAAc,WACb,IAAIC,EAAM9U,KAAK6S,OAAOC,MAAM7O,OAC5BjE,KAAK6S,OAAOG,QAAS,SAEhBhT,KAAK6S,OAAO,GAAGkC,mBACnB/U,KAAK6S,OAAO,GAAGkC,kBAAmBD,EAAKA,IASzCnH,KAAM,WAEL/F,EAAQpF,UAAUmL,KAAKC,MAAO5N,KAAM6N,WAEpC7N,KAAK6U,eAKL7U,KAAKsD,KAAM,gBAUZqP,cAAe,WACd,IACChO,EAAO3E,KACP4R,EAAM5R,KAAK4R,IACXoD,EAAQhV,KAAK6S,OAAOC,MACpB8B,EAAQ5U,KAAK+H,QAAQkN,SAAUD,GAAU,EA5W5B,IAgXTA,IAAUhV,KAAKkV,YACdvQ,EAAKwQ,eACTxQ,EAAKwQ,cAAcC,QAEpBb,aAAcvU,KAAKoU,OAEdY,EAAM/Q,OACVjE,KAAKoU,MAAQb,WAAY,WACxB,IAAI8B,EAMJ1Q,EAAKrB,KAAM,gBACV0R,MAAOA,EACPJ,MAAOA,IAGRS,EAAM1Q,EAAKoD,QAAQgD,OAAQiK,GAC3BrQ,EAAKwQ,cAAgBE,EAAInN,KAAM,SAAWrF,GAGpCA,GAAQA,EAAKmS,QAAUrQ,EAAKkO,OAAOC,QACvCnO,EAAKyB,IAAIpD,YAAa,aAAsC,IAAxBH,EAAK0N,QAAQtM,QACjDU,EAAK6P,eACH7G,OACArM,KAAM,KACN+K,OACAiJ,OAAQzS,EAAK0N,QAAQtM,OAAS,gBAAkB,oBAChD0J,OAGF,IAAIqD,GACHY,IAAKA,EACL2D,OAAQ,SACRC,MAAO3S,EAAK0N,QACZkF,GAAI9Q,EAAK+P,mBAGV/P,EAAKqP,SAAWrP,EAAK+P,iBAAiBpT,KAAM,MAS5CqD,EAAKrB,KAAM,kBACViN,QAAS1N,EAAK0N,aAGbmF,SAAWN,MAAO,WAAcC,EAAID,YACtCR,GAEHjQ,EAAKgR,cAGN3V,KAAKkV,UAAYF,IAQnBW,YAAa,WACZ3V,KAAKsU,SAASjI,OACdrM,KAAKwU,eAAenI,OACpBrM,KAAKyU,gBAAgBpI,OACrBrM,KAAK0U,iBAAiBkB,WAIxB5O,EAAOC,QAAU+D,0ECrcjB,IAAIzB,EAAUjK,EAAS,mCAkCvB0H,EAAOC,SACNwE,+BAjCD,WACC9K,GAAGqH,OAAOC,OACT,qBACGC,KAAM,WACT,IAMCmB,EAAwB,IAAIwM,EALnBlV,GAAGmV,SAASD,QAMpB,kBAEAlV,GAAGkE,OAAOhE,IAAK,6BAA8B,OAQ5CkV,SAAU,YACVC,gBAAiBzM,EAAQ0M,YAI5BtV,GAAGuV,eAAgB,2BAA4B,SAAWC,EAAOtT,GAChEwG,EAAsB+M,IAAKvT,iEC7B9B,IAAI6E,EAAIpI,EAAS,iDAChBuI,EAAevI,EAAS,wCACxB4K,EAAS5K,EAAS,kCAClBE,EAAOF,EAAS,gCAChBuJ,EAASvJ,EAAS,mCAAeuJ,OACjCjB,EAAUtI,EAAS,mCA2CpB0H,EAAOC,QAnCP,SAAsBnG,EAAOiH,GAC5B,IAAI2H,EAAO/O,GAAG+O,KAEd,OAAO9H,EAAQY,MAEbO,SACCF,EACC,WAAalI,GAAG+H,IAAK,uCAA0C,YAC/DgH,EAAK2G,aAAkB,IAAInM,GAC1BjE,KAAM,aACNrG,qBAAsB,WACtB+M,MAAOhM,GAAG+H,IAAK,gDAIlB8D,aAAc,IAAItC,GACjBwC,aAAa,EACbzG,KAAMtF,GAAGnB,KAAKiN,OAAQ3L,GACtBlB,qBAAsB,4BACtB+M,MAAOhM,GAAG+H,IAAK,mCACZ3I,QACJ4I,UAAW,wBAEZd,EACCrI,EAAKyJ,QAAQC,KACZnB,EAAQuO,YAAaxV,GACrBH,GAAGqH,OAAOC,MAAO,0BACdC,KAAM,SAAW/F,GAEpB,OADgBuF,EAAEpI,QAAS,iCACpBiX,CAAWpU,uEC1CtB,IAAIsH,EAAOnK,EAAS,gCACnBgK,EAAWhK,EAAS,oCACpBE,EAAOF,EAAS,gCAChBO,EAAOP,EAAS,gCAUjB,SAASsL,EAAiBqC,GACzBxD,EAAKyD,KAAMlN,KAAMR,EAAK2N,QACrBxE,UAAW,aACX6N,YAAa7V,GAAG+H,IAAK,QACnBuE,IAGJ3D,EAAUsB,EAAiBnB,GAK1BsI,kBACC0E,WAAYjX,EAAKsO,SAAL,kJAebA,SAAUtO,EAAKsO,SAAL,qKAYVE,WAAY,WACX,IAAInO,GACHF,KAAM,MACNC,qBAAsB,eACnBwG,IAAIjD,UAAWnD,KAAKoG,IAAI9E,KAAM,UAIpC0F,EAAOC,QAAU2D","file":"mobile.startup.js","sourcesContent":["var browser = require( './Browser' ).getSingleton(),\n\tutil = require( './util' ),\n\tescapeHash = util.escapeHash,\n\tarrowOptions = {\n\t\tname: 'arrow',\n\t\tadditionalClassNames: 'indicator'\n\t},\n\tIcon = require( './Icon' );\n\n/**\n *\n * @typedef {Object} ToggledEvent\n * @prop {boolean} expanded True if section is opened, false if closed.\n * @prop {Page} page\n * @prop {boolean} isReferenceSection\n * @prop {JQuery.Object} $heading\n */\n\n/**\n * A class for enabling toggling\n *\n * @class Toggler\n * @param {Object} options\n * @param {OO.EventEmitter} options.eventBus Object used to emit section-toggled events.\n * @param {jQuery.Object} options.$container to apply toggling to\n * @param {string} options.prefix a prefix to use for the id.\n * @param {Page} options.page to allow storage of session for future visits\n * @param {Page} [options.isClosed]\n */\nfunction Toggler( options ) {\n\tthis.eventBus = options.eventBus;\n\tthis._enable( options.$container, options.prefix, options.page, options.isClosed );\n}\n\n/**\n * Using the settings module looks at what sections were previously expanded on\n * existing page.\n *\n * @param {Page} page\n * @return {Object} representing open sections\n */\nfunction getExpandedSections( page ) {\n\tvar expandedSections = JSON.parse( mw.storage.get( 'expandedSections' ) || '{}' );\n\texpandedSections[page.title] = expandedSections[page.title] || {};\n\treturn expandedSections;\n}\n\n/**\n* @param {Object} expandedSections\n* Save expandedSections to localStorage\n*/\nfunction saveExpandedSections( expandedSections ) {\n\tmw.storage.set(\n\t\t'expandedSections', JSON.stringify( expandedSections )\n\t);\n}\n\n/**\n * Given an expanded heading, store it to localStorage.\n * If the heading is collapsed, remove it from localStorage.\n *\n * @param {jQuery.Object} $heading - A heading belonging to a section\n * @param {Page} page\n */\nfunction storeSectionToggleState( $heading, page ) {\n\tvar headline = $heading.find( 'span' ).attr( 'id' ),\n\t\tisSectionOpen = $heading.hasClass( 'open-block' ),\n\t\texpandedSections = getExpandedSections( page );\n\n\tif ( headline ) {\n\t\tif ( isSectionOpen ) {\n\t\t\texpandedSections[page.title][headline] = ( new Date() ).getTime();\n\t\t} else {\n\t\t\tdelete expandedSections[page.title][headline];\n\t\t}\n\n\t\tsaveExpandedSections( expandedSections );\n\t}\n}\n\n/**\n * Expand sections that were previously expanded before leaving this page.\n * @param {Toggler} toggler\n * @param {jQuery.Object} $container\n * @param {Page} page\n */\nfunction expandStoredSections( toggler, $container, page ) {\n\tvar $sectionHeading, $headline,\n\t\texpandedSections = getExpandedSections( page ),\n\t\t$headlines = $container.find( '.section-heading span' );\n\n\t$headlines.each( function () {\n\t\t$headline = $container.find( this );\n\t\t$sectionHeading = $headline.parents( '.section-heading' );\n\t\t// toggle only if the section is not already expanded\n\t\tif (\n\t\t\texpandedSections[page.title][$headline.attr( 'id' )] &&\n\t\t!$sectionHeading.hasClass( 'open-block' )\n\t\t) {\n\t\t\ttoggler.toggle( $sectionHeading, page );\n\t\t}\n\t} );\n}\n\n/**\n * Clean obsolete (saved more than a day ago) expanded sections from\n * localStorage.\n * @param {Page} page\n */\nfunction cleanObsoleteStoredSections( page ) {\n\tvar now = ( new Date() ).getTime(),\n\t\texpandedSections = getExpandedSections( page ),\n\t\t// the number of days between now and the time a setting was saved\n\t\tdaysDifference;\n\tObject.keys( expandedSections ).forEach( function ( page ) {\n\t\tvar sections = expandedSections[ page ];\n\t\t// clean the setting if it is more than a day old\n\t\tObject.keys( sections ).forEach( function ( section ) {\n\t\t\tvar timestamp = sections[ section ];\n\t\t\tdaysDifference = Math.floor( ( now - timestamp ) / 1000 / 60 / 60 / 24 );\n\t\t\tif ( daysDifference >= 1 ) {\n\t\t\t\tdelete expandedSections[page][section];\n\t\t\t}\n\t\t} );\n\t} );\n\tsaveExpandedSections( expandedSections );\n}\n\n/**\n * Given a heading, toggle it and any of its children\n *\n * @memberof Toggler\n * @instance\n * @param {jQuery.Object} $heading A heading belonging to a section\n */\nToggler.prototype.toggle = function ( $heading ) {\n\tvar indicator,\n\t\twasExpanded = $heading.is( '.open-block' ),\n\t\tpage = $heading.data( 'page' ),\n\t\t$content = $heading.next();\n\n\t$heading.toggleClass( 'open-block' );\n\t$heading.data( 'indicator' ).remove();\n\n\tarrowOptions.rotation = wasExpanded ? 0 : 180;\n\tindicator = new Icon( arrowOptions ).prependTo( $heading );\n\t$heading.data( 'indicator', indicator );\n\n\t$content\n\t\t.toggleClass( 'open-block' )\n\t\t.attr( {\n\t\t\t'aria-pressed': !wasExpanded,\n\t\t\t'aria-expanded': !wasExpanded\n\t\t} );\n\n\t/**\n\t * Global event emitted after a section has been toggled\n\t * @event section-toggled\n\t * @type {ToggledEvent}\n\t */\n\tthis.eventBus.emit( 'section-toggled', {\n\t\texpanded: wasExpanded,\n\t\tpage: page,\n\t\tisReferenceSection: Boolean( $content.attr( 'data-is-reference-section' ) ),\n\t\t$heading: $heading\n\t} );\n\n\tif ( !browser.isWideScreen() ) {\n\t\tstoreSectionToggleState( $heading, page );\n\t}\n};\n\n/**\n * Enables toggling via enter and space keys\n *\n * @param {Toggler} toggler instance.\n * @param {jQuery.Object} $heading\n */\nfunction enableKeyboardActions( toggler, $heading ) {\n\t$heading.on( 'keypress', function ( ev ) {\n\t\tif ( ev.which === 13 || ev.which === 32 ) {\n\t\t\t// Only handle keypresses on the \"Enter\" or \"Space\" keys\n\t\t\ttoggler.toggle( $heading );\n\t\t}\n\t} ).find( 'a' ).on( 'keypress mouseup', function ( ev ) {\n\t\tev.stopPropagation();\n\t} );\n}\n\n/**\n * Reveals an element and its parent section as identified by it's id\n *\n * @memberof Toggler\n * @instance\n * @param {string} selector A css selector that identifies a single element\n * @param {Object} $container jQuery element to search in\n */\nToggler.prototype.reveal = function ( selector, $container ) {\n\tvar $target, $heading;\n\n\t// jQuery will throw for hashes containing certain characters which can break toggling\n\ttry {\n\t\t$target = $container.find( escapeHash( selector ) );\n\t\t$heading = $target.parents( '.collapsible-heading' );\n\t\t// The heading is not a section heading, check if in a content block!\n\t\tif ( !$heading.length ) {\n\t\t\t$heading = $target.parents( '.collapsible-block' ).prev( '.collapsible-heading' );\n\t\t}\n\t\tif ( $heading.length && !$heading.hasClass( 'open-block' ) ) {\n\t\t\tthis.toggle( $heading );\n\t\t}\n\t\tif ( $heading.length ) {\n\t\t\t// scroll again after opening section (opening section makes the page longer)\n\t\t\twindow.scrollTo( 0, $target.offset().top );\n\t\t}\n\t} catch ( e ) {}\n};\n\n/**\n * Enables section toggling in a given container when wgMFCollapseSectionsByDefault\n * is enabled.\n *\n * @memberof Toggler\n * @instance\n * @param {jQuery.Object} $container to apply toggling to\n * @param {string} prefix a prefix to use for the id.\n * @param {Page} page to allow storage of session for future visits\n * @param {Page} [isClosed] whether the element should begin closed\n * @private\n */\nToggler.prototype._enable = function ( $container, prefix, page, isClosed ) {\n\tvar tagName, expandSections, indicator, $content,\n\t\t$firstHeading,\n\t\t$link,\n\t\tself = this,\n\t\tcollapseSectionsByDefault = mw.config.get( 'wgMFCollapseSectionsByDefault' );\n\n\t// Also allow .section-heading if some extensions like Wikibase\n\t// want to toggle other headlines than direct descendants of $container.\n\t$firstHeading = $container.find( '> h1,> h2,> h3,> h4,> h5,> h6,.section-heading' ).eq( 0 );\n\ttagName = $firstHeading.prop( 'tagName' ) || 'H1';\n\n\tif ( collapseSectionsByDefault === undefined ) {\n\t\t// Old default behavior if on cached output\n\t\tcollapseSectionsByDefault = true;\n\t}\n\texpandSections = !collapseSectionsByDefault || mw.storage.get( 'expandSections' ) === 'true';\n\n\t$container.children( tagName ).each( function ( i ) {\n\t\tvar isReferenceSection,\n\t\t\t$heading = $container.find( this ),\n\t\t\t$indicator = $heading.find( '.indicator' ),\n\t\t\tid = prefix + 'collapsible-block-' + i;\n\t\t// Be sure there is a div wrapping the section content.\n\t\t// Otherwise, collapsible sections for this page is not enabled.\n\t\tif ( $heading.next().is( 'div' ) ) {\n\t\t\t$content = $heading.next( 'div' );\n\t\t\tisReferenceSection = Boolean( $content.attr( 'data-is-reference-section' ) );\n\t\t\t$heading\n\t\t\t\t.addClass( 'collapsible-heading ' )\n\t\t\t\t.data( 'section-number', i )\n\t\t\t\t.data( 'page', page )\n\t\t\t\t.attr( {\n\t\t\t\t\ttabindex: 0,\n\t\t\t\t\t'aria-haspopup': 'true',\n\t\t\t\t\t'aria-controls': id\n\t\t\t\t} )\n\t\t\t\t.on( 'click', function ( ev ) {\n\t\t\t\t\t// don't toggle, if the click target was a link\n\t\t\t\t\t// (a link in a section heading)\n\t\t\t\t\t// See T117880\n\t\t\t\t\tif ( !ev.target.href ) {\n\t\t\t\t\t\t// prevent taps/clicks on edit button after toggling (bug 56209)\n\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\tself.toggle( $heading );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\tarrowOptions.rotation = expandSections ? 180 : 0;\n\t\t\tindicator = new Icon( arrowOptions );\n\t\t\tif ( $indicator.length ) {\n\t\t\t\t// replace the existing indicator\n\t\t\t\t$indicator.replaceWith( indicator.$el );\n\t\t\t} else {\n\t\t\t\tindicator.prependTo( $heading );\n\t\t\t}\n\t\t\t$heading.data( 'indicator', indicator.$el );\n\t\t\t$content\n\t\t\t\t.addClass( 'collapsible-block' )\n\t\t\t\t.eq( 0 )\n\t\t\t\t.attr( {\n\t\t\t\t\t// We need to give each content block a unique id as that's\n\t\t\t\t\t// the only way we can tell screen readers what element we're\n\t\t\t\t\t// referring to (aria-controls)\n\t\t\t\t\tid: id,\n\t\t\t\t\t'aria-pressed': 'false',\n\t\t\t\t\t'aria-expanded': 'false'\n\t\t\t\t} );\n\n\t\t\tenableKeyboardActions( self, $heading );\n\t\t\tif (\n\t\t\t\t!isReferenceSection && (\n\t\t\t\t\t!isClosed && browser.isWideScreen() || expandSections\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// Expand sections by default on wide screen devices\n\t\t\t\t// or if the expand sections setting is set.\n\t\t\t\t// The wide screen logic for determining whether to collapse sections initially\n\t\t\t\t// should be kept in sync with mobileoptions#initLocalStorageElements().\n\t\t\t\tself.toggle( $heading );\n\t\t\t}\n\t\t}\n\t} );\n\n\t/* eslint-disable no-restricted-properties */\n\t/**\n\t * Checks the existing hash and toggles open any section that contains the fragment.\n\t *\n\t * @method\n\t */\n\tfunction checkHash() {\n\t\tvar hash = window.location.hash;\n\t\tif ( hash.indexOf( '#' ) === 0 ) {\n\t\t\t// Non-latin characters in the hash will be provided percent-encoded, which\n\t\t\t// jQuery would later fail to cope with.\n\t\t\tself.reveal( decodeURIComponent( hash ), $container );\n\t\t}\n\t}\n\n\t/**\n\t * Checks the value of wgInternalRedirectTargetUrl and reveals the collapsed\n\t * section that contains it if present\n\t *\n\t * @method\n\t */\n\tfunction checkInternalRedirectAndHash() {\n\t\tvar internalRedirect = mw.config.get( 'wgInternalRedirectTargetUrl' ),\n\t\t\tinternalRedirectHash = internalRedirect ? internalRedirect.split( '#' )[1] : false;\n\n\t\tif ( internalRedirectHash ) {\n\t\t\twindow.location.hash = internalRedirectHash;\n\t\t\tself.reveal( internalRedirectHash, $container );\n\t\t}\n\t}\n\t/* eslint-enable no-restricted-properties */\n\n\tcheckInternalRedirectAndHash();\n\tcheckHash();\n\t// Restricted to links created by editors and thus outside our control\n\t// T166544 - don't do this for reference links - they will be handled elsewhere\n\t$link = $container.find( 'a:not(.reference a)' );\n\t$link.on( 'click', function () {\n\t\t// the link might be an internal link with a hash.\n\t\t// if it is check if we need to reveal any sections.\n\t\tif ( $link.attr( 'href' ) !== undefined &&\n\t\t$link.attr( 'href' ).indexOf( '#' ) > -1\n\t\t) {\n\t\t\tcheckHash();\n\t\t}\n\t} );\n\tutil.getWindow().on( 'hashchange', function () {\n\t\tcheckHash();\n\t} );\n\n\tif ( !browser.isWideScreen() && page ) {\n\t\texpandStoredSections( this, $container, page );\n\t\tcleanObsoleteStoredSections( page );\n\t}\n};\n\nToggler._getExpandedSections = getExpandedSections;\nToggler._expandStoredSections = expandStoredSections;\nToggler._cleanObsoleteStoredSections = cleanObsoleteStoredSections;\n\nmodule.exports = Toggler;\n","/**\n * Return the language code of the device in lowercase\n *\n * @ignore\n * @param {window.navigator} navigator\n * @return {string|undefined}\n */\nfunction getDeviceLanguage( navigator ) {\n\tconst lang = navigator.languages ?\n\t\tnavigator.languages[ 0 ] :\n\t\tnavigator.language || navigator.userLanguage ||\n\t\t\t\tnavigator.browserLanguage || navigator.systemLanguage;\n\n\treturn lang ? lang.toLowerCase() : undefined;\n}\n\nmodule.exports = getDeviceLanguage;\n","const\n\tm = require( '../moduleLoaderSingleton' ),\n\tgetDeviceLanguage = require( './getDeviceLanguage' ),\n\tOverlay = require( '../Overlay' ),\n\tpromisedView = require( '../promisedView' );\n\n/**\n * @ignore\n * @param {PageGateway} gateway\n * @return {jQuery.Promise} Resolves to LanguageSearcher\n */\nfunction loadLanguageSearcher( gateway ) {\n\treturn mw.loader.using( 'mobile.languages.structured' ).then( function () {\n\t\treturn gateway.getPageLanguages( mw.config.get( 'wgPageName' ), mw.config.get( 'wgUserLanguage' ) );\n\t} ).then( function ( data ) {\n\t\tconst LanguageSearcher = m.require( 'mobile.languages.structured/LanguageSearcher' );\n\n\t\treturn new LanguageSearcher( {\n\t\t\tlanguages: data.languages,\n\t\t\tvariants: data.variants,\n\t\t\tdeviceLanguage: getDeviceLanguage( navigator )\n\t\t} );\n\n\t} );\n}\n\n/**\n * Factory function that returns a language featured instance of an Overlay\n *\n * @param {PageGateway} pageGateway\n * @return {Overlay}\n */\nfunction languageOverlay( pageGateway ) {\n\treturn Overlay.make(\n\t\t{\n\t\t\theading: mw.msg( 'mobile-frontend-language-heading' ),\n\t\t\tclassName: 'overlay language-overlay'\n\t\t}, promisedView( loadLanguageSearcher( pageGateway ) )\n\t);\n}\n\n// To make knowing when async logic has resolved easier in tests\nlanguageOverlay.test = {\n\tloadLanguageSearcher: loadLanguageSearcher\n};\n\nmodule.exports = languageOverlay;\n","var m = require( '../moduleLoaderSingleton' ),\n\tpromisedView = require( '../promisedView' ),\n\tutil = require( '../util' ),\n\theader = require( '../headers' ).header,\n\ticons = require( '../icons' ),\n\tOverlay = require( '../Overlay' );\n\n/**\n * Produce an overlay for mediaViewer\n * @param {Object} options\n * @return {Overlay}\n */\nfunction mediaViewerOverlay( options ) {\n\tvar overlay = Overlay.make(\n\t\t{\n\t\t\theaders: [\n\t\t\t\theader( '', [], icons.cancel( 'gray' ) )\n\t\t\t],\n\t\t\tclassName: 'overlay media-viewer'\n\t\t},\n\t\tpromisedView(\n\t\t\tutil.Promise.all( [\n\t\t\t\tmw.loader.using( 'mobile.mediaViewer' )\n\t\t\t] ).then( function () {\n\t\t\t\tvar ImageCarousel = m.require( 'mobile.mediaViewer' ).ImageCarousel;\n\t\t\t\treturn new ImageCarousel( options );\n\t\t\t} )\n\t\t)\n\t);\n\n\treturn overlay;\n}\n\nmodule.exports = mediaViewerOverlay;\n","var\n\tmoduleLoader = require( './moduleLoaderSingleton' ),\n\tschemaMobileWebSearch = require( './search/schemaMobileWebSearch' );\n\n// Expose the entry chunk through libraryTarget and library. This allows\n// arbitrary file access via ResourceLoader like\n// `mfModules['mobile.startup'].moduleLoader.require('mobile.startup/LoadingOverlay')`.\nmodule.exports = {\n\tmoduleLoader: moduleLoader,\n\tmfExtend: require( './mfExtend' ),\n\tcontext: require( './context' ),\n\ttime: require( './time' ),\n\tutil: require( './util' ),\n\tView: require( './View' ),\n\tPageGateway: require( './PageGateway' ),\n\tBrowser: require( './Browser' ),\n\tButton: require( './Button' ),\n\tIcon: require( './Icon' ),\n\tReferencesDrawer: require( './references/ReferencesDrawer' ),\n\tReferencesGateway: require( './references/ReferencesGateway' ),\n\tReferencesHtmlScraperGateway: require( './references/ReferencesHtmlScraperGateway' ),\n\tReferencesMobileViewGateway: require( './references/ReferencesMobileViewGateway' ),\n\ticons: require( './icons' ),\n\tPage: require( './Page' ),\n\tAnchor: require( './Anchor' ),\n\tSkin: require( './Skin' ),\n\tOverlayManager: require( './OverlayManager' ),\n\tOverlay: require( './Overlay' ),\n\tloadingOverlay: require( './loadingOverlay' ),\n\tCtaDrawer: require( './CtaDrawer' ),\n\ttoast: require( './toast' ),\n\tWatchstar: require( './watchstar/Watchstar' ),\n\trlModuleLoader: require( './rlModuleLoader' ),\n\teventBusSingleton: require( './eventBusSingleton' ),\n\tToggler: require( './Toggler' ),\n\ttoc: {\n\t\tTableOfContents: require( './toc/TableOfContents' )\n\t},\n\tnotifications: {\n\t\toverlay: require( './notifications/overlay' )\n\t},\n\tsearch: {\n\t\tSearchOverlay: require( './search/SearchOverlay' ),\n\t\tMobileWebSearchLogger: require( './search/MobileWebSearchLogger' ),\n\t\tSearchGateway: require( './search/SearchGateway' )\n\t},\n\tlazyImages: {\n\t\tlazyImageLoader: require( './lazyImages/lazyImageLoader' )\n\t},\n\ttalk: {\n\t\toverlay: require( './talk/overlay' )\n\t},\n\tlanguageOverlay: require( './languageOverlay/languageOverlay' ),\n\tmediaViewer: {\n\t\toverlay: require( './mediaViewer/overlay' )\n\t}\n};\n\nmw.mobileFrontend = moduleLoader;\n\n// Setup a single export for new modules to fold all of the above lines into.\n// One export to rule them all!\nmoduleLoader.define( 'mobile.startup', module.exports );\n\nschemaMobileWebSearch.subscribeMobileWebSearchSchema();\n","var Overlay = require( '../Overlay' ),\n\tm = require( '../moduleLoaderSingleton' ),\n\tpromisedView = require( '../promisedView' ),\n\tView = require( '../View' ),\n\tAnchor = require( '../Anchor' );\n\n/**\n * This callback is displayed as a global member.\n * @callback countChangeCallback\n * @param {number} count a capped (0-99 or 99+) count\n */\n\n/**\n * Make a notification overlay\n *\n * @param {countChangeCallback} onCountChange receives one parameter - a capped (0-99 or 99+) count.\n * @param {Function} onNotificationListRendered a function that is called when the\n *   notifications list has fully rendered (taking no arguments)\n * @return {Overlay}\n */\nfunction notificationsOverlay( onCountChange, onNotificationListRendered ) {\n\tvar markAllReadButton,\n\t\toouiPromise = mw.loader.using( 'mobile.notifications.overlay' ).then( function () {\n\t\t\tmarkAllReadButton = new OO.ui.ButtonWidget( {\n\t\t\t\ticon: 'checkAll',\n\t\t\t\ttitle: mw.msg( 'echo-mark-all-as-read' )\n\t\t\t} );\n\t\t\treturn View.make(\n\t\t\t\t{ class: 'notifications-overlay-header-markAllRead' },\n\t\t\t\t[ markAllReadButton.$element ]\n\t\t\t);\n\t\t} ),\n\t\tmarkAllReadButtonView = promisedView( oouiPromise );\n\t// hide the button spinner as it is confusing to see in the top right corner\n\tmarkAllReadButtonView.$el.hide();\n\n\treturn Overlay.make(\n\t\t{\n\t\t\theading: '<strong>' + mw.message( 'notifications' ).escaped() + '</strong>',\n\t\t\tfooterAnchor: new Anchor( {\n\t\t\t\thref: mw.util.getUrl( 'Special:Notifications' ),\n\t\t\t\tprogressive: true,\n\t\t\t\tadditionalClassNames: 'footer-link notifications-archive-link',\n\t\t\t\tlabel: mw.msg( 'echo-overlay-link' )\n\t\t\t} ).options,\n\t\t\theaderActions: [ markAllReadButtonView ],\n\t\t\tisBorderBox: false,\n\t\t\tclassName: 'overlay notifications-overlay navigation-drawer'\n\t\t},\n\t\tpromisedView(\n\t\t\toouiPromise.then( function () {\n\t\t\t\tvar list = m.require( 'mobile.notifications.overlay' ).list;\n\t\t\t\treturn list( mw.echo, markAllReadButton, onCountChange,\n\t\t\t\t\tonNotificationListRendered );\n\t\t\t} )\n\t\t)\n\t);\n}\n\nmodule.exports = notificationsOverlay;\n","var Drawer = require( './../Drawer' ),\n\tutil = require( './../util' ),\n\ticons = require( './../icons' ),\n\tmfExtend = require( './../mfExtend' ),\n\tReferencesGateway = require( './ReferencesGateway' ),\n\tIcon = require( './../Icon' );\n\n/**\n * Drawer for references\n * @class ReferencesDrawer\n * @extends Drawer\n * @uses Icon\n * @param {Object} props\n */\nfunction ReferencesDrawer( props ) {\n\tDrawer.call(\n\t\tthis,\n\t\tutil.extend(\n\t\t\t{\n\t\t\t\tclassName: 'drawer position-fixed text references-drawer',\n\t\t\t\tevents: { 'click sup a': 'showNestedReference' }\n\t\t\t},\n\t\t\tprops\n\t\t)\n\t);\n}\n\nmfExtend( ReferencesDrawer, Drawer, {\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @mixes Drawer#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {boolean} defaults.error whether an error message is being shown\n\t */\n\tdefaults: util.extend( {}, Drawer.prototype.defaults, {\n\t\terrorClassName: new Icon( {\n\t\t\tname: 'error',\n\t\t\thasText: true,\n\t\t\tisSmall: true\n\t\t} ).getClassName()\n\t} ),\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tshow: function () {\n\t\treturn Drawer.prototype.show.apply( this, arguments );\n\t},\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\ttemplate: util.template( `\n<div class=\"references-drawer__header\"></div>\n{{#error}}\n\t<div class=\"{{errorClassName}}\">\n{{/error}}\n<sup>{{title}}</sup>\n{{#text}}\n\t{{{text}}}\n{{/text}}\n{{#error}}</div>{{/error}}\n\t` ),\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tcloseOnScroll: false,\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar windowHeight = util.getWindow().height();\n\n\t\tDrawer.prototype.postRender.apply( this );\n\t\tthis.$el.find( '.references-drawer__header' ).append( [\n\t\t\tnew Icon( {\n\t\t\t\tisSmall: true,\n\t\t\t\tname: 'citation-invert',\n\t\t\t\tadditionalClassNames: 'references-drawer__title',\n\t\t\t\thasText: true,\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-references-citation' )\n\t\t\t} ).$el,\n\t\t\ticons.cancel( 'gray' ).$el\n\t\t] );\n\t\t// For lazy loading references - if no text append a spinner\n\t\tif ( !this.options.text ) {\n\t\t\tthis.$el.append( icons.spinner().$el );\n\t\t}\n\n\t\t// make sure the drawer doesn't take up more than 50% of the viewport height\n\t\tif ( windowHeight / 2 < 400 ) {\n\t\t\tthis.$el.css( 'max-height', windowHeight / 2 );\n\t\t}\n\n\t\tthis.on( 'show', this.onShow.bind( this ) );\n\t\tthis.on( 'hide', this.onHide.bind( this ) );\n\t},\n\t/**\n\t * Make body not scrollable\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tonShow: function () {\n\t\tutil.getDocument().find( 'body' ).addClass( 'drawer-enabled' );\n\t},\n\t/**\n\t * Restore body scroll\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tonHide: function () {\n\t\tutil.getDocument().find( 'body' ).removeClass( 'drawer-enabled' );\n\t},\n\t/**\n\t * Fetch and render nested reference upon click\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @param {string} id of the reference to be retrieved\n\t * @param {Page} page to locate reference for\n\t * @param {string} refNumber the number it identifies as in the page\n\t * @return {jQuery.Deferred}\n\t */\n\tshowReference: function ( id, page, refNumber ) {\n\t\tvar drawer = this,\n\t\t\tgateway = this.options.gateway;\n\n\t\t// Save the page in case we have to show a nested reference.\n\t\tthis.options.page = page;\n\t\t// If API is being used we want to show the drawer with the spinner while query runs\n\t\tdrawer.show();\n\t\treturn gateway.getReference( id, page ).then( function ( reference ) {\n\t\t\tdrawer.render( {\n\t\t\t\ttitle: refNumber,\n\t\t\t\ttext: reference.text\n\t\t\t} );\n\t\t}, function ( err ) {\n\t\t\tif ( err === ReferencesGateway.ERROR_NOT_EXIST ) {\n\t\t\t\tdrawer.hide();\n\t\t\t} else {\n\t\t\t\tdrawer.render( {\n\t\t\t\t\terror: true,\n\t\t\t\t\ttitle: refNumber,\n\t\t\t\t\ttext: mw.msg( 'mobile-frontend-references-citation-error' )\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\t/**\n\t * Fetch and render nested reference upon click\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t * @return {boolean} False to cancel the native event\n\t */\n\tshowNestedReference: function ( ev ) {\n\t\tvar $dest = this.$el.find( ev.target );\n\n\t\tthis.showReference( $dest.attr( 'href' ), this.options.page, $dest.text() );\n\t\t// Don't hide the already shown drawer via propagation\n\t\t// and stop default scroll behaviour.\n\t\treturn false;\n\t}\n} );\n\nmodule.exports = ReferencesDrawer;\n","/**\n * Coordinates the logging of MobileWebSchema events.\n * Implements schema defined at https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n *\n * @class\n */\nfunction MobileWebSearchLogger() {\n\tthis.userSessionToken = null;\n\tthis.searchSessionToken = null;\n}\n\nMobileWebSearchLogger.prototype = {\n\t/**\n\t * Sets the internal state required to deal with logging user session\n\t * data.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newUserSession: function () {\n\t\tthis.userSessionToken = mw.user.generateRandomSessionId();\n\t},\n\n\t/**\n\t * Sets the internal state required to deal with logging search session\n\t * data.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newSearchSession: function () {\n\t\tthis.searchSessionToken = mw.user.generateRandomSessionId();\n\t\tthis.searchSessionCreatedAt = new Date().getTime();\n\t},\n\n\t/**\n\t * Handles the 'search-show' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchShow: function () {\n\t\tthis._newUserSession();\n\t},\n\n\t/**\n\t * Handles the 'search-start' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchStart: function () {\n\t\tthis._newSearchSession();\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'session-start',\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: 0\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-results' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {Object[]} event.results\n\t */\n\tonSearchResults: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'impression-results',\n\t\t\tresultSetType: 'prefix',\n\t\t\tnumberOfResults: event.results.length,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\t// FIXME: Unless I'm mistaken, the timeToDisplayResults\n\t\t\t// property isn't necessary.\n\t\t\ttimeToDisplayResults: timeOffsetSinceStart,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-result-click' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {number} event.index\n\t *  The zero-based index of the result in the set of results.\n\t */\n\tonSearchResultClick: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'click-result',\n\t\t\t// NOTE: clickIndex is 1-based.\n\t\t\tclickIndex: event.resultIndex + 1,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t}\n};\n\n/**\n * Convenience function that wires up an instance of the\n * MobileWebSearchLogger class to the search-* events emitted by the\n * search overlay.\n * @memberof MobileWebSearchLogger\n * @param {SearchOverlay} searchOverlay\n */\nMobileWebSearchLogger.register = function ( searchOverlay ) {\n\tvar logger = new MobileWebSearchLogger();\n\n\tsearchOverlay.on( 'search-show', logger.onSearchShow.bind( logger ) );\n\tsearchOverlay.on( 'search-start', logger.onSearchStart.bind( logger ) );\n\tsearchOverlay.on( 'search-results', logger.onSearchResults.bind( logger ) );\n\tsearchOverlay.on( 'search-result-click', logger.onSearchResultClick.bind( logger ) );\n};\n\nmodule.exports = MobileWebSearchLogger;\n","var\n\tmfExtend = require( '../mfExtend' ),\n\tOverlay = require( '../Overlay' ),\n\tutil = require( '../util' ),\n\tformHeader = require( '../headers' ).formHeader,\n\tAnchor = require( '../Anchor' ),\n\tIcon = require( '../Icon' ),\n\ticons = require( '../icons' ),\n\tspinner = icons.spinner().$el,\n\tWatchstarPageList = require( '../watchstar/WatchstarPageList' ),\n\tSEARCH_DELAY = 300,\n\tSEARCH_SPINNER_DELAY = 2000,\n\tfeedbackLink = mw.config.get( 'wgCirrusSearchFeedbackLink' );\n\n/**\n * Overlay displaying search results\n * @class SearchOverlay\n * @extends Overlay\n * @uses SearchGateway\n * @uses Icon\n *\n * @param {Object} params Configuration options\n * @param {string} params.placeholderMsg Search input placeholder text.\n * @param {string} [params.action] of form defaults to the value of wgScript\n * @fires SearchOverlay#search-show\n * @fires SearchOverlay#search-start\n * @fires SearchOverlay#search-results\n * @fires SearchOverlay#search-result-click\n */\nfunction SearchOverlay( params ) {\n\tvar options = util.extend(\n\t\ttrue,\n\t\t{\n\t\t\tisBorderBox: false,\n\t\t\tclassName: 'overlay search-overlay',\n\t\t\theaders: [\n\t\t\t\tformHeader(\n\t\t\t\t\t// Note: Do not put the clear button inside the form\n\t\t\t\t\t// as hitting enter on the input element triggers a button click,\n\t\t\t\t\t// rather than submitting the form (see T136243)\n\t\t\t\t\tutil.template( `<div class=\"overlay-title\">\n<form method=\"get\" action=\"{{action}}\" class=\"search-box\">\n\t<input class=\"search\" type=\"search\" name=\"search\" autocomplete=\"off\" placeholder=\"{{placeholderMsg}}\" aria-label=\"{{placeholderMsg}}\" value=\"{{searchTerm}}\">\n</form>\n</div>\n\t\t\t\t\t` ).render( {\n\t\t\t\t\t\tplaceholderMsg: params.placeholderMsg,\n\t\t\t\t\t\taction: params.action || mw.config.get( 'wgScript' )\n\t\t\t\t\t} ),\n\t\t\t\t\t[\n\t\t\t\t\t\ticons.cancel()\n\t\t\t\t\t],\n\t\t\t\t\tfalse\n\t\t\t\t)\n\t\t\t],\n\t\t\tevents: {\n\t\t\t\t'input input': 'onInputInput',\n\t\t\t\t'click .clear': 'onClickClear',\n\t\t\t\t'click .search-content': 'onClickSearchContent',\n\t\t\t\t'click .overlay-content': 'onClickOverlayContent',\n\t\t\t\t'click .overlay-content > div': 'onClickOverlayContentDiv',\n\t\t\t\t'touchstart .results': 'hideKeyboardOnScroll',\n\t\t\t\t'mousedown .results': 'hideKeyboardOnScroll',\n\t\t\t\t'click .results a': 'onClickResult'\n\t\t\t}\n\t\t},\n\t\tparams\n\t);\n\n\tOverlay.call( this, options );\n\n\tthis.api = options.api;\n\t// eslint-disable-next-line new-cap\n\tthis.gateway = new options.gatewayClass( this.api );\n\n\tthis.router = options.router;\n}\n\nmfExtend( SearchOverlay, Overlay, {\n\t/**\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, Overlay.prototype.templatePartials, {\n\t\tcontent: util.template( `\n<div class=\"search-content overlay-header\">\n\t<ul>\n\t\t<li>{{! search content icon goes here }}</li>\n\t</ul>\n\t<div class=\"caption\">\n\t\t<p class=\"with-results\">{{searchContentLabel}}</p>\n\t\t<p class=\"without-results\">{{noResultsMsg}}</p>\n\t\t<p class=\"without-results\">{{{searchContentNoResultsMsg}}}</p>\n\t</div>\n</div>\n<div class=\"spinner-container position-fixed\"></div>\n<div class=\"results\">\n\t<div class=\"results-list-container\"></div>\n\t{{#feedback}}\n\t\t<div class=\"search-feedback\">\n\t\t\t{{prompt}}\n\t\t</div>\n\t{{/feedback}}\n</div>\n\t\t` )\n\t} ),\n\t/**\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @mixes Overlay#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {SearchGateway} defaults.gatewayClass The class to use to setup an API gateway.\n\t *  FIXME: Should be removed when wikidata descriptions in stable (T101719)\n\t * @property {Router} defaults.router instance\n\t * @property {Icon} defaults.clearIcon options for the button that clears the search text.\n\t * @property {Icon} defaults.searchContentIcon options for the button that allows you to\n\t *  search within content\n\t * @property {string} defaults.searchContentLabel inviting user to do full text search\n\t * @property {string} defaults.searchTerm Search text.\n\t * @property {string} defaults.clearMsg Tooltip for clear button that appears when you type\n\t * into search box.\n\t * @property {string} defaults.searchContentMsg Caption for a button performing full text\n\t * search of a given search query.\n\t * @property {string} defaults.noResultsMsg Message informing user that no pages were found\n\t * for a given query.\n\t * @property {string} defaults.searchContentNoResultsMsg Used when no pages with matching\n\t * titles were found.\n\t * @property {Object} defaults.feedback options for the feedback link\n\t *  below the search results\n\t */\n\tdefaults: util.extend( {}, Overlay.prototype.defaults, {\n\t\theaderChrome: true,\n\t\tclearIcon: new Icon( {\n\t\t\ttagName: 'button',\n\t\t\tname: 'search-clear',\n\t\t\tisSmall: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-clear-search' ),\n\t\t\tadditionalClassNames: 'clear'\n\t\t} ),\n\t\tsearchContentIcon: new Icon( {\n\t\t\ttagName: 'a',\n\t\t\t// When this icon is clicked we want to reset the hash for subsequent views\n\t\t\thref: '#',\n\t\t\tname: 'search-content',\n\t\t\tlabel: mw.msg( 'mobile-frontend-search-content' )\n\t\t} ),\n\t\tsearchContentLabel: mw.msg( 'mobile-frontend-search-content' ),\n\t\tsearchTerm: '',\n\t\tnoResultsMsg: mw.msg( 'mobile-frontend-search-no-results' ),\n\t\tsearchContentNoResultsMsg: mw.message( 'mobile-frontend-search-content-no-results' ).parse(),\n\t\tfeedback: !feedbackLink ? false : {\n\t\t\tfeedback: new Anchor( {\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-search-feedback-link-text' ),\n\t\t\t\thref: feedbackLink\n\t\t\t} ),\n\t\t\tprompt: mw.msg( 'mobile-frontend-search-feedback-prompt' )\n\t\t}\n\t} ),\n\n\t/**\n\t * Make sure search header is docked to the top of the screen when the\n\t * user begins typing so that there is adequate space for search results\n\t * above the keyboard. (This is only a potential issue when sitenotices\n\t * are displayed.)\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonInputInput: function () {\n\t\tthis.performSearch();\n\t\tthis.$clear.toggle( this.$input.val() !== '' );\n\t},\n\n\t/**\n\t * Initialize the button that clears the search field\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @return {boolean} False to cancel the native event\n\t */\n\tonClickClear: function () {\n\t\tthis.$input.val( '' ).trigger( 'focus' );\n\t\tthis.performSearch();\n\t\tthis.$clear.hide();\n\t\t// In beta the clear button is on top of the search input.\n\t\t// Stop propagation so that the input doesn't receive the click.\n\t\treturn false;\n\t},\n\n\t/**\n\t * Initialize 'search within pages' functionality\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickSearchContent: function () {\n\t\tvar $el = util.getDocument().find( 'body' ),\n\t\t\t$form = this.$el.find( 'form' );\n\n\t\t// Add fulltext input to force fulltext search\n\t\tthis.parseHTML( '<input>' )\n\t\t\t.attr( {\n\t\t\t\ttype: 'hidden',\n\t\t\t\tname: 'fulltext',\n\t\t\t\tvalue: 'search'\n\t\t\t} )\n\t\t\t.appendTo( $form );\n\t\t// history.back queues a task so might run after this call. Thus we use setTimeout\n\t\t// http://www.w3.org/TR/2011/WD-html5-20110113/webappapis.html#queue-a-task\n\t\tsetTimeout( function () {\n\t\t\t// Firefox doesn't allow submission of a form not in the DOM\n\t\t\t// so temporarily re-add it\n\t\t\t$form.appendTo( $el );\n\t\t\t$form.trigger( 'submit' );\n\t\t}, 0 );\n\t},\n\n\t/**\n\t * Tapping on background only should hide the overlay\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickOverlayContent: function () {\n\t\tthis.$el.find( '.cancel' ).trigger( 'click' );\n\t},\n\n\t/**\n\t * Stop propagation\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonClickOverlayContentDiv: function ( ev ) {\n\t\tev.stopPropagation();\n\t},\n\n\t/**\n\t * Hide the keyboard when scrolling starts (avoid weird situation when\n\t * user taps on an item, the keyboard hides and wrong item is clicked).\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\thideKeyboardOnScroll: function () {\n\t\tthis.$input.trigger( 'blur' );\n\t},\n\n\t/**\n\t * Handle the user clicking a result.\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonClickResult: function ( ev ) {\n\t\tvar $link = this.$el.find( ev.currentTarget ),\n\t\t\t$result = $link.closest( 'li' );\n\t\t/**\n\t\t * Fired when the user clicks a search result\n\t\t * @event SearchOverlay#search-result-click\n\t\t * @type {Object}\n\t\t * @property {jQuery.Object} result The jQuery-wrapped DOM element that\n\t\t *  the user clicked\n\t\t * @property {number} resultIndex The zero-based index of the\n\t\t *  result in the set of results\n\t\t * @property {jQuery.Event} originalEvent The original event\n\t\t */\n\t\tthis.emit( 'search-result-click', {\n\t\t\tresult: $result,\n\t\t\tresultIndex: this.$results.index( $result ),\n\t\t\toriginalEvent: ev\n\t\t} );\n\n\t\t// FIXME: ugly hack that removes search from browser history\n\t\t// when navigating to search results\n\t\tev.preventDefault();\n\t\tthis.router.back().then( function () {\n\t\t\t// Router.navigate does not support changing href.\n\t\t\t// FIXME: Needs upstream change T189173\n\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\twindow.location.href = $link.attr( 'href' );\n\t\t} );\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this,\n\t\t\toptions = this.options,\n\t\t\ttimer;\n\n\t\tOverlay.prototype.postRender.call( this );\n\n\t\tthis.$input = this.$el.find( 'input' );\n\t\tthis.$clear = this.$el.find( '.clear' );\n\t\tthis.$searchContent = this.$el.find( '.search-content' ).hide();\n\t\tthis.$searchFeedback = this.$el.find( '.search-feedback' ).hide();\n\t\tthis.$resultContainer = this.$el.find( '.results-list-container' );\n\n\t\tthis.$el.find( '.overlay-title' ).append( options.clearIcon.$el );\n\t\tthis.$searchContent.find( 'li' ).append( options.searchContentIcon.$el );\n\t\t/**\n\t\t * Hide the spinner and abort timed spinner shows.\n\t\t */\n\t\tfunction clearSearch() {\n\t\t\tself.$spinner.hide();\n\t\t\tclearTimeout( timer );\n\t\t}\n\n\t\t// Show a spinner on top of search results\n\t\tthis.$spinner = this.$el.find( '.spinner-container' );\n\t\tthis.$spinner.append( spinner );\n\t\tthis.on( 'search-start', function ( searchData ) {\n\t\t\tif ( timer ) {\n\t\t\t\tclearSearch();\n\t\t\t}\n\t\t\ttimer = setTimeout( function () {\n\t\t\t\tself.$spinner.show();\n\t\t\t}, SEARCH_SPINNER_DELAY - searchData.delay );\n\t\t} );\n\t\tthis.on( 'search-results', clearSearch );\n\n\t\t// Hide the clear button if the search input is empty\n\t\tif ( self.$input.val() === '' ) {\n\t\t\tthis.$clear.hide();\n\t\t}\n\t\tif ( options.feedback && options.feedback.feedback ) {\n\t\t\tthis.$el.find( '.search-feedback' ).append( options.feedback.feedback.$el );\n\t\t}\n\t},\n\n\t/**\n\t * Trigger a focus() event on search input in order to\n\t * bring up the virtual keyboard.\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshowKeyboard: function () {\n\t\tvar len = this.$input.val().length;\n\t\tthis.$input.trigger( 'focus' );\n\t\t// Cursor to the end of the input\n\t\tif ( this.$input[0].setSelectionRange ) {\n\t\t\tthis.$input[0].setSelectionRange( len, len );\n\t\t}\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\t// Overlay#show defines the actual overlay visibility.\n\t\tOverlay.prototype.show.apply( this, arguments );\n\n\t\tthis.showKeyboard();\n\t\t/**\n\t\t * Fired after the search overlay is shown\n\t\t * @event SearchOverlay#search-show\n\t\t */\n\t\tthis.emit( 'search-show' );\n\t},\n\n\t/**\n\t * Perform search and render results inside current view.\n\t * FIXME: Much of the logic for caching and pending queries inside this function should\n\t * actually live in SearchGateway, please move out.\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tperformSearch: function () {\n\t\tvar\n\t\t\tself = this,\n\t\t\tapi = this.api,\n\t\t\tquery = this.$input.val(),\n\t\t\tdelay = this.gateway.isCached( query ) ? 0 : SEARCH_DELAY;\n\n\t\t// it seems the input event can be fired when virtual keyboard is closed\n\t\t// (Chrome for Android)\n\t\tif ( query !== this.lastQuery ) {\n\t\t\tif ( self._pendingQuery ) {\n\t\t\t\tself._pendingQuery.abort();\n\t\t\t}\n\t\t\tclearTimeout( this.timer );\n\n\t\t\tif ( query.length ) {\n\t\t\t\tthis.timer = setTimeout( function () {\n\t\t\t\t\tvar xhr;\n\t\t\t\t\t/**\n\t\t\t\t\t * Fired immediately before the search API request is sent\n\t\t\t\t\t * @event SearchOverlay#search-start\n\t\t\t\t\t * @property {Object} data related to the current search\n\t\t\t\t\t */\n\t\t\t\t\tself.emit( 'search-start', {\n\t\t\t\t\t\tquery: query,\n\t\t\t\t\t\tdelay: delay\n\t\t\t\t\t} );\n\n\t\t\t\t\txhr = self.gateway.search( query );\n\t\t\t\t\tself._pendingQuery = xhr.then( function ( data ) {\n\t\t\t\t\t\t// check if we're getting the rights response in case of out of\n\t\t\t\t\t\t// order responses (need to get the current value of the input)\n\t\t\t\t\t\tif ( data && data.query === self.$input.val() ) {\n\t\t\t\t\t\t\tself.$el.toggleClass( 'no-results', data.results.length === 0 );\n\t\t\t\t\t\t\tself.$searchContent\n\t\t\t\t\t\t\t\t.show()\n\t\t\t\t\t\t\t\t.find( 'p' )\n\t\t\t\t\t\t\t\t.hide()\n\t\t\t\t\t\t\t\t.filter( data.results.length ? '.with-results' : '.without-results' )\n\t\t\t\t\t\t\t\t.show();\n\n\t\t\t\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\t\t\t\tnew WatchstarPageList( {\n\t\t\t\t\t\t\t\tapi: api,\n\t\t\t\t\t\t\t\tfunnel: 'search',\n\t\t\t\t\t\t\t\tpages: data.results,\n\t\t\t\t\t\t\t\tel: self.$resultContainer\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\tself.$results = self.$resultContainer.find( 'li' );\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Fired when search API returns results\n\t\t\t\t\t\t\t * @event SearchOverlay#search-results\n\t\t\t\t\t\t\t * @type {Object}\n\t\t\t\t\t\t\t * @property {Object[]} results The results returned by the search\n\t\t\t\t\t\t\t *  API\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tself.emit( 'search-results', {\n\t\t\t\t\t\t\t\tresults: data.results\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ).promise( { abort: function () { xhr.abort(); } } );\n\t\t\t\t}, delay );\n\t\t\t} else {\n\t\t\t\tself.resetSearch();\n\t\t\t}\n\n\t\t\tthis.lastQuery = query;\n\t\t}\n\t},\n\t/**\n\t * Clear results\n\t *\n\t * @private\n\t */\n\tresetSearch: function () {\n\t\tthis.$spinner.hide();\n\t\tthis.$searchContent.hide();\n\t\tthis.$searchFeedback.hide();\n\t\tthis.$resultContainer.empty();\n\t}\n} );\n\nmodule.exports = SearchOverlay;\n","var context = require( '../context' );\n\nfunction subscribeMobileWebSearchSchema() {\n\tmw.loader.using( [\n\t\t'ext.eventLogging'\n\t] ).then( function () {\n\t\tvar // Schema class provided by ext.eventLogging\n\t\t\tSchema = mw.eventLog.Schema,\n\t\t\t/**\n\t\t\t * MobileWebSearch schema\n\t\t\t * https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n\t\t\t */\n\t\t\tschemaMobileWebSearch = new Schema(\n\t\t\t\t'MobileWebSearch',\n\t\t\t\t// todo: use a default value of 0 once config lands in production.\n\t\t\t\tmw.config.get( 'wgMFSchemaSearchSampleRate', 1 / 1000 ),\n\t\t\t\t/**\n\t\t\t\t * @property {Object} defaults Default options hash.\n\t\t\t\t * @property {string} defaults.platform Always \"mobileweb\"\n\t\t\t\t * @property {string} defaults.platformVersion The version of MobileFrontend\n\t\t\t\t *  that the user is using. One of \"stable\" or \"beta\"\n\t\t\t\t */\n\t\t\t\t{\n\t\t\t\t\tplatform: 'mobileweb',\n\t\t\t\t\tplatformVersion: context.getMode()\n\t\t\t\t}\n\t\t\t);\n\n\t\tmw.trackSubscribe( 'mf.schemaMobileWebSearch', function ( topic, data ) {\n\t\t\tschemaMobileWebSearch.log( data );\n\t\t} );\n\t} );\n}\n\nmodule.exports = {\n\tsubscribeMobileWebSearchSchema: subscribeMobileWebSearchSchema\n};\n","var m = require( '../moduleLoaderSingleton' ),\n\tpromisedView = require( '../promisedView' ),\n\tAnchor = require( '../Anchor' ),\n\tutil = require( '../util' ),\n\theader = require( '../headers' ).header,\n\tOverlay = require( '../Overlay' );\n\n/**\n * Produce an overlay for talk page\n * @param {string} title of the page to get talk topics for\n * @param {PageGateway} gateway for interacting with API.\n * @return {Overlay}\n */\nfunction talkOverlay( title, gateway ) {\n\tvar user = mw.user;\n\n\treturn Overlay.make(\n\t\t{\n\t\t\theaders: [\n\t\t\t\theader(\n\t\t\t\t\t'<strong>' + mw.msg( 'mobile-frontend-talk-overlay-header' ) + '</strong>',\n\t\t\t\t\tuser.isAnon() ? [] : [ new Anchor( {\n\t\t\t\t\t\thref: '#/talk/new',\n\t\t\t\t\t\tadditionalClassNames: 'continue',\n\t\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-talk-add-overlay-submit' )\n\t\t\t\t\t} ) ]\n\t\t\t\t)\n\t\t\t],\n\t\t\tfooterAnchor: new Anchor( {\n\t\t\t\tprogressive: true,\n\t\t\t\thref: mw.util.getUrl( title ),\n\t\t\t\tadditionalClassNames: 'footer-link talk-fullpage',\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-talk-fullpage' )\n\t\t\t} ).options,\n\t\t\tclassName: 'talk-overlay overlay'\n\t\t},\n\t\tpromisedView(\n\t\t\tutil.Promise.all( [\n\t\t\t\tgateway.getSections( title ),\n\t\t\t\tmw.loader.using( 'mobile.talk.overlays' )\n\t\t\t] ).then( function ( sections ) {\n\t\t\t\tvar talkBoard = m.require( 'mobile.talk.overlays/talkBoard' );\n\t\t\t\treturn talkBoard( sections );\n\t\t\t} )\n\t\t)\n\t);\n}\n\nmodule.exports = talkOverlay;\n","var View = require( '../View' ),\n\tmfExtend = require( '../mfExtend' ),\n\tutil = require( '../util' ),\n\tIcon = require( '../Icon' );\n\n/**\n * View for table of contents\n * @class TableOfContents\n * @extends View\n * @uses Icon\n * @param {Object} props\n * @param {Section[]} props.sections\n */\nfunction TableOfContents( props ) {\n\tView.call( this, util.extend( {\n\t\tclassName: 'toc-mobile',\n\t\tcontentsMsg: mw.msg( 'toc' )\n\t}, props ) );\n}\n\nmfExtend( TableOfContents, View, {\n\t/**\n\t * @memberof TableOfContents\n\t * @instance\n\t */\n\ttemplatePartials: {\n\t\ttocHeading: util.template( `\n<li>\n\t<a href=\"#{{anchor}}\">{{{line}}}</a>\n\t<ul>\n\t\t{{#subsections}}\n\t\t{{>tocHeading}}\n\t\t{{/subsections}}\n\t</ul>\n</li>\n\t\t` )\n\t},\n\t/**\n\t * @memberof TableOfContents\n\t * @instance\n\t */\n\ttemplate: util.template( `\n<h2><span>{{contentsMsg}}</span></h2>\n<div>\n\t<ul>\n\t{{#sections}}\n\t{{>tocHeading}}\n\t{{/sections}}\n\t</ul>\n</div>\n<div style=\"clear:both;\"></div>\n\t` ),\n\t/** @inheritdoc */\n\tpostRender: function () {\n\t\tnew Icon( {\n\t\t\tname: 'toc',\n\t\t\tadditionalClassNames: 'toc-button'\n\t\t} ).$el.prependTo( this.$el.find( 'h2' ) );\n\t}\n} );\n\nmodule.exports = TableOfContents;\n"],"sourceRoot":""}