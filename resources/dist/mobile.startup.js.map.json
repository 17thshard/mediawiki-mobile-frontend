{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.startup/OverlayManager.js","webpack://mfModules.[name]/./src/mobile.startup/PageGateway.js","webpack://mfModules.[name]/./src/mobile.startup/Skin.js","webpack://mfModules.[name]/./src/mobile.startup/Toggler.js","webpack://mfModules.[name]/./src/mobile.startup/cache.js","webpack://mfModules.[name]/./src/mobile.startup/context.js","webpack://mfModules.[name]/./src/mobile.startup/loadingOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/mobile.startup.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesDrawer.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesGateway.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesHtmlScraperGateway.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesMobileViewGateway.js","webpack://mfModules.[name]/./src/mobile.startup/rlModuleLoader.js","webpack://mfModules.[name]/./src/mobile.startup/search/MobileWebSearchLogger.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchGateway.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/search/schemaMobileWebSearch.js","webpack://mfModules.[name]/./src/mobile.startup/toc/TableOfContents.js"],"names":["util","__webpack_require__","overlayManager","OverlayManager","router","appendToSelector","on","this","_checkRoute","bind","entries","stack","hideCurrent","mw","log","warn","mfExtend","_onHideOverlay","back","_attachOverlay","overlay","$el","parents","length","$","append","_show","once","show","_hideOverlay","result","off","hide","_processMatch","match","factoryResult","self","attachHideEvent","emit","promise","then","ev","current","scrollTop","window","pageYOffset","Object","keys","reduce","m","id","_matchRoute","path","undefined","preventDefault","scrollTo","pageXOffset","entry","next","route","previous","getNext","factory","apply","slice","hasLoadError","shift","unshift","add","docReady","getPath","replaceCurrent","Error","getSingleton","loader","require","module","exports","sectionTemplate","template","get","actionParams","cache","transformSections","sections","lastSection","existingSectionLevels","map","s","level","filter","collapseLevel","Math","min","toString","forEach","section","line","replace","subsections","push","assignToParent","listOfSections","child","parseInt","text","render","PageGateway","api","prototype","getPage","title","endpoint","leadOnly","timestamp","d","Deferred","params","url","dataType","protection","edit","extend","action","page","variant","config","redirect","prop","noheadings","sectionprop","resp","lastModified","resolveObj","mv","error","reject","mobileview","Date","lastmodified","getTime","lastmodifiedby","Array","isArray","revId","lead","isMainPage","mainpage","historyUrl","getUrl","lastModifiedTimestamp","languageCount","languagecount","hasVariants","hasvariants","displayTitle","displaytitle","lastModifiedUserName","name","lastModifiedUserGender","gender","msg","invalidatePage","_getLanguageVariantsFromApiResponse","data","generalData","query","general","variantPath","variantarticlepath","variants","index","item","autonym","lang","code","getPageLanguages","language","args","meta","siprop","lllimit","titles","llprop","llinlanguagecode","languages","pages","langlinks","_getAPIResponseFromHTML","find","each","tagName","substr","$span","html","anchor","attr","getSectionsFromHTML","browser","View","Page","when","icons","viewport","spinner","getSectionId","hSelector","HEADING_SELECTOR","$parent","parent","$heading","prevAll","eq","Skin","options","mainMenu","eventBus","isBorderBox","call","referencesGateway","setupImageLoading","lazyLoadReferences","defaults","events","postRender","supportsAnimations","addClass","supportsTouchEvents","parseHTML","appendTo","getUnloadedImages","$container","toArray","offset","getWindow","height","loadImagesList","imagePlaceholders","_loadImages","images","grep","placeholder","$placeholder","isElementCloseToViewport","is","shouldLoadImage","callbacks","loadImage","width","$downloadingImage","ownerDocument","replaceWith","resolve","class","src","alt","style","srcset","$content","$spinner","gateway","wasExpanded","isReferenceSection","children","prependTo","getReferencesLists","lastId","refListIndex","getReferencesList","refListElements","remove","removeClass","loadImagesAndSetData","getLicenseMsg","licenseMsg","mfLicense","licensePlural","convertNumber","plural","link","message","parse","escapeHash","arrowOptions","additionalClassNames","Icon","Toggler","_enable","prefix","isClosed","getExpandedSections","expandedSections","JSON","storage","saveExpandedSections","set","stringify","expandStoredSections","toggler","$sectionHeading","$headline","hasClass","toggle","cleanObsoleteStoredSections","now","floor","indicator","sectionNumber","toggleClass","rotation","Boolean","aria-pressed","aria-expanded","isWideScreen","headline","isSectionOpen","storeSectionToggleState","reveal","selector","$target","prev","top","e","expandSections","$link","collapseSectionsByDefault","checkHash","hash","location","indexOf","i","$indicator","tabindex","aria-haspopup","aria-controls","target","href","which","stopPropagation","enableKeyboardActions","internalRedirect","internalRedirectHash","split","checkInternalRedirectAndHash","_getExpandedSections","_expandStoredSections","_cleanObsoleteStoredSections","MemoryCache","_cache","NoCache","key","value","getMode","Overlay","className","noHeader","moduleLoader","context","time","Browser","Button","ReferencesDrawer","ReferencesGateway","ReferencesHtmlScraperGateway","ReferencesMobileViewGateway","Panel","Section","Thumbnail","Anchor","loadingOverlay","Drawer","TableOfContents","CtaDrawer","PageList","toast","extendSearchParams","Watchstar","WatchstarPageList","rlModuleLoader","eventBusSingleton","SearchOverlay","schemaMobileWebSearch","MobileWebSearchLogger","SearchGateway","ScrollEndEventEmitter","mobileFrontend","OO","define","deprecate","toc","search","subscribeMobileWebSearchSchema","props","toHtmlString","cancelButton","cancel","citation","isSmall","hasText","label","errorClassName","getClassName","click sup a","arguments","closeOnScroll","windowHeight","css","onShow","onHide","getDocument","showReference","refNumber","drawer","getReference","reference","err","ERROR_NOT_EXIST","showNestedReference","$dest","ERROR_OTHER","getReferenceFromContainer","escapeSelector","decodeURIComponent","referencesMobileViewGateway","cachedReferencesSections","getTitle","revision","getRevisionId","$section","headingId","hasOwnProperty","sectionId","Api","newLoadingOverlay","loadModule","delegateHide","showLoadingOverlay","hideOverlayIfNeeded","document","body","using","userSessionToken","searchSessionToken","_newUserSession","user","generateRandomSessionId","_newSearchSession","searchSessionCreatedAt","onSearchShow","onSearchStart","track","timeOffsetSinceStart","onSearchResults","event","resultSetType","numberOfResults","results","timeToDisplayResults","onSearchResultClick","clickIndex","resultIndex","register","searchOverlay","logger","searchCache","generator","searchNamespace","getApiData","redirects","pilimit","pithumbsize","tiny","_createSearchRegEx","str","RegExp","_highlightSearchTerm","term","_getPage","pageInfo","newFromJSON","displaytext","_processData","sort","a","b","xhr","request","isCached","abort","feedbackLink","gatewayClass","templatePartials","header","content","icon","headerChrome","clearIcon","searchContentIcon","searchTerm","placeholderMsg","noResultsMsg","searchContentNoResultsMsg","feedback","prompt","input input","click .clear","click .search-content","click .overlay-content","click .overlay-content > div","touchstart .results","mousedown .results","click .results a","onInputInput","performSearch","$clear","$input","val","onClickClear","focus","onClickSearchContent","$form","type","setTimeout","submit","onClickOverlayContent","trigger","onClickOverlayContentDiv","hideKeyboardOnScroll","blur","onClickResult","currentTarget","$result","closest","$results","originalEvent","timer","clearSearch","clearTimeout","$searchContent","$searchFeedback","$resultContainer","searchData","delay","showKeyboard","len","setSelectionRange","lastQuery","_pendingQuery","funnel","el","resetSearch","empty","Schema","eventLog","platform","platformVersion","trackSubscribe","topic","contentsMsg","tocHeading"],"mappings":"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","file":"mobile.startup.js","sourcesContent":["/* global $ */\nvar\n\tutil = require( './util' ),\n\tmfExtend = require( './mfExtend' ),\n\toverlayManager = null;\n\n/**\n * Manages opening and closing overlays when the URL hash changes to one\n * of the registered values (see OverlayManager.add()).\n *\n * This allows overlays to function like real pages, with similar browser back/forward\n * and refresh behavior.\n *\n * @class OverlayManager\n * @param {Router} router\n * @param {string} appendToSelector\n */\nfunction OverlayManager( router, appendToSelector ) {\n\trouter.on( 'route', this._checkRoute.bind( this ) );\n\tthis.router = router;\n\t// use an object instead of an array for entries so that we don't\n\t// duplicate entries that already exist\n\tthis.entries = {};\n\t// stack of all the open overlays, stack[0] is the latest one\n\tthis.stack = [];\n\tthis.hideCurrent = true;\n\t// Set the element that overlays will be appended to\n\tif ( !appendToSelector ) {\n\t\tmw.log.warn( 'appendToSelector will soon be a required parameter to OverlayManager' );\n\t}\n\tthis.appendToSelector = appendToSelector || 'body';\n}\n\nmfExtend( OverlayManager, {\n\t/**\n\t * Don't try to hide the active overlay on a route change event triggered\n\t * by hiding another overlay.\n\t * Called when hiding an overlay.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t */\n\t_onHideOverlay: function () {\n\t\tthis.hideCurrent = false;\n\n\t\tthis.router.back();\n\t},\n\n\t/** Attach overlay to DOM\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to attach\n\t*/\n\t_attachOverlay: function ( overlay ) {\n\t\tif ( !overlay.$el.parents().length ) {\n\t\t\t$( this.appendToSelector ).append( overlay.$el );\n\t\t}\n\t},\n\t/**\n\t * Show the overlay and bind the '_om_hide' event to _onHideOverlay.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to show\n\t */\n\t_show: function ( overlay ) {\n\n\t\t// if hidden using overlay (not hardware) button, update the state\n\t\toverlay.once( '_om_hide', this._onHideOverlay.bind( this ) );\n\n\t\tthis._attachOverlay( overlay );\n\t\toverlay.show();\n\t},\n\n\t/**\n\t * Hide overlay\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to hide\n\t * @return {boolean} Whether the overlay has been hidden\n\t */\n\t_hideOverlay: function ( overlay ) {\n\t\tvar result;\n\n\t\t// remove the callback for updating state when overlay closed using\n\t\t// overlay close button\n\t\toverlay.off( '_om_hide' );\n\n\t\tresult = overlay.hide( this.stack.length > 1 );\n\n\t\t// if closing prevented, reattach the callback\n\t\tif ( !result ) {\n\t\t\toverlay.once( '_om_hide', this._onHideOverlay.bind( this ) );\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Show match's overlay if match is not null.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Object|null} match Object with factory function's result. null if no match.\n\t */\n\t_processMatch: function ( match ) {\n\t\tvar factoryResult,\n\t\t\tself = this;\n\n\t\t/**\n\t\t * Attach an event to the overlays hide event\n\t\t * @param {Overlay} overlay\n\t\t */\n\t\tfunction attachHideEvent( overlay ) {\n\t\t\toverlay.on( 'hide', function () {\n\t\t\t\toverlay.emit( '_om_hide' );\n\t\t\t} );\n\t\t}\n\n\t\tif ( match ) {\n\t\t\tif ( match.overlay ) {\n\t\t\t\t// if the match is an overlay that was previously opened, reuse it\n\t\t\t\tself._show( match.overlay );\n\t\t\t} else {\n\t\t\t\t// else create an overlay using the factory function result (either\n\t\t\t\t// a promise or an overlay)\n\t\t\t\tfactoryResult = match.factoryResult;\n\t\t\t\t// http://stackoverflow.com/a/13075985/365238\n\t\t\t\tif ( typeof factoryResult.promise === 'function' ) {\n\t\t\t\t\tfactoryResult.then( function ( overlay ) {\n\t\t\t\t\t\tmatch.overlay = overlay;\n\t\t\t\t\t\tattachHideEvent( overlay );\n\t\t\t\t\t\tself._show( overlay );\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tmatch.overlay = factoryResult;\n\t\t\t\t\tattachHideEvent( match.overlay );\n\t\t\t\t\tself._show( factoryResult );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * A callback for Router's `route` event.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {jQuery.Event} ev Event object.\n\t */\n\t_checkRoute: function ( ev ) {\n\t\tvar\n\t\t\tcurrent = this.stack[0],\n\t\t\tmatch;\n\n\t\t// When entering an overlay for the first time,\n\t\t// the manager should remember the user's scroll position\n\t\t// overlays always open at top of page\n\t\t// and we'll want to restore it later.\n\t\t// This should happen before the call to _matchRoute which will \"show\" the overlay.\n\t\t// The Overlay has similar logic for overlays that are not managed via the overlay.\n\t\tif ( !current ) {\n\t\t\tthis.scrollTop = window.pageYOffset;\n\t\t}\n\n\t\tmatch = Object.keys( this.entries ).reduce( function ( m, id ) {\n\t\t\treturn m || this._matchRoute( ev.path, this.entries[ id ] );\n\t\t}.bind( this ), null );\n\n\t\t// if there is an overlay in the stack and it's opened, try to close it\n\t\tif (\n\t\t\tcurrent &&\n\t\t\tcurrent.overlay !== undefined &&\n\t\t\tthis.hideCurrent &&\n\t\t\t!this._hideOverlay( current.overlay )\n\t\t) {\n\t\t\t// if hide prevented, prevent route change event\n\t\t\tev.preventDefault();\n\t\t} else if ( !match ) {\n\t\t\t// if hidden and no new matches, reset the stack\n\t\t\tthis.stack = [];\n\t\t\t// restore the scroll position.\n\t\t\twindow.scrollTo( window.pageXOffset, this.scrollTop );\n\t\t}\n\n\t\tthis.hideCurrent = true;\n\t\tthis._processMatch( match );\n\t},\n\n\t/**\n\t * Check if a given path matches one of the entries.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {string} path Path (hash) to check.\n\t * @param {Object} entry Entry object created in OverlayManager#add.\n\t * @return {Object|null} Match object with factory function's result.\n\t *  Returns null if no match.\n\t */\n\t_matchRoute: function ( path, entry ) {\n\t\tvar\n\t\t\tnext,\n\t\t\tmatch = path.match( entry.route ),\n\t\t\tprevious = this.stack[1],\n\t\t\tself = this;\n\n\t\t/**\n\t\t * Returns object to add to stack\n\t\t * @method\n\t\t * @ignore\n\t\t * @return {Object}\n\t\t */\n\t\tfunction getNext() {\n\t\t\treturn {\n\t\t\t\tpath: path,\n\t\t\t\tfactoryResult: entry.factory.apply( self, match.slice( 1 ) )\n\t\t\t};\n\t\t}\n\n\t\tif ( match ) {\n\t\t\t// if previous stacked overlay's path matches, assume we're going back\n\t\t\t// and reuse a previously opened overlay\n\t\t\tif ( previous && previous.path === path ) {\n\t\t\t\tif ( previous.overlay && previous.overlay.hasLoadError ) {\n\t\t\t\t\tself.stack.shift();\n\t\t\t\t\t// Loading of overlay failed so we want to replace it with a new\n\t\t\t\t\t// overlay (which will try to load successfully)\n\t\t\t\t\tself.stack[0] = getNext();\n\t\t\t\t\treturn self.stack[0];\n\t\t\t\t}\n\n\t\t\t\tself.stack.shift();\n\t\t\t\treturn previous;\n\t\t\t} else {\n\t\t\t\tnext = getNext();\n\t\t\t\tif ( this.stack[0] && next.path === this.stack[0].path ) {\n\t\t\t\t\t// current overlay path is same as path to check which means overlay\n\t\t\t\t\t// is attempting to refresh so just replace current overlay with new\n\t\t\t\t\t// overlay\n\t\t\t\t\tself.stack[0] = next;\n\t\t\t\t} else {\n\t\t\t\t\tself.stack.unshift( next );\n\t\t\t\t}\n\t\t\t\treturn next;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Add an overlay that should be shown for a specific fragment identifier.\n\t *\n\t * The following code will display an overlay whenever a user visits a URL that\n\t * end with '#/hi/name'. The value of `name` will be passed to the overlay.\n\t *\n\t *     @example\n\t *     overlayManager.add( /\\/hi\\/(.*)/, function ( name ) {\n\t *       var factoryResult = $.Deferred();\n\t *\n\t *       mw.using( 'mobile.HiOverlay', function () {\n\t *         var HiOverlay = M.require( 'HiOverlay' );\n\t *         factoryResult.resolve( new HiOverlay( { name: name } ) );\n\t *       } );\n\t *\n\t *       return factoryResult;\n\t *     } );\n\t *\n\t * @memberof OverlayManager\n\t * @instance\n\t * @param {RegExp} route route regular expression, optionally with parameters.\n\t * @param {Function} factory a function returning an overlay or a $.Deferred\n\t * which resolves to an overlay.\n\t */\n\tadd: function ( route, factory ) {\n\t\tvar self = this,\n\t\t\tentry = {\n\t\t\t\troute: route,\n\t\t\t\tfactory: factory\n\t\t\t};\n\n\t\tthis.entries[route] = entry;\n\t\t// Check if overlay should be shown for the current path.\n\t\t// The DOM must fully load before we can show the overlay because Overlay relies on it.\n\t\tutil.docReady( function () {\n\t\t\tself._processMatch( self._matchRoute( self.router.getPath(), entry ) );\n\t\t} );\n\t},\n\n\t/**\n\t * Replace the currently displayed overlay with a new overlay without changing the\n\t * URL. This is useful for when you want to switch overlays, but don't want to\n\t * change the back button or close box behavior.\n\t *\n\t * @memberof OverlayManager\n\t * @instance\n\t * @param {Object} overlay The overlay to display\n\t */\n\treplaceCurrent: function ( overlay ) {\n\t\tif ( this.stack.length === 0 ) {\n\t\t\tthrow new Error( 'Trying to replace OverlayManager\\'s current overlay, but stack is empty' );\n\t\t}\n\t\tthis._hideOverlay( this.stack[0].overlay );\n\t\tthis.stack[0].overlay = overlay;\n\t\tthis._show( overlay );\n\t}\n} );\n\n/**\n * Retrieve a singleton instance using 'mediawiki.router'.\n * @memberof OverlayManager\n * @return {OverlayManager}\n */\nOverlayManager.getSingleton = function () {\n\tif ( !overlayManager ) {\n\t\toverlayManager = new OverlayManager( mw.loader.require( 'mediawiki.router' ), 'body' );\n\t}\n\treturn overlayManager;\n};\n\nmodule.exports = OverlayManager;\n","var sectionTemplate = mw.template.get( 'mobile.startup', 'Section.hogan' ),\n\tutil = require( './util.js' ),\n\tactionParams = require( './actionParams' ),\n\tcache = {};\n\n/**\n * Add child to listOfSections if the level of child is the same as the last\n * child of listOfSections, otherwise add it to the children of the last\n * section of listOfSections. If listOfSections is empty, just add child to it.\n * @private\n * @param {Array} listOfSections - Array of section ids\n * @param {Object} child - Section to be added to listOfSections\n */\nfunction assignToParent( listOfSections, child ) {\n\tvar section;\n\tif ( listOfSections.length === 0 ) {\n\t\tlistOfSections.push( child );\n\t} else {\n\t\t// take a look at the last child\n\t\tsection = listOfSections[listOfSections.length - 1];\n\t\t// If the level is the same as another section in this list it is a sibling\n\t\tif ( parseInt( section.level, 10 ) === parseInt( child.level, 10 ) ) {\n\t\t\tlistOfSections.push( child );\n\t\t} else {\n\t\t\t// Otherwise take a look at that sections children recursively\n\t\t\tassignToParent( section.subsections, child );\n\t\t}\n\t}\n}\n\n/**\n * Order sections hierarchically\n * @private\n * @param {Array} sections Array of section objects created from response HTML\n * @return {Array} Ordered array of sections\n */\nfunction transformSections( sections ) {\n\tvar\n\t\tsectionLevels = sections.map( function ( s ) {\n\t\t\treturn s.level;\n\t\t} ),\n\t\texistingSectionLevels = sectionLevels.filter( function ( level ) {\n\t\t\treturn !!level;\n\t\t} ),\n\t\tcollapseLevel = Math.min.apply( this, existingSectionLevels ).toString(),\n\t\tlastSection,\n\t\tresult = [];\n\n\t// if the first section level is not equal to collapseLevel, this first\n\t// section will not have a parent and will be appended to the result.\n\tsections.forEach( function ( section ) {\n\t\tif ( section.line !== undefined ) {\n\t\t\tsection.line = section.line.replace( /<\\/?a\\b[^>]*>/g, '' );\n\t\t}\n\t\tsection.subsections = [];\n\n\t\tif (\n\t\t\t!lastSection ||\n\t\t\t(\n\t\t\t\t!section.level ||\n\t\t\t\tsection.level === collapseLevel\n\t\t\t) ||\n\t\t\t// make sure lastSections first child's level is bigger than section.level\n\t\t\t(\n\t\t\t\tlastSection.subsections.length &&\n\t\t\t\tlastSection.subsections[0].level > section.level\n\t\t\t) ||\n\t\t\t// also make sure section.level is not bigger than the lastSection.level\n\t\t\t(\n\t\t\t\tlastSection.level &&\n\t\t\t\tlastSection.level >= section.level\n\t\t\t)\n\t\t) {\n\t\t\tresult.push( section );\n\t\t\tlastSection = section;\n\t\t} else {\n\t\t\tassignToParent( lastSection.subsections, section );\n\t\t\tlastSection.text += sectionTemplate.render( section );\n\t\t}\n\t} );\n\n\treturn result;\n}\n\n/**\n * API for providing Page data\n * @class PageGateway\n * @param {mw.Api} api\n */\nfunction PageGateway( api ) {\n\tthis.api = api;\n}\n\nPageGateway.prototype = {\n\t/**\n\t * Retrieve a page from the api\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page to be retrieved\n\t * @param {string} endpoint an alternative api url to retrieve the page from\n\t * @param {boolean} leadOnly When set only the lead section content is returned\n\t * @return {jQuery.Deferred} with parameter page data that can be passed to a Page view\n\t */\n\tgetPage: function ( title, endpoint, leadOnly ) {\n\t\tvar timestamp,\n\t\t\td = util.Deferred(),\n\t\t\tparams = endpoint ? {\n\t\t\t\turl: endpoint,\n\t\t\t\tdataType: 'jsonp'\n\t\t\t} : {},\n\t\t\tprotection = {\n\t\t\t\tedit: [ '*' ]\n\t\t\t};\n\n\t\tutil.extend( params,\n\t\t\tactionParams( {\n\t\t\t\taction: 'mobileview',\n\t\t\t\tpage: title,\n\t\t\t\tvariant: mw.config.get( 'wgPageContentLanguage' ),\n\t\t\t\tredirect: 'yes',\n\t\t\t\tprop: 'id|sections|text|lastmodified|lastmodifiedby|languagecount|hasvariants|protection|displaytitle|revision',\n\t\t\t\tnoheadings: 'yes',\n\t\t\t\tsectionprop: 'level|line|anchor',\n\t\t\t\tsections: leadOnly ? 0 : 'all'\n\t\t\t} )\n\t\t);\n\n\t\tif ( !cache[title] ) {\n\t\t\tcache[title] = this.api.get( params ).then( function ( resp ) {\n\t\t\t\tvar sections, lastModified, resolveObj, mv;\n\n\t\t\t\tif ( resp.error ) {\n\t\t\t\t\treturn d.reject( resp.error );\n\t\t\t\t} else if ( !resp.mobileview.sections ) {\n\t\t\t\t\treturn d.reject( 'No sections' );\n\t\t\t\t} else {\n\t\t\t\t\tmv = resp.mobileview;\n\t\t\t\t\tsections = transformSections( mv.sections );\n\t\t\t\t\t// Assume the timestamp is in the form TS_ISO_8601\n\t\t\t\t\t// and we don't care about old browsers\n\t\t\t\t\t// change to seconds to be consistent with PHP\n\t\t\t\t\ttimestamp = new Date( mv.lastmodified ).getTime() / 1000;\n\t\t\t\t\tlastModified = mv.lastmodifiedby;\n\n\t\t\t\t\t// FIXME: [API] the API sometimes returns an object and sometimes an array\n\t\t\t\t\t// There are various quirks with the format of protection level\n\t\t\t\t\t// as returned by api.\n\t\t\t\t\t// Also it is usually incomplete - if something is missing this means\n\t\t\t\t\t// that it has no protection level.\n\t\t\t\t\t// When an array this means there is no protection level set.\n\t\t\t\t\t// To keep the data type consistent either use the predefined\n\t\t\t\t\t// protection level,\n\t\t\t\t\t// or extend it with what is returned by API.\n\t\t\t\t\tprotection = Array.isArray( mv.protection ) ?\n\t\t\t\t\t\tprotection :\n\t\t\t\t\t\tutil.extend( protection, mv.protection );\n\n\t\t\t\t\tresolveObj = {\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tid: mv.id,\n\t\t\t\t\t\trevId: mv.revId,\n\t\t\t\t\t\tprotection: protection,\n\t\t\t\t\t\tlead: sections[0].text,\n\t\t\t\t\t\tsections: sections.slice( 1 ),\n\t\t\t\t\t\tisMainPage: mv.mainpage !== undefined,\n\t\t\t\t\t\thistoryUrl: mw.util.getUrl( title, {\n\t\t\t\t\t\t\taction: 'history'\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\tlastModifiedTimestamp: timestamp,\n\t\t\t\t\t\tlanguageCount: mv.languagecount,\n\t\t\t\t\t\thasVariants: mv.hasvariants !== undefined,\n\t\t\t\t\t\tdisplayTitle: mv.displaytitle\n\t\t\t\t\t};\n\t\t\t\t\t// Add non-anonymous user information\n\t\t\t\t\tif ( lastModified ) {\n\t\t\t\t\t\tutil.extend( resolveObj, {\n\t\t\t\t\t\t\tlastModifiedUserName: lastModified.name,\n\t\t\t\t\t\t\tlastModifiedUserGender: lastModified.gender\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t\t// FIXME: Return a Page class here\n\t\t\t\t\treturn resolveObj;\n\t\t\t\t}\n\t\t\t}, function ( msg ) {\n\t\t\t\treturn d.reject( msg );\n\t\t\t} );\n\t\t}\n\n\t\treturn cache[title];\n\t},\n\n\t/**\n\t * Invalidate the internal cache for a given page\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page who's cache you want to invalidate\n\t */\n\tinvalidatePage: function ( title ) {\n\t\tdelete cache[title];\n\t},\n\n\t/**\n\t * Gets language variant list for a page; helper function for getPageLanguages()\n\t * @memberof PageGateway\n\t * @instance\n\t * @private\n\t * @param  {string} title Name of the page to obtain variants for\n\t * @param  {Object} data Data from API\n\t * @return {Array|boolean} List of language variant objects or false if no variants exist\n\t */\n\t_getLanguageVariantsFromApiResponse: function ( title, data ) {\n\t\tvar generalData = data.query.general,\n\t\t\tvariantPath = generalData.variantarticlepath,\n\t\t\tvariants = [];\n\n\t\tif ( !generalData.variants ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Create the data object for each variant and store it\n\t\tObject.keys( generalData.variants ).forEach( function ( index ) {\n\t\t\tvar item = generalData.variants[ index ],\n\t\t\t\tvariant = {\n\t\t\t\t\tautonym: item.name,\n\t\t\t\t\tlang: item.code\n\t\t\t\t};\n\n\t\t\tif ( variantPath ) {\n\t\t\t\tvariant.url = variantPath\n\t\t\t\t\t.replace( '$1', title )\n\t\t\t\t\t.replace( '$2', item.code );\n\t\t\t} else {\n\t\t\t\tvariant.url = mw.util.getUrl( title, {\n\t\t\t\t\tvariant: item.code\n\t\t\t\t} );\n\t\t\t}\n\t\t\tvariants.push( variant );\n\t\t} );\n\n\t\treturn variants;\n\t},\n\n\t/**\n\t * Retrieve available languages for a given title\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page languages should be retrieved for\n\t * @param {string} [language] when provided the names of the languages returned\n\t *  will be translated additionally into this language.\n\t * @return {jQuery.Deferred} which is called with an object containing langlinks\n\t * and variant links as defined @ https://en.m.wikipedia.org/w/api.php?action=help&modules=query%2Blanglinks\n\t */\n\tgetPageLanguages: function ( title, language ) {\n\t\tvar self = this,\n\t\t\targs = actionParams( {\n\t\t\t\tmeta: 'siteinfo',\n\t\t\t\tsiprop: 'general',\n\t\t\t\tprop: 'langlinks',\n\t\t\t\tlllimit: 'max',\n\t\t\t\ttitles: title\n\t\t\t} );\n\n\t\tif ( language ) {\n\t\t\targs.llprop = 'url|autonym|langname';\n\t\t\targs.llinlanguagecode = language;\n\t\t} else {\n\t\t\targs.llprop = 'url|autonym';\n\t\t}\n\t\treturn this.api.get( args ).then( function ( resp ) {\n\t\t\treturn {\n\t\t\t\tlanguages: resp.query.pages[0].langlinks || [],\n\t\t\t\tvariants: self._getLanguageVariantsFromApiResponse( title, resp )\n\t\t\t};\n\t\t}, function () {\n\t\t\treturn util.Deferred().reject();\n\t\t} );\n\t},\n\n\t/**\n\t * Extract sections from headings in $el\n\t * @memberof PageGateway\n\t * @instance\n\t * @private\n\t * @param {jQuery.Object} $el object from which sections are extracted\n\t * @return {Array} Array of section objects created from headings in $el\n\t * FIXME: Where's a better place for getSectionsFromHTML and this function to live?\n\t * Answer: Possibly Page.js\n\t */\n\t_getAPIResponseFromHTML: function ( $el ) {\n\t\t// FIXME: use Page.HEADING_SELECTOR\n\t\tvar $headings = $el.find( 'h1,h2,h3,h4,h5,h6' ),\n\t\t\tsections = [];\n\n\t\t$headings.each( function () {\n\t\t\tvar level = this.tagName.substr( 1 ),\n\t\t\t\t$span = $el.find( this ).find( '.mw-headline' );\n\n\t\t\tif ( $span.length ) {\n\t\t\t\tsections.push( {\n\t\t\t\t\tlevel: level,\n\t\t\t\t\tline: $span.html(),\n\t\t\t\t\tanchor: $span.attr( 'id' ) || '',\n\t\t\t\t\ttext: ''\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t\treturn sections;\n\t},\n\n\t/**\n\t * Order sections hierarchically\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {jQuery.Object} $el object from which sections are extracted\n\t * @return {Array} Ordered array of sections\n\t */\n\tgetSectionsFromHTML: function ( $el ) {\n\t\treturn transformSections( this._getAPIResponseFromHTML( $el ) );\n\t}\n};\n\nmodule.exports = PageGateway;\n","var\n\tbrowser = require( './Browser' ).getSingleton(),\n\tView = require( './View' ),\n\tutil = require( './util' ),\n\tPage = require( './Page' ),\n\tDeferred = util.Deferred,\n\twhen = util.when,\n\ticons = require( './icons' ),\n\tviewport = mw.viewport,\n\tspinner = icons.spinner(),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * Get the id of the section $el belongs to.\n * @param {jQuery.Object} $el\n * @return {string|null} either the anchor (id attribute of the section heading\n *  or null if none found)\n */\nfunction getSectionId( $el ) {\n\tvar id,\n\t\thSelector = Page.HEADING_SELECTOR,\n\t\t$parent = $el.parent(),\n\t\t// e.g. matches Subheading in\n\t\t// <h2>H</h2><div><h3 id=\"subheading\">Subh</h3><a class=\"element\"></a></div>\n\t\t$heading = $el.prevAll( hSelector ).eq( 0 );\n\n\tif ( $heading.length ) {\n\t\tid = $heading.find( '.mw-headline' ).attr( 'id' );\n\t\tif ( id ) {\n\t\t\treturn id;\n\t\t}\n\t}\n\tif ( $parent.length ) {\n\t\t// if we couldnt find a sibling heading, check the sibling of the parents\n\t\t// consider <div><h2 /><div><$el/></div></div>\n\t\treturn getSectionId( $parent );\n\t} else {\n\t\treturn null;\n\t}\n}\n\n/**\n * Representation of the current skin being rendered.\n *\n * @class Skin\n * @extends View\n * @uses Browser\n * @uses Page\n * @fires Skin#click\n * @fires Skin#references-loaded\n * @fires Skin#changed\n * @param {Object} params Configuration options\n * @param {OO.EventEmitter} params.eventBus Object used to listen for\n * before-section-toggled, scroll:throttled, resize:throttled, and\n * section-toggled events\n */\nfunction Skin( params ) {\n\tvar self = this,\n\t\toptions = util.extend( {}, params );\n\n\tthis.page = options.page;\n\tthis.name = options.name;\n\tif ( options.mainMenu ) {\n\t\tthis.mainMenu = options.mainMenu;\n\t\tmw.log.warn( 'Skin: Use of mainMenu is deprecated.' );\n\t}\n\tthis.eventBus = options.eventBus;\n\toptions.isBorderBox = false;\n\tView.call( this, options );\n\tthis.referencesGateway = options.referencesGateway;\n\n\tif (\n\t\tmw.config.get( 'wgMFLazyLoadImages' )\n\t) {\n\t\tutil.docReady( function () {\n\t\t\tself.setupImageLoading();\n\t\t} );\n\t}\n\n\tif ( mw.config.get( 'wgMFLazyLoadReferences' ) ) {\n\t\tthis.eventBus.on( 'before-section-toggled', this.lazyLoadReferences.bind( this ) );\n\t}\n}\n\nmfExtend( Skin, View, {\n\t/**\n\t * @memberof Skin\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {Page} defaults.page page the skin is currently rendering\n\t * @property {ReferencesGateway} defaults.referencesGateway instance of references gateway\n\t */\n\tdefaults: {\n\t\tpage: undefined\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Skin\n\t * @instance\n\t */\n\tevents: {},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Skin\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar $el = this.$el;\n\t\tif ( browser.supportsAnimations() ) {\n\t\t\t$el.addClass( 'animations' );\n\t\t}\n\t\tif ( browser.supportsTouchEvents() ) {\n\t\t\t$el.addClass( 'touch-events' );\n\t\t}\n\t\tutil.parseHTML( '<div class=\"transparent-shield cloaked-element\">' )\n\t\t\t.appendTo( $el.find( '#mw-mf-page-center' ) );\n\t\t/**\n\t\t * Fired when appearance of skin changes.\n\t\t * @event Skin#changed\n\t\t */\n\t\tthis.emit( 'changed' );\n\n\t\t/**\n\t\t * Fired when the skin is clicked.\n\t\t * @event Skin#click\n\t\t */\n\t\tthis.$( '#mw-mf-page-center' ).on( 'click', this.emit.bind( this, 'click' ) );\n\t},\n\t/**\n\t * Get images that have not yet been loaded in the page\n\t * @memberof Skin\n\t * @instance\n\t * @param {jQuery.Object} [$container] The container that should be\n\t *  searched for image placeholders. Defaults to \"#content\".\n\t * @return {Array} of unloaded image placeholders in the page\n\t */\n\tgetUnloadedImages: function ( $container ) {\n\t\t$container = $container || this.$( '#content' );\n\t\treturn $container.find( '.lazy-image-placeholder' ).toArray();\n\t},\n\t/**\n\t * Setup listeners to watch unloaded images and load them into the page\n\t * as and when they are needed.\n\t * @memberof Skin\n\t * @instance\n\t * @param {jQuery.Object} [$container] The container that should be\n\t *  searched for image placeholders. Defaults to \"#content\".\n\t * @return {jQuery.Deferred} which will be resolved when the attempts to\n\t *  load all images subject to loading have been completed.\n\t */\n\tsetupImageLoading: function ( $container ) {\n\t\tvar self = this,\n\t\t\toffset = util.getWindow().height() * 1.5,\n\t\t\tloadImagesList = this.loadImagesList.bind( this ),\n\t\t\timagePlaceholders = this.getUnloadedImages( $container );\n\n\t\t/**\n\t\t * Check whether an image should be loaded based on its proximity to the\n\t\t * viewport; and whether it is displayed to the user.\n\t\t * @param {jQuery.Object} $placeholder\n\t\t * @return {boolean}\n\t\t */\n\t\tfunction shouldLoadImage( $placeholder ) {\n\t\t\treturn viewport.isElementCloseToViewport( $placeholder[0], offset ) &&\n\t\t\t\t// If a placeholder is an inline element without a height attribute set\n\t\t\t\t// it will record as hidden\n\t\t\t\t// to circumvent this we also need to test the height (see T143768).\n\t\t\t\t( $placeholder.is( ':visible' ) || $placeholder.height() === 0 );\n\t\t}\n\n\t\t/**\n\t\t * Load remaining images in viewport\n\t\t * @return {jQuery.Deferred}\n\t\t */\n\t\tfunction _loadImages() {\n\t\t\tvar images = [];\n\t\t\t// Filter unloaded images to only the images that still need to be loaded\n\t\t\timagePlaceholders = util.grep( imagePlaceholders, function ( placeholder ) {\n\t\t\t\tvar $placeholder = self.$( placeholder );\n\t\t\t\t// Check length to ensure the image is still in the DOM.\n\t\t\t\tif ( $placeholder.length && shouldLoadImage( $placeholder ) ) {\n\t\t\t\t\timages.push( placeholder );\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} );\n\n\t\t\t// When no images are left unbind all events\n\t\t\tif ( !imagePlaceholders.length ) {\n\t\t\t\tself.eventBus.off( 'scroll:throttled', _loadImages );\n\t\t\t\tself.eventBus.off( 'resize:throttled', _loadImages );\n\t\t\t\tself.eventBus.off( 'section-toggled', _loadImages );\n\t\t\t\tself.off( 'changed', _loadImages );\n\t\t\t}\n\n\t\t\t// load any remaining images.\n\t\t\treturn loadImagesList( images );\n\t\t}\n\n\t\tthis.eventBus.on( 'scroll:throttled', _loadImages );\n\t\tthis.eventBus.on( 'resize:throttled', _loadImages );\n\t\tthis.eventBus.on( 'section-toggled', _loadImages );\n\t\tthis.on( 'changed', _loadImages );\n\n\t\treturn _loadImages();\n\t},\n\t/**\n\t * Load an image on demand\n\t * @memberof Skin\n\t * @instance\n\t * @param {Array} [images] a list of images that have not been loaded.\n\t *  If none given all will be loaded.\n\t * @return {jQuery.Deferred}\n\t */\n\tloadImagesList: function ( images ) {\n\t\tvar callbacks,\n\t\t\t$ = this.$.bind( this ),\n\t\t\tloadImage = this.loadImage.bind( this );\n\n\t\timages = images || this.getUnloadedImages();\n\t\tcallbacks = images.map( function ( placeholder ) {\n\t\t\treturn loadImage( $( placeholder ) );\n\t\t} );\n\n\t\treturn when.apply( null, callbacks );\n\t},\n\t/**\n\t * Load an image on demand\n\t * @memberof Skin\n\t * @instance\n\t * @param {jQuery.Object} $placeholder\n\t * @return {jQuery.Deferred}\n\t */\n\tloadImage: function ( $placeholder ) {\n\t\tvar\n\t\t\td = Deferred(),\n\t\t\twidth = $placeholder.attr( 'data-width' ),\n\t\t\theight = $placeholder.attr( 'data-height' ),\n\t\t\t// document must be passed to ensure image will start downloading\n\t\t\t$downloadingImage = util.parseHTML( '<img>', this.$el[0].ownerDocument );\n\n\t\t// When the image has loaded\n\t\t$downloadingImage.on( 'load', function () {\n\t\t\t// Swap the HTML inside the placeholder (to keep the layout and\n\t\t\t// dimensions the same and not trigger layouts\n\t\t\t$downloadingImage.addClass( 'image-lazy-loaded' );\n\t\t\t$placeholder.replaceWith( $downloadingImage );\n\t\t\td.resolve();\n\t\t} );\n\t\t$downloadingImage.on( 'error', function () {\n\t\t\td.reject();\n\t\t} );\n\n\t\t// Trigger image download after binding the load handler\n\t\t$downloadingImage.attr( {\n\t\t\tclass: $placeholder.attr( 'data-class' ),\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tsrc: $placeholder.attr( 'data-src' ),\n\t\t\talt: $placeholder.attr( 'data-alt' ),\n\t\t\tstyle: $placeholder.attr( 'style' ),\n\t\t\tsrcset: $placeholder.attr( 'data-srcset' )\n\t\t} );\n\t\treturn d;\n\t},\n\n\t/**\n\t * Load the references section content from API if it's not already loaded.\n\t *\n\t * All references tags content will be loaded per section.\n\t * @memberof Skin\n\t * @instance\n\t * @param {Object} data Information about the section. It's in the following form:\n\t * {\n\t *     @property {string} page,\n\t *     @property {boolean} wasExpanded,\n\t *     @property {jQuery.Object} $heading,\n\t *     @property {boolean} isReferenceSection\n\t * }\n\t * @return {jQuery.Promise} rejected when not a reference section.\n\t */\n\tlazyLoadReferences: function ( data ) {\n\t\tvar $content, $spinner,\n\t\t\tgateway = this.referencesGateway,\n\t\t\tgetUnloadedImages = this.getUnloadedImages.bind( this ),\n\t\t\tloadImagesList = this.loadImagesList.bind( this ),\n\t\t\tself = this;\n\n\t\t// If the section was expanded before toggling, do not load anything as\n\t\t// section is being collapsed now.\n\t\t// Also return early if lazy loading is not required or the section is\n\t\t// not a reference section\n\t\tif (\n\t\t\tdata.wasExpanded ||\n\t\t\t!data.isReferenceSection\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t$content = data.$heading.next();\n\n\t\tfunction loadImagesAndSetData() {\n\t\t\t// lazy load images if any\n\t\t\tloadImagesList( getUnloadedImages( $content ) );\n\t\t\t// Do not attempt further loading even if we're unable to load this time.\n\t\t\t$content.data( 'are-references-loaded', 1 );\n\t\t}\n\n\t\tif ( !$content.data( 'are-references-loaded' ) ) {\n\t\t\t$content.children().addClass( 'hidden' );\n\t\t\t$spinner = spinner.$el.prependTo( $content );\n\n\t\t\t// First ensure we retrieve all of the possible lists\n\t\t\treturn gateway.getReferencesLists( data.page )\n\t\t\t\t.then( function () {\n\t\t\t\t\tvar lastId;\n\n\t\t\t\t\t$content.find( '.mf-lazy-references-placeholder' ).each( function () {\n\t\t\t\t\t\tvar refListIndex = 0,\n\t\t\t\t\t\t\t$placeholder = $content.find( this ),\n\t\t\t\t\t\t\t// search for id of the collapsible heading\n\t\t\t\t\t\t\tid = getSectionId( $placeholder );\n\n\t\t\t\t\t\tif ( lastId !== id ) {\n\t\t\t\t\t\t\t// If the placeholder belongs to a new section reset index\n\t\t\t\t\t\t\trefListIndex = 0;\n\t\t\t\t\t\t\tlastId = id;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// otherwise increment it\n\t\t\t\t\t\t\trefListIndex++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( id ) {\n\t\t\t\t\t\t\tgateway.getReferencesList( data.page, id )\n\t\t\t\t\t\t\t\t.then( function ( refListElements ) {\n\t\t\t\t\t\t\t\t\t// Note if no section html is provided\n\t\t\t\t\t\t\t\t\t// no substitution will happen\n\t\t\t\t\t\t\t\t\t// so user is forced to rely on placeholder link.\n\t\t\t\t\t\t\t\t\tif ( refListElements && refListElements[refListIndex] ) {\n\t\t\t\t\t\t\t\t\t\t$placeholder.replaceWith(\n\t\t\t\t\t\t\t\t\t\t\trefListElements[refListIndex]\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\t// Show the section now the references lists have been placed.\n\t\t\t\t\t$spinner.remove();\n\t\t\t\t\t$content.children().removeClass( 'hidden' );\n\t\t\t\t\t/**\n\t\t\t\t\t * Fired when references list is loaded into the HTML\n\t\t\t\t\t * @event references-loaded\n\t\t\t\t\t */\n\t\t\t\t\tself.emit( 'references-loaded', self.page );\n\n\t\t\t\t\tloadImagesAndSetData();\n\t\t\t\t}, function () {\n\t\t\t\t\t$spinner.remove();\n\t\t\t\t\t// unhide on a failure\n\t\t\t\t\t$content.children().removeClass( 'hidden' );\n\n\t\t\t\t\tloadImagesAndSetData();\n\t\t\t\t} );\n\t\t} else {\n\t\t\treturn Deferred().reject().promise();\n\t\t}\n\t},\n\n\t/**\n\t * Returns the appropriate license message including links/name to\n\t * terms of use (if any) and license page\n\t * @memberof Skin\n\t * @instance\n\t * @return {string}\n\t */\n\tgetLicenseMsg: function () {\n\t\tvar licenseMsg,\n\t\t\tmfLicense = mw.config.get( 'wgMFLicense' ),\n\t\t\tlicensePlural = mw.language.convertNumber( mfLicense.plural );\n\n\t\tif ( mfLicense.link ) {\n\t\t\tif ( this.$( '#footer-places-terms-use' ).length > 0 ) {\n\t\t\t\tlicenseMsg = mw.msg(\n\t\t\t\t\t'mobile-frontend-editor-licensing-with-terms',\n\t\t\t\t\tmw.message(\n\t\t\t\t\t\t'mobile-frontend-editor-terms-link',\n\t\t\t\t\t\tthis.$( '#footer-places-terms-use a' ).attr( 'href' )\n\t\t\t\t\t).parse(),\n\t\t\t\t\tmfLicense.link,\n\t\t\t\t\tlicensePlural\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlicenseMsg = mw.msg(\n\t\t\t\t\t'mobile-frontend-editor-licensing',\n\t\t\t\t\tmfLicense.link,\n\t\t\t\t\tlicensePlural\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn licenseMsg;\n\t}\n} );\n\nSkin.getSectionId = getSectionId;\n\nmodule.exports = Skin;\n","var browser = require( './Browser' ).getSingleton(),\n\tutil = require( './util' ),\n\tescapeHash = util.escapeHash,\n\tarrowOptions = {\n\t\tname: 'arrow',\n\t\tadditionalClassNames: 'indicator'\n\t},\n\tIcon = require( './Icon' );\n\n/**\n * A class for enabling toggling\n *\n * @class Toggler\n * @param {Object} options\n * @param {OO.EventEmitter} options.eventBus Object used to emit before-section-toggled\n * and section-toggled events\n * @param {jQuery.Object} options.$container to apply toggling to\n * @param {string} options.prefix a prefix to use for the id.\n * @param {Page} [options.page] to allow storage of session for future visits\n * @param {Page} [options.isClosed] whether the element should begin closed\n * and section-toggled events\n */\nfunction Toggler( options ) {\n\tthis.eventBus = options.eventBus;\n\tthis._enable( options.$container, options.prefix, options.page, options.isClosed );\n}\n\n/**\n * Using the settings module looks at what sections were previously expanded on\n * existing page.\n *\n * @param {Page} page\n * @return {Object} representing open sections\n */\nfunction getExpandedSections( page ) {\n\tvar expandedSections = JSON.parse(\n\t\tmw.storage.get( 'expandedSections' ) || '{}'\n\t);\n\texpandedSections[page.title] = expandedSections[page.title] || {};\n\treturn expandedSections;\n}\n\n/**\n* @param {Object} expandedSections\n* Save expandedSections to localStorage\n*/\nfunction saveExpandedSections( expandedSections ) {\n\tmw.storage.set(\n\t\t'expandedSections', JSON.stringify( expandedSections )\n\t);\n}\n\n/**\n * Given an expanded heading, store it to localStorage.\n * If the heading is collapsed, remove it from localStorage.\n *\n * @param {jQuery.Object} $heading - A heading belonging to a section\n * @param {Page} page\n */\nfunction storeSectionToggleState( $heading, page ) {\n\tvar headline = $heading.find( 'span' ).attr( 'id' ),\n\t\tisSectionOpen = $heading.hasClass( 'open-block' ),\n\t\texpandedSections = getExpandedSections( page );\n\n\tif ( headline ) {\n\t\tif ( isSectionOpen ) {\n\t\t\texpandedSections[page.title][headline] = ( new Date() ).getTime();\n\t\t} else {\n\t\t\tdelete expandedSections[page.title][headline];\n\t\t}\n\n\t\tsaveExpandedSections( expandedSections );\n\t}\n}\n\n/**\n * Expand sections that were previously expanded before leaving this page.\n * @param {Toggler} toggler\n * @param {jQuery.Object} $container\n * @param {Page} page\n */\nfunction expandStoredSections( toggler, $container, page ) {\n\tvar $sectionHeading, $headline,\n\t\texpandedSections = getExpandedSections( page ),\n\t\t$headlines = $container.find( '.section-heading span' );\n\n\t$headlines.each( function () {\n\t\t$headline = $container.find( this );\n\t\t$sectionHeading = $headline.parents( '.section-heading' );\n\t\t// toggle only if the section is not already expanded\n\t\tif (\n\t\t\texpandedSections[page.title][$headline.attr( 'id' )] &&\n\t\t!$sectionHeading.hasClass( 'open-block' )\n\t\t) {\n\t\t\ttoggler.toggle( $sectionHeading, page );\n\t\t}\n\t} );\n}\n\n/**\n * Clean obsolete (saved more than a day ago) expanded sections from\n * localStorage.\n * @param {Page} page\n */\nfunction cleanObsoleteStoredSections( page ) {\n\tvar now = ( new Date() ).getTime(),\n\t\texpandedSections = getExpandedSections( page ),\n\t\t// the number of days between now and the time a setting was saved\n\t\tdaysDifference;\n\tObject.keys( expandedSections ).forEach( function ( page ) {\n\t\tvar sections = expandedSections[ page ];\n\t\t// clean the setting if it is more than a day old\n\t\tObject.keys( sections ).forEach( function ( section ) {\n\t\t\tvar timestamp = sections[ section ];\n\t\t\tdaysDifference = Math.floor( ( now - timestamp ) / 1000 / 60 / 60 / 24 );\n\t\t\tif ( daysDifference >= 1 ) {\n\t\t\t\tdelete expandedSections[page][section];\n\t\t\t}\n\t\t} );\n\t} );\n\tsaveExpandedSections( expandedSections );\n}\n\n/**\n * Given a heading, toggle it and any of its children\n *\n * @memberof Toggler\n * @instance\n * @param {jQuery.Object} $heading A heading belonging to a section\n */\nToggler.prototype.toggle = function ( $heading ) {\n\tvar indicator,\n\t\twasExpanded = $heading.is( '.open-block' ),\n\t\tpage = $heading.data( 'page' ),\n\t\tsectionNumber = $heading.data( 'section-number' ),\n\t\t$content = $heading.next();\n\n\t$heading.toggleClass( 'open-block' );\n\t$heading.data( 'indicator' ).remove();\n\n\tarrowOptions.rotation = wasExpanded ? 0 : 180;\n\tindicator = new Icon( arrowOptions ).prependTo( $heading );\n\t$heading.data( 'indicator', indicator );\n\n\t/**\n\t * Global event emitted before a section is being toggled\n\t *\n\t * @event section-toggling\n\t * @type {Object}\n\t * @property {Page} page\n\t * @property {bool} wasExpanded\n\t * @property {bool} isReferenceSection\n\t * @property {jQuery.Object} $heading\n\t */\n\tthis.eventBus.emit( 'before-section-toggled', {\n\t\tpage: page,\n\t\twasExpanded: wasExpanded,\n\t\t$heading: $heading,\n\t\tisReferenceSection: Boolean( $content.attr( 'data-is-reference-section' ) )\n\t} );\n\n\t$content\n\t\t.toggleClass( 'open-block' )\n\t\t.attr( {\n\t\t\t'aria-pressed': !wasExpanded,\n\t\t\t'aria-expanded': !wasExpanded\n\t\t} );\n\n\t/**\n\t * Global event emitted after a section has been toggled\n\t * @event section-toggled\n\t * @type {Object}\n\t * @property {bool} wasExpanded\n\t * @property {number} sectionNumber\n\t */\n\tthis.eventBus.emit( 'section-toggled', wasExpanded, sectionNumber );\n\n\tif ( !browser.isWideScreen() ) {\n\t\tstoreSectionToggleState( $heading, page );\n\t}\n};\n\n/**\n * Enables toggling via enter and space keys\n *\n * @param {Toggler} toggler instance.\n * @param {jQuery.Object} $heading\n */\nfunction enableKeyboardActions( toggler, $heading ) {\n\t$heading.on( 'keypress', function ( ev ) {\n\t\tif ( ev.which === 13 || ev.which === 32 ) {\n\t\t\t// Only handle keypresses on the \"Enter\" or \"Space\" keys\n\t\t\ttoggler.toggle( $heading );\n\t\t}\n\t} ).find( 'a' ).on( 'keypress mouseup', function ( ev ) {\n\t\tev.stopPropagation();\n\t} );\n}\n\n/**\n * Reveals an element and its parent section as identified by it's id\n *\n * @memberof Toggler\n * @instance\n * @param {string} selector A css selector that identifies a single element\n * @param {Object} $container jQuery element to search in\n */\nToggler.prototype.reveal = function ( selector, $container ) {\n\tvar $target, $heading;\n\n\t// jQuery will throw for hashes containing certain characters which can break toggling\n\ttry {\n\t\t$target = $container.find( escapeHash( selector ) );\n\t\t$heading = $target.parents( '.collapsible-heading' );\n\t\t// The heading is not a section heading, check if in a content block!\n\t\tif ( !$heading.length ) {\n\t\t\t$heading = $target.parents( '.collapsible-block' ).prev( '.collapsible-heading' );\n\t\t}\n\t\tif ( $heading.length && !$heading.hasClass( 'open-block' ) ) {\n\t\t\tthis.toggle( $heading );\n\t\t}\n\t\tif ( $heading.length ) {\n\t\t\t// scroll again after opening section (opening section makes the page longer)\n\t\t\twindow.scrollTo( 0, $target.offset().top );\n\t\t}\n\t} catch ( e ) {}\n};\n\n/**\n * Enables section toggling in a given container when wgMFCollapseSectionsByDefault\n * is enabled.\n *\n * @memberof Toggler\n * @instance\n * @param {jQuery.Object} $container to apply toggling to\n * @param {string} prefix a prefix to use for the id.\n * @param {Page} [page] to allow storage of session for future visits\n * @param {Page} [isClosed] whether the element should begin closed\n * @private\n */\nToggler.prototype._enable = function ( $container, prefix, page, isClosed ) {\n\tvar tagName, expandSections, indicator, $content,\n\t\t$firstHeading,\n\t\t$link,\n\t\tself = this,\n\t\tcollapseSectionsByDefault = mw.config.get( 'wgMFCollapseSectionsByDefault' );\n\n\t// Also allow .section-heading if some extensions like Wikibase\n\t// want to toggle other headlines than direct descendants of $container.\n\t$firstHeading = $container.find( '> h1,> h2,> h3,> h4,> h5,> h6,.section-heading' ).eq( 0 );\n\ttagName = $firstHeading.prop( 'tagName' ) || 'H1';\n\n\tif ( collapseSectionsByDefault === undefined ) {\n\t\t// Old default behavior if on cached output\n\t\tcollapseSectionsByDefault = true;\n\t}\n\texpandSections = !collapseSectionsByDefault ||\n\t( mw.config.get( 'wgMFExpandAllSectionsUserOption' ) && mw.storage.get( 'expandSections' ) === 'true' );\n\n\t$container.children( tagName ).each( function ( i ) {\n\t\tvar isReferenceSection,\n\t\t\t$heading = $container.find( this ),\n\t\t\t$indicator = $heading.find( '.indicator' ),\n\t\t\tid = prefix + 'collapsible-block-' + i;\n\t\t// Be sure there is a div wrapping the section content.\n\t\t// Otherwise, collapsible sections for this page is not enabled.\n\t\tif ( $heading.next().is( 'div' ) ) {\n\t\t\t$content = $heading.next( 'div' );\n\t\t\tisReferenceSection = Boolean( $content.attr( 'data-is-reference-section' ) );\n\t\t\t$heading\n\t\t\t\t.addClass( 'collapsible-heading ' )\n\t\t\t\t.data( 'section-number', i )\n\t\t\t\t.data( 'page', page )\n\t\t\t\t.attr( {\n\t\t\t\t\ttabindex: 0,\n\t\t\t\t\t'aria-haspopup': 'true',\n\t\t\t\t\t'aria-controls': id\n\t\t\t\t} )\n\t\t\t\t.on( 'click', function ( ev ) {\n\t\t\t\t\t// don't toggle, if the click target was a link\n\t\t\t\t\t// (a link in a section heading)\n\t\t\t\t\t// See T117880\n\t\t\t\t\tif ( !ev.target.href ) {\n\t\t\t\t\t\t// prevent taps/clicks on edit button after toggling (bug 56209)\n\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\tself.toggle( $heading );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\tarrowOptions.rotation = expandSections ? 180 : 0;\n\t\t\tindicator = new Icon( arrowOptions );\n\t\t\tif ( $indicator.length ) {\n\t\t\t\t// replace the existing indicator\n\t\t\t\t$indicator.replaceWith( indicator.$el );\n\t\t\t} else {\n\t\t\t\tindicator.prependTo( $heading );\n\t\t\t}\n\t\t\t$heading.data( 'indicator', indicator.$el );\n\t\t\t$content\n\t\t\t\t.addClass( 'collapsible-block' )\n\t\t\t\t.eq( 0 )\n\t\t\t\t.attr( {\n\t\t\t\t\t// We need to give each content block a unique id as that's\n\t\t\t\t\t// the only way we can tell screen readers what element we're\n\t\t\t\t\t// referring to (aria-controls)\n\t\t\t\t\tid: id,\n\t\t\t\t\t'aria-pressed': 'false',\n\t\t\t\t\t'aria-expanded': 'false'\n\t\t\t\t} );\n\n\t\t\tenableKeyboardActions( self, $heading );\n\t\t\tif (\n\t\t\t\t!isReferenceSection && (\n\t\t\t\t\t!isClosed && browser.isWideScreen() || expandSections\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// Expand sections by default on wide screen devices\n\t\t\t\t// or if the expand sections setting is set.\n\t\t\t\t// The wide screen logic for determining whether to collapse sections initially\n\t\t\t\t// should be kept in sync with mobileoptions#initLocalStorageElements().\n\t\t\t\tself.toggle( $heading );\n\t\t\t}\n\t\t}\n\t} );\n\n\t/* eslint-disable no-restricted-properties */\n\t/**\n\t * Checks the existing hash and toggles open any section that contains the fragment.\n\t *\n\t * @method\n\t */\n\tfunction checkHash() {\n\t\tvar hash = window.location.hash;\n\t\tif ( hash.indexOf( '#' ) === 0 ) {\n\t\t\tself.reveal( hash, $container );\n\t\t}\n\t}\n\n\t/**\n\t * Checks the value of wgInternalRedirectTargetUrl and reveals the collapsed\n\t * section that contains it if present\n\t *\n\t * @method\n\t */\n\tfunction checkInternalRedirectAndHash() {\n\t\tvar internalRedirect = mw.config.get( 'wgInternalRedirectTargetUrl' ),\n\t\t\tinternalRedirectHash = internalRedirect ? internalRedirect.split( '#' )[1] : false;\n\n\t\tif ( internalRedirectHash ) {\n\t\t\twindow.location.hash = internalRedirectHash;\n\t\t\tself.reveal( internalRedirectHash, $container );\n\t\t}\n\t}\n\t/* eslint-enable no-restricted-properties */\n\n\tcheckInternalRedirectAndHash();\n\tcheckHash();\n\t// Restricted to links created by editors and thus outside our control\n\t// T166544 - don't do this for reference links - they will be handled elsewhere\n\t$link = $container.find( 'a:not(.reference a)' );\n\t$link.on( 'click', function () {\n\t\t// the link might be an internal link with a hash.\n\t\t// if it is check if we need to reveal any sections.\n\t\tif ( $link.attr( 'href' ) !== undefined &&\n\t\t$link.attr( 'href' ).indexOf( '#' ) > -1\n\t\t) {\n\t\t\tcheckHash();\n\t\t}\n\t} );\n\tutil.getWindow().on( 'hashchange', function () {\n\t\tcheckHash();\n\t} );\n\n\tif ( !browser.isWideScreen() && page ) {\n\t\texpandStoredSections( this, $container, page );\n\t\tcleanObsoleteStoredSections( page );\n\t}\n};\n\nToggler._getExpandedSections = getExpandedSections;\nToggler._expandStoredSections = expandStoredSections;\nToggler._cleanObsoleteStoredSections = cleanObsoleteStoredSections;\n\nmodule.exports = Toggler;\n","/* This module defines several types of cache classes to use in other\n * modules.\n * The interface, that all types use, is kept synchronous driven by current\n * usage patterns, but will need to be revisited in case usage patterns\n * suggest we need asynchronous caches.\n */\n\n/**\n * In memory cache implementation\n *\n * @class MemoryCache\n */\nfunction MemoryCache() {\n\tthis._cache = {};\n}\n\n/**\n * Retrieve a cached value from a key\n * @memberof MemoryCache\n * @instance\n * @param {string} key\n * @return {Mixed}\n */\nMemoryCache.prototype.get = function ( key ) {\n\treturn this._cache[ key ];\n};\n\n/**\n * Cache a value by key\n * @memberof MemoryCache\n * @instance\n * @param {string} key\n * @param {Mixed} value\n */\nMemoryCache.prototype.set = function ( key, value ) {\n\tthis._cache[ key ] = value;\n};\n\n/**\n * Null object cache implementation\n *\n * @class NoCache\n */\nfunction NoCache() { }\n\n/**\n * NoOp\n * @memberof NoCache\n * @instance\n */\nNoCache.prototype.get = function () { };\n\n/**\n * NoOp\n * @memberof NoCache\n * @instance\n */\nNoCache.prototype.set = function () { };\n\nmodule.exports = {\n\tMemoryCache: MemoryCache,\n\tNoCache: NoCache\n};\n","/**\n * Mobile mode helper class\n *\n * @class context\n * @singleton\n */\nmodule.exports = {\n\t/**\n\t * Gets current mobile mode\n\t * @memberof context\n\t * @instance\n\t * @return {string|null} Name of mode - either `stable` or `beta`. It is `null` if desktop.\n\t */\n\tgetMode: function () {\n\t\treturn mw.config.get( 'wgMFMode' );\n\t}\n};\n","var\n\ticons = require( './icons' ),\n\tOverlay = require( './Overlay' );\n\n/**\n * Overlay that initially shows loading animation until\n * caller hides it with .hide()\n *\n * @return {Overlay}\n */\nfunction loadingOverlay() {\n\tvar overlay = new Overlay( {\n\t\tclassName: 'overlay overlay-loading',\n\t\tnoHeader: true\n\t} );\n\ticons.spinner().$el.appendTo( overlay.$( '.overlay-content' ) );\n\treturn overlay;\n}\n\nmodule.exports = loadingOverlay;\n","var\n\tmoduleLoader = require( './moduleLoaderSingleton' ),\n\tmfExtend = require( './mfExtend' ),\n\tcontext = require( './context' ),\n\ttime = require( './time' ),\n\tactionParams = require( './actionParams' ),\n\tutil = require( './util' ),\n\tView = require( './View' ),\n\tPageGateway = require( './PageGateway' ),\n\tBrowser = require( './Browser' ),\n\tcache = require( './cache' ),\n\tButton = require( './Button' ),\n\tIcon = require( './Icon' ),\n\tReferencesDrawer = require( './references/ReferencesDrawer' ),\n\tReferencesGateway = require( './references/ReferencesGateway' ),\n\tReferencesHtmlScraperGateway = require( './references/ReferencesHtmlScraperGateway' ),\n\tReferencesMobileViewGateway = require( './references/ReferencesMobileViewGateway' ),\n\ticons = require( './icons' ),\n\tPanel = require( './Panel' ),\n\tSection = require( './Section' ),\n\tThumbnail = require( './Thumbnail' ),\n\tPage = require( './Page' ),\n\tAnchor = require( './Anchor' ),\n\tSkin = require( './Skin' ),\n\tOverlayManager = require( './OverlayManager' ),\n\tOverlay = require( './Overlay' ),\n\tloadingOverlay = require( './loadingOverlay' ),\n\tDrawer = require( './Drawer' ),\n\tTableOfContents = require( './toc/TableOfContents' ),\n\tCtaDrawer = require( './CtaDrawer' ),\n\tPageList = require( './PageList' ),\n\ttoast = require( './toast' ),\n\textendSearchParams = require( './extendSearchParams' ),\n\tWatchstar = require( './watchstar/Watchstar' ),\n\tWatchstarPageList = require( './watchstar/WatchstarPageList' ),\n\trlModuleLoader = require( './rlModuleLoader' ),\n\teventBusSingleton = require( './eventBusSingleton' ),\n\tToggler = require( './Toggler' ),\n\tSearchOverlay = require( './search/SearchOverlay' ),\n\tschemaMobileWebSearch = require( './search/schemaMobileWebSearch' ),\n\tMobileWebSearchLogger = require( './search/MobileWebSearchLogger' ),\n\tSearchGateway = require( './search/SearchGateway' ),\n\tScrollEndEventEmitter = require( './ScrollEndEventEmitter' );\n\nmw.mobileFrontend = moduleLoader;\n\nOO.mfExtend = mfExtend;\n\n// I know there is a temptation to use moduleLoader here, but if you do resource-modules will fail\n// as webpack might change the variable name. Using mw.mobileFrontend means that the variable\n// will not be recast.\n// These will soon be deprecated - please use the import path mobile.startup going forward.\nmw.mobileFrontend.define( 'mobile.startup/util', util );\nmw.mobileFrontend.define( 'mobile.startup/View', View );\nmw.mobileFrontend.define( 'mobile.startup/Browser', Browser );\nmw.mobileFrontend.define( 'mobile.startup/cache', cache );\nmw.mobileFrontend.define( 'mobile.startup/time', time );\nmw.mobileFrontend.define( 'mobile.startup/context', context );\nmw.mobileFrontend.define( 'mobile.startup/PageGateway', PageGateway );\nmw.mobileFrontend.define( 'mobile.startup/Button', Button );\nmw.mobileFrontend.define( 'mobile.startup/Icon', Icon );\nmw.mobileFrontend.define( 'mobile.startup/icons', icons );\nmw.mobileFrontend.define( 'mobile.startup/Panel', Panel );\nmw.mobileFrontend.define( 'mobile.startup/Section', Section );\nmw.mobileFrontend.define( 'mobile.startup/Thumbnail', Thumbnail );\nmw.mobileFrontend.define( 'mobile.startup/Page', Page );\nmw.mobileFrontend.define( 'mobile.startup/Anchor', Anchor );\nmw.mobileFrontend.define( 'mobile.startup/Skin', Skin );\nmw.mobileFrontend.define( 'mobile.startup/OverlayManager', OverlayManager );\nmw.mobileFrontend.define( 'mobile.startup/Overlay', Overlay );\nmw.mobileFrontend.define( 'mobile.startup/Drawer', Drawer );\nmw.mobileFrontend.define( 'mobile.startup/CtaDrawer', CtaDrawer );\nmw.mobileFrontend.define( 'mobile.startup/PageList', PageList );\nmw.mobileFrontend.define( 'mobile.startup/toast', toast );\nmw.mobileFrontend.define( 'mobile.startup/rlModuleLoader', rlModuleLoader );\nmw.mobileFrontend.define( 'mobile.startup/eventBusSingleton', eventBusSingleton );\nmw.mobileFrontend.deprecate( 'mobile.startup/LoadingOverlay', loadingOverlay, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search.util/extendSearchParams', extendSearchParams, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references/ReferencesDrawer', ReferencesDrawer, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references.gateway/ReferencesGateway', ReferencesGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references.gateway/ReferencesHtmlScraperGateway',\n\tReferencesHtmlScraperGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references.gateway/ReferencesMobileViewGateway',\n\tReferencesMobileViewGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.watchstar/Watchstar', Watchstar, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.pagelist.scripts/WatchstarPageList', WatchstarPageList, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.toggle/Toggler', Toggler, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search/SearchOverlay', SearchOverlay, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search/MobileWebSearchLogger', MobileWebSearchLogger, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search.api/SearchGateway', SearchGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.toc/TableOfContents', TableOfContents, 'mobile.startup' );\n\n// Expose the entry chunk through libraryTarget and library. This allows\n// arbitrary file access via ResourceLoader like\n// `mfModules['mobile.startup'].moduleLoader.require('mobile.startup/LoadingOverlay')`.\nmodule.exports = {\n\textendSearchParams: extendSearchParams,\n\tReferencesDrawer: ReferencesDrawer,\n\tReferencesGateway: ReferencesGateway,\n\tReferencesHtmlScraperGateway: ReferencesHtmlScraperGateway,\n\tReferencesMobileViewGateway: ReferencesMobileViewGateway,\n\tmoduleLoader: moduleLoader,\n\ttime: time,\n\tutil: util,\n\tactionParams: actionParams,\n\tView: View,\n\tBrowser: Browser,\n\tcontext: context,\n\tcache: cache,\n\tButton: Button,\n\tIcon: Icon,\n\ticons: icons,\n\tPanel: Panel,\n\tSection: Section,\n\tPage: Page,\n\tAnchor: Anchor,\n\tSkin: Skin,\n\tOverlayManager: OverlayManager,\n\tOverlay: Overlay,\n\tloadingOverlay: loadingOverlay,\n\tDrawer: Drawer,\n\tCtaDrawer: CtaDrawer,\n\tPageList: PageList,\n\ttoast: toast,\n\tWatchstar: Watchstar,\n\tWatchstarPageList: WatchstarPageList,\n\trlModuleLoader: rlModuleLoader,\n\teventBusSingleton: eventBusSingleton,\n\tToggler: Toggler,\n\ttoc: {\n\t\tTableOfContents: TableOfContents\n\t},\n\tsearch: {\n\t\tSearchOverlay: SearchOverlay,\n\t\tMobileWebSearchLogger: MobileWebSearchLogger,\n\t\tSearchGateway: SearchGateway\n\t},\n\tScrollEndEventEmitter: ScrollEndEventEmitter\n};\n\n// Setup a single export for new modules to fold all of the above lines into.\n// One export to rule them all!\nmw.mobileFrontend.define( 'mobile.startup', module.exports );\n\nschemaMobileWebSearch.subscribeMobileWebSearchSchema();\n","var Drawer = require( './../Drawer' ),\n\tutil = require( './../util' ),\n\ticons = require( './../icons' ),\n\tmfExtend = require( './../mfExtend' ),\n\tReferencesGateway = require( './ReferencesGateway' ),\n\tIcon = require( './../Icon' );\n\n/**\n * Drawer for references\n * @class ReferencesDrawer\n * @extends Drawer\n * @uses Icon\n * @param {Object} props\n */\nfunction ReferencesDrawer( props ) {\n\tDrawer.call( this,\n\t\tutil.extend( {\n\t\t\tclassName: 'drawer position-fixed text references'\n\t\t}, props )\n\t);\n}\n\nmfExtend( ReferencesDrawer, Drawer, {\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @mixes Drawer#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.cancelButton HTML of the button that closes the drawer.\n\t * @property {boolean} defaults.error whether an error message is being shown\n\t */\n\tdefaults: util.extend( {}, Drawer.prototype.defaults, {\n\t\tspinner: icons.spinner().toHtmlString(),\n\t\tcancelButton: icons.cancel( 'gray' ).toHtmlString(),\n\t\tcitation: new Icon( {\n\t\t\tisSmall: true,\n\t\t\tname: 'citation',\n\t\t\tadditionalClassNames: 'text',\n\t\t\thasText: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-references-citation' )\n\t\t} ).toHtmlString(),\n\t\terrorClassName: new Icon( {\n\t\t\tname: 'error',\n\t\t\thasText: true,\n\t\t\tisSmall: true\n\t\t} ).getClassName()\n\t} ),\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tevents: {\n\t\t'click sup a': 'showNestedReference'\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tshow: function () {\n\t\treturn Drawer.prototype.show.apply( this, arguments );\n\t},\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'ReferencesDrawer.hogan' ),\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tcloseOnScroll: false,\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar windowHeight = util.getWindow().height();\n\n\t\tDrawer.prototype.postRender.apply( this );\n\n\t\t// make sure the drawer doesn't take up more than 50% of the viewport height\n\t\tif ( windowHeight / 2 < 400 ) {\n\t\t\tthis.$el.css( 'max-height', windowHeight / 2 );\n\t\t}\n\n\t\tthis.on( 'show', this.onShow.bind( this ) );\n\t\tthis.on( 'hide', this.onHide.bind( this ) );\n\t},\n\t/**\n\t * Make body not scrollable\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tonShow: function () {\n\t\tutil.getDocument().find( 'body' ).addClass( 'drawer-enabled' );\n\t},\n\t/**\n\t * Restore body scroll\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tonHide: function () {\n\t\tutil.getDocument().find( 'body' ).removeClass( 'drawer-enabled' );\n\t},\n\t/**\n\t * Fetch and render nested reference upon click\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @param {string} id of the reference to be retrieved\n\t * @param {Page} page to locate reference for\n\t * @param {string} refNumber the number it identifies as in the page\n\t * @return {jQuery.Deferred}\n\t */\n\tshowReference: function ( id, page, refNumber ) {\n\t\tvar drawer = this,\n\t\t\tgateway = this.options.gateway;\n\n\t\t// Save the page in case we have to show a nested reference.\n\t\tthis.options.page = page;\n\t\t// If API is being used we want to show the drawer with the spinner while query runs\n\t\tdrawer.show();\n\t\treturn gateway.getReference( id, page ).then( function ( reference ) {\n\t\t\tdrawer.render( {\n\t\t\t\ttitle: refNumber,\n\t\t\t\ttext: reference.text\n\t\t\t} );\n\t\t}, function ( err ) {\n\t\t\tif ( err === ReferencesGateway.ERROR_NOT_EXIST ) {\n\t\t\t\tdrawer.hide();\n\t\t\t} else {\n\t\t\t\tdrawer.render( {\n\t\t\t\t\terror: true,\n\t\t\t\t\ttitle: refNumber,\n\t\t\t\t\ttext: mw.msg( 'mobile-frontend-references-citation-error' )\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\t/**\n\t * Fetch and render nested reference upon click\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t * @return {boolean} False to cancel the native event\n\t */\n\tshowNestedReference: function ( ev ) {\n\t\tvar $dest = this.$( ev.target );\n\n\t\tthis.showReference( $dest.attr( 'href' ), this.options.page, $dest.text() );\n\t\t// Don't hide the already shown drawer via propagation\n\t\t// and stop default scroll behaviour.\n\t\treturn false;\n\t}\n} );\n\nmodule.exports = ReferencesDrawer;\n","/**\n * Abstract base class\n * Gateway for retrieving references\n *\n * @class ReferencesGateway\n * @abstract\n *\n * @param {mw.Api} api\n */\nfunction ReferencesGateway( api ) {\n\tthis.api = api;\n}\n\n/**\n * Return the matched reference via API or DOM query\n *\n * @memberof ReferencesGateway\n * @instance\n * @param {string} id CSS selector\n * @param {Page} page to find reference for\n * @return {jQuery.Promise} resolves with an Object representing reference\n *  with a `text` property\n *  The promise should be rejected with ReferenceGateway.ERROR_NOT_EXIST:\n *  if the reference is not found.\n *  If for some reason locating the reference fails return ReferenceGateway.ERROR_OTHER.\n */\nReferencesGateway.prototype.getReference = null;\n\n/**\n * @memberof ReferencesGateway\n * @property ERROR_NOT_EXIST error code to be returned by getReference\n *  when a reference does not exist.\n */\nReferencesGateway.ERROR_NOT_EXIST = 'NOT_EXIST_ERROR';\n/**\n * @memberof ReferencesGateway\n * @property ERROR_OTHER error code to be returned by getReference\n *  under any other circumstance not covered\n *  by ERROR_NOT_EXIST. It should be used if it is unclear whether a reference exists or not.\n */\nReferencesGateway.ERROR_OTHER = 'OTHER_ERROR';\n\nmodule.exports = ReferencesGateway;\n","var ReferencesGateway = require( './ReferencesGateway' ),\n\tmfExtend = require( './../mfExtend' ),\n\tutil = require( './../util' );\n\n/**\n * Gateway for retrieving references via the content of the Page\n *\n * @class ReferencesHtmlScraperGateway\n * @extends ReferencesGateway\n * @inheritdoc\n */\nfunction ReferencesHtmlScraperGateway() {\n\tReferencesGateway.apply( this, arguments );\n}\n\nmfExtend( ReferencesHtmlScraperGateway, ReferencesGateway, {\n\t/**\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @instance\n\t * @param {string} id of a DOM element in the page with '#' prefix.\n\t *  can be encoded or decoded.\n\t * @param {jQuery.Object} $container to scan for an element\n\t * @return {jQuery.Promise} that can be used by getReference\n\t */\n\tgetReferenceFromContainer: function ( id, $container ) {\n\t\tvar $el,\n\t\t\tresult = util.Deferred();\n\n\t\t$el = $container.find( '#' + util.escapeSelector( id.substr( 1 ) ) );\n\t\tif ( $el.length ) {\n\t\t\tresult.resolve( { text: $el.html() } );\n\t\t} else {\n\t\t\tresult.reject( ReferencesGateway.ERROR_NOT_EXIST );\n\t\t}\n\t\treturn result.promise();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @instance\n\t */\n\tgetReference: function ( id, page ) {\n\t\t// If an id is not found it's possible the id passed needs decoding (per T188547).\n\t\treturn this.getReferenceFromContainer( decodeURIComponent( id ), page.$( 'ol.references' ) );\n\t}\n} );\n\nmodule.exports = ReferencesHtmlScraperGateway;\n","var ReferencesHtmlScraperGateway =\n\trequire( './ReferencesHtmlScraperGateway' ),\n\tcache = require( './../cache' ),\n\tReferencesGateway = require( './ReferencesGateway' ),\n\tMemoryCache = cache.MemoryCache,\n\tutil = require( './../util' ),\n\tmfExtend = require( './../mfExtend' ),\n\tNoCache = cache.NoCache,\n\treferencesMobileViewGateway = null;\n\n/**\n * Gateway for retrieving references via the MobileView API\n *\n * By default not cached, if it receives a cache instance then it will be\n * used to store and get references sections.\n *\n * @class ReferencesMobileViewGateway\n * @extends ReferencesHtmlScraperGateway\n * @inheritdoc\n *\n * @param {mw.Api} api class to use for making requests\n * @param {NoCache|MemoryCache} [cache] class to use for caching request\n * results. By default it uses the NoCache implementation, which doesn't\n * cache anything. The singleton instance exposed by this module uses\n * a MemoryCache which caches requests in-memory. Any other Cache class\n * compatible with mobile.startup/cache's interface will actually work.\n */\nfunction ReferencesMobileViewGateway( api, cache ) {\n\tReferencesHtmlScraperGateway.call( this, api );\n\tthis.cache = cache || new NoCache();\n}\n\nmfExtend( ReferencesMobileViewGateway, ReferencesHtmlScraperGateway, {\n\t/**\n\t * Retrieve references list for a given page.\n\t * Also cache the result for a later use.\n\t *\n\t * @memberof ReferencesMobileViewGateway\n\t * @instance\n\t * @param {Page} page\n\t * @return {jQuery.Deferred} promise that resolves with the list of\n\t *  sections on the page\n\t */\n\tgetReferencesLists: function ( page ) {\n\t\tvar self = this,\n\t\t\tresult = util.Deferred(),\n\t\t\tcachedReferencesSections = this.cache.get( page.id );\n\n\t\tif ( cachedReferencesSections ) {\n\t\t\treturn result.resolve( cachedReferencesSections ).promise();\n\t\t}\n\n\t\tthis.api.get( {\n\t\t\taction: 'mobileview',\n\t\t\tpage: page.getTitle(),\n\t\t\tsections: 'references',\n\t\t\tprop: 'text',\n\t\t\trevision: page.getRevisionId()\n\t\t} ).then( function ( data ) {\n\t\t\tvar sections = {};\n\n\t\t\tdata.mobileview.sections.forEach( function ( section ) {\n\t\t\t\tvar $section = util.parseHTML( '<div>' ).html( section.text );\n\n\t\t\t\tsections[ $section.find( '.mw-headline' ).attr( 'id' ) ] = $section.find( '.references' );\n\t\t\t} );\n\n\t\t\tself.cache.set( page.id, sections );\n\t\t\tresult.resolve( sections );\n\t\t}, function () {\n\t\t\tresult.reject( ReferencesGateway.ERROR_OTHER );\n\t\t} );\n\n\t\treturn result.promise();\n\t},\n\t/**\n\t * Retrieve all the references lists for a given page and section ID.\n\t *\n\t * @memberof ReferencesMobileViewGateway\n\t * @instance\n\t * @param {Page} page\n\t * @param {string} headingId\n\t * @return {jQuery.Promise} promise that resolves with the section\n\t *  HTML or `false` if no such section exists\n\t */\n\tgetReferencesList: function ( page, headingId ) {\n\t\treturn this.getReferencesLists( page ).then( function ( data ) {\n\t\t\treturn Object.prototype.hasOwnProperty.call( data, headingId ) ?\n\t\t\t\tdata[ headingId ] : false;\n\t\t} );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesMobileViewGateway\n\t * @instance\n\t */\n\tgetReference: function ( id, page ) {\n\t\tvar self = this;\n\n\t\treturn this.getReferencesLists( page ).then( function ( sections ) {\n\t\t\tvar $container = util.parseHTML( '<div>' );\n\n\t\t\tObject.keys( sections ).forEach( function ( sectionId ) {\n\t\t\t\t$container.append( sections[ sectionId ] );\n\t\t\t} );\n\n\t\t\treturn self.getReferenceFromContainer( id, $container );\n\t\t} );\n\t}\n} );\n\n/**\n * Retrieve a singleton instance w/ cache that uses mw.Api\n * @memberof ReferencesMobileViewGateway\n * @return {ReferencesMobileViewGateway}\n */\nReferencesMobileViewGateway.getSingleton = function () {\n\tif ( !referencesMobileViewGateway ) {\n\t\treferencesMobileViewGateway = new ReferencesMobileViewGateway(\n\t\t\tnew mw.Api(),\n\t\t\tnew MemoryCache()\n\t\t);\n\t}\n\treturn referencesMobileViewGateway;\n};\n\nmodule.exports = ReferencesMobileViewGateway;\n","var\n\tloadingOverlay = require( './loadingOverlay' ),\n\tutil = require( './util' );\n\n/**\n * Utility library for looking up details on the current user\n * @class loader\n * @singleton\n */\nmodule.exports = {\n\t// Exported to support testing and stubbing\n\tnewLoadingOverlay: function () {\n\t\treturn loadingOverlay();\n\t},\n\t/**\n\t * Loads a module via ResourceLoader\n\t * and displays a full screen LoadingOverlay during load time.\n\t * @memberof loader\n\t * @instance\n\t * @param {string} name ResourceLoader module name to load asynchronously.\n\t * @param {boolean} delegateHide if true the caller is responsible for hiding\n\t *  the intermediate loader.\n\t * @param {boolean} [showLoadingOverlay] if false a loading overlay will be hidden while\n\t *  loading the module. Defaults to true.\n\t * @return {jQuery.Promise}\n\t */\n\tloadModule: function ( name, delegateHide, showLoadingOverlay ) {\n\t\tvar loadingOverlay = this.newLoadingOverlay();\n\n\t\tshowLoadingOverlay = ( showLoadingOverlay !== undefined ) ? showLoadingOverlay : true;\n\t\tif ( showLoadingOverlay ) {\n\t\t\tloadingOverlay.appendTo( document.body );\n\t\t\tloadingOverlay.show();\n\t\t}\n\n\t\tfunction hideOverlayIfNeeded() {\n\t\t\tif ( !delegateHide && showLoadingOverlay ) {\n\t\t\t\tloadingOverlay.hide();\n\t\t\t}\n\t\t}\n\t\treturn mw.loader.using( name ).then( function () {\n\t\t\thideOverlayIfNeeded();\n\n\t\t\treturn loadingOverlay;\n\t\t}, function () {\n\t\t\thideOverlayIfNeeded();\n\n\t\t\treturn util.Deferred().reject().promise();\n\t\t} );\n\t}\n};\n","/**\n * Coordinates the logging of MobileWebSchema events.\n * Implements schema defined at https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n *\n * @class\n */\nfunction MobileWebSearchLogger() {\n\tthis.userSessionToken = null;\n\tthis.searchSessionToken = null;\n}\n\nMobileWebSearchLogger.prototype = {\n\t/**\n\t * Sets the internal state required to deal with logging user session\n\t * data.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newUserSession: function () {\n\t\tthis.userSessionToken = mw.user.generateRandomSessionId();\n\t},\n\n\t/**\n\t * Sets the internal state required to deal with logging search session\n\t * data.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newSearchSession: function () {\n\t\tthis.searchSessionToken = mw.user.generateRandomSessionId();\n\t\tthis.searchSessionCreatedAt = new Date().getTime();\n\t},\n\n\t/**\n\t * Handles the 'search-show' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchShow: function () {\n\t\tthis._newUserSession();\n\t},\n\n\t/**\n\t * Handles the 'search-start' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchStart: function () {\n\t\tthis._newSearchSession();\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'session-start',\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: 0\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-results' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {Object[]} event.results\n\t */\n\tonSearchResults: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'impression-results',\n\t\t\tresultSetType: 'prefix',\n\t\t\tnumberOfResults: event.results.length,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\t// FIXME: Unless I'm mistaken, the timeToDisplayResults\n\t\t\t// property isn't necessary.\n\t\t\ttimeToDisplayResults: timeOffsetSinceStart,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-result-click' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {number} event.index\n\t *  The zero-based index of the result in the set of results.\n\t */\n\tonSearchResultClick: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'click-result',\n\t\t\t// NOTE: clickIndex is 1-based.\n\t\t\tclickIndex: event.resultIndex + 1,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t}\n};\n\n/**\n * Convenience function that wires up an instance of the\n * MobileWebSearchLogger class to the search-* events emitted by the\n * search overlay.\n * @memberof MobileWebSearchLogger\n * @param {SearchOverlay} searchOverlay\n */\nMobileWebSearchLogger.register = function ( searchOverlay ) {\n\tvar logger = new MobileWebSearchLogger();\n\n\tsearchOverlay.on( 'search-show', logger.onSearchShow.bind( logger ) );\n\tsearchOverlay.on( 'search-start', logger.onSearchStart.bind( logger ) );\n\tsearchOverlay.on( 'search-results', logger.onSearchResults.bind( logger ) );\n\tsearchOverlay.on( 'search-result-click', logger.onSearchResultClick.bind( logger ) );\n};\n\nmodule.exports = MobileWebSearchLogger;\n","var\n\tPage = require( '../Page' ),\n\tutil = require( '../util' ),\n\textendSearchParams = require( '../extendSearchParams' );\n\n/**\n * @class SearchGateway\n * @uses mw.Api\n * @param {mw.Api} api\n */\nfunction SearchGateway( api ) {\n\tthis.api = api;\n\tthis.searchCache = {};\n\tthis.generator = mw.config.get( 'wgMFSearchGenerator' );\n}\n\nSearchGateway.prototype = {\n\t/**\n\t * The namespace to search in.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @type {number}\n\t */\n\tsearchNamespace: 0,\n\n\t/**\n\t * Get the data used to do the search query api call.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @return {Object}\n\t */\n\tgetApiData: function ( query ) {\n\t\tvar prefix = this.generator.prefix,\n\t\t\tdata = extendSearchParams( 'search', {\n\t\t\t\tgenerator: this.generator.name\n\t\t\t} );\n\n\t\tdata.redirects = '';\n\n\t\tdata['g' + prefix + 'search'] = query;\n\t\tdata['g' + prefix + 'namespace'] = this.searchNamespace;\n\t\tdata['g' + prefix + 'limit'] = 15;\n\n\t\t// If PageImages is being used configure further.\n\t\tif ( data.pilimit ) {\n\t\t\tdata.pilimit = 15;\n\t\t\tdata.pithumbsize = mw.config.get( 'wgMFThumbnailSizes' ).tiny;\n\t\t}\n\t\treturn data;\n\t},\n\n\t/**\n\t * Escapes regular expression wildcards (metacharacters) by adding a \\\\ prefix\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} str a string\n\t * @return {Object} a regular expression that can be used to search for that str\n\t * @private\n\t */\n\t_createSearchRegEx: function ( str ) {\n\t\t// '\\[' can be unescaped, but leave it balanced with '`]'\n\t\t// eslint-disable-next-line no-useless-escape\n\t\tstr = str.replace( /[-\\[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&' );\n\t\treturn new RegExp( '^(' + str + ')', 'ig' );\n\t},\n\n\t/**\n\t * Takes a label potentially beginning with term\n\t * and highlights term if it is present with strong\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} label a piece of text\n\t * @param {string} term a string to search for from the start\n\t * @return {string} safe html string with matched terms encapsulated in strong tags\n\t * @private\n\t */\n\t_highlightSearchTerm: function ( label, term ) {\n\t\tlabel = util.parseHTML( '<span>' ).text( label ).html();\n\t\tterm = util.parseHTML( '<span>' ).text( term ).html();\n\n\t\treturn label.replace( this._createSearchRegEx( term ), '<strong>$1</strong>' );\n\t},\n\n\t/**\n\t * Return data used for creating {Page} objects\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @param {Object} pageInfo from the API\n\t * @return {Object} data needed to create a {Page}\n\t * @private\n\t */\n\t_getPage: function ( query, pageInfo ) {\n\t\tvar page = Page.newFromJSON( pageInfo );\n\n\t\t// If displaytext is set in the generator result (eg. by Wikibase),\n\t\t// use that as display title.\n\t\t// Otherwise default to the page's title.\n\t\t// FIXME: Given that displayTitle could have html in it be safe and just highlight text.\n\t\t// Note that highlightSearchTerm does full HTML escaping before highlighting.\n\t\tpage.displayTitle = this._highlightSearchTerm(\n\t\t\tpageInfo.displaytext ? pageInfo.displaytext : page.title,\n\t\t\tquery\n\t\t);\n\t\tpage.index = pageInfo.index;\n\n\t\treturn page;\n\t},\n\n\t/**\n\t * Process the data returned by the api call.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @param {Object} data from api\n\t * @return {Array}\n\t * @private\n\t */\n\t_processData: function ( query, data ) {\n\t\tvar self = this,\n\t\t\tresults = [];\n\n\t\tif ( data.query ) {\n\n\t\t\tresults = data.query.pages || {};\n\t\t\tresults = Object.keys( results ).map( function ( id ) {\n\t\t\t\treturn self._getPage( query, results[ id ] );\n\t\t\t} );\n\t\t\t// sort in order of index\n\t\t\tresults.sort( function ( a, b ) {\n\t\t\t\treturn a.index < b.index ? -1 : 1;\n\t\t\t} );\n\t\t}\n\n\t\treturn results;\n\t},\n\n\t/**\n\t * Perform a search for the given query.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @return {jQuery.Deferred}\n\t */\n\tsearch: function ( query ) {\n\t\tvar xhr, request,\n\t\t\tself = this;\n\n\t\tif ( !this.isCached( query ) ) {\n\t\t\txhr = this.api.get( this.getApiData( query ) );\n\t\t\trequest = xhr\n\t\t\t\t.then( function ( data ) {\n\t\t\t\t\t// resolve the Deferred object\n\t\t\t\t\treturn {\n\t\t\t\t\t\tquery: query,\n\t\t\t\t\t\tresults: self._processData( query, data )\n\t\t\t\t\t};\n\t\t\t\t}, function () {\n\t\t\t\t\t// reset cached result, it maybe contains no value\n\t\t\t\t\tself.searchCache[query] = undefined;\n\t\t\t\t} );\n\n\t\t\t// cache the result to prevent the execution of one search query twice\n\t\t\t// in one session\n\t\t\tthis.searchCache[query] = request.promise( {\n\t\t\t\tabort: function () { xhr.abort(); }\n\t\t\t} );\n\t\t}\n\n\t\treturn this.searchCache[query];\n\t},\n\n\t/**\n\t * Check if the search has already been performed in given session.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query\n\t * @return {boolean}\n\t */\n\tisCached: function ( query ) {\n\t\treturn Boolean( this.searchCache[ query ] );\n\t}\n};\n\nmodule.exports = SearchGateway;\n","var\n\tmfExtend = require( '../mfExtend' ),\n\tOverlay = require( '../Overlay' ),\n\tutil = require( '../util' ),\n\tAnchor = require( '../Anchor' ),\n\tIcon = require( '../Icon' ),\n\tWatchstarPageList = require( '../watchstar/WatchstarPageList' ),\n\tSEARCH_DELAY = 300,\n\tSEARCH_SPINNER_DELAY = 2000,\n\tfeedbackLink = mw.config.get( 'wgCirrusSearchFeedbackLink' );\n\n/**\n * Overlay displaying search results\n * @class SearchOverlay\n * @extends Overlay\n * @uses SearchGateway\n * @uses Icon\n *\n * @param {Object} params Configuration options\n * @fires SearchOverlay#search-show\n * @fires SearchOverlay#search-start\n * @fires SearchOverlay#search-results\n * @fires SearchOverlay#search-result-click\n */\nfunction SearchOverlay( params ) {\n\tvar defaultParams = {\n\t\t\tisBorderBox: false,\n\t\t\tclassName: 'overlay search-overlay'\n\t\t},\n\t\toptions = util.extend( {}, defaultParams, params );\n\n\tOverlay.call( this, options );\n\n\tthis.api = options.api;\n\t// eslint-disable-next-line new-cap\n\tthis.gateway = new options.gatewayClass( this.api );\n\n\tthis.router = options.router;\n}\n\nmfExtend( SearchOverlay, Overlay, {\n\t/**\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, Overlay.prototype.templatePartials, {\n\t\theader: mw.template.get( 'mobile.startup', 'search/SearchHeader.hogan' ),\n\t\tcontent: mw.template.get( 'mobile.startup', 'search/SearchContent.hogan' ),\n\t\ticon: Icon.prototype.template\n\t} ),\n\t/**\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @mixes Overlay#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {SearchGateway} defaults.gatewayClass The class to use to setup an API gateway.\n\t *  FIXME: Should be removed when wikidata descriptions in stable (T101719)\n\t * @property {Router} defaults.router instance\n\t * @property {Object} defaults.clearIcon options for the button that clears the search text.\n\t * @property {Object} defaults.searchContentIcon options for the button that allows you to\n\t *  search within content\n\t * @property {string} defaults.searchTerm Search text.\n\t * @property {string} defaults.placeholderMsg Search input placeholder text.\n\t * @property {string} defaults.clearMsg Tooltip for clear button that appears when you type\n\t * into search box.\n\t * @property {string} defaults.searchContentMsg Caption for a button performing full text\n\t * search of a given search query.\n\t * @property {string} defaults.noResultsMsg Message informing user that no pages were found\n\t * for a given query.\n\t * @property {string} defaults.searchContentNoResultsMsg Used when no pages with matching\n\t * titles were found.\n\t * @property {string} defaults.action The value of wgScript\n\t * @property {Object} defaults.feedback options for the feedback link\n\t *  below the search results\n\t */\n\tdefaults: util.extend( {}, Overlay.prototype.defaults, {\n\t\theaderChrome: true,\n\t\tclearIcon: new Icon( {\n\t\t\ttagName: 'button',\n\t\t\tname: 'search-clear',\n\t\t\tisSmall: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-clear-search' ),\n\t\t\tadditionalClassNames: 'clear'\n\t\t} ).options,\n\t\tsearchContentIcon: new Icon( {\n\t\t\ttagName: 'a',\n\t\t\t// When this icon is clicked we want to reset the hash for subsequent views\n\t\t\thref: '#',\n\t\t\tname: 'search-content',\n\t\t\tlabel: mw.msg( 'mobile-frontend-search-content' )\n\t\t} ).options,\n\t\tsearchTerm: '',\n\t\tplaceholderMsg: '',\n\t\tnoResultsMsg: mw.msg( 'mobile-frontend-search-no-results' ),\n\t\tsearchContentNoResultsMsg: mw.message( 'mobile-frontend-search-content-no-results' ).parse(),\n\t\taction: mw.config.get( 'wgScript' ),\n\t\tfeedback: !feedbackLink ? false : {\n\t\t\tfeedback: new Anchor( {\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-search-feedback-link-text' ),\n\t\t\t\thref: feedbackLink\n\t\t\t} ).options,\n\t\t\tprompt: mw.msg( 'mobile-frontend-search-feedback-prompt' )\n\t\t}\n\t} ),\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tevents: util.extend( {}, Overlay.prototype.events, {\n\t\t'input input': 'onInputInput',\n\t\t'click .clear': 'onClickClear',\n\t\t'click .search-content': 'onClickSearchContent',\n\t\t'click .overlay-content': 'onClickOverlayContent',\n\t\t'click .overlay-content > div': 'onClickOverlayContentDiv',\n\t\t'touchstart .results': 'hideKeyboardOnScroll',\n\t\t'mousedown .results': 'hideKeyboardOnScroll',\n\t\t'click .results a': 'onClickResult'\n\t} ),\n\n\t/**\n\t * Make sure search header is docked to the top of the screen when the\n\t * user begins typing so that there is adequate space for search results\n\t * above the keyboard. (This is only a potential issue when sitenotices\n\t * are displayed.)\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonInputInput: function () {\n\t\tthis.performSearch();\n\t\tthis.$clear.toggle( this.$input.val() !== '' );\n\t},\n\n\t/**\n\t * Initialize the button that clears the search field\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @return {boolean} False to cancel the native event\n\t */\n\tonClickClear: function () {\n\t\tthis.$input.val( '' ).focus();\n\t\tthis.performSearch();\n\t\tthis.$clear.hide();\n\t\t// In beta the clear button is on top of the search input.\n\t\t// Stop propagation so that the input doesn't receive the click.\n\t\treturn false;\n\t},\n\n\t/**\n\t * Initialize 'search within pages' functionality\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickSearchContent: function () {\n\t\tvar $el = util.getDocument().find( 'body' ),\n\t\t\t$form = this.$( 'form' );\n\n\t\t// Add fulltext input to force fulltext search\n\t\tthis.parseHTML( '<input>' )\n\t\t\t.attr( {\n\t\t\t\ttype: 'hidden',\n\t\t\t\tname: 'fulltext',\n\t\t\t\tvalue: 'search'\n\t\t\t} )\n\t\t\t.appendTo( $form );\n\t\t// history.back queues a task so might run after this call. Thus we use setTimeout\n\t\t// http://www.w3.org/TR/2011/WD-html5-20110113/webappapis.html#queue-a-task\n\t\tsetTimeout( function () {\n\t\t\t// Firefox doesn't allow submission of a form not in the DOM\n\t\t\t// so temporarily re-add it\n\t\t\t$form.appendTo( $el );\n\t\t\t$form.submit();\n\t\t}, 0 );\n\t},\n\n\t/**\n\t * Tapping on background only should hide the overlay\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickOverlayContent: function () {\n\t\tthis.$( '.cancel' ).trigger( 'click' );\n\t},\n\n\t/**\n\t * Stop propagation\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonClickOverlayContentDiv: function ( ev ) {\n\t\tev.stopPropagation();\n\t},\n\n\t/**\n\t * Hide the keyboard when scrolling starts (avoid weird situation when\n\t * user taps on an item, the keyboard hides and wrong item is clicked).\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\thideKeyboardOnScroll: function () {\n\t\tthis.$input.blur();\n\t},\n\n\t/**\n\t * Handle the user clicking a result.\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonClickResult: function ( ev ) {\n\t\tvar $link = this.$( ev.currentTarget ),\n\t\t\t$result = $link.closest( 'li' );\n\t\t/**\n\t\t * Fired when the user clicks a search result\n\t\t * @event SearchOverlay#search-result-click\n\t\t * @type {Object}\n\t\t * @property {jQuery.Object} result The jQuery-wrapped DOM element that\n\t\t *  the user clicked\n\t\t * @property {number} resultIndex The zero-based index of the\n\t\t *  result in the set of results\n\t\t * @property {jQuery.Event} originalEvent The original event\n\t\t */\n\t\tthis.emit( 'search-result-click', {\n\t\t\tresult: $result,\n\t\t\tresultIndex: this.$results.index( $result ),\n\t\t\toriginalEvent: ev\n\t\t} );\n\n\t\t// FIXME: ugly hack that removes search from browser history\n\t\t// when navigating to search results\n\t\tev.preventDefault();\n\t\tthis.router.back().then( function () {\n\t\t\t// Router.navigate does not support changing href.\n\t\t\t// FIXME: Needs upstream change T189173\n\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\twindow.location.href = $link.attr( 'href' );\n\t\t} );\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this,\n\t\t\ttimer;\n\n\t\tOverlay.prototype.postRender.call( this );\n\n\t\tthis.$input = this.$( 'input' );\n\t\tthis.$clear = this.$( '.clear' );\n\t\tthis.$searchContent = this.$( '.search-content' ).hide();\n\t\tthis.$searchFeedback = this.$( '.search-feedback' ).hide();\n\t\tthis.$resultContainer = this.$( '.results-list-container' );\n\n\t\t/**\n\t\t * Hide the spinner and abort timed spinner shows.\n\t\t */\n\t\tfunction clearSearch() {\n\t\t\tself.$spinner.hide();\n\t\t\tclearTimeout( timer );\n\t\t}\n\n\t\t// Show a spinner on top of search results\n\t\tthis.$spinner = this.$( '.spinner-container' );\n\t\tthis.on( 'search-start', function ( searchData ) {\n\t\t\tif ( timer ) {\n\t\t\t\tclearSearch();\n\t\t\t}\n\t\t\ttimer = setTimeout( function () {\n\t\t\t\tself.$spinner.show();\n\t\t\t}, SEARCH_SPINNER_DELAY - searchData.delay );\n\t\t} );\n\t\tthis.on( 'search-results', clearSearch );\n\n\t\t// Hide the clear button if the search input is empty\n\t\tif ( self.$input.val() === '' ) {\n\t\t\tthis.$clear.hide();\n\t\t}\n\t},\n\n\t/**\n\t * Trigger a focus() event on search input in order to\n\t * bring up the virtual keyboard.\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshowKeyboard: function () {\n\t\tvar len = this.$input.val().length;\n\t\tthis.$input.focus();\n\t\t// Cursor to the end of the input\n\t\tif ( this.$input[0].setSelectionRange ) {\n\t\t\tthis.$input[0].setSelectionRange( len, len );\n\t\t}\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\t// Overlay#show defines the actual overlay visibility.\n\t\tOverlay.prototype.show.apply( this, arguments );\n\n\t\tthis.showKeyboard();\n\t\t/**\n\t\t * Fired after the search overlay is shown\n\t\t * @event SearchOverlay#search-show\n\t\t */\n\t\tthis.emit( 'search-show' );\n\t},\n\n\t/**\n\t * Fade out if the browser supports animations\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\thide: function () {\n\t\tvar self = this,\n\t\t\t$html = util.getDocument();\n\n\t\tif ( $html.hasClass( 'animations' ) ) {\n\t\t\tself.$el.addClass( 'fade-out' );\n\t\t\tsetTimeout( function () {\n\t\t\t\tOverlay.prototype.hide.apply( self, arguments );\n\t\t\t}, 500 );\n\t\t} else {\n\t\t\tOverlay.prototype.hide.apply( self, arguments );\n\t\t}\n\t\treturn true;\n\t},\n\n\t/**\n\t * Perform search and render results inside current view.\n\t * FIXME: Much of the logic for caching and pending queries inside this function should\n\t * actually live in SearchGateway, please move out.\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tperformSearch: function () {\n\t\tvar\n\t\t\tself = this,\n\t\t\tapi = this.api,\n\t\t\tquery = this.$input.val(),\n\t\t\tdelay = this.gateway.isCached( query ) ? 0 : SEARCH_DELAY;\n\n\t\t// it seems the input event can be fired when virtual keyboard is closed\n\t\t// (Chrome for Android)\n\t\tif ( query !== this.lastQuery ) {\n\t\t\tif ( self._pendingQuery ) {\n\t\t\t\tself._pendingQuery.abort();\n\t\t\t}\n\t\t\tclearTimeout( this.timer );\n\n\t\t\tif ( query.length ) {\n\t\t\t\tthis.timer = setTimeout( function () {\n\t\t\t\t\tvar xhr;\n\t\t\t\t\t/**\n\t\t\t\t\t * Fired immediately before the search API request is sent\n\t\t\t\t\t * @event SearchOverlay#search-start\n\t\t\t\t\t * @property {Object} data related to the current search\n\t\t\t\t\t */\n\t\t\t\t\tself.emit( 'search-start', {\n\t\t\t\t\t\tquery: query,\n\t\t\t\t\t\tdelay: delay\n\t\t\t\t\t} );\n\n\t\t\t\t\txhr = self.gateway.search( query );\n\t\t\t\t\tself._pendingQuery = xhr.then( function ( data ) {\n\t\t\t\t\t\t// check if we're getting the rights response in case of out of\n\t\t\t\t\t\t// order responses (need to get the current value of the input)\n\t\t\t\t\t\tif ( data && data.query === self.$input.val() ) {\n\t\t\t\t\t\t\tself.$el.toggleClass( 'no-results', data.results.length === 0 );\n\t\t\t\t\t\t\tself.$searchContent\n\t\t\t\t\t\t\t\t.show()\n\t\t\t\t\t\t\t\t.find( 'p' )\n\t\t\t\t\t\t\t\t.hide()\n\t\t\t\t\t\t\t\t.filter( data.results.length ? '.with-results' : '.without-results' )\n\t\t\t\t\t\t\t\t.show();\n\n\t\t\t\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\t\t\t\tnew WatchstarPageList( {\n\t\t\t\t\t\t\t\tapi: api,\n\t\t\t\t\t\t\t\tfunnel: 'search',\n\t\t\t\t\t\t\t\tpages: data.results,\n\t\t\t\t\t\t\t\tel: self.$resultContainer\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\tself.$results = self.$resultContainer.find( 'li' );\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Fired when search API returns results\n\t\t\t\t\t\t\t * @event SearchOverlay#search-results\n\t\t\t\t\t\t\t * @type {Object}\n\t\t\t\t\t\t\t * @property {Object[]} results The results returned by the search\n\t\t\t\t\t\t\t *  API\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tself.emit( 'search-results', {\n\t\t\t\t\t\t\t\tresults: data.results\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ).promise( { abort: function () { xhr.abort(); } } );\n\t\t\t\t}, delay );\n\t\t\t} else {\n\t\t\t\tself.resetSearch();\n\t\t\t}\n\n\t\t\tthis.lastQuery = query;\n\t\t}\n\t},\n\t/**\n\t * Clear results\n\t *\n\t * @private\n\t */\n\tresetSearch: function () {\n\t\tthis.$spinner.hide();\n\t\tthis.$searchContent.hide();\n\t\tthis.$searchFeedback.hide();\n\t\tthis.$resultContainer.empty();\n\t}\n} );\n\nmodule.exports = SearchOverlay;\n","function subscribeMobileWebSearchSchema() {\n\tmw.loader.using( [\n\t\t'ext.eventLogging.subscriber'\n\t] ).then( function () {\n\t\tvar M = mw.mobileFrontend,\n\t\t\tcontext = M.require( 'mobile.startup/context' ),\n\t\t\t// Schema provided by ext.eventLogging.subscriber class\n\t\t\tSchema = mw.eventLog.Schema, // resource-modules-disable-line\n\t\t\t/**\n\t\t * MobileWebSearch schema\n\t\t * https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n\t\t */\n\t\t\tschemaMobileWebSearch = new Schema(\n\t\t\t\t'MobileWebSearch',\n\t\t\t\t// todo: use a default value of 0 once config lands in production.\n\t\t\t\tmw.config.get( 'wgMFSchemaSearchSampleRate', 1 / 1000 ),\n\t\t\t\t/**\n\t\t\t * @property {Object} defaults Default options hash.\n\t\t\t * @property {string} defaults.platform Always \"mobileweb\"\n\t\t\t * @property {string} defaults.platformVersion The version of MobileFrontend\n\t\t\t *  that the user is using. One of \"stable\" or \"beta\"\n\t\t\t */\n\t\t\t\t{\n\t\t\t\t\tplatform: 'mobileweb',\n\t\t\t\t\tplatformVersion: context.getMode()\n\t\t\t\t}\n\t\t\t);\n\n\t\tmw.trackSubscribe( 'mf.schemaMobileWebSearch', function ( topic, data ) {\n\t\t\tschemaMobileWebSearch.log( data );\n\t\t} );\n\t} );\n}\n\nmodule.exports = {\n\tsubscribeMobileWebSearchSchema: subscribeMobileWebSearchSchema\n};\n","var View = require( '../View' ),\n\tmfExtend = require( '../mfExtend' ),\n\tutil = require( '../util' ),\n\tIcon = require( '../Icon' );\n\n/**\n * View for table of contents\n * @class TableOfContents\n * @extends View\n * @uses Icon\n * @param {Object} props\n * @param {Section[]} props.sections\n */\nfunction TableOfContents( props ) {\n\tView.call( this, util.extend( {\n\t\tclassName: 'toc-mobile',\n\t\tcontentsMsg: mw.msg( 'toc' )\n\t}, props ) );\n}\n\nmfExtend( TableOfContents, View, {\n\t/**\n\t * @memberof TableOfContents\n\t * @instance\n\t */\n\ttemplatePartials: {\n\t\ttocHeading: mw.template.get( 'mobile.startup', 'TableOfContentsHeading.hogan' )\n\t},\n\t/**\n\t * @memberof TableOfContents\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'TableOfContents.hogan' ),\n\t/** @inheritdoc */\n\tpostRender: function () {\n\t\tnew Icon( {\n\t\t\tname: 'toc',\n\t\t\tadditionalClassNames: 'toc-button'\n\t\t} ).$el.prependTo( this.$( 'h2' ) );\n\t}\n} );\n\nmodule.exports = TableOfContents;\n"],"sourceRoot":""}