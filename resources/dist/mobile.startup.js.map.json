{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.startup/OverlayManager.js","webpack://mfModules.[name]/./src/mobile.startup/Toggler.js","webpack://mfModules.[name]/./src/mobile.startup/mobile.startup.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesDrawer.js","webpack://mfModules.[name]/./src/mobile.startup/rlModuleLoader.js","webpack://mfModules.[name]/./src/mobile.startup/search/MobileWebSearchLogger.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/search/schemaMobileWebSearch.js","webpack://mfModules.[name]/./src/mobile.startup/toc/TableOfContents.js"],"names":["util","__webpack_require__","overlayManager","OverlayManager","router","appendToSelector","on","this","_checkRoute","bind","entries","stack","hideCurrent","mw","log","warn","mfExtend","_onHideOverlay","back","_attachOverlay","overlay","$el","parents","length","$","append","_show","once","show","_hideOverlay","result","off","hide","_processMatch","match","factoryResult","self","attachHideEvent","emit","promise","then","ev","current","scrollTop","window","pageYOffset","Object","keys","reduce","m","id","_matchRoute","path","undefined","preventDefault","scrollTo","pageXOffset","entry","next","route","previous","getNext","factory","apply","slice","hasLoadError","shift","unshift","add","docReady","getPath","replaceCurrent","Error","getSingleton","loader","require","module","exports","browser","escapeHash","arrowOptions","name","additionalClassNames","Icon","Toggler","options","eventBus","_enable","$container","prefix","page","isClosed","getExpandedSections","expandedSections","JSON","parse","storage","get","title","saveExpandedSections","set","stringify","expandStoredSections","toggler","$sectionHeading","$headline","find","each","attr","hasClass","toggle","cleanObsoleteStoredSections","now","Date","getTime","forEach","sections","section","timestamp","Math","floor","prototype","$heading","indicator","wasExpanded","is","data","sectionNumber","$content","toggleClass","remove","rotation","prependTo","isReferenceSection","Boolean","aria-pressed","aria-expanded","isWideScreen","headline","isSectionOpen","storeSectionToggleState","reveal","selector","$target","prev","offset","top","e","tagName","expandSections","$link","collapseSectionsByDefault","config","checkHash","hash","location","indexOf","eq","prop","children","i","$indicator","addClass","tabindex","aria-haspopup","aria-controls","target","href","replaceWith","which","stopPropagation","enableKeyboardActions","internalRedirect","internalRedirectHash","split","checkInternalRedirectAndHash","getWindow","_getExpandedSections","_expandStoredSections","_cleanObsoleteStoredSections","moduleLoader","context","time","actionParams","View","PageGateway","Browser","cache","Button","ReferencesDrawer","ReferencesGateway","ReferencesHtmlScraperGateway","ReferencesMobileViewGateway","icons","Panel","Section","Thumbnail","Page","Anchor","Skin","Overlay","loadingOverlay","Drawer","TableOfContents","CtaDrawer","PageList","toast","extendSearchParams","Watchstar","WatchstarPageList","rlModuleLoader","eventBusSingleton","SearchOverlay","schemaMobileWebSearch","MobileWebSearchLogger","SearchGateway","ScrollEndEventEmitter","lazyImageLoader","MessageBox","mobileFrontend","OO","define","deprecate","toc","search","lazyImages","subscribeMobileWebSearchSchema","props","call","extend","className","defaults","spinner","toHtmlString","cancelButton","cancel","citation","isSmall","hasText","label","msg","errorClassName","getClassName","events","click sup a","arguments","template","closeOnScroll","postRender","windowHeight","height","css","onShow","onHide","getDocument","removeClass","showReference","refNumber","drawer","gateway","getReference","reference","render","text","err","ERROR_NOT_EXIST","error","showNestedReference","$dest","newLoadingOverlay","loadModule","delegateHide","showLoadingOverlay","hideOverlayIfNeeded","appendTo","document","body","using","Deferred","reject","userSessionToken","searchSessionToken","_newUserSession","user","generateRandomSessionId","_newSearchSession","searchSessionCreatedAt","onSearchShow","onSearchStart","track","action","timeOffsetSinceStart","onSearchResults","event","resultSetType","numberOfResults","results","timeToDisplayResults","onSearchResultClick","clickIndex","resultIndex","register","searchOverlay","logger","feedbackLink","params","isBorderBox","api","gatewayClass","templatePartials","header","content","icon","headerChrome","clearIcon","searchContentIcon","searchTerm","placeholderMsg","noResultsMsg","searchContentNoResultsMsg","message","feedback","prompt","input input","click .clear","click .search-content","click .overlay-content","click .overlay-content > div","touchstart .results","mousedown .results","click .results a","onInputInput","performSearch","$clear","$input","val","onClickClear","focus","onClickSearchContent","$form","parseHTML","type","value","setTimeout","submit","onClickOverlayContent","trigger","onClickOverlayContentDiv","hideKeyboardOnScroll","blur","onClickResult","currentTarget","$result","closest","$results","index","originalEvent","timer","clearSearch","$spinner","clearTimeout","$searchContent","$searchFeedback","$resultContainer","searchData","delay","showKeyboard","len","setSelectionRange","query","isCached","lastQuery","_pendingQuery","abort","xhr","filter","funnel","pages","el","resetSearch","empty","Schema","eventLog","platform","platformVersion","getMode","trackSubscribe","topic","contentsMsg","tocHeading"],"mappings":"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","file":"mobile.startup.js","sourcesContent":["/* global $ */\nvar\n\tutil = require( './util' ),\n\tmfExtend = require( './mfExtend' ),\n\toverlayManager = null;\n\n/**\n * Manages opening and closing overlays when the URL hash changes to one\n * of the registered values (see OverlayManager.add()).\n *\n * This allows overlays to function like real pages, with similar browser back/forward\n * and refresh behavior.\n *\n * @class OverlayManager\n * @param {Router} router\n * @param {string} appendToSelector\n */\nfunction OverlayManager( router, appendToSelector ) {\n\trouter.on( 'route', this._checkRoute.bind( this ) );\n\tthis.router = router;\n\t// use an object instead of an array for entries so that we don't\n\t// duplicate entries that already exist\n\tthis.entries = {};\n\t// stack of all the open overlays, stack[0] is the latest one\n\tthis.stack = [];\n\tthis.hideCurrent = true;\n\t// Set the element that overlays will be appended to\n\tif ( !appendToSelector ) {\n\t\tmw.log.warn( 'appendToSelector will soon be a required parameter to OverlayManager' );\n\t}\n\tthis.appendToSelector = appendToSelector || 'body';\n}\n\nmfExtend( OverlayManager, {\n\t/**\n\t * Don't try to hide the active overlay on a route change event triggered\n\t * by hiding another overlay.\n\t * Called when hiding an overlay.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t */\n\t_onHideOverlay: function () {\n\t\tthis.hideCurrent = false;\n\n\t\tthis.router.back();\n\t},\n\n\t/** Attach overlay to DOM\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to attach\n\t*/\n\t_attachOverlay: function ( overlay ) {\n\t\tif ( !overlay.$el.parents().length ) {\n\t\t\t$( this.appendToSelector ).append( overlay.$el );\n\t\t}\n\t},\n\t/**\n\t * Show the overlay and bind the '_om_hide' event to _onHideOverlay.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to show\n\t */\n\t_show: function ( overlay ) {\n\n\t\t// if hidden using overlay (not hardware) button, update the state\n\t\toverlay.once( '_om_hide', this._onHideOverlay.bind( this ) );\n\n\t\tthis._attachOverlay( overlay );\n\t\toverlay.show();\n\t},\n\n\t/**\n\t * Hide overlay\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to hide\n\t * @return {boolean} Whether the overlay has been hidden\n\t */\n\t_hideOverlay: function ( overlay ) {\n\t\tvar result;\n\n\t\t// remove the callback for updating state when overlay closed using\n\t\t// overlay close button\n\t\toverlay.off( '_om_hide' );\n\n\t\tresult = overlay.hide( this.stack.length > 1 );\n\n\t\t// if closing prevented, reattach the callback\n\t\tif ( !result ) {\n\t\t\toverlay.once( '_om_hide', this._onHideOverlay.bind( this ) );\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Show match's overlay if match is not null.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Object|null} match Object with factory function's result. null if no match.\n\t */\n\t_processMatch: function ( match ) {\n\t\tvar factoryResult,\n\t\t\tself = this;\n\n\t\t/**\n\t\t * Attach an event to the overlays hide event\n\t\t * @param {Overlay} overlay\n\t\t */\n\t\tfunction attachHideEvent( overlay ) {\n\t\t\toverlay.on( 'hide', function () {\n\t\t\t\toverlay.emit( '_om_hide' );\n\t\t\t} );\n\t\t}\n\n\t\tif ( match ) {\n\t\t\tif ( match.overlay ) {\n\t\t\t\t// if the match is an overlay that was previously opened, reuse it\n\t\t\t\tself._show( match.overlay );\n\t\t\t} else {\n\t\t\t\t// else create an overlay using the factory function result (either\n\t\t\t\t// a promise or an overlay)\n\t\t\t\tfactoryResult = match.factoryResult;\n\t\t\t\t// http://stackoverflow.com/a/13075985/365238\n\t\t\t\tif ( typeof factoryResult.promise === 'function' ) {\n\t\t\t\t\tfactoryResult.then( function ( overlay ) {\n\t\t\t\t\t\tmatch.overlay = overlay;\n\t\t\t\t\t\tattachHideEvent( overlay );\n\t\t\t\t\t\tself._show( overlay );\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tmatch.overlay = factoryResult;\n\t\t\t\t\tattachHideEvent( match.overlay );\n\t\t\t\t\tself._show( factoryResult );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * A callback for Router's `route` event.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {jQuery.Event} ev Event object.\n\t */\n\t_checkRoute: function ( ev ) {\n\t\tvar\n\t\t\tcurrent = this.stack[0],\n\t\t\tmatch;\n\n\t\t// When entering an overlay for the first time,\n\t\t// the manager should remember the user's scroll position\n\t\t// overlays always open at top of page\n\t\t// and we'll want to restore it later.\n\t\t// This should happen before the call to _matchRoute which will \"show\" the overlay.\n\t\t// The Overlay has similar logic for overlays that are not managed via the overlay.\n\t\tif ( !current ) {\n\t\t\tthis.scrollTop = window.pageYOffset;\n\t\t}\n\n\t\tmatch = Object.keys( this.entries ).reduce( function ( m, id ) {\n\t\t\treturn m || this._matchRoute( ev.path, this.entries[ id ] );\n\t\t}.bind( this ), null );\n\n\t\t// if there is an overlay in the stack and it's opened, try to close it\n\t\tif (\n\t\t\tcurrent &&\n\t\t\tcurrent.overlay !== undefined &&\n\t\t\tthis.hideCurrent &&\n\t\t\t!this._hideOverlay( current.overlay )\n\t\t) {\n\t\t\t// if hide prevented, prevent route change event\n\t\t\tev.preventDefault();\n\t\t} else if ( !match ) {\n\t\t\t// if hidden and no new matches, reset the stack\n\t\t\tthis.stack = [];\n\t\t\t// restore the scroll position.\n\t\t\twindow.scrollTo( window.pageXOffset, this.scrollTop );\n\t\t}\n\n\t\tthis.hideCurrent = true;\n\t\tthis._processMatch( match );\n\t},\n\n\t/**\n\t * Check if a given path matches one of the entries.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {string} path Path (hash) to check.\n\t * @param {Object} entry Entry object created in OverlayManager#add.\n\t * @return {Object|null} Match object with factory function's result.\n\t *  Returns null if no match.\n\t */\n\t_matchRoute: function ( path, entry ) {\n\t\tvar\n\t\t\tnext,\n\t\t\tmatch = path.match( entry.route ),\n\t\t\tprevious = this.stack[1],\n\t\t\tself = this;\n\n\t\t/**\n\t\t * Returns object to add to stack\n\t\t * @method\n\t\t * @ignore\n\t\t * @return {Object}\n\t\t */\n\t\tfunction getNext() {\n\t\t\treturn {\n\t\t\t\tpath: path,\n\t\t\t\tfactoryResult: entry.factory.apply( self, match.slice( 1 ) )\n\t\t\t};\n\t\t}\n\n\t\tif ( match ) {\n\t\t\t// if previous stacked overlay's path matches, assume we're going back\n\t\t\t// and reuse a previously opened overlay\n\t\t\tif ( previous && previous.path === path ) {\n\t\t\t\tif ( previous.overlay && previous.overlay.hasLoadError ) {\n\t\t\t\t\tself.stack.shift();\n\t\t\t\t\t// Loading of overlay failed so we want to replace it with a new\n\t\t\t\t\t// overlay (which will try to load successfully)\n\t\t\t\t\tself.stack[0] = getNext();\n\t\t\t\t\treturn self.stack[0];\n\t\t\t\t}\n\n\t\t\t\tself.stack.shift();\n\t\t\t\treturn previous;\n\t\t\t} else {\n\t\t\t\tnext = getNext();\n\t\t\t\tif ( this.stack[0] && next.path === this.stack[0].path ) {\n\t\t\t\t\t// current overlay path is same as path to check which means overlay\n\t\t\t\t\t// is attempting to refresh so just replace current overlay with new\n\t\t\t\t\t// overlay\n\t\t\t\t\tself.stack[0] = next;\n\t\t\t\t} else {\n\t\t\t\t\tself.stack.unshift( next );\n\t\t\t\t}\n\t\t\t\treturn next;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Add an overlay that should be shown for a specific fragment identifier.\n\t *\n\t * The following code will display an overlay whenever a user visits a URL that\n\t * end with '#/hi/name'. The value of `name` will be passed to the overlay.\n\t *\n\t *     @example\n\t *     overlayManager.add( /\\/hi\\/(.*)/, function ( name ) {\n\t *       var factoryResult = $.Deferred();\n\t *\n\t *       mw.using( 'mobile.HiOverlay', function () {\n\t *         var HiOverlay = M.require( 'HiOverlay' );\n\t *         factoryResult.resolve( new HiOverlay( { name: name } ) );\n\t *       } );\n\t *\n\t *       return factoryResult;\n\t *     } );\n\t *\n\t * @memberof OverlayManager\n\t * @instance\n\t * @param {RegExp} route route regular expression, optionally with parameters.\n\t * @param {Function} factory a function returning an overlay or a $.Deferred\n\t * which resolves to an overlay.\n\t */\n\tadd: function ( route, factory ) {\n\t\tvar self = this,\n\t\t\tentry = {\n\t\t\t\troute: route,\n\t\t\t\tfactory: factory\n\t\t\t};\n\n\t\tthis.entries[route] = entry;\n\t\t// Check if overlay should be shown for the current path.\n\t\t// The DOM must fully load before we can show the overlay because Overlay relies on it.\n\t\tutil.docReady( function () {\n\t\t\tself._processMatch( self._matchRoute( self.router.getPath(), entry ) );\n\t\t} );\n\t},\n\n\t/**\n\t * Replace the currently displayed overlay with a new overlay without changing the\n\t * URL. This is useful for when you want to switch overlays, but don't want to\n\t * change the back button or close box behavior.\n\t *\n\t * @memberof OverlayManager\n\t * @instance\n\t * @param {Object} overlay The overlay to display\n\t */\n\treplaceCurrent: function ( overlay ) {\n\t\tif ( this.stack.length === 0 ) {\n\t\t\tthrow new Error( 'Trying to replace OverlayManager\\'s current overlay, but stack is empty' );\n\t\t}\n\t\tthis._hideOverlay( this.stack[0].overlay );\n\t\tthis.stack[0].overlay = overlay;\n\t\tthis._show( overlay );\n\t}\n} );\n\n/**\n * Retrieve a singleton instance using 'mediawiki.router'.\n * @memberof OverlayManager\n * @return {OverlayManager}\n */\nOverlayManager.getSingleton = function () {\n\tif ( !overlayManager ) {\n\t\toverlayManager = new OverlayManager( mw.loader.require( 'mediawiki.router' ), 'body' );\n\t}\n\treturn overlayManager;\n};\n\nmodule.exports = OverlayManager;\n","var browser = require( './Browser' ).getSingleton(),\n\tutil = require( './util' ),\n\tescapeHash = util.escapeHash,\n\tarrowOptions = {\n\t\tname: 'arrow',\n\t\tadditionalClassNames: 'indicator'\n\t},\n\tIcon = require( './Icon' );\n\n/**\n * A class for enabling toggling\n *\n * @class Toggler\n * @param {Object} options\n * @param {OO.EventEmitter} options.eventBus Object used to emit before-section-toggled\n * and section-toggled events\n * @param {jQuery.Object} options.$container to apply toggling to\n * @param {string} options.prefix a prefix to use for the id.\n * @param {Page} [options.page] to allow storage of session for future visits\n * @param {Page} [options.isClosed] whether the element should begin closed\n * and section-toggled events\n */\nfunction Toggler( options ) {\n\tthis.eventBus = options.eventBus;\n\tthis._enable( options.$container, options.prefix, options.page, options.isClosed );\n}\n\n/**\n * Using the settings module looks at what sections were previously expanded on\n * existing page.\n *\n * @param {Page} page\n * @return {Object} representing open sections\n */\nfunction getExpandedSections( page ) {\n\tvar expandedSections = JSON.parse(\n\t\tmw.storage.get( 'expandedSections' ) || '{}'\n\t);\n\texpandedSections[page.title] = expandedSections[page.title] || {};\n\treturn expandedSections;\n}\n\n/**\n* @param {Object} expandedSections\n* Save expandedSections to localStorage\n*/\nfunction saveExpandedSections( expandedSections ) {\n\tmw.storage.set(\n\t\t'expandedSections', JSON.stringify( expandedSections )\n\t);\n}\n\n/**\n * Given an expanded heading, store it to localStorage.\n * If the heading is collapsed, remove it from localStorage.\n *\n * @param {jQuery.Object} $heading - A heading belonging to a section\n * @param {Page} page\n */\nfunction storeSectionToggleState( $heading, page ) {\n\tvar headline = $heading.find( 'span' ).attr( 'id' ),\n\t\tisSectionOpen = $heading.hasClass( 'open-block' ),\n\t\texpandedSections = getExpandedSections( page );\n\n\tif ( headline ) {\n\t\tif ( isSectionOpen ) {\n\t\t\texpandedSections[page.title][headline] = ( new Date() ).getTime();\n\t\t} else {\n\t\t\tdelete expandedSections[page.title][headline];\n\t\t}\n\n\t\tsaveExpandedSections( expandedSections );\n\t}\n}\n\n/**\n * Expand sections that were previously expanded before leaving this page.\n * @param {Toggler} toggler\n * @param {jQuery.Object} $container\n * @param {Page} page\n */\nfunction expandStoredSections( toggler, $container, page ) {\n\tvar $sectionHeading, $headline,\n\t\texpandedSections = getExpandedSections( page ),\n\t\t$headlines = $container.find( '.section-heading span' );\n\n\t$headlines.each( function () {\n\t\t$headline = $container.find( this );\n\t\t$sectionHeading = $headline.parents( '.section-heading' );\n\t\t// toggle only if the section is not already expanded\n\t\tif (\n\t\t\texpandedSections[page.title][$headline.attr( 'id' )] &&\n\t\t!$sectionHeading.hasClass( 'open-block' )\n\t\t) {\n\t\t\ttoggler.toggle( $sectionHeading, page );\n\t\t}\n\t} );\n}\n\n/**\n * Clean obsolete (saved more than a day ago) expanded sections from\n * localStorage.\n * @param {Page} page\n */\nfunction cleanObsoleteStoredSections( page ) {\n\tvar now = ( new Date() ).getTime(),\n\t\texpandedSections = getExpandedSections( page ),\n\t\t// the number of days between now and the time a setting was saved\n\t\tdaysDifference;\n\tObject.keys( expandedSections ).forEach( function ( page ) {\n\t\tvar sections = expandedSections[ page ];\n\t\t// clean the setting if it is more than a day old\n\t\tObject.keys( sections ).forEach( function ( section ) {\n\t\t\tvar timestamp = sections[ section ];\n\t\t\tdaysDifference = Math.floor( ( now - timestamp ) / 1000 / 60 / 60 / 24 );\n\t\t\tif ( daysDifference >= 1 ) {\n\t\t\t\tdelete expandedSections[page][section];\n\t\t\t}\n\t\t} );\n\t} );\n\tsaveExpandedSections( expandedSections );\n}\n\n/**\n * Given a heading, toggle it and any of its children\n *\n * @memberof Toggler\n * @instance\n * @param {jQuery.Object} $heading A heading belonging to a section\n */\nToggler.prototype.toggle = function ( $heading ) {\n\tvar indicator,\n\t\twasExpanded = $heading.is( '.open-block' ),\n\t\tpage = $heading.data( 'page' ),\n\t\tsectionNumber = $heading.data( 'section-number' ),\n\t\t$content = $heading.next();\n\n\t$heading.toggleClass( 'open-block' );\n\t$heading.data( 'indicator' ).remove();\n\n\tarrowOptions.rotation = wasExpanded ? 0 : 180;\n\tindicator = new Icon( arrowOptions ).prependTo( $heading );\n\t$heading.data( 'indicator', indicator );\n\n\t/**\n\t * Global event emitted before a section is being toggled\n\t *\n\t * @event section-toggling\n\t * @type {Object}\n\t * @property {Page} page\n\t * @property {bool} wasExpanded\n\t * @property {bool} isReferenceSection\n\t * @property {jQuery.Object} $heading\n\t */\n\tthis.eventBus.emit( 'before-section-toggled', {\n\t\tpage: page,\n\t\twasExpanded: wasExpanded,\n\t\t$heading: $heading,\n\t\tisReferenceSection: Boolean( $content.attr( 'data-is-reference-section' ) )\n\t} );\n\n\t$content\n\t\t.toggleClass( 'open-block' )\n\t\t.attr( {\n\t\t\t'aria-pressed': !wasExpanded,\n\t\t\t'aria-expanded': !wasExpanded\n\t\t} );\n\n\t/**\n\t * Global event emitted after a section has been toggled\n\t * @event section-toggled\n\t * @type {Object}\n\t * @property {bool} wasExpanded\n\t * @property {number} sectionNumber\n\t */\n\tthis.eventBus.emit( 'section-toggled', wasExpanded, sectionNumber );\n\n\tif ( !browser.isWideScreen() ) {\n\t\tstoreSectionToggleState( $heading, page );\n\t}\n};\n\n/**\n * Enables toggling via enter and space keys\n *\n * @param {Toggler} toggler instance.\n * @param {jQuery.Object} $heading\n */\nfunction enableKeyboardActions( toggler, $heading ) {\n\t$heading.on( 'keypress', function ( ev ) {\n\t\tif ( ev.which === 13 || ev.which === 32 ) {\n\t\t\t// Only handle keypresses on the \"Enter\" or \"Space\" keys\n\t\t\ttoggler.toggle( $heading );\n\t\t}\n\t} ).find( 'a' ).on( 'keypress mouseup', function ( ev ) {\n\t\tev.stopPropagation();\n\t} );\n}\n\n/**\n * Reveals an element and its parent section as identified by it's id\n *\n * @memberof Toggler\n * @instance\n * @param {string} selector A css selector that identifies a single element\n * @param {Object} $container jQuery element to search in\n */\nToggler.prototype.reveal = function ( selector, $container ) {\n\tvar $target, $heading;\n\n\t// jQuery will throw for hashes containing certain characters which can break toggling\n\ttry {\n\t\t$target = $container.find( escapeHash( selector ) );\n\t\t$heading = $target.parents( '.collapsible-heading' );\n\t\t// The heading is not a section heading, check if in a content block!\n\t\tif ( !$heading.length ) {\n\t\t\t$heading = $target.parents( '.collapsible-block' ).prev( '.collapsible-heading' );\n\t\t}\n\t\tif ( $heading.length && !$heading.hasClass( 'open-block' ) ) {\n\t\t\tthis.toggle( $heading );\n\t\t}\n\t\tif ( $heading.length ) {\n\t\t\t// scroll again after opening section (opening section makes the page longer)\n\t\t\twindow.scrollTo( 0, $target.offset().top );\n\t\t}\n\t} catch ( e ) {}\n};\n\n/**\n * Enables section toggling in a given container when wgMFCollapseSectionsByDefault\n * is enabled.\n *\n * @memberof Toggler\n * @instance\n * @param {jQuery.Object} $container to apply toggling to\n * @param {string} prefix a prefix to use for the id.\n * @param {Page} [page] to allow storage of session for future visits\n * @param {Page} [isClosed] whether the element should begin closed\n * @private\n */\nToggler.prototype._enable = function ( $container, prefix, page, isClosed ) {\n\tvar tagName, expandSections, indicator, $content,\n\t\t$firstHeading,\n\t\t$link,\n\t\tself = this,\n\t\tcollapseSectionsByDefault = mw.config.get( 'wgMFCollapseSectionsByDefault' );\n\n\t// Also allow .section-heading if some extensions like Wikibase\n\t// want to toggle other headlines than direct descendants of $container.\n\t$firstHeading = $container.find( '> h1,> h2,> h3,> h4,> h5,> h6,.section-heading' ).eq( 0 );\n\ttagName = $firstHeading.prop( 'tagName' ) || 'H1';\n\n\tif ( collapseSectionsByDefault === undefined ) {\n\t\t// Old default behavior if on cached output\n\t\tcollapseSectionsByDefault = true;\n\t}\n\texpandSections = !collapseSectionsByDefault ||\n\t( mw.config.get( 'wgMFExpandAllSectionsUserOption' ) && mw.storage.get( 'expandSections' ) === 'true' );\n\n\t$container.children( tagName ).each( function ( i ) {\n\t\tvar isReferenceSection,\n\t\t\t$heading = $container.find( this ),\n\t\t\t$indicator = $heading.find( '.indicator' ),\n\t\t\tid = prefix + 'collapsible-block-' + i;\n\t\t// Be sure there is a div wrapping the section content.\n\t\t// Otherwise, collapsible sections for this page is not enabled.\n\t\tif ( $heading.next().is( 'div' ) ) {\n\t\t\t$content = $heading.next( 'div' );\n\t\t\tisReferenceSection = Boolean( $content.attr( 'data-is-reference-section' ) );\n\t\t\t$heading\n\t\t\t\t.addClass( 'collapsible-heading ' )\n\t\t\t\t.data( 'section-number', i )\n\t\t\t\t.data( 'page', page )\n\t\t\t\t.attr( {\n\t\t\t\t\ttabindex: 0,\n\t\t\t\t\t'aria-haspopup': 'true',\n\t\t\t\t\t'aria-controls': id\n\t\t\t\t} )\n\t\t\t\t.on( 'click', function ( ev ) {\n\t\t\t\t\t// don't toggle, if the click target was a link\n\t\t\t\t\t// (a link in a section heading)\n\t\t\t\t\t// See T117880\n\t\t\t\t\tif ( !ev.target.href ) {\n\t\t\t\t\t\t// prevent taps/clicks on edit button after toggling (bug 56209)\n\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\tself.toggle( $heading );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\tarrowOptions.rotation = expandSections ? 180 : 0;\n\t\t\tindicator = new Icon( arrowOptions );\n\t\t\tif ( $indicator.length ) {\n\t\t\t\t// replace the existing indicator\n\t\t\t\t$indicator.replaceWith( indicator.$el );\n\t\t\t} else {\n\t\t\t\tindicator.prependTo( $heading );\n\t\t\t}\n\t\t\t$heading.data( 'indicator', indicator.$el );\n\t\t\t$content\n\t\t\t\t.addClass( 'collapsible-block' )\n\t\t\t\t.eq( 0 )\n\t\t\t\t.attr( {\n\t\t\t\t\t// We need to give each content block a unique id as that's\n\t\t\t\t\t// the only way we can tell screen readers what element we're\n\t\t\t\t\t// referring to (aria-controls)\n\t\t\t\t\tid: id,\n\t\t\t\t\t'aria-pressed': 'false',\n\t\t\t\t\t'aria-expanded': 'false'\n\t\t\t\t} );\n\n\t\t\tenableKeyboardActions( self, $heading );\n\t\t\tif (\n\t\t\t\t!isReferenceSection && (\n\t\t\t\t\t!isClosed && browser.isWideScreen() || expandSections\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// Expand sections by default on wide screen devices\n\t\t\t\t// or if the expand sections setting is set.\n\t\t\t\t// The wide screen logic for determining whether to collapse sections initially\n\t\t\t\t// should be kept in sync with mobileoptions#initLocalStorageElements().\n\t\t\t\tself.toggle( $heading );\n\t\t\t}\n\t\t}\n\t} );\n\n\t/* eslint-disable no-restricted-properties */\n\t/**\n\t * Checks the existing hash and toggles open any section that contains the fragment.\n\t *\n\t * @method\n\t */\n\tfunction checkHash() {\n\t\tvar hash = window.location.hash;\n\t\tif ( hash.indexOf( '#' ) === 0 ) {\n\t\t\tself.reveal( hash, $container );\n\t\t}\n\t}\n\n\t/**\n\t * Checks the value of wgInternalRedirectTargetUrl and reveals the collapsed\n\t * section that contains it if present\n\t *\n\t * @method\n\t */\n\tfunction checkInternalRedirectAndHash() {\n\t\tvar internalRedirect = mw.config.get( 'wgInternalRedirectTargetUrl' ),\n\t\t\tinternalRedirectHash = internalRedirect ? internalRedirect.split( '#' )[1] : false;\n\n\t\tif ( internalRedirectHash ) {\n\t\t\twindow.location.hash = internalRedirectHash;\n\t\t\tself.reveal( internalRedirectHash, $container );\n\t\t}\n\t}\n\t/* eslint-enable no-restricted-properties */\n\n\tcheckInternalRedirectAndHash();\n\tcheckHash();\n\t// Restricted to links created by editors and thus outside our control\n\t// T166544 - don't do this for reference links - they will be handled elsewhere\n\t$link = $container.find( 'a:not(.reference a)' );\n\t$link.on( 'click', function () {\n\t\t// the link might be an internal link with a hash.\n\t\t// if it is check if we need to reveal any sections.\n\t\tif ( $link.attr( 'href' ) !== undefined &&\n\t\t$link.attr( 'href' ).indexOf( '#' ) > -1\n\t\t) {\n\t\t\tcheckHash();\n\t\t}\n\t} );\n\tutil.getWindow().on( 'hashchange', function () {\n\t\tcheckHash();\n\t} );\n\n\tif ( !browser.isWideScreen() && page ) {\n\t\texpandStoredSections( this, $container, page );\n\t\tcleanObsoleteStoredSections( page );\n\t}\n};\n\nToggler._getExpandedSections = getExpandedSections;\nToggler._expandStoredSections = expandStoredSections;\nToggler._cleanObsoleteStoredSections = cleanObsoleteStoredSections;\n\nmodule.exports = Toggler;\n","var\n\tmoduleLoader = require( './moduleLoaderSingleton' ),\n\tmfExtend = require( './mfExtend' ),\n\tcontext = require( './context' ),\n\ttime = require( './time' ),\n\tactionParams = require( './actionParams' ),\n\tutil = require( './util' ),\n\tView = require( './View' ),\n\tPageGateway = require( './PageGateway' ),\n\tBrowser = require( './Browser' ),\n\tcache = require( './cache' ),\n\tButton = require( './Button' ),\n\tIcon = require( './Icon' ),\n\tReferencesDrawer = require( './references/ReferencesDrawer' ),\n\tReferencesGateway = require( './references/ReferencesGateway' ),\n\tReferencesHtmlScraperGateway = require( './references/ReferencesHtmlScraperGateway' ),\n\tReferencesMobileViewGateway = require( './references/ReferencesMobileViewGateway' ),\n\ticons = require( './icons' ),\n\tPanel = require( './Panel' ),\n\tSection = require( './Section' ),\n\tThumbnail = require( './Thumbnail' ),\n\tPage = require( './Page' ),\n\tAnchor = require( './Anchor' ),\n\tSkin = require( './Skin' ),\n\tOverlayManager = require( './OverlayManager' ),\n\tOverlay = require( './Overlay' ),\n\tloadingOverlay = require( './loadingOverlay' ),\n\tDrawer = require( './Drawer' ),\n\tTableOfContents = require( './toc/TableOfContents' ),\n\tCtaDrawer = require( './CtaDrawer' ),\n\tPageList = require( './PageList' ),\n\ttoast = require( './toast' ),\n\textendSearchParams = require( './extendSearchParams' ),\n\tWatchstar = require( './watchstar/Watchstar' ),\n\tWatchstarPageList = require( './watchstar/WatchstarPageList' ),\n\trlModuleLoader = require( './rlModuleLoader' ),\n\teventBusSingleton = require( './eventBusSingleton' ),\n\tToggler = require( './Toggler' ),\n\tSearchOverlay = require( './search/SearchOverlay' ),\n\tschemaMobileWebSearch = require( './search/schemaMobileWebSearch' ),\n\tMobileWebSearchLogger = require( './search/MobileWebSearchLogger' ),\n\tSearchGateway = require( './search/SearchGateway' ),\n\tScrollEndEventEmitter = require( './ScrollEndEventEmitter' ),\n\tlazyImageLoader = require( './lazyImages/lazyImageLoader' ),\n\tMessageBox = require( './MessageBox' );\n\nmw.mobileFrontend = moduleLoader;\n\nOO.mfExtend = mfExtend;\n\n// I know there is a temptation to use moduleLoader here, but if you do resource-modules will fail\n// as webpack might change the variable name. Using mw.mobileFrontend means that the variable\n// will not be recast.\n// These will soon be deprecated - please use the import path mobile.startup going forward.\nmw.mobileFrontend.define( 'mobile.startup/util', util );\nmw.mobileFrontend.define( 'mobile.startup/View', View );\nmw.mobileFrontend.define( 'mobile.startup/Browser', Browser );\nmw.mobileFrontend.define( 'mobile.startup/cache', cache );\nmw.mobileFrontend.define( 'mobile.startup/time', time );\nmw.mobileFrontend.define( 'mobile.startup/context', context );\nmw.mobileFrontend.define( 'mobile.startup/PageGateway', PageGateway );\nmw.mobileFrontend.define( 'mobile.startup/Button', Button );\nmw.mobileFrontend.define( 'mobile.startup/Icon', Icon );\nmw.mobileFrontend.define( 'mobile.startup/icons', icons );\nmw.mobileFrontend.define( 'mobile.startup/Panel', Panel );\nmw.mobileFrontend.define( 'mobile.startup/Section', Section );\nmw.mobileFrontend.define( 'mobile.startup/Thumbnail', Thumbnail );\nmw.mobileFrontend.define( 'mobile.startup/Page', Page );\nmw.mobileFrontend.define( 'mobile.startup/Anchor', Anchor );\nmw.mobileFrontend.define( 'mobile.startup/Skin', Skin );\nmw.mobileFrontend.define( 'mobile.startup/OverlayManager', OverlayManager );\nmw.mobileFrontend.define( 'mobile.startup/Overlay', Overlay );\nmw.mobileFrontend.define( 'mobile.startup/Drawer', Drawer );\nmw.mobileFrontend.define( 'mobile.startup/CtaDrawer', CtaDrawer );\nmw.mobileFrontend.define( 'mobile.startup/PageList', PageList );\nmw.mobileFrontend.define( 'mobile.startup/toast', toast );\nmw.mobileFrontend.define( 'mobile.startup/rlModuleLoader', rlModuleLoader );\nmw.mobileFrontend.define( 'mobile.startup/eventBusSingleton', eventBusSingleton );\nmw.mobileFrontend.deprecate( 'mobile.startup/LoadingOverlay', loadingOverlay, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search.util/extendSearchParams', extendSearchParams, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references/ReferencesDrawer', ReferencesDrawer, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references.gateway/ReferencesGateway', ReferencesGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references.gateway/ReferencesHtmlScraperGateway',\n\tReferencesHtmlScraperGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references.gateway/ReferencesMobileViewGateway',\n\tReferencesMobileViewGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.watchstar/Watchstar', Watchstar, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.pagelist.scripts/WatchstarPageList', WatchstarPageList, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.toggle/Toggler', Toggler, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search/SearchOverlay', SearchOverlay, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search/MobileWebSearchLogger', MobileWebSearchLogger, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search.api/SearchGateway', SearchGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.toc/TableOfContents', TableOfContents, 'mobile.startup' );\n\n// Expose the entry chunk through libraryTarget and library. This allows\n// arbitrary file access via ResourceLoader like\n// `mfModules['mobile.startup'].moduleLoader.require('mobile.startup/LoadingOverlay')`.\nmodule.exports = {\n\textendSearchParams: extendSearchParams,\n\tReferencesDrawer: ReferencesDrawer,\n\tReferencesGateway: ReferencesGateway,\n\tReferencesHtmlScraperGateway: ReferencesHtmlScraperGateway,\n\tReferencesMobileViewGateway: ReferencesMobileViewGateway,\n\tmoduleLoader: moduleLoader,\n\ttime: time,\n\tutil: util,\n\tactionParams: actionParams,\n\tView: View,\n\tBrowser: Browser,\n\tcontext: context,\n\tcache: cache,\n\tButton: Button,\n\tIcon: Icon,\n\ticons: icons,\n\tPanel: Panel,\n\tSection: Section,\n\tPage: Page,\n\tAnchor: Anchor,\n\tSkin: Skin,\n\tOverlayManager: OverlayManager,\n\tOverlay: Overlay,\n\tloadingOverlay: loadingOverlay,\n\tDrawer: Drawer,\n\tCtaDrawer: CtaDrawer,\n\tPageList: PageList,\n\ttoast: toast,\n\tWatchstar: Watchstar,\n\tWatchstarPageList: WatchstarPageList,\n\trlModuleLoader: rlModuleLoader,\n\teventBusSingleton: eventBusSingleton,\n\tToggler: Toggler,\n\ttoc: {\n\t\tTableOfContents: TableOfContents\n\t},\n\tsearch: {\n\t\tSearchOverlay: SearchOverlay,\n\t\tMobileWebSearchLogger: MobileWebSearchLogger,\n\t\tSearchGateway: SearchGateway\n\t},\n\tlazyImages: {\n\t\tlazyImageLoader: lazyImageLoader\n\t},\n\tScrollEndEventEmitter: ScrollEndEventEmitter,\n\tMessageBox: MessageBox\n};\n\n// Setup a single export for new modules to fold all of the above lines into.\n// One export to rule them all!\nmw.mobileFrontend.define( 'mobile.startup', module.exports );\n\nschemaMobileWebSearch.subscribeMobileWebSearchSchema();\n","var Drawer = require( './../Drawer' ),\n\tutil = require( './../util' ),\n\ticons = require( './../icons' ),\n\tmfExtend = require( './../mfExtend' ),\n\tReferencesGateway = require( './ReferencesGateway' ),\n\tIcon = require( './../Icon' );\n\n/**\n * Drawer for references\n * @class ReferencesDrawer\n * @extends Drawer\n * @uses Icon\n * @param {Object} props\n */\nfunction ReferencesDrawer( props ) {\n\tDrawer.call( this,\n\t\tutil.extend( {\n\t\t\tclassName: 'drawer position-fixed text references'\n\t\t}, props )\n\t);\n}\n\nmfExtend( ReferencesDrawer, Drawer, {\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @mixes Drawer#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.cancelButton HTML of the button that closes the drawer.\n\t * @property {boolean} defaults.error whether an error message is being shown\n\t */\n\tdefaults: util.extend( {}, Drawer.prototype.defaults, {\n\t\tspinner: icons.spinner().toHtmlString(),\n\t\tcancelButton: icons.cancel( 'gray' ).toHtmlString(),\n\t\tcitation: new Icon( {\n\t\t\tisSmall: true,\n\t\t\tname: 'citation',\n\t\t\tadditionalClassNames: 'text',\n\t\t\thasText: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-references-citation' )\n\t\t} ).toHtmlString(),\n\t\terrorClassName: new Icon( {\n\t\t\tname: 'error',\n\t\t\thasText: true,\n\t\t\tisSmall: true\n\t\t} ).getClassName()\n\t} ),\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tevents: {\n\t\t'click sup a': 'showNestedReference'\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tshow: function () {\n\t\treturn Drawer.prototype.show.apply( this, arguments );\n\t},\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'ReferencesDrawer.hogan' ),\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tcloseOnScroll: false,\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar windowHeight = util.getWindow().height();\n\n\t\tDrawer.prototype.postRender.apply( this );\n\n\t\t// make sure the drawer doesn't take up more than 50% of the viewport height\n\t\tif ( windowHeight / 2 < 400 ) {\n\t\t\tthis.$el.css( 'max-height', windowHeight / 2 );\n\t\t}\n\n\t\tthis.on( 'show', this.onShow.bind( this ) );\n\t\tthis.on( 'hide', this.onHide.bind( this ) );\n\t},\n\t/**\n\t * Make body not scrollable\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tonShow: function () {\n\t\tutil.getDocument().find( 'body' ).addClass( 'drawer-enabled' );\n\t},\n\t/**\n\t * Restore body scroll\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tonHide: function () {\n\t\tutil.getDocument().find( 'body' ).removeClass( 'drawer-enabled' );\n\t},\n\t/**\n\t * Fetch and render nested reference upon click\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @param {string} id of the reference to be retrieved\n\t * @param {Page} page to locate reference for\n\t * @param {string} refNumber the number it identifies as in the page\n\t * @return {jQuery.Deferred}\n\t */\n\tshowReference: function ( id, page, refNumber ) {\n\t\tvar drawer = this,\n\t\t\tgateway = this.options.gateway;\n\n\t\t// Save the page in case we have to show a nested reference.\n\t\tthis.options.page = page;\n\t\t// If API is being used we want to show the drawer with the spinner while query runs\n\t\tdrawer.show();\n\t\treturn gateway.getReference( id, page ).then( function ( reference ) {\n\t\t\tdrawer.render( {\n\t\t\t\ttitle: refNumber,\n\t\t\t\ttext: reference.text\n\t\t\t} );\n\t\t}, function ( err ) {\n\t\t\tif ( err === ReferencesGateway.ERROR_NOT_EXIST ) {\n\t\t\t\tdrawer.hide();\n\t\t\t} else {\n\t\t\t\tdrawer.render( {\n\t\t\t\t\terror: true,\n\t\t\t\t\ttitle: refNumber,\n\t\t\t\t\ttext: mw.msg( 'mobile-frontend-references-citation-error' )\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\t/**\n\t * Fetch and render nested reference upon click\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t * @return {boolean} False to cancel the native event\n\t */\n\tshowNestedReference: function ( ev ) {\n\t\tvar $dest = this.$( ev.target );\n\n\t\tthis.showReference( $dest.attr( 'href' ), this.options.page, $dest.text() );\n\t\t// Don't hide the already shown drawer via propagation\n\t\t// and stop default scroll behaviour.\n\t\treturn false;\n\t}\n} );\n\nmodule.exports = ReferencesDrawer;\n","var\n\tloadingOverlay = require( './loadingOverlay' ),\n\tutil = require( './util' );\n\n/**\n * Utility library for looking up details on the current user\n * @class loader\n * @singleton\n */\nmodule.exports = {\n\t// Exported to support testing and stubbing\n\tnewLoadingOverlay: function () {\n\t\treturn loadingOverlay();\n\t},\n\t/**\n\t * Loads a module via ResourceLoader\n\t * and displays a full screen LoadingOverlay during load time.\n\t * @memberof loader\n\t * @instance\n\t * @param {string} name ResourceLoader module name to load asynchronously.\n\t * @param {boolean} delegateHide if true the caller is responsible for hiding\n\t *  the intermediate loader.\n\t * @param {boolean} [showLoadingOverlay] if false a loading overlay will be hidden while\n\t *  loading the module. Defaults to true.\n\t * @return {jQuery.Promise}\n\t */\n\tloadModule: function ( name, delegateHide, showLoadingOverlay ) {\n\t\tvar loadingOverlay = this.newLoadingOverlay();\n\n\t\tshowLoadingOverlay = ( showLoadingOverlay !== undefined ) ? showLoadingOverlay : true;\n\t\tif ( showLoadingOverlay ) {\n\t\t\tloadingOverlay.appendTo( document.body );\n\t\t\tloadingOverlay.show();\n\t\t}\n\n\t\tfunction hideOverlayIfNeeded() {\n\t\t\tif ( !delegateHide && showLoadingOverlay ) {\n\t\t\t\tloadingOverlay.hide();\n\t\t\t}\n\t\t}\n\t\treturn mw.loader.using( name ).then( function () {\n\t\t\thideOverlayIfNeeded();\n\n\t\t\treturn loadingOverlay;\n\t\t}, function () {\n\t\t\thideOverlayIfNeeded();\n\n\t\t\treturn util.Deferred().reject().promise();\n\t\t} );\n\t}\n};\n","/**\n * Coordinates the logging of MobileWebSchema events.\n * Implements schema defined at https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n *\n * @class\n */\nfunction MobileWebSearchLogger() {\n\tthis.userSessionToken = null;\n\tthis.searchSessionToken = null;\n}\n\nMobileWebSearchLogger.prototype = {\n\t/**\n\t * Sets the internal state required to deal with logging user session\n\t * data.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newUserSession: function () {\n\t\tthis.userSessionToken = mw.user.generateRandomSessionId();\n\t},\n\n\t/**\n\t * Sets the internal state required to deal with logging search session\n\t * data.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newSearchSession: function () {\n\t\tthis.searchSessionToken = mw.user.generateRandomSessionId();\n\t\tthis.searchSessionCreatedAt = new Date().getTime();\n\t},\n\n\t/**\n\t * Handles the 'search-show' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchShow: function () {\n\t\tthis._newUserSession();\n\t},\n\n\t/**\n\t * Handles the 'search-start' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchStart: function () {\n\t\tthis._newSearchSession();\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'session-start',\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: 0\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-results' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {Object[]} event.results\n\t */\n\tonSearchResults: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'impression-results',\n\t\t\tresultSetType: 'prefix',\n\t\t\tnumberOfResults: event.results.length,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\t// FIXME: Unless I'm mistaken, the timeToDisplayResults\n\t\t\t// property isn't necessary.\n\t\t\ttimeToDisplayResults: timeOffsetSinceStart,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-result-click' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {number} event.index\n\t *  The zero-based index of the result in the set of results.\n\t */\n\tonSearchResultClick: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'click-result',\n\t\t\t// NOTE: clickIndex is 1-based.\n\t\t\tclickIndex: event.resultIndex + 1,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t}\n};\n\n/**\n * Convenience function that wires up an instance of the\n * MobileWebSearchLogger class to the search-* events emitted by the\n * search overlay.\n * @memberof MobileWebSearchLogger\n * @param {SearchOverlay} searchOverlay\n */\nMobileWebSearchLogger.register = function ( searchOverlay ) {\n\tvar logger = new MobileWebSearchLogger();\n\n\tsearchOverlay.on( 'search-show', logger.onSearchShow.bind( logger ) );\n\tsearchOverlay.on( 'search-start', logger.onSearchStart.bind( logger ) );\n\tsearchOverlay.on( 'search-results', logger.onSearchResults.bind( logger ) );\n\tsearchOverlay.on( 'search-result-click', logger.onSearchResultClick.bind( logger ) );\n};\n\nmodule.exports = MobileWebSearchLogger;\n","var\n\tmfExtend = require( '../mfExtend' ),\n\tOverlay = require( '../Overlay' ),\n\tutil = require( '../util' ),\n\tAnchor = require( '../Anchor' ),\n\tIcon = require( '../Icon' ),\n\tWatchstarPageList = require( '../watchstar/WatchstarPageList' ),\n\tSEARCH_DELAY = 300,\n\tSEARCH_SPINNER_DELAY = 2000,\n\tfeedbackLink = mw.config.get( 'wgCirrusSearchFeedbackLink' );\n\n/**\n * Overlay displaying search results\n * @class SearchOverlay\n * @extends Overlay\n * @uses SearchGateway\n * @uses Icon\n *\n * @param {Object} params Configuration options\n * @fires SearchOverlay#search-show\n * @fires SearchOverlay#search-start\n * @fires SearchOverlay#search-results\n * @fires SearchOverlay#search-result-click\n */\nfunction SearchOverlay( params ) {\n\tvar defaultParams = {\n\t\t\tisBorderBox: false,\n\t\t\tclassName: 'overlay search-overlay'\n\t\t},\n\t\toptions = util.extend( {}, defaultParams, params );\n\n\tOverlay.call( this, options );\n\n\tthis.api = options.api;\n\t// eslint-disable-next-line new-cap\n\tthis.gateway = new options.gatewayClass( this.api );\n\n\tthis.router = options.router;\n}\n\nmfExtend( SearchOverlay, Overlay, {\n\t/**\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, Overlay.prototype.templatePartials, {\n\t\theader: mw.template.get( 'mobile.startup', 'search/SearchHeader.hogan' ),\n\t\tcontent: mw.template.get( 'mobile.startup', 'search/SearchContent.hogan' ),\n\t\ticon: Icon.prototype.template\n\t} ),\n\t/**\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @mixes Overlay#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {SearchGateway} defaults.gatewayClass The class to use to setup an API gateway.\n\t *  FIXME: Should be removed when wikidata descriptions in stable (T101719)\n\t * @property {Router} defaults.router instance\n\t * @property {Object} defaults.clearIcon options for the button that clears the search text.\n\t * @property {Object} defaults.searchContentIcon options for the button that allows you to\n\t *  search within content\n\t * @property {string} defaults.searchTerm Search text.\n\t * @property {string} defaults.placeholderMsg Search input placeholder text.\n\t * @property {string} defaults.clearMsg Tooltip for clear button that appears when you type\n\t * into search box.\n\t * @property {string} defaults.searchContentMsg Caption for a button performing full text\n\t * search of a given search query.\n\t * @property {string} defaults.noResultsMsg Message informing user that no pages were found\n\t * for a given query.\n\t * @property {string} defaults.searchContentNoResultsMsg Used when no pages with matching\n\t * titles were found.\n\t * @property {string} defaults.action The value of wgScript\n\t * @property {Object} defaults.feedback options for the feedback link\n\t *  below the search results\n\t */\n\tdefaults: util.extend( {}, Overlay.prototype.defaults, {\n\t\theaderChrome: true,\n\t\tclearIcon: new Icon( {\n\t\t\ttagName: 'button',\n\t\t\tname: 'search-clear',\n\t\t\tisSmall: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-clear-search' ),\n\t\t\tadditionalClassNames: 'clear'\n\t\t} ).options,\n\t\tsearchContentIcon: new Icon( {\n\t\t\ttagName: 'a',\n\t\t\t// When this icon is clicked we want to reset the hash for subsequent views\n\t\t\thref: '#',\n\t\t\tname: 'search-content',\n\t\t\tlabel: mw.msg( 'mobile-frontend-search-content' )\n\t\t} ).options,\n\t\tsearchTerm: '',\n\t\tplaceholderMsg: '',\n\t\tnoResultsMsg: mw.msg( 'mobile-frontend-search-no-results' ),\n\t\tsearchContentNoResultsMsg: mw.message( 'mobile-frontend-search-content-no-results' ).parse(),\n\t\taction: mw.config.get( 'wgScript' ),\n\t\tfeedback: !feedbackLink ? false : {\n\t\t\tfeedback: new Anchor( {\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-search-feedback-link-text' ),\n\t\t\t\thref: feedbackLink\n\t\t\t} ).options,\n\t\t\tprompt: mw.msg( 'mobile-frontend-search-feedback-prompt' )\n\t\t}\n\t} ),\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tevents: util.extend( {}, Overlay.prototype.events, {\n\t\t'input input': 'onInputInput',\n\t\t'click .clear': 'onClickClear',\n\t\t'click .search-content': 'onClickSearchContent',\n\t\t'click .overlay-content': 'onClickOverlayContent',\n\t\t'click .overlay-content > div': 'onClickOverlayContentDiv',\n\t\t'touchstart .results': 'hideKeyboardOnScroll',\n\t\t'mousedown .results': 'hideKeyboardOnScroll',\n\t\t'click .results a': 'onClickResult'\n\t} ),\n\n\t/**\n\t * Make sure search header is docked to the top of the screen when the\n\t * user begins typing so that there is adequate space for search results\n\t * above the keyboard. (This is only a potential issue when sitenotices\n\t * are displayed.)\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonInputInput: function () {\n\t\tthis.performSearch();\n\t\tthis.$clear.toggle( this.$input.val() !== '' );\n\t},\n\n\t/**\n\t * Initialize the button that clears the search field\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @return {boolean} False to cancel the native event\n\t */\n\tonClickClear: function () {\n\t\tthis.$input.val( '' ).focus();\n\t\tthis.performSearch();\n\t\tthis.$clear.hide();\n\t\t// In beta the clear button is on top of the search input.\n\t\t// Stop propagation so that the input doesn't receive the click.\n\t\treturn false;\n\t},\n\n\t/**\n\t * Initialize 'search within pages' functionality\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickSearchContent: function () {\n\t\tvar $el = util.getDocument().find( 'body' ),\n\t\t\t$form = this.$( 'form' );\n\n\t\t// Add fulltext input to force fulltext search\n\t\tthis.parseHTML( '<input>' )\n\t\t\t.attr( {\n\t\t\t\ttype: 'hidden',\n\t\t\t\tname: 'fulltext',\n\t\t\t\tvalue: 'search'\n\t\t\t} )\n\t\t\t.appendTo( $form );\n\t\t// history.back queues a task so might run after this call. Thus we use setTimeout\n\t\t// http://www.w3.org/TR/2011/WD-html5-20110113/webappapis.html#queue-a-task\n\t\tsetTimeout( function () {\n\t\t\t// Firefox doesn't allow submission of a form not in the DOM\n\t\t\t// so temporarily re-add it\n\t\t\t$form.appendTo( $el );\n\t\t\t$form.submit();\n\t\t}, 0 );\n\t},\n\n\t/**\n\t * Tapping on background only should hide the overlay\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickOverlayContent: function () {\n\t\tthis.$( '.cancel' ).trigger( 'click' );\n\t},\n\n\t/**\n\t * Stop propagation\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonClickOverlayContentDiv: function ( ev ) {\n\t\tev.stopPropagation();\n\t},\n\n\t/**\n\t * Hide the keyboard when scrolling starts (avoid weird situation when\n\t * user taps on an item, the keyboard hides and wrong item is clicked).\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\thideKeyboardOnScroll: function () {\n\t\tthis.$input.blur();\n\t},\n\n\t/**\n\t * Handle the user clicking a result.\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonClickResult: function ( ev ) {\n\t\tvar $link = this.$( ev.currentTarget ),\n\t\t\t$result = $link.closest( 'li' );\n\t\t/**\n\t\t * Fired when the user clicks a search result\n\t\t * @event SearchOverlay#search-result-click\n\t\t * @type {Object}\n\t\t * @property {jQuery.Object} result The jQuery-wrapped DOM element that\n\t\t *  the user clicked\n\t\t * @property {number} resultIndex The zero-based index of the\n\t\t *  result in the set of results\n\t\t * @property {jQuery.Event} originalEvent The original event\n\t\t */\n\t\tthis.emit( 'search-result-click', {\n\t\t\tresult: $result,\n\t\t\tresultIndex: this.$results.index( $result ),\n\t\t\toriginalEvent: ev\n\t\t} );\n\n\t\t// FIXME: ugly hack that removes search from browser history\n\t\t// when navigating to search results\n\t\tev.preventDefault();\n\t\tthis.router.back().then( function () {\n\t\t\t// Router.navigate does not support changing href.\n\t\t\t// FIXME: Needs upstream change T189173\n\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\twindow.location.href = $link.attr( 'href' );\n\t\t} );\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this,\n\t\t\ttimer;\n\n\t\tOverlay.prototype.postRender.call( this );\n\n\t\tthis.$input = this.$( 'input' );\n\t\tthis.$clear = this.$( '.clear' );\n\t\tthis.$searchContent = this.$( '.search-content' ).hide();\n\t\tthis.$searchFeedback = this.$( '.search-feedback' ).hide();\n\t\tthis.$resultContainer = this.$( '.results-list-container' );\n\n\t\t/**\n\t\t * Hide the spinner and abort timed spinner shows.\n\t\t */\n\t\tfunction clearSearch() {\n\t\t\tself.$spinner.hide();\n\t\t\tclearTimeout( timer );\n\t\t}\n\n\t\t// Show a spinner on top of search results\n\t\tthis.$spinner = this.$( '.spinner-container' );\n\t\tthis.on( 'search-start', function ( searchData ) {\n\t\t\tif ( timer ) {\n\t\t\t\tclearSearch();\n\t\t\t}\n\t\t\ttimer = setTimeout( function () {\n\t\t\t\tself.$spinner.show();\n\t\t\t}, SEARCH_SPINNER_DELAY - searchData.delay );\n\t\t} );\n\t\tthis.on( 'search-results', clearSearch );\n\n\t\t// Hide the clear button if the search input is empty\n\t\tif ( self.$input.val() === '' ) {\n\t\t\tthis.$clear.hide();\n\t\t}\n\t},\n\n\t/**\n\t * Trigger a focus() event on search input in order to\n\t * bring up the virtual keyboard.\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshowKeyboard: function () {\n\t\tvar len = this.$input.val().length;\n\t\tthis.$input.focus();\n\t\t// Cursor to the end of the input\n\t\tif ( this.$input[0].setSelectionRange ) {\n\t\t\tthis.$input[0].setSelectionRange( len, len );\n\t\t}\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\t// Overlay#show defines the actual overlay visibility.\n\t\tOverlay.prototype.show.apply( this, arguments );\n\n\t\tthis.showKeyboard();\n\t\t/**\n\t\t * Fired after the search overlay is shown\n\t\t * @event SearchOverlay#search-show\n\t\t */\n\t\tthis.emit( 'search-show' );\n\t},\n\n\t/**\n\t * Fade out if the browser supports animations\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\thide: function () {\n\t\tvar self = this,\n\t\t\t$html = util.getDocument();\n\n\t\tif ( $html.hasClass( 'animations' ) ) {\n\t\t\tself.$el.addClass( 'fade-out' );\n\t\t\tsetTimeout( function () {\n\t\t\t\tOverlay.prototype.hide.apply( self, arguments );\n\t\t\t}, 500 );\n\t\t} else {\n\t\t\tOverlay.prototype.hide.apply( self, arguments );\n\t\t}\n\t\treturn true;\n\t},\n\n\t/**\n\t * Perform search and render results inside current view.\n\t * FIXME: Much of the logic for caching and pending queries inside this function should\n\t * actually live in SearchGateway, please move out.\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tperformSearch: function () {\n\t\tvar\n\t\t\tself = this,\n\t\t\tapi = this.api,\n\t\t\tquery = this.$input.val(),\n\t\t\tdelay = this.gateway.isCached( query ) ? 0 : SEARCH_DELAY;\n\n\t\t// it seems the input event can be fired when virtual keyboard is closed\n\t\t// (Chrome for Android)\n\t\tif ( query !== this.lastQuery ) {\n\t\t\tif ( self._pendingQuery ) {\n\t\t\t\tself._pendingQuery.abort();\n\t\t\t}\n\t\t\tclearTimeout( this.timer );\n\n\t\t\tif ( query.length ) {\n\t\t\t\tthis.timer = setTimeout( function () {\n\t\t\t\t\tvar xhr;\n\t\t\t\t\t/**\n\t\t\t\t\t * Fired immediately before the search API request is sent\n\t\t\t\t\t * @event SearchOverlay#search-start\n\t\t\t\t\t * @property {Object} data related to the current search\n\t\t\t\t\t */\n\t\t\t\t\tself.emit( 'search-start', {\n\t\t\t\t\t\tquery: query,\n\t\t\t\t\t\tdelay: delay\n\t\t\t\t\t} );\n\n\t\t\t\t\txhr = self.gateway.search( query );\n\t\t\t\t\tself._pendingQuery = xhr.then( function ( data ) {\n\t\t\t\t\t\t// check if we're getting the rights response in case of out of\n\t\t\t\t\t\t// order responses (need to get the current value of the input)\n\t\t\t\t\t\tif ( data && data.query === self.$input.val() ) {\n\t\t\t\t\t\t\tself.$el.toggleClass( 'no-results', data.results.length === 0 );\n\t\t\t\t\t\t\tself.$searchContent\n\t\t\t\t\t\t\t\t.show()\n\t\t\t\t\t\t\t\t.find( 'p' )\n\t\t\t\t\t\t\t\t.hide()\n\t\t\t\t\t\t\t\t.filter( data.results.length ? '.with-results' : '.without-results' )\n\t\t\t\t\t\t\t\t.show();\n\n\t\t\t\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\t\t\t\tnew WatchstarPageList( {\n\t\t\t\t\t\t\t\tapi: api,\n\t\t\t\t\t\t\t\tfunnel: 'search',\n\t\t\t\t\t\t\t\tpages: data.results,\n\t\t\t\t\t\t\t\tel: self.$resultContainer\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\tself.$results = self.$resultContainer.find( 'li' );\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Fired when search API returns results\n\t\t\t\t\t\t\t * @event SearchOverlay#search-results\n\t\t\t\t\t\t\t * @type {Object}\n\t\t\t\t\t\t\t * @property {Object[]} results The results returned by the search\n\t\t\t\t\t\t\t *  API\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tself.emit( 'search-results', {\n\t\t\t\t\t\t\t\tresults: data.results\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ).promise( { abort: function () { xhr.abort(); } } );\n\t\t\t\t}, delay );\n\t\t\t} else {\n\t\t\t\tself.resetSearch();\n\t\t\t}\n\n\t\t\tthis.lastQuery = query;\n\t\t}\n\t},\n\t/**\n\t * Clear results\n\t *\n\t * @private\n\t */\n\tresetSearch: function () {\n\t\tthis.$spinner.hide();\n\t\tthis.$searchContent.hide();\n\t\tthis.$searchFeedback.hide();\n\t\tthis.$resultContainer.empty();\n\t}\n} );\n\nmodule.exports = SearchOverlay;\n","function subscribeMobileWebSearchSchema() {\n\tmw.loader.using( [\n\t\t'ext.eventLogging.subscriber'\n\t] ).then( function () {\n\t\tvar M = mw.mobileFrontend,\n\t\t\tcontext = M.require( 'mobile.startup/context' ),\n\t\t\t// Schema provided by ext.eventLogging.subscriber class\n\t\t\tSchema = mw.eventLog.Schema, // resource-modules-disable-line\n\t\t\t/**\n\t\t * MobileWebSearch schema\n\t\t * https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n\t\t */\n\t\t\tschemaMobileWebSearch = new Schema(\n\t\t\t\t'MobileWebSearch',\n\t\t\t\t// todo: use a default value of 0 once config lands in production.\n\t\t\t\tmw.config.get( 'wgMFSchemaSearchSampleRate', 1 / 1000 ),\n\t\t\t\t/**\n\t\t\t * @property {Object} defaults Default options hash.\n\t\t\t * @property {string} defaults.platform Always \"mobileweb\"\n\t\t\t * @property {string} defaults.platformVersion The version of MobileFrontend\n\t\t\t *  that the user is using. One of \"stable\" or \"beta\"\n\t\t\t */\n\t\t\t\t{\n\t\t\t\t\tplatform: 'mobileweb',\n\t\t\t\t\tplatformVersion: context.getMode()\n\t\t\t\t}\n\t\t\t);\n\n\t\tmw.trackSubscribe( 'mf.schemaMobileWebSearch', function ( topic, data ) {\n\t\t\tschemaMobileWebSearch.log( data );\n\t\t} );\n\t} );\n}\n\nmodule.exports = {\n\tsubscribeMobileWebSearchSchema: subscribeMobileWebSearchSchema\n};\n","var View = require( '../View' ),\n\tmfExtend = require( '../mfExtend' ),\n\tutil = require( '../util' ),\n\tIcon = require( '../Icon' );\n\n/**\n * View for table of contents\n * @class TableOfContents\n * @extends View\n * @uses Icon\n * @param {Object} props\n * @param {Section[]} props.sections\n */\nfunction TableOfContents( props ) {\n\tView.call( this, util.extend( {\n\t\tclassName: 'toc-mobile',\n\t\tcontentsMsg: mw.msg( 'toc' )\n\t}, props ) );\n}\n\nmfExtend( TableOfContents, View, {\n\t/**\n\t * @memberof TableOfContents\n\t * @instance\n\t */\n\ttemplatePartials: {\n\t\ttocHeading: mw.template.get( 'mobile.startup', 'TableOfContentsHeading.hogan' )\n\t},\n\t/**\n\t * @memberof TableOfContents\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'TableOfContents.hogan' ),\n\t/** @inheritdoc */\n\tpostRender: function () {\n\t\tnew Icon( {\n\t\t\tname: 'toc',\n\t\t\tadditionalClassNames: 'toc-button'\n\t\t} ).$el.prependTo( this.$( 'h2' ) );\n\t}\n} );\n\nmodule.exports = TableOfContents;\n"],"sourceRoot":""}