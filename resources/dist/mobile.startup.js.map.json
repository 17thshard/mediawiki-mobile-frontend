{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.startup/CtaDrawer.js","webpack://mfModules.[name]/./src/mobile.startup/Drawer.js","webpack://mfModules.[name]/./src/mobile.startup/OverlayManager.js","webpack://mfModules.[name]/./src/mobile.startup/Page.js","webpack://mfModules.[name]/./src/mobile.startup/PageGateway.js","webpack://mfModules.[name]/./src/mobile.startup/PageList.js","webpack://mfModules.[name]/./src/mobile.startup/Panel.js","webpack://mfModules.[name]/./src/mobile.startup/Section.js","webpack://mfModules.[name]/./src/mobile.startup/Skin.js","webpack://mfModules.[name]/./src/mobile.startup/Thumbnail.js","webpack://mfModules.[name]/./src/mobile.startup/Toggler.js","webpack://mfModules.[name]/./src/mobile.startup/cache.js","webpack://mfModules.[name]/./src/mobile.startup/context.js","webpack://mfModules.[name]/./src/mobile.startup/eventBusSingleton.js","webpack://mfModules.[name]/./src/mobile.startup/extendSearchParams.js","webpack://mfModules.[name]/./src/mobile.startup/loadingOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/mobile.startup.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesDrawer.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesGateway.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesHtmlScraperGateway.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesMobileViewGateway.js","webpack://mfModules.[name]/./src/mobile.startup/rlModuleLoader.js","webpack://mfModules.[name]/./src/mobile.startup/search/MobileWebSearchLogger.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchGateway.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/search/schemaMobileWebSearch.js","webpack://mfModules.[name]/./src/mobile.startup/time.js","webpack://mfModules.[name]/./src/mobile.startup/toast.js","webpack://mfModules.[name]/./src/mobile.startup/watchstar/Watchstar.js","webpack://mfModules.[name]/./src/mobile.startup/watchstar/WatchstarGateway.js","webpack://mfModules.[name]/./src/mobile.startup/watchstar/WatchstarPageList.js"],"names":["mfExtend","__webpack_require__","Drawer","util","Button","Anchor","CtaDrawer","options","call","this","redirectParams","params","redirectURL","extend","returnto","mw","config","get","signUpParams","push","arguments","type","apply","defaults","prototype","progressiveButton","progressive","label","msg","actionAnchor","templatePartials","button","template","anchor","preRender","queryParams","returnTo","href","getUrl","signupQueryParams","test","module","exports","Panel","Icon","props","className","collapseIcon","name","additionalClassNames","icon","appendToElement","closeOnScroll","events","click","postRender","self","docReady","appendTo","$el","parent","addClass","on","onShowDrawer","bind","onHideDrawer","stopPropagation","ev","setTimeout","$window","getWindow","one","hide","minHideDelay","removeClass","off","overlayManager","OverlayManager","router","appendToSelector","_checkRoute","entries","stack","hideCurrent","log","warn","_onHideOverlay","back","_attachOverlay","overlay","parents","length","$","append","_show","once","show","_hideOverlay","result","_processMatch","match","factoryResult","attachHideEvent","emit","promise","then","current","scrollTop","window","pageYOffset","Object","keys","reduce","m","id","_matchRoute","path","undefined","preventDefault","scrollTo","pageXOffset","entry","next","route","previous","getNext","factory","slice","hasLoadError","shift","unshift","add","getPath","replaceCurrent","Error","getSingleton","loader","require","HTML","html","time","Section","Thumbnail","View","HEADING_SELECTOR","join","BLACKLISTED_THUMBNAIL_CLASS_SELECTORS","Page","title","displayTitle","url","wikidataDescription","thumbnail","hasOwnProperty","isMissing","isBorderBox","languageUrl","getDisplayTitle","width","isLandscape","height","namespaceNumber","protection","edit","sections","isMainPage","source","escape","inNamespace","namespace","findSectionHeadingByIndex","sectionIndex","filter","eq","findChildInSectionLead","selector","$heading","$nextHeading","$container","$lead","headingSelector","withNestedChildren","$matchingNodes","find","addBack","getLeadSectionElement","children","prevAll","hasClass","nextAll","nextUntil","isWikiText","isWatched","getRevisionId","revId","getTitle","getId","getNamespaceId","args","split","toLowerCase","replace","isTalkPage","ns","_sectionLookup","forEach","sectionData","section","getThumbnails","blacklistSelector","thumbs","_thumbs","not","each","$a","$lazyImage","valid","legacyMatch","attr","RegExp","data","el","filename","decodeURIComponent","getSection","getSections","getRedLinks","newFromJSON","resp","revision","thumb","pageprops","displaytitle","terms","description","revisions","lastModified","getLastModifiedMessage","Date","timestamp","getTime","user","pageid","missing","sectionTemplate","actionParams","cache","transformSections","lastSection","existingSectionLevels","map","s","level","collapseLevel","Math","min","toString","line","subsections","assignToParent","listOfSections","child","parseInt","text","render","PageGateway","api","getPage","endpoint","leadOnly","d","Deferred","dataType","action","page","variant","redirect","prop","noheadings","sectionprop","resolveObj","mv","error","reject","mobileview","lastmodified","lastmodifiedby","Array","isArray","lead","mainpage","historyUrl","lastModifiedTimestamp","languageCount","languagecount","hasVariants","hasvariants","lastModifiedUserName","lastModifiedUserGender","gender","invalidatePage","_getLanguageVariantsFromApiResponse","generalData","query","general","variantPath","variantarticlepath","variants","index","item","autonym","lang","code","getPageLanguages","language","meta","siprop","lllimit","titles","llprop","llinlanguagecode","languages","pages","langlinks","_getAPIResponseFromHTML","tagName","substr","$span","getSectionsFromHTML","browser","PageList","renderPageImages","style","isWideScreen","click .cancel","onCancel","isVisible","toggle","icons","tag","hasReferences","spinner","toHtmlString","when","viewport","getSectionId","hSelector","$parent","Skin","mainMenu","eventBus","referencesGateway","setupImageLoading","lazyLoadReferences","supportsAnimations","supportsTouchEvents","parseHTML","getUnloadedImages","toArray","offset","loadImagesList","imagePlaceholders","_loadImages","images","grep","placeholder","$placeholder","isElementCloseToViewport","is","shouldLoadImage","callbacks","loadImage","$downloadingImage","ownerDocument","replaceWith","resolve","class","src","alt","srcset","$content","$spinner","gateway","wasExpanded","isReferenceSection","prependTo","getReferencesLists","lastId","refListIndex","getReferencesList","refListElements","remove","loadImagesAndSetData","getLicenseMsg","licenseMsg","mfLicense","licensePlural","convertNumber","plural","link","message","parse","siblings","getDescription","getFileName","escapeHash","arrowOptions","Toggler","_enable","prefix","isClosed","getExpandedSections","expandedSections","JSON","storage","saveExpandedSections","set","stringify","expandStoredSections","toggler","$sectionHeading","$headline","cleanObsoleteStoredSections","now","floor","indicator","sectionNumber","toggleClass","rotation","Boolean","aria-pressed","aria-expanded","headline","isSectionOpen","storeSectionToggleState","reveal","$target","prev","top","e","expandSections","$link","collapseSectionsByDefault","checkHash","hash","location","indexOf","i","$indicator","tabindex","aria-haspopup","aria-controls","target","which","enableKeyboardActions","internalRedirect","internalRedirectHash","checkInternalRedirectAndHash","_getExpandedSections","_expandStoredSections","_cleanObsoleteStoredSections","MemoryCache","_cache","NoCache","key","value","getMode","OO","EventEmitter","feature","displayWikibaseDescriptions","scriptPath","concat","origin","Overlay","noHeader","moduleLoader","context","Browser","ReferencesDrawer","ReferencesGateway","ReferencesHtmlScraperGateway","ReferencesMobileViewGateway","loadingOverlay","toast","extendSearchParams","Watchstar","WatchstarPageList","rlModuleLoader","eventBusSingleton","SearchOverlay","schemaMobileWebSearch","MobileWebSearchLogger","SearchGateway","mobileFrontend","define","deprecate","search","subscribeMobileWebSearchSchema","cancelButton","cancel","citation","isSmall","hasText","errorClassName","getClassName","click sup a","windowHeight","css","onShow","onHide","getDocument","showReference","refNumber","drawer","getReference","reference","err","ERROR_NOT_EXIST","showNestedReference","$dest","ERROR_OTHER","getReferenceFromContainer","escapeSelector","referencesMobileViewGateway","cachedReferencesSections","$section","headingId","sectionId","Api","newLoadingOverlay","loadModule","delegateHide","showLoadingOverlay","hideOverlayIfNeeded","using","userSessionToken","searchSessionToken","_newUserSession","generateRandomSessionId","_newSearchSession","searchSessionCreatedAt","onSearchShow","onSearchStart","track","timeOffsetSinceStart","onSearchResults","event","resultSetType","numberOfResults","results","timeToDisplayResults","onSearchResultClick","clickIndex","resultIndex","register","searchOverlay","logger","searchCache","generator","searchNamespace","getApiData","redirects","pilimit","pithumbsize","tiny","_createSearchRegEx","str","_highlightSearchTerm","term","_getPage","pageInfo","displaytext","_processData","sort","a","b","xhr","request","isCached","abort","feedbackLink","gatewayClass","header","content","headerChrome","clearIcon","searchContentIcon","searchTerm","placeholderMsg","noResultsMsg","searchContentNoResultsMsg","feedback","prompt","input input","click .clear","click .search-content","click .overlay-content","click .overlay-content > div","touchstart .results","mousedown .results","click .results a","onInputInput","performSearch","$clear","$input","val","onClickClear","focus","onClickSearchContent","$form","submit","onClickOverlayContent","trigger","onClickOverlayContentDiv","hideKeyboardOnScroll","blur","onClickResult","currentTarget","$result","closest","$results","originalEvent","timer","clearSearch","clearTimeout","$searchContent","$searchFeedback","$resultContainer","searchData","delay","showKeyboard","len","setSelectionRange","lastQuery","_pendingQuery","funnel","resetSearch","empty","Schema","eventLog","platform","platformVersion","trackSubscribe","topic","units","limits","timeAgo","timestampDelta","round","unit","getTimeAgoDelta","isNow","delta","ts","username","seconds","minutes","hours","days","months","years","getRegistrationMessage","isRecent","storageKey","Toast","requestIdleCallback","_showPending","notification","notify","notif","close","showOnPageReload","WatchstarGateway","watchIcon","click a","ctaDrawerOptions","warning","campaign","returntoquery","compile","initialize","_super","_watched","tooltip","unwatchedClass","getGlyphClassName","watchedClass","watchedIcon","isAnon","onLinksClick","onStatusToggleAnon","onStatusToggleUser","checker","postWatched","stopInterval","clearInterval","setInterval","postStatusesByTitle","onStatusToggle","getStatuses","ids","getStatusesByID","getStatusesByTitle","formatversion","inprop","pageids","rsp","_unmarshalGetResponse","watched","unwatch","postWithToken","statuses","wsGateway","$items","queryUnitializedItems","parsePagesFromItems","getPages","renderItems","_","$item","_appendWatchstar","watchstar","repeatEvent"],"mappings":"gLAAA,IACAA,EAAYC,EAAS,oCACrBC,EAAUD,EAAS,kCACnBE,EAAQF,EAAS,gCACjBG,EAAUH,EAAS,kCACnBI,EAAUJ,EAAS,kCAuBnB,SAAAK,EAAAC,GACAL,EAAAM,KAAAC,KAAAF,GA+DA,SAAAG,EAAAC,EAAAC,GACA,OAAAT,EAAAU,QAEAC,SAAAF,GAAAG,GAAAC,OAAAC,IAAA,eACEN,GAQF,SAAAO,IAEA,SADAC,KAAAX,KAAAY,WAA2BC,KAAA,WAC3BlB,EAAAU,OAAAS,MAAAnB,EAAAiB,WA1EApB,EAAAM,EAAAJ,GAUAqB,SAAApB,EAAAU,UAA0BX,EAAAsB,UAAAD,UAC1BE,kBAAA,IAAArB,GACAsB,aAAA,EACAC,MAAAZ,GAAAa,IAAA,gDACGrB,QACHsB,aAAA,IAAAxB,GACAqB,aAAA,EACAC,MAAAZ,GAAAa,IAAA,iDACGrB,UAMHuB,iBAAA3B,EAAAU,UAAkCX,EAAAsB,UAAAM,kBAClCC,OAAA3B,EAAAoB,UAAAQ,SACAC,OAAA5B,EAAAmB,UAAAQ,WAMAA,SAAAjB,GAAAiB,SAAAf,IAAA,oCAMAiB,UAAA,WACA,IAAAvB,EAAAD,EAAAD,KAAAF,QAAA4B,YAAA1B,KAAAF,QAAA6B,UAIA3B,KAAAF,QAAAkB,kBAAAY,OACA5B,KAAAF,QAAAkB,kBAAAY,KAAAtB,GAAAZ,KAAAmC,OAAA,oBAAA3B,IAEAF,KAAAF,QAAAsB,aAAAQ,OACA5B,KAAAF,QAAAsB,aAAAQ,KAAAtB,GAAAZ,KAAAmC,OACA,oBAAApB,EAAAP,EAAAF,KAAAF,QAAAgC,wBA6BAjC,EAAAkB,UAAAgB,MACA9B,iBACAQ,gBAGAuB,EAAAC,QAAApC,oDClHA,IACAN,EAAYC,EAAS,oCACrB0C,EAAS1C,EAAS,iCAClBE,EAAQF,EAAS,gCACjB2C,EAAQ3C,EAAS,gCAQjB,SAAAC,EAAA2C,GACAF,EAAAnC,KAAAC,KACAN,EAAAU,QACAiC,UAAA,yBACGD,IAIH7C,EAAAE,EAAAyC,GAQApB,SAAApB,EAAAU,UAA0B8B,EAAAnB,UAAAD,UAE1BwB,aAAA,IAAAH,GACAI,KAAA,QACAC,qBAAA,WACG1C,UAMHuB,iBAAA3B,EAAAU,UAAkC8B,EAAAnB,UAAAM,kBAClCoB,KAAAN,EAAApB,UAAAQ,WAQAmB,gBAAA,OAOAC,eAAA,EACAC,OAAAlD,EAAAU,UAAwB8B,EAAAnB,UAAA6B,QACxBC,MAAA,oBAQAC,WAAA,WACA,IAAAC,EAAA/C,KAGAN,EAAAsD,SAAA,WACAD,EAAAE,SAAAF,EAAAL,iBACAK,EAAAG,IAAAC,SAAAC,SAAA,gBAEApD,KAAAqD,GAAA,OAAArD,KAAAsD,aAAAC,KAAAvD,OACAA,KAAAqD,GAAA,OAAArD,KAAAwD,aAAAD,KAAAvD,QAUAyD,gBAAA,SAAAC,GACAA,EAAAD,mBAQAH,aAAA,WACA,IAAAP,EAAA/C,KAEAA,KAAAkD,IAAAC,SAAAC,SAAA,kBAEAO,WAAA,WACA,IAAAC,EAAAlE,EAAAmE,YACAD,EAAAE,IAAA,eAAAf,EAAAgB,KAAAR,KAAAR,IACAA,EAAAJ,eACAiB,EAAAE,IAAA,gBAAAf,EAAAgB,KAAAR,KAAAR,KAEGA,EAAAiB,eAQHR,aAAA,WACAxD,KAAAkD,IAAAC,SAAAc,YAAA,kBAGAvE,EAAAmE,YAAAK,IAAA,cAIAlC,EAAAC,QAAAxC,4DCvHA,IACAC,EAAQF,EAAS,gCAEjB2E,EAAA,KAaA,SAAAC,EAAAC,EAAAC,GACAD,EAAAhB,GAAA,QAAArD,KAAAuE,YAAAhB,KAAAvD,OACAA,KAAAqE,SAGArE,KAAAwE,WAEAxE,KAAAyE,SACAzE,KAAA0E,aAAA,EAEAJ,GACAhE,GAAAqE,IAAAC,KAAA,wEAEA5E,KAAAsE,oBAAA,OA3BY9E,EAAS,mCA8BrBD,CAAA6E,GASAS,eAAA,WACA7E,KAAA0E,aAAA,EAEA1E,KAAAqE,OAAAS,QASAC,eAAA,SAAAC,GACAA,EAAA9B,IAAA+B,UAAAC,QACAC,EAAAnF,KAAAsE,kBAAAc,OAAAJ,EAAA9B,MAUAmC,MAAA,SAAAL,GAGAA,EAAAM,KAAA,WAAAtF,KAAA6E,eAAAtB,KAAAvD,OAEAA,KAAA+E,eAAAC,GACAA,EAAAO,QAWAC,aAAA,SAAAR,GACA,IAAAS,EAaA,OATAT,EAAAd,IAAA,aAEAuB,EAAAT,EAAAjB,KAAA/D,KAAAyE,MAAAS,OAAA,KAIAF,EAAAM,KAAA,WAAAtF,KAAA6E,eAAAtB,KAAAvD,OAGAyF,GAUAC,cAAA,SAAAC,GACA,IAAAC,EACA7C,EAAA/C,KAMA,SAAA6F,EAAAb,GACAA,EAAA3B,GAAA,kBACA2B,EAAAc,KAAA,cAIAH,IACAA,EAAAX,QAEAjC,EAAAsC,MAAAM,EAAAX,SAMA,mBAFAY,EAAAD,EAAAC,eAEAG,QACAH,EAAAI,KAAA,SAAAhB,GACAW,EAAAX,UACAa,EAAAb,GACAjC,EAAAsC,MAAAL,MAGAW,EAAAX,QAAAY,EACAC,EAAAF,EAAAX,SACAjC,EAAAsC,MAAAO,MAaArB,YAAA,SAAAb,GACA,IAEAiC,EADAM,EAAAjG,KAAAyE,MAAA,GASAwB,IACAjG,KAAAkG,UAAAC,OAAAC,aAGAT,EAAAU,OAAAC,KAAAtG,KAAAwE,SAAA+B,OAAA,SAAAC,EAAAC,GACA,OAAAD,GAAAxG,KAAA0G,YAAAhD,EAAAiD,KAAA3G,KAAAwE,QAAAiC,KACGlD,KAAAvD,MAAA,MAIHiG,QACAW,IAAAX,EAAAjB,SACAhF,KAAA0E,cACA1E,KAAAwF,aAAAS,EAAAjB,SAGAtB,EAAAmD,iBACGlB,IAEH3F,KAAAyE,SAEA0B,OAAAW,SAAAX,OAAAY,YAAA/G,KAAAkG,YAGAlG,KAAA0E,aAAA,EACA1E,KAAA0F,cAAAC,IAaAe,YAAA,SAAAC,EAAAK,GACA,IACAC,EACAtB,EAAAgB,EAAAhB,MAAAqB,EAAAE,OACAC,EAAAnH,KAAAyE,MAAA,GACA1B,EAAA/C,KAQA,SAAAoH,IACA,OACAT,OACAf,cAAAoB,EAAAK,QAAAxG,MAAAkC,EAAA4C,EAAA2B,MAAA,KAIA,OAAA3B,EAGAwB,KAAAR,SACAQ,EAAAnC,SAAAmC,EAAAnC,QAAAuC,cACAxE,EAAA0B,MAAA+C,QAGAzE,EAAA0B,MAAA,GAAA2C,IACArE,EAAA0B,MAAA,KAGA1B,EAAA0B,MAAA+C,QACAL,IAEAF,EAAAG,IACApH,KAAAyE,MAAA,IAAAwC,EAAAN,OAAA3G,KAAAyE,MAAA,GAAAkC,KAIA5D,EAAA0B,MAAA,GAAAwC,EAEAlE,EAAA0B,MAAAgD,QAAAR,GAEAA,GAIA,MA2BAS,IAAA,SAAAR,EAAAG,GACA,IAAAtE,EAAA/C,KACAgH,GACAE,QACAG,WAGArH,KAAAwE,QAAA0C,GAAAF,EAGAtH,EAAAsD,SAAA,WACAD,EAAA2C,cAAA3C,EAAA2D,YAAA3D,EAAAsB,OAAAsD,UAAAX,OAaAY,eAAA,SAAA5C,GACA,OAAAhF,KAAAyE,MAAAS,OACA,UAAA2C,MAAA,0EAEA7H,KAAAwF,aAAAxF,KAAAyE,MAAA,GAAAO,SACAhF,KAAAyE,MAAA,GAAAO,UACAhF,KAAAqF,MAAAL,MASAZ,EAAA0D,aAAA,WAIA,OAHA3D,IACAA,EAAA,IAAAC,EAAA9D,GAAAyH,OAAAC,QAAA,6BAEA7D,GAGAnC,EAAAC,QAAAmC,kDClUA,IACA6D,EAAA3H,GAAA4H,KACA3I,EAAYC,EAAS,oCACrB2I,EAAQ3I,EAAS,gCACjBE,EAAQF,EAAS,gCACjB4I,EAAW5I,EAAS,mCACpB6I,EAAa7I,EAAS,qCACtB8I,EAAQ9I,EAAS,gCACjB+I,EAAAjI,GAAAC,OAAAC,IAAA,0DAAAgI,KAAA,KACAC,GAAA,uBAWA,SAAAC,EAAA5I,GAEAJ,EAAAU,OAAAJ,MACAF,UACA6I,MAAA7I,EAAA6I,MACAC,aAAA9I,EAAA8I,aACAC,IAAA/I,EAAA+I,KAAAvI,GAAAZ,KAAAmC,OAAA/B,EAAA6I,OACAlC,GAAA3G,EAAA2G,GACAqC,oBAAAhJ,EAAAgJ,oBACAC,YAAA1C,OAAAtF,UAAAiI,eAAAjJ,KAAAD,EAAA,cACAA,EAAAiJ,UACAE,eAAArC,IAAA9G,EAAAmJ,UACAnJ,EAAAmJ,UAAA,IAAAnJ,EAAA2G,KAGAzG,KAAAF,QAAAoJ,aAAA,EACAlJ,KAAAF,QAAAqJ,YAAA7I,GAAAZ,KAAAmC,OAAA,2BAAA7B,KAAA2I,OAEAL,EAAAvI,KAAAC,UAAAF,SAGAE,KAAA4I,eACA5I,KAAA4I,aAAA5I,KAAAoJ,mBAGApJ,KAAA+I,WAAA/I,KAAA+I,UAAAM,QACArJ,KAAA+I,UAAAO,YAAAtJ,KAAA+I,UAAAM,MAAArJ,KAAA+I,UAAAQ,QAIAhK,EAAAmJ,EAAAJ,GA0BAxH,UACA2F,GAAA,EACAkC,MAAA,GACAC,aAAA,GACAY,gBAAA,EACAC,YACAC,MAAA,MAEAC,YACAV,WAAA,EACAW,YAAA,EACAf,SAAAjC,EACAmC,WACAO,iBAAA1C,EACAiD,YAAAjD,EACAyC,WAAAzC,EACA2C,YAAA3C,IASAwC,gBAAA,WACA,OAAApJ,KAAAF,QAAA8I,cAAAX,EAAA6B,OAAA9J,KAAAF,QAAA6I,QASAoB,YAAA,SAAAC,GACA,OAAAhK,KAAAF,QAAA0J,kBAAAlJ,GAAAC,OAAAC,IAAA,kBAAAwJ,IAeAC,0BAAA,SAAAC,GACA,OAAAA,EAAA,EAGAlK,KAAAmF,IAEAnF,KAAAmF,EAAAoD,GAIA4B,OAAA,qDAAAC,GAAAF,EAAA,IAqBAG,uBAAA,SAAAH,EAAAI,GACA,IAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAApC,EAEA,SAAAqC,EAAAC,GACA,OAAAA,EAAAC,KAAAR,GAAAS,UAGA,WAAAb,GAEAQ,EAAA1K,KAAAgL,0BACAN,EAAAxF,OACA0F,EAAAF,EAAAO,SAAAX,KAEAC,EAAAvK,KAAAiK,0BAAA,IACA/E,OAAA0F,EAAAL,EAAAW,QAAAZ,IAEAtK,KAAAmF,EAAAmF,IASAC,EAAAvK,KAAAiK,0BAAAC,IAKAiB,SAAA,oBAIAX,GAFAC,EAAAF,EAAAtD,QAEA6D,KAAAH,GAAAP,GAAA,IACAlF,OAEA0F,EAAAJ,EAAAU,QAAAZ,IAGAM,EAAAH,EAAAQ,SAAAX,KAIAE,EAAAD,EAAAH,GAAA,GAAAgB,QAAAT,GAAAP,GAAA,GACAG,EAAAc,UAAAb,EAAAF,KAUAU,sBAAA,WAYA,OAAAhL,KAAAmF,EAAA,iBAAAD,OACAlF,KAAAmF,EAAA,iBAGA,MASAmG,WAAA,WACA,mBAAAhL,GAAAC,OAAAC,IAAA,uBASAoJ,WAAA,WACA,OAAA5J,KAAAF,QAAA8J,YAQA2B,UAAA,WACA,OAAAvL,KAAAF,QAAAyL,WASAC,cAAA,WACA,OAAAxL,KAAAF,QAAA2L,OASAC,SAAA,WACA,OAAA1L,KAAAF,QAAA6I,OASAgD,MAAA,WACA,OAAA3L,KAAAF,QAAA2G,IASAmF,eAAA,WACA,IACAC,EAAA7L,KAAAF,QAAA6I,MAAAmD,MAAA,KAOA,OALAD,EAAA,IACAvL,GAAAC,OAAAC,IAAA,kBAAAqL,EAAA,GAAAE,cAAAC,QAAA,WAEA,GAWAC,WAAA,WACA,IAAAC,EAAAlM,KAAA4L,iBAEA,OAAAM,EAAA,GAAAA,EAAA,MAQAzK,UAAA,WACAzB,KAAA2J,YACA3J,KAAAmM,kBACAnM,KAAA2I,MAAA3I,KAAAF,QAAA6I,MAEA3I,KAAAF,QAAA6J,SAAAyC,QAAA,SAAAC,GACA,IAAAC,EAAA,IAAAlE,EAAAiE,GACArM,KAAA2J,SAAAjJ,KAAA4L,GACAtM,KAAAmM,eAAAG,EAAA7F,IAAA6F,GACG/I,KAAAvD,QAgBHuM,cAAA,WACA,IACArJ,EAAAlD,KAAAkD,IACAsJ,EAAA,IAAA/D,EAAAD,KAAA,MACAiE,KAoCA,OAlCAzM,KAAA0M,UACAxJ,EAAA4H,KAAA,yBACA6B,IAAAH,GAEAI,KAAA,WACA,IAAAC,EAAA3J,EAAA4H,KAAA9K,MACA8M,EAAAD,EAAA/B,KAAA,2BAEAiC,EAAA,IAAAF,EAAA5H,QAAAuH,GAAAtH,QACA,IAAA2H,EAAA/B,KAAA0B,GAAAtH,OACA8H,EAAAH,EAAAI,KAAA,QAAAtH,MAAA,kBACAA,EAAAkH,EAAAI,KAAA,QAAAtH,MAAA,UAGAmH,EAAA5H,QAAA6H,IAGAA,GAAA,IAAAG,OAAA,OAAAzE,EAAAD,KAAA,aACAzG,KAAA+K,EAAAK,KAAA,WAGAJ,IAAAC,GAAArH,IACA8G,EAAA/L,KACA,IAAA2H,GACA+E,GAAAP,EACAQ,SAAAC,mBACAN,IAAA,GAAArH,EAAA,SAMA3F,KAAA0M,QAAAD,GAEAzM,KAAA0M,SAaAa,WAAA,SAAA9G,GACA,OAAAzG,KAAAmM,eAAA1F,IAUA+G,YAAA,WACA,OAAAxN,KAAA2J,UASA8D,YAAA,WACA,OAAAzN,KAAAmF,EAAA,WAWAuD,EAAAgF,YAAA,SAAAC,GACA,IAAAC,EAAAhF,EACAiF,EAAAF,EAAA5E,UACA+E,EAAAH,EAAAG,YACAC,aAAA9F,EAAA6B,OAAA6D,EAAAhF,QAEAqF,EAAAL,EAAAK,MA2BA,OAzBAF,GAAAE,KAMApF,EAAAoF,KAAA9M,MACA+G,EAAA6B,OAAAkE,EAAA9M,MAAA,IAAA4M,EAAAC,cAGAJ,EAAA7E,oBAAA6E,EAAAM,kBAAArH,EAEAiH,IACAF,EAAA5E,UAAAO,YAAAuE,EAAAxE,MAAAwE,EAAAtE,QAIAoE,EAAAO,WAAAP,EAAAO,UAAA,KACAN,EAAAD,EAAAO,UAAA,GACAP,EAAAQ,aAAAhG,EAAAiG,uBACA,IAAAC,KAAAT,EAAAU,WAAAC,UAAA,IACAX,EAAAY,OAIA,IAAA9F,EACAhJ,EAAAU,OAAAuN,GACAlH,GAAAkH,EAAAc,OACAxF,YAAA0E,EAAAe,QACA7F,IAAAvI,GAAAZ,KAAAmC,OAAA8L,EAAAhF,OACAC,mBAUAF,EAAAH,mBAEAvG,EAAAC,QAAAyG,yDCxeA,IAAAiG,EAAArO,GAAAiB,SAAAf,IAAA,kCACAd,EAAQF,EAAS,gCACjBoP,EAAgBpP,EAAS,wCACzBqP,KAiCA,SAAAC,EAAAnF,GACA,IAQAoF,EAJAC,EAHArF,EAAAsF,IAAA,SAAAC,GACA,OAAAA,EAAAC,QAEAhF,OAAA,SAAAgF,GACA,QAAAA,IAEAC,EAAAC,KAAAC,IAAAzO,MAAAb,KAAAgP,GAAAO,WAEA9J,KAmCA,OA/BAkE,EAAAyC,QAAA,SAAAE,QACA1F,IAAA0F,EAAAkD,OACAlD,EAAAkD,KAAAlD,EAAAkD,KAAAxD,QAAA,sBAEAM,EAAAmD,gBAGAV,IAEAzC,EAAA6C,OACA7C,EAAA6C,QAAAC,GAIAL,EAAAU,YAAAvK,QACA6J,EAAAU,YAAA,GAAAN,MAAA7C,EAAA6C,OAIAJ,EAAAI,OACAJ,EAAAI,OAAA7C,EAAA6C,OAGA1J,EAAA/E,KAAA4L,GACAyC,EAAAzC,KA7DA,SAAAoD,EAAAC,EAAAC,GACA,IAAAtD,EACA,IAAAqD,EAAAzK,OACAyK,EAAAjP,KAAAkP,IAGAtD,EAAAqD,IAAAzK,OAAA,GAEA2K,SAAAvD,EAAA6C,MAAA,MAAAU,SAAAD,EAAAT,MAAA,IACAQ,EAAAjP,KAAAkP,GAGAF,EAAApD,EAAAmD,YAAAG,IAmDAF,CAAAX,EAAAU,YAAAnD,GACAyC,EAAAe,MAAAnB,EAAAoB,OAAAzD,MAIA7G,EAQA,SAAAuK,EAAAC,GACAjQ,KAAAiQ,MAGAD,EAAAjP,WAUAmP,QAAA,SAAAvH,EAAAwH,EAAAC,GACA,IAAA9B,EACA+B,EAAA3Q,EAAA4Q,WACApQ,EAAAiQ,GACAtH,IAAAsH,EACAI,SAAA,YAEA9G,GACAC,MAAA,MA6EA,OA1EAhK,EAAAU,OAAAF,EACA0O,GACA4B,OAAA,aACAC,KAAA9H,EACA+H,QAAApQ,GAAAC,OAAAC,IAAA,yBACAmQ,SAAA,MACAC,KAAA,0GACAC,WAAA,MACAC,YAAA,oBACAnH,SAAAyG,EAAA,WAIAvB,EAAAlG,KACAkG,EAAAlG,GAAA3I,KAAAiQ,IAAAzP,IAAAN,GAAA8F,KAAA,SAAA2H,GACA,IAAAhE,EAAAwE,EAAA4C,EAAAC,EAEA,OAAArD,EAAAsD,MACAZ,EAAAa,OAAAvD,EAAAsD,OACKtD,EAAAwD,WAAAxH,UAILA,EAAAmF,GADAkC,EAAArD,EAAAwD,YACAxH,UAIA2E,EAAA,IAAAD,KAAA2C,EAAAI,cAAA7C,UAAA,IACAJ,EAAA6C,EAAAK,eAWA5H,EAAA6H,MAAAC,QAAAP,EAAAvH,YACAA,EACA/J,EAAAU,OAAAqJ,EAAAuH,EAAAvH,YAEAsH,GACApI,QACAlC,GAAAuK,EAAAvK,GACAgF,MAAAuF,EAAAvF,MACAhC,aACA+H,KAAA7H,EAAA,GAAAmG,KACAnG,WAAArC,MAAA,GACAsC,gBAAAhD,IAAAoK,EAAAS,SACAC,WAAApR,GAAAZ,KAAAmC,OAAA8G,GACA6H,OAAA,YAEAmB,sBAAArD,EACAsD,cAAAZ,EAAAa,cACAC,iBAAAlL,IAAAoK,EAAAe,YACAnJ,aAAAoI,EAAAjD,cAGAI,GACAzO,EAAAU,OAAA2Q,GACAiB,qBAAA7D,EAAA5L,KACA0P,uBAAA9D,EAAA+D,SAIAnB,GA/CAV,EAAAa,OAAA,gBAiDI,SAAA/P,GACJ,OAAAkP,EAAAa,OAAA/P,MAIA0N,EAAAlG,IASAwJ,eAAA,SAAAxJ,UACAkG,EAAAlG,IAYAyJ,oCAAA,SAAAzJ,EAAAwE,GACA,IAAAkF,EAAAlF,EAAAmF,MAAAC,QACAC,EAAAH,EAAAI,mBACAC,KAEA,QAAAL,EAAAK,WAKArM,OAAAC,KAAA+L,EAAAK,UAAAtG,QAAA,SAAAuG,GACA,IAAAC,EAAAP,EAAAK,SAAAC,GACAjC,GACAmC,QAAAD,EAAArQ,KACAuQ,KAAAF,EAAAG,MAIArC,EAAA7H,IADA2J,EACAA,EACAxG,QAAA,KAAArD,GACAqD,QAAA,KAAA4G,EAAAG,MAEAzS,GAAAZ,KAAAmC,OAAA8G,GACA+H,QAAAkC,EAAAG,OAGAL,EAAAhS,KAAAgQ,KAGAgC,IAaAM,iBAAA,SAAArK,EAAAsK,GACA,IAAAlQ,EAAA/C,KACA6L,EAAA+C,GACAsE,KAAA,WACAC,OAAA,UACAvC,KAAA,YACAwC,QAAA,MACAC,OAAA1K,IASA,OANAsK,GACApH,EAAAyH,OAAA,uBACAzH,EAAA0H,iBAAAN,GAEApH,EAAAyH,OAAA,cAEAtT,KAAAiQ,IAAAzP,IAAAqL,GAAA7F,KAAA,SAAA2H,GACA,OACA6F,UAAA7F,EAAA2E,MAAAmB,MAAA,GAAAC,cACAhB,SAAA3P,EAAAqP,oCAAAzJ,EAAAgF,KAEG,WACH,OAAAjO,EAAA4Q,WAAAY,YAcAyC,wBAAA,SAAAzQ,GAEA,IACAyG,KAeA,OAhBAzG,EAAA4H,KAAA,qBAGA8B,KAAA,WACA,IAAAuC,EAAAnP,KAAA4T,QAAAC,OAAA,GACAC,EAAA5Q,EAAA4H,KAAA9K,MAAA8K,KAAA,gBAEAgJ,EAAA5O,QACAyE,EAAAjJ,MACAyO,QACAK,KAAAsE,EAAA5L,OACA1G,OAAAsS,EAAA7G,KAAA,UACA6C,KAAA,OAIAnG,GAUAoK,oBAAA,SAAA7Q,GACA,OAAA4L,EAAA9O,KAAA2T,wBAAAzQ,MAIAlB,EAAAC,QAAA+N,sDCjUA,IACAzQ,EAAYC,EAAS,oCACrB8I,EAAQ9I,EAAS,gCACjBwU,EAAWxU,EAAS,mCAAWsI,eAO/B,SAAAmM,IACA3L,EAAAzH,MAAAb,KAAAW,WAGApB,EAAA0U,EAAA3L,GAyBAxH,UACA2S,UAOAS,iBAAA,WACA,IAAAnR,EAAA/C,KAEA2D,WAAA,WACAZ,EAAAoC,EAAA,eAAAyH,KAAA,WACA,IAAAuH,EAAApR,EAAAoC,EAAAnF,MAAAmN,KAAA,SACApK,EAAAoC,EAAAnF,MAAAiN,KAAA,QAAAkH,MAIGH,EAAAI,eAAA,QAOHtR,WAAA,WACA9C,KAAAkU,oBAEA3S,SAAAjB,GAAAiB,SAAAf,IAAA,mCAKAa,kBAIAuR,KAAAtS,GAAAiB,SAAAf,IAAA,0CAIAwB,EAAAC,QAAAgS,mDChFA,IACA1U,EAAYC,EAAS,oCACrBE,EAAQF,EAAS,gCACjB8I,EAAQ9I,EAAS,gCASjB,SAAA0C,EAAAhC,GACA,IAGAJ,EAAAJ,EAAAU,WAFAiC,UAAA,SAE2BnC,GAE3BoI,EAAAvI,KAAAC,KAAAF,GAGAP,EAAA2C,EAAAoG,GAEAtE,aAAA,GACApB,QACAyR,gBAAA,YASAC,SAAA,SAAA5Q,GACAA,EAAAmD,iBACA7G,KAAA+D,QASAwB,KAAA,WACA,IAAAxC,EAAA/C,KAEA+C,EAAAwR,aAMA5Q,WAAA,WACAZ,EAAAG,IAAAE,SAAA,oBACAL,EAAA+C,KAAA,SACI/C,EAAAiB,eASJD,KAAA,WACA,IAAAhB,EAAA/C,KAGA2D,WAAA,WACAZ,EAAAG,IAAAe,YAAA,WACAlB,EAAA+C,KAAA,SACG/C,EAAAiB,eASHuQ,UAAA,WACA,OAAAvU,KAAAkD,IAAAiI,SAAA,YAQAqJ,OAAA,WACAxU,KAAAuU,YACAvU,KAAA+D,OAEA/D,KAAAuF,UAKAvD,EAAAC,QAAAC,qDCpGA,IACA3C,EAAYC,EAAS,oCACrBiV,EAASjV,EAAS,iCAClB8I,EAAQ9I,EAAS,gCASjB,SAAA4I,EAAAtI,GACA,IAAAiD,EAAA/C,KACAF,EAAA4U,IAAA,IAAA5U,EAAAqP,MACAnP,KAAAwP,KAAA1P,EAAA0P,KACAxP,KAAA8P,KAAAhQ,EAAAgQ,KACA9P,KAAA2U,cAAA7U,EAAA6U,gBAAA,EACA3U,KAAAyG,GAAA3G,EAAA2G,IAAA,KACAzG,KAAAwB,OAAA1B,EAAA0B,OACAxB,KAAAyP,gBACA3P,EAAA2P,iBAAArD,QAAA,SAAAE,GACAvJ,EAAA0M,YAAA/O,KAAA,IAAA0H,EAAAkE,MAEAhE,EAAAvI,KAAAC,KAAAF,GAGAP,EAAA6I,EAAAE,GACA/G,SAAAjB,GAAAiB,SAAAf,IAAA,kCASAM,UACA0O,UAAA5I,EACAkJ,KAAA,GACA8E,QAAAH,EAAAG,UAAAC,kBAIA7S,EAAAC,QAAAmG,kDC5CA,IACA4L,EAAWxU,EAAS,mCAAWsI,eAC/BQ,EAAQ9I,EAAS,gCACjBE,EAAQF,EAAS,gCACjBkJ,EAAQlJ,EAAS,gCACjB8Q,EAAA5Q,EAAA4Q,SACAwE,EAAApV,EAAAoV,KACAL,EAASjV,EAAS,iCAClBuV,EAAAzU,GAAAyU,SACAH,EAAAH,EAAAG,UASA,SAAAI,EAAA9R,GACA,IAAAuD,EACAwO,EAAAvM,EAAAH,iBACA2M,EAAAhS,EAAAC,SAGAoH,EAAArH,EAAAgI,QAAA+J,GAAA7K,GAAA,GAEA,OAAAG,EAAArF,SACAuB,EAAA8D,EAAAO,KAAA,gBAAAmC,KAAA,OAEAxG,EAGAyO,EAAAhQ,OAGA8P,EAAAE,GAEA,KAmBA,SAAAC,EAAAjV,GACA,IAAA6C,EAAA/C,KACAF,EAAAJ,EAAAU,UAA2BF,GAE3BF,KAAAyQ,KAAA3Q,EAAA2Q,KACAzQ,KAAAuC,KAAAzC,EAAAyC,KACAzC,EAAAsV,WACApV,KAAAoV,SAAAtV,EAAAsV,SACA9U,GAAAqE,IAAAC,KAAA,yCAEA5E,KAAAqV,SAAAvV,EAAAuV,SACAvV,EAAAoJ,aAAA,EACAZ,EAAAvI,KAAAC,KAAAF,GACAE,KAAAsV,kBAAAxV,EAAAwV,kBAGAhV,GAAAC,OAAAC,IAAA,uBAEAd,EAAAsD,SAAA,WACAD,EAAAwS,sBAIAjV,GAAAC,OAAAC,IAAA,2BACAR,KAAAqV,SAAAhS,GAAA,yBAAArD,KAAAwV,mBAAAjS,KAAAvD,OAtEYR,EAAS,mCA0ErBD,CAAA4V,EAAA7M,GASAxH,UACA2P,UAAA7J,GAQAhE,UAOAE,WAAA,WACA,IAAAI,EAAAlD,KAAAkD,IACA8Q,EAAAyB,sBACAvS,EAAAE,SAAA,cAEA4Q,EAAA0B,uBACAxS,EAAAE,SAAA,gBAEA1D,EAAAiW,UAAA,oDACA1S,SAAAC,EAAA4H,KAAA,uBAKA9K,KAAA8F,KAAA,WAMA9F,KAAAmF,EAAA,sBAAA9B,GAAA,QAAArD,KAAA8F,KAAAvC,KAAAvD,KAAA,WAUA4V,kBAAA,SAAAnL,GAEA,OADAA,KAAAzK,KAAAmF,EAAA,aACA2F,KAAA,2BAAA+K,WAYAN,kBAAA,SAAA9K,GACA,IAAA1H,EAAA/C,KACA8V,EAAA,IAAApW,EAAAmE,YAAA0F,SACAwM,EAAA/V,KAAA+V,eAAAxS,KAAAvD,MACAgW,EAAAhW,KAAA4V,kBAAAnL,GAoBA,SAAAwL,IACA,IAAAC,KAqBA,OAnBAF,EAAAtW,EAAAyW,KAAAH,EAAA,SAAAI,GACA,IAAAC,EAAAtT,EAAAoC,EAAAiR,GAEA,OAAAC,EAAAnR,SAlBA,SAAAmR,GACA,OAAAtB,EAAAuB,yBAAAD,EAAA,GAAAP,KAIAO,EAAAE,GAAA,iBAAAF,EAAA9M,UAaAiN,CAAAH,KACAH,EAAAxV,KAAA0V,IACA,MAMAlR,SACAnC,EAAAsS,SAAAnR,IAAA,mBAAA+R,GACAlT,EAAAsS,SAAAnR,IAAA,mBAAA+R,GACAlT,EAAAsS,SAAAnR,IAAA,kBAAA+R,GACAlT,EAAAmB,IAAA,UAAA+R,IAIAF,EAAAG,GAQA,OALAlW,KAAAqV,SAAAhS,GAAA,mBAAA4S,GACAjW,KAAAqV,SAAAhS,GAAA,mBAAA4S,GACAjW,KAAAqV,SAAAhS,GAAA,kBAAA4S,GACAjW,KAAAqD,GAAA,UAAA4S,GAEAA,KAUAF,eAAA,SAAAG,GACA,IAAAO,EACAtR,EAAAnF,KAAAmF,EAAA5B,KAAAvD,MACA0W,EAAA1W,KAAA0W,UAAAnT,KAAAvD,MAOA,OAJAyW,GADAP,KAAAlW,KAAA4V,qBACA3G,IAAA,SAAAmH,GACA,OAAAM,EAAAvR,EAAAiR,MAGAtB,EAAAjU,MAAA,KAAA4V,IASAC,UAAA,SAAAL,GACA,IACAhG,EAAAC,IACAjH,EAAAgN,EAAApJ,KAAA,cACA1D,EAAA8M,EAAApJ,KAAA,eAEA0J,EAAAjX,EAAAiW,UAAA,QAAA3V,KAAAkD,IAAA,GAAA0T,eAwBA,OArBAD,EAAAtT,GAAA,kBAGAsT,EAAAvT,SAAA,qBACAiT,EAAAQ,YAAAF,GACAtG,EAAAyG,YAEAH,EAAAtT,GAAA,mBACAgN,EAAAa,WAIAyF,EAAA1J,MACA8J,MAAAV,EAAApJ,KAAA,cACA5D,QACAE,SACAyN,IAAAX,EAAApJ,KAAA,YACAgK,IAAAZ,EAAApJ,KAAA,YACAkH,MAAAkC,EAAApJ,KAAA,SACAiK,OAAAb,EAAApJ,KAAA,iBAEAoD,GAkBAmF,mBAAA,SAAArI,GACA,IAAAgK,EAAAC,EACAC,EAAArX,KAAAsV,kBACAM,EAAA5V,KAAA4V,kBAAArS,KAAAvD,MACA+V,EAAA/V,KAAA+V,eAAAxS,KAAAvD,MACA+C,EAAA/C,KAMA,IACAmN,EAAAmK,aACAnK,EAAAoK,mBAcA,OATAJ,EAAAhK,EAAA5C,SAAAtD,QASAkG,KAAA,yBAwDAmD,IAAAY,SAAAnL,WAvDAoR,EAAAlM,WAAA7H,SAAA,UACAgU,EAAAxC,EAAA1R,IAAAsU,UAAAL,GAGAE,EAAAI,mBAAAtK,EAAAsD,MACAzK,KAAA,WACA,IAAA0R,EAEAP,EAAArM,KAAA,mCAAA8B,KAAA,WACA,IAAA+K,EAAA,EACAtB,EAAAc,EAAArM,KAAA9K,MAEAyG,EAAAuO,EAAAqB,GAEAqB,IAAAjR,GAEAkR,EAAA,EACAD,EAAAjR,GAGAkR,IAGAlR,GACA4Q,EAAAO,kBAAAzK,EAAAsD,KAAAhK,GACAT,KAAA,SAAA6R,GAIAA,KAAAF,IACAtB,EAAAQ,YACAgB,EAAAF,QAOAP,EAAAU,SACAX,EAAAlM,WAAAhH,YAAA,UAKAlB,EAAA+C,KAAA,oBAAA/C,EAAA0N,MAEAsH,KACK,WACLX,EAAAU,SAEAX,EAAAlM,WAAAhH,YAAA,UAEA8T,OA5DA,SAAAA,IAEAhC,EAAAH,EAAAuB,IAEAA,EAAAhK,KAAA,6BAsEA6K,cAAA,WACA,IAAAC,EACAC,EAAA5X,GAAAC,OAAAC,IAAA,eACA2X,EAAA7X,GAAA2S,SAAAmF,cAAAF,EAAAG,QAqBA,OAnBAH,EAAAI,OAEAL,EADAjY,KAAAmF,EAAA,4BAAAD,OAAA,EACA5E,GAAAa,IACA,8CACAb,GAAAiY,QACA,oCACAvY,KAAAmF,EAAA,8BAAA8H,KAAA,SACAuL,QACAN,EAAAI,KACAH,GAGA7X,GAAAa,IACA,mCACA+W,EAAAI,KACAH,IAIAF,KAIA9C,EAAAH,eAEAhT,EAAAC,QAAAkT,uDCxZA,IACA5V,EAAYC,EAAS,oCACrBE,EAAQF,EAAS,gCACjB8I,EAAQ9I,EAAS,gCASjB,SAAA6I,EAAAvI,GACAwI,EAAAvI,KAAAC,KACAN,EAAAU,QAAgB8I,aAAA,GAAqBpJ,IAIrCP,EAAA8I,EAAAC,GASAxH,UACAuM,cAAAzG,GAOA9D,WAAA,WACA9C,KAAAF,QAAAmO,YAAAjO,KAAAkD,IAAAuV,SAAA,iBAAA3I,QAQA4I,eAAA,WACA,OAAA1Y,KAAAF,QAAAmO,aAQA0K,YAAA,WACA,OAAA3Y,KAAAF,QAAAuN,YAIArL,EAAAC,QAAAoG,qDC1DA,IAAA2L,EAAcxU,EAAS,mCAAWsI,eAClCpI,EAAQF,EAAS,gCACjBoZ,EAAAlZ,EAAAkZ,WACAC,GACAtW,KAAA,QACAC,qBAAA,aAEAL,EAAQ3C,EAAS,gCAejB,SAAAsZ,EAAAhZ,GACAE,KAAAqV,SAAAvV,EAAAuV,SACArV,KAAA+Y,QAAAjZ,EAAA2K,WAAA3K,EAAAkZ,OAAAlZ,EAAA2Q,KAAA3Q,EAAAmZ,UAUA,SAAAC,EAAAzI,GACA,IAAA0I,EAAAC,KAAAZ,MACAlY,GAAA+Y,QAAA7Y,IAAA,2BAGA,OADA2Y,EAAA1I,EAAA9H,OAAAwQ,EAAA1I,EAAA9H,WACAwQ,EAOA,SAAAG,EAAAH,GACA7Y,GAAA+Y,QAAAE,IACA,mBAAAH,KAAAI,UAAAL,IAiCA,SAAAM,EAAAC,EAAAjP,EAAAgG,GACA,IAAAkJ,EAAAC,EACAT,EAAAD,EAAAzI,GACAhG,EAAAK,KAAA,yBAEA8B,KAAA,WACAgN,EAAAnP,EAAAK,KAAA9K,MACA2Z,EAAAC,EAAA3U,QAAA,oBAGAkU,EAAA1I,EAAA9H,OAAAiR,EAAA3M,KAAA,SACA0M,EAAAxO,SAAA,eAEAuO,EAAAlF,OAAAmF,EAAAlJ,KAUA,SAAAoJ,EAAApJ,GACA,IAAAqJ,GAAA,IAAAzL,MAAAE,UACA4K,EAAAD,EAAAzI,GAGApK,OAAAC,KAAA6S,GAAA/M,QAAA,SAAAqE,GACA,IAAA9G,EAAAwP,EAAA1I,GAEApK,OAAAC,KAAAqD,GAAAyC,QAAA,SAAAE,GACA,IAAAgC,EAAA3E,EAAA2C,GACA+C,KAAA0K,OAAAD,EAAAxL,GAAA,eACA,UACA6K,EAAA1I,GAAAnE,OAIAgN,EAAAH,GAUAL,EAAA/X,UAAAyT,OAAA,SAAAjK,GACA,IAAAyP,EACA1C,EAAA/M,EAAAgM,GAAA,eACA9F,EAAAlG,EAAA4C,KAAA,QACA8M,EAAA1P,EAAA4C,KAAA,kBACAgK,EAAA5M,EAAAtD,OAEAsD,EAAA2P,YAAA,cACA3P,EAAA4C,KAAA,aAAA2K,SAEAe,EAAAsB,SAAA7C,EAAA,MACA0C,EAAA,IAAA7X,EAAA0W,GAAArB,UAAAjN,GACAA,EAAA4C,KAAA,YAAA6M,GAYAha,KAAAqV,SAAAvP,KAAA,0BACA2K,OACA6G,cACA/M,WACAgN,mBAAA6C,QAAAjD,EAAAlK,KAAA,gCAGAkK,EACA+C,YAAA,cACAjN,MACAoN,gBAAA/C,EACAgD,iBAAAhD,IAUAtX,KAAAqV,SAAAvP,KAAA,kBAAAwR,EAAA2C,GAEAjG,EAAAI,gBAtHA,SAAA7J,EAAAkG,GACA,IAAA8J,EAAAhQ,EAAAO,KAAA,QAAAmC,KAAA,MACAuN,EAAAjQ,EAAAY,SAAA,cACAgO,EAAAD,EAAAzI,GAEA8J,IACAC,EACArB,EAAA1I,EAAA9H,OAAA4R,IAAA,IAAAlM,MAAAE,iBAEA4K,EAAA1I,EAAA9H,OAAA4R,GAGAjB,EAAAH,IA2GAsB,CAAAlQ,EAAAkG,IA6BAqI,EAAA/X,UAAA2Z,OAAA,SAAApQ,EAAAG,GACA,IAAAkQ,EAAApQ,EAGA,KAEAA,GADAoQ,EAAAlQ,EAAAK,KAAA8N,EAAAtO,KACArF,QAAA,yBAEAC,SACAqF,EAAAoQ,EAAA1V,QAAA,sBAAA2V,KAAA,yBAEArQ,EAAArF,SAAAqF,EAAAY,SAAA,eACAnL,KAAAwU,OAAAjK,GAEAA,EAAArF,QAEAiB,OAAAW,SAAA,EAAA6T,EAAA7E,SAAA+E,KAEE,MAAAC,MAeFhC,EAAA/X,UAAAgY,QAAA,SAAAtO,EAAAuO,EAAAvI,EAAAwI,GACA,IAAArF,EAAAmH,EAAAf,EAAA7C,EAEA6D,EACAjY,EAAA/C,KACAib,EAAA3a,GAAAC,OAAAC,IAAA,iCAsFA,SAAA0a,IACA,IAAAC,EAAAhV,OAAAiV,SAAAD,KACA,IAAAA,EAAAE,QAAA,MACAtY,EAAA2X,OAAAS,EAAA1Q,GApFAmJ,EADAnJ,EAAAK,KAAA,kDAAAV,GAAA,GACAwG,KAAA,sBAEAhK,IAAAqU,IAEAA,GAAA,GAEAF,GAAAE,GACA3a,GAAAC,OAAAC,IAAA,6CAAAF,GAAA+Y,QAAA7Y,IAAA,kBAEAiK,EAAAQ,SAAA2I,GAAAhH,KAAA,SAAA0O,GACA,IAAA/D,EACAhN,EAAAE,EAAAK,KAAA9K,MACAub,EAAAhR,EAAAO,KAAA,cACArE,EAAAuS,EAAA,qBAAAsC,EAGA/Q,EAAAtD,OAAAsP,GAAA,SACAY,EAAA5M,EAAAtD,KAAA,OACAsQ,EAAA6C,QAAAjD,EAAAlK,KAAA,8BACA1C,EACAnH,SAAA,wBACA+J,KAAA,iBAAAmO,GACAnO,KAAA,OAAAsD,GACAxD,MACAuO,SAAA,EACAC,gBAAA,OACAC,gBAAAjV,IAEApD,GAAA,iBAAAK,GAIAA,EAAAiY,OAAA/Z,OAEA8B,EAAAmD,iBACA9D,EAAAyR,OAAAjK,MAIAsO,EAAAsB,SAAAY,EAAA,MACAf,EAAA,IAAA7X,EAAA0W,GACA0C,EAAArW,OAEAqW,EAAA1E,YAAAmD,EAAA9W,KAEA8W,EAAAxC,UAAAjN,GAEAA,EAAA4C,KAAA,YAAA6M,EAAA9W,KACAiU,EACA/T,SAAA,qBACAgH,GAAA,GACA6C,MAIAxG,KACA4T,eAAA,QACAC,gBAAA,UAvHA,SAAAZ,EAAAnP,GACAA,EAAAlH,GAAA,oBAAAK,GACA,KAAAA,EAAAkY,OAAA,KAAAlY,EAAAkY,OAEAlC,EAAAlF,OAAAjK,KAEEO,KAAA,KAAAzH,GAAA,4BAAAK,GACFA,EAAAD,oBAmHAoY,CAAA9Y,EAAAwH,IAEAgN,KACA0B,GAAAjF,EAAAI,gBAAA2G,IAOAhY,EAAAyR,OAAAjK,MAwBA,WACA,IAAAuR,EAAAxb,GAAAC,OAAAC,IAAA,+BACAub,IAAAD,KAAAhQ,MAAA,QAEAiQ,IACA5V,OAAAiV,SAAAD,KAAAY,EACAhZ,EAAA2X,OAAAqB,EAAAtR,IAKAuR,GACAd,KAGAF,EAAAvQ,EAAAK,KAAA,wBACAzH,GAAA,wBAGAuD,IAAAoU,EAAA/N,KAAA,SACA+N,EAAA/N,KAAA,QAAAoO,QAAA,SAEAH,MAGAxb,EAAAmE,YAAAR,GAAA,wBACA6X,OAGAlH,EAAAI,gBAAA3D,IACAgJ,EAAAzZ,KAAAyK,EAAAgG,GACAoJ,EAAApJ,KAIAqI,EAAAmD,qBAAA/C,EACAJ,EAAAoD,sBAAAzC,EACAX,EAAAqD,6BAAAtC,EAEA7X,EAAAC,QAAA6W,iDCnXA,SAAAsD,IACApc,KAAAqc,UA8BA,SAAAC,KApBAF,EAAArb,UAAAP,IAAA,SAAA+b,GACA,OAAAvc,KAAAqc,OAAAE,IAUAH,EAAArb,UAAAwY,IAAA,SAAAgD,EAAAC,GACAxc,KAAAqc,OAAAE,GAAAC,GAeAF,EAAAvb,UAAAP,IAAA,aAOA8b,EAAAvb,UAAAwY,IAAA,aAEAvX,EAAAC,SACAma,cACAE,4DCvDAta,EAAAC,SAOAwa,QAAA,WACA,OAAAnc,GAAAC,OAAAC,IAAA,yECKAwB,EAAAC,QAAA,IAAAya,GAAAC,2ECnBA,IAAAjd,EAAWF,EAAS,gCACpBoP,EAAgBpP,EAAS,wCAiEzBwC,EAAAC,QAxCA,SAAA2a,GACA,IAEA/Q,EACApG,EAHAoX,EAAAvc,GAAAC,OAAAC,IAAA,sCACAsc,EAAAxc,GAAAC,OAAAC,IAAA,iCAIA,IAAA6F,OAAAtF,UAAAiI,eAAAjJ,KAAA8c,EAAAD,GACA,UAAA/U,MAAA,IAAA+U,EAAA,wDA+BA,OAnBA/Q,EAAAyF,MAAAvQ,UAAAuG,MAAAvH,KAAAY,UAAA,IACA8G,SACAmJ,UAEA/E,EAAAnL,KAAAJ,GAAAC,OAAAC,IAAA,yBAEAiF,EAAA/F,EAAAU,OAAAS,SAA+BgL,IAC/B+E,KAAAnL,EAAAmL,KAAAmM,OAAAzc,GAAAC,OAAAC,IAAA,yBAEAqc,EAAAD,KACA,IAAAnX,EAAAmL,KAAAyK,QAAA,gBACA5V,EAAAmL,KAAAlQ,KAAA,eAIAoc,IAEArX,EAAAuX,OAAA,KAEApO,EAAAnJ,8DChEA,IACAgP,EAASjV,EAAS,iCAClByd,EAAWzd,EAAS,mCAiBpBwC,EAAAC,QATA,WACA,IAAA+C,EAAA,IAAAiY,GACA5a,UAAA,0BACA6a,UAAA,IAGA,OADAzI,EAAAG,UAAA1R,IAAAD,SAAA+B,EAAAG,EAAA,qBACAH,6DChBA,IACAmY,EAAgB3d,EAAS,iDACzBD,EAAYC,EAAS,oCACrB4d,EAAW5d,EAAS,mCACpB2I,EAAQ3I,EAAS,gCACjBoP,EAAgBpP,EAAS,wCACzBE,EAAQF,EAAS,gCACjB8I,EAAQ9I,EAAS,gCACjBwQ,EAAexQ,EAAS,uCACxB6d,EAAW7d,EAAS,mCACpBqP,EAASrP,EAAS,iCAClBG,EAAUH,EAAS,kCACnB2C,EAAQ3C,EAAS,gCACjB8d,EAAoB9d,EAAS,uDAC7B+d,EAAqB/d,EAAS,wDAC9Bge,EAAgChe,EAAS,mEACzCie,EAA+Bje,EAAS,kEACxCiV,EAASjV,EAAS,iCAClB0C,EAAS1C,EAAS,iCAClB4I,EAAW5I,EAAS,mCACpB6I,EAAa7I,EAAS,qCACtBkJ,EAAQlJ,EAAS,gCACjBI,EAAUJ,EAAS,kCACnB2V,EAAQ3V,EAAS,gCACjB4E,EAAkB5E,EAAS,0CAC3Byd,EAAWzd,EAAS,mCACpBke,EAAkBle,EAAS,0CAC3BC,EAAUD,EAAS,kCACnBK,EAAaL,EAAS,qCACtByU,EAAYzU,EAAS,oCACrBme,EAASne,EAAS,iCAClBoe,EAAsBpe,EAAS,8CAC/Bqe,EAAare,EAAS,+CACtBse,EAAqBte,EAAS,uDAC9Bue,EAAkBve,EAAS,0CAC3Bwe,EAAqBxe,EAAS,6CAC9BsZ,EAAWtZ,EAAS,mCACpBye,EAAiBze,EAAS,gDAC1B0e,EAAyB1e,EAAS,wDAClC2e,EAAyB3e,EAAS,wDAClC4e,EAAiB5e,EAAS,gDAE1Bc,GAAA+d,eAAAlB,EAEAT,GAAAnd,WAMAe,GAAA+d,eAAAC,OAAA,sBAAA5e,GACAY,GAAA+d,eAAAC,OAAA,sBAAAhW,GACAhI,GAAA+d,eAAAC,OAAA,yBAAAjB,GACA/c,GAAA+d,eAAAC,OAAA,uBAAAzP,GACAvO,GAAA+d,eAAAC,OAAA,sBAAAnW,GACA7H,GAAA+d,eAAAC,OAAA,yBAAAlB,GACA9c,GAAA+d,eAAAC,OAAA,6BAAAtO,GACA1P,GAAA+d,eAAAC,OAAA,wBAAA3e,GACAW,GAAA+d,eAAAC,OAAA,sBAAAnc,GACA7B,GAAA+d,eAAAC,OAAA,uBAAA7J,GACAnU,GAAA+d,eAAAC,OAAA,uBAAApc,GACA5B,GAAA+d,eAAAC,OAAA,yBAAAlW,GACA9H,GAAA+d,eAAAC,OAAA,2BAAAjW,GACA/H,GAAA+d,eAAAC,OAAA,sBAAA5V,GACApI,GAAA+d,eAAAC,OAAA,wBAAA1e,GACAU,GAAA+d,eAAAC,OAAA,sBAAAnJ,GACA7U,GAAA+d,eAAAC,OAAA,gCAAAla,GACA9D,GAAA+d,eAAAC,OAAA,yBAAArB,GACA3c,GAAA+d,eAAAC,OAAA,wBAAA7e,GACAa,GAAA+d,eAAAC,OAAA,2BAAAze,GACAS,GAAA+d,eAAAC,OAAA,0BAAArK,GACA3T,GAAA+d,eAAAC,OAAA,uBAAAX,GACArd,GAAA+d,eAAAC,OAAA,gCAAAP,GACAzd,GAAA+d,eAAAC,OAAA,mCAAAN,GACA1d,GAAA+d,eAAAE,UAAA,gCAAAb,EAAA,kBACApd,GAAA+d,eAAAE,UAAA,wCAAAX,EAAA,kBACAtd,GAAA+d,eAAAE,UAAA,qCAAAjB,EAAA,kBACAhd,GAAA+d,eAAAE,UAAA,8CAAAhB,EAAA,kBACAjd,GAAA+d,eAAAE,UAAA,yDACAf,EAAA,kBACAld,GAAA+d,eAAAE,UAAA,wDACAd,EAAA,kBACAnd,GAAA+d,eAAAE,UAAA,6BAAAV,EAAA,kBACAvd,GAAA+d,eAAAE,UAAA,4CAAAT,EAAA,kBACAxd,GAAA+d,eAAAE,UAAA,wBAAAzF,EAAA,kBACAxY,GAAA+d,eAAAE,UAAA,8BAAAN,EAAA,kBACA3d,GAAA+d,eAAAE,UAAA,sCAAAJ,EAAA,kBACA7d,GAAA+d,eAAAE,UAAA,kCAAAH,EAAA,kBAKApc,EAAAC,SACA2b,qBACAN,mBACAC,oBACAC,+BACAC,8BACAN,eACAhV,OACAzI,OACAkP,eACAtG,OACA+U,UACAD,UACAvO,QACAlP,SACAwC,OACAsS,QACAvS,QACAkG,UACAM,OACA9I,SACAuV,OACA/Q,iBACA6Y,UACAS,iBACAje,SACAI,YACAoU,WACA0J,QACAE,YACAC,oBACAC,iBACAC,oBACAlF,UACA0F,QACAP,gBACAE,wBACAC,kBAMA9d,GAAA+d,eAAAC,OAAA,iBAAAtc,EAAAC,SAEAic,EAAAO,wGCzIA,IAAAhf,EAAaD,EAAS,kCACtBE,EAAQF,EAAS,gCACjBiV,EAASjV,EAAS,iCAClBD,EAAYC,EAAS,oCACrB+d,EAAqB/d,EAAS,wDAC9B2C,EAAQ3C,EAAS,gCASjB,SAAA8d,EAAAlb,GACA3C,EAAAM,KAAAC,KACAN,EAAAU,QACAiC,UAAA,yCACGD,IAIH7C,EAAA+d,EAAA7d,GASAqB,SAAApB,EAAAU,UAA0BX,EAAAsB,UAAAD,UAC1B8T,QAAAH,EAAAG,UAAAC,eACA6J,aAAAjK,EAAAkK,OAAA,QAAA9J,eACA+J,SAAA,IAAAzc,GACA0c,SAAA,EACAtc,KAAA,WACAC,qBAAA,OACAsc,SAAA,EACA5d,MAAAZ,GAAAa,IAAA,yCACG0T,eACHkK,eAAA,IAAA5c,GACAI,KAAA,QACAuc,SAAA,EACAD,SAAA,IACGG,iBAMHpc,QACAqc,cAAA,uBAOA1Z,KAAA,WACA,OAAA9F,EAAAsB,UAAAwE,KAAA1E,MAAAb,KAAAW,YAMAY,SAAAjB,GAAAiB,SAAAf,IAAA,2CAMAmC,eAAA,EAMAG,WAAA,WACA,IAAAoc,EAAAxf,EAAAmE,YAAA0F,SAEA9J,EAAAsB,UAAA+B,WAAAjC,MAAAb,MAGAkf,EAAA,OACAlf,KAAAkD,IAAAic,IAAA,aAAAD,EAAA,GAGAlf,KAAAqD,GAAA,OAAArD,KAAAof,OAAA7b,KAAAvD,OACAA,KAAAqD,GAAA,OAAArD,KAAAqf,OAAA9b,KAAAvD,QAOAof,OAAA,WACA1f,EAAA4f,cAAAxU,KAAA,QAAA1H,SAAA,mBAOAic,OAAA,WACA3f,EAAA4f,cAAAxU,KAAA,QAAA7G,YAAA,mBAWAsb,cAAA,SAAA9Y,EAAAgK,EAAA+O,GACA,IAAAC,EAAAzf,KACAqX,EAAArX,KAAAF,QAAAuX,QAMA,OAHArX,KAAAF,QAAA2Q,OAEAgP,EAAAla,OACA8R,EAAAqI,aAAAjZ,EAAAgK,GAAAzK,KAAA,SAAA2Z,GACAF,EAAA1P,QACApH,MAAA6W,EACA1P,KAAA6P,EAAA7P,QAEG,SAAA8P,GACHA,IAAArC,EAAAsC,gBACAJ,EAAA1b,OAEA0b,EAAA1P,QACAkB,OAAA,EACAtI,MAAA6W,EACA1P,KAAAxP,GAAAa,IAAA,kDAYA2e,oBAAA,SAAApc,GACA,IAAAqc,EAAA/f,KAAAmF,EAAAzB,EAAAiY,QAKA,OAHA3b,KAAAuf,cAAAQ,EAAA9S,KAAA,QAAAjN,KAAAF,QAAA2Q,KAAAsP,EAAAjQ,SAGA,KAIA9N,EAAAC,QAAAqb,wECrJA,SAAAC,EAAAtN,GACAjQ,KAAAiQ,MAgBAsN,EAAAxc,UAAA2e,aAAA,KAOAnC,EAAAsC,gBAAA,kBAOAtC,EAAAyC,YAAA,cAEAhe,EAAAC,QAAAsb,qFC1CA,IAAAA,EAAwB/d,EAAS,wDACjCD,EAAYC,EAAS,oCACrBE,EAAQF,EAAS,gCASjB,SAAAge,IACAD,EAAA1c,MAAAb,KAAAW,WAGApB,EAAAie,EAAAD,GASA0C,0BAAA,SAAAxZ,EAAAgE,GACA,IAAAvH,EACAuC,EAAA/F,EAAA4Q,WAQA,OANApN,EAAAuH,EAAAK,KAAA,IAAApL,EAAAwgB,eAAAzZ,EAAAoN,OAAA,MACA3O,OACAO,EAAAqR,SAAoBhH,KAAA5M,EAAAgF,SAEpBzC,EAAAyL,OAAAqM,EAAAsC,iBAEApa,EAAAM,WAOA2Z,aAAA,SAAAjZ,EAAAgK,GAEA,OAAAzQ,KAAAigB,0BAAA3S,mBAAA7G,GAAAgK,EAAAtL,EAAA,qBAIAnD,EAAAC,QAAAub,oFC/CA,IAAAA,EACChe,EAAS,mEACVqP,EAASrP,EAAS,iCAClB+d,EAAqB/d,EAAS,wDAC9B4c,EAAAvN,EAAAuN,YACA1c,EAAQF,EAAS,gCACjBD,EAAYC,EAAS,oCACrB8c,EAAAzN,EAAAyN,QACA6D,EAAA,KAmBA,SAAA1C,EAAAxN,EAAApB,GACA2O,EAAAzd,KAAAC,KAAAiQ,GACAjQ,KAAA6O,SAAA,IAAAyN,EAGA/c,EAAAke,EAAAD,GAWA/F,mBAAA,SAAAhH,GACA,IAAA1N,EAAA/C,KACAyF,EAAA/F,EAAA4Q,WACA8P,EAAApgB,KAAA6O,MAAArO,IAAAiQ,EAAAhK,IAEA,OAAA2Z,EACA3a,EAAAqR,QAAAsJ,GAAAra,WAGA/F,KAAAiQ,IAAAzP,KACAgQ,OAAA,aACAC,OAAA/E,WACA/B,SAAA,aACAiH,KAAA,OACAhD,SAAA6C,EAAAjF,kBACGxF,KAAA,SAAAmH,GACH,IAAAxD,KAEAwD,EAAAgE,WAAAxH,SAAAyC,QAAA,SAAAE,GACA,IAAA+T,EAAA3gB,EAAAiW,UAAA,SAAAzN,KAAAoE,EAAAwD,MAEAnG,EAAA0W,EAAAvV,KAAA,gBAAAmC,KAAA,OAAAoT,EAAAvV,KAAA,iBAGA/H,EAAA8L,MAAA0K,IAAA9I,EAAAhK,GAAAkD,GACAlE,EAAAqR,QAAAnN,IACG,WACHlE,EAAAyL,OAAAqM,EAAAyC,eAGAva,EAAAM,YAYA6R,kBAAA,SAAAnH,EAAA6P,GACA,OAAAtgB,KAAAyX,mBAAAhH,GAAAzK,KAAA,SAAAmH,GACA,QAAA9G,OAAAtF,UAAAiI,eAAAjJ,KAAAoN,EAAAmT,IACAnT,EAAAmT,MAQAZ,aAAA,SAAAjZ,EAAAgK,GACA,IAAA1N,EAAA/C,KAEA,OAAAA,KAAAyX,mBAAAhH,GAAAzK,KAAA,SAAA2D,GACA,IAAAc,EAAA/K,EAAAiW,UAAA,SAMA,OAJAtP,OAAAC,KAAAqD,GAAAyC,QAAA,SAAAmU,GACA9V,EAAArF,OAAAuE,EAAA4W,MAGAxd,EAAAkd,0BAAAxZ,EAAAgE,QAUAgT,EAAA3V,aAAA,WAOA,OANAqY,IACAA,EAAA,IAAA1C,EACA,IAAAnd,GAAAkgB,IACA,IAAApE,IAGA+D,GAGAne,EAAAC,QAAAwb,4DC9HA,IACAC,EAAkBle,EAAS,0CAC3BE,EAAQF,EAAS,gCAOjBwC,EAAAC,SAEAwe,kBAAA,WACA,OAAA/C,KAcAgD,WAAA,SAAAne,EAAAoe,EAAAC,GACA,IAAAlD,EAAA1d,KAAAygB,oBAOA,SAAAI,KACAF,GAAAC,GACAlD,EAAA3Z,OAGA,OAVA6c,OAAAha,IAAAga,OAEAlD,EAAAnY,OAQAjF,GAAAyH,OAAA+Y,MAAAve,GAAAyD,KAAA,WAGA,OAFA6a,IAEAnD,GACG,WAGH,OAFAmD,IAEAnhB,EAAA4Q,WAAAY,SAAAnL,oFCxCA,SAAAoY,IACAne,KAAA+gB,iBAAA,KACA/gB,KAAAghB,mBAAA,KAGA7C,EAAApd,WAQAkgB,gBAAA,WACAjhB,KAAA+gB,iBAAAzgB,GAAAkO,KAAA0S,2BAUAC,kBAAA,WACAnhB,KAAAghB,mBAAA1gB,GAAAkO,KAAA0S,0BACAlhB,KAAAohB,wBAAA,IAAA/S,MAAAE,WAQA8S,aAAA,WACArhB,KAAAihB,mBAQAK,cAAA,WACAthB,KAAAmhB,oBACA7gB,GAAAihB,MAAA,4BACA/Q,OAAA,gBACAuQ,iBAAA/gB,KAAA+gB,iBACAC,mBAAAhhB,KAAAghB,mBACAQ,qBAAA,KAUAC,gBAAA,SAAAC,GACA,IAAAF,GACA,IAAAnT,MAAAE,UAAAvO,KAAAohB,uBAEA9gB,GAAAihB,MAAA,4BACA/Q,OAAA,qBACAmR,cAAA,SACAC,gBAAAF,EAAAG,QAAA3c,OACA6b,iBAAA/gB,KAAA+gB,iBACAC,mBAAAhhB,KAAAghB,mBAGAc,qBAAAN,EACAA,0BAWAO,oBAAA,SAAAL,GACA,IAAAF,GACA,IAAAnT,MAAAE,UAAAvO,KAAAohB,uBAEA9gB,GAAAihB,MAAA,4BACA/Q,OAAA,eAEAwR,WAAAN,EAAAO,YAAA,EACAlB,iBAAA/gB,KAAA+gB,iBACAC,mBAAAhhB,KAAAghB,mBACAQ,2BAYArD,EAAA+D,SAAA,SAAAC,GACA,IAAAC,EAAA,IAAAjE,EAEAgE,EAAA9e,GAAA,cAAA+e,EAAAf,aAAA9d,KAAA6e,IACAD,EAAA9e,GAAA,eAAA+e,EAAAd,cAAA/d,KAAA6e,IACAD,EAAA9e,GAAA,iBAAA+e,EAAAX,gBAAAle,KAAA6e,IACAD,EAAA9e,GAAA,sBAAA+e,EAAAL,oBAAAxe,KAAA6e,KAGApgB,EAAAC,QAAAkc,kECxHA,IACAzV,EAAQlJ,EAAS,gCACjBE,EAAQF,EAAS,gCACjBoe,EAAsBpe,EAAS,8CAO/B,SAAA4e,EAAAnO,GACAjQ,KAAAiQ,MACAjQ,KAAAqiB,eACAriB,KAAAsiB,UAAAhiB,GAAAC,OAAAC,IAAA,uBAGA4d,EAAArd,WAOAwhB,gBAAA,EASAC,WAAA,SAAAlQ,GACA,IAAA0G,EAAAhZ,KAAAsiB,UAAAtJ,OACA7L,EAAAyQ,EAAA,UACA0E,UAAAtiB,KAAAsiB,UAAA/f,OAcA,OAXA4K,EAAAsV,UAAA,GAEAtV,EAAA,IAAA6L,EAAA,UAAA1G,EACAnF,EAAA,IAAA6L,EAAA,aAAAhZ,KAAAuiB,gBACApV,EAAA,IAAA6L,EAAA,YAGA7L,EAAAuV,UACAvV,EAAAuV,QAAA,GACAvV,EAAAwV,YAAAriB,GAAAC,OAAAC,IAAA,sBAAAoiB,MAEAzV,GAWA0V,mBAAA,SAAAC,GAIA,OADAA,IAAA9W,QAAA,4BAA8B,QAC9B,IAAAkB,OAAA,KAAA4V,EAAA,WAaAC,qBAAA,SAAA7hB,EAAA8hB,GAIA,OAHA9hB,EAAAxB,EAAAiW,UAAA,UAAA7F,KAAA5O,GAAAgH,OACA8a,EAAAtjB,EAAAiW,UAAA,UAAA7F,KAAAkT,GAAA9a,OAEAhH,EAAA8K,QAAAhM,KAAA6iB,mBAAAG,GAAA,wBAYAC,SAAA,SAAA3Q,EAAA4Q,GACA,IAAAzS,EAAA/H,EAAAgF,YAAAwV,GAaA,OANAzS,EAAA7H,aAAA5I,KAAA+iB,qBACAG,EAAAC,YAAAD,EAAAC,YAAA1S,EAAA9H,MACA2J,GAEA7B,EAAAkC,MAAAuQ,EAAAvQ,MAEAlC,GAYA2S,aAAA,SAAA9Q,EAAAnF,GACA,IAAApK,EAAA/C,KACA6hB,KAcA,OAZA1U,EAAAmF,QAEAuP,EAAA1U,EAAAmF,MAAAmB,WACAoO,EAAAxb,OAAAC,KAAAub,GAAA5S,IAAA,SAAAxI,GACA,OAAA1D,EAAAkgB,SAAA3Q,EAAAuP,EAAApb,OAGA4c,KAAA,SAAAC,EAAAC,GACA,OAAAD,EAAA3Q,MAAA4Q,EAAA5Q,OAAA,OAIAkP,GAUArD,OAAA,SAAAlM,GACA,IAAAkR,EAAAC,EACA1gB,EAAA/C,KAuBA,OArBAA,KAAA0jB,SAAApR,KAEAmR,GADAD,EAAAxjB,KAAAiQ,IAAAzP,IAAAR,KAAAwiB,WAAAlQ,KAEAtM,KAAA,SAAAmH,GAEA,OACAmF,QACAuP,QAAA9e,EAAAqgB,aAAA9Q,EAAAnF,KAEK,WAELpK,EAAAsf,YAAA/P,QAAA1L,IAKA5G,KAAAqiB,YAAA/P,GAAAmR,EAAA1d,SACA4d,MAAA,WAAwBH,EAAAG,YAIxB3jB,KAAAqiB,YAAA/P,IAUAoR,SAAA,SAAApR,GACA,OAAA8H,QAAApa,KAAAqiB,YAAA/P,MAIAtQ,EAAAC,QAAAmc,kECzLA,IACA7e,EAAYC,EAAS,oCACrByd,EAAWzd,EAAS,mCACpBE,EAAQF,EAAS,gCACjBI,EAAUJ,EAAS,kCACnB2C,EAAQ3C,EAAS,gCACjBse,EAAqBte,EAAS,uDAG9BokB,EAAAtjB,GAAAC,OAAAC,IAAA,8BAeA,SAAAyd,EAAA/d,GACA,IAIAJ,EAAAJ,EAAAU,WAHA8I,aAAA,EACA7G,UAAA,0BAE2BnC,GAE3B+c,EAAAld,KAAAC,KAAAF,GAEAE,KAAAiQ,IAAAnQ,EAAAmQ,IAEAjQ,KAAAqX,QAAA,IAAAvX,EAAA+jB,aAAA7jB,KAAAiQ,KAEAjQ,KAAAqE,OAAAvE,EAAAuE,OAGA9E,EAAA0e,EAAAhB,GAKA5b,iBAAA3B,EAAAU,UAAkC6c,EAAAlc,UAAAM,kBAClCyiB,OAAAxjB,GAAAiB,SAAAf,IAAA,8CACAujB,QAAAzjB,GAAAiB,SAAAf,IAAA,+CACAiC,KAAAN,EAAApB,UAAAQ,WA2BAT,SAAApB,EAAAU,UAA0B6c,EAAAlc,UAAAD,UAC1BkjB,cAAA,EACAC,UAAA,IAAA9hB,GACAyR,QAAA,SACArR,KAAA,eACAsc,SAAA,EACA3d,MAAAZ,GAAAa,IAAA,gCACAqB,qBAAA,UACG1C,QACHokB,kBAAA,IAAA/hB,GACAyR,QAAA,IAEAhS,KAAA,IACAW,KAAA,iBACArB,MAAAZ,GAAAa,IAAA,oCACGrB,QACHqkB,WAAA,GACAC,eAAA,GACAC,aAAA/jB,GAAAa,IAAA,qCACAmjB,0BAAAhkB,GAAAiY,QAAA,6CAAAC,QACAhI,OAAAlQ,GAAAC,OAAAC,IAAA,YACA+jB,WAAAX,IACAW,SAAA,IAAA3kB,GACAsB,MAAAZ,GAAAa,IAAA,6CACAS,KAAAgiB,IACI9jB,QACJ0kB,OAAAlkB,GAAAa,IAAA,6CAQAyB,OAAAlD,EAAAU,UAAwB6c,EAAAlc,UAAA6B,QACxB6hB,cAAA,eACAC,eAAA,eACAC,wBAAA,uBACAC,yBAAA,wBACAC,+BAAA,2BACAC,sBAAA,uBACAC,qBAAA,uBACAC,mBAAA,kBAWAC,aAAA,WACAjlB,KAAAklB,gBACAllB,KAAAmlB,OAAA3Q,OAAA,KAAAxU,KAAAolB,OAAAC,QASAC,aAAA,WAMA,OALAtlB,KAAAolB,OAAAC,IAAA,IAAAE,QACAvlB,KAAAklB,gBACAllB,KAAAmlB,OAAAphB,QAGA,GAQAyhB,qBAAA,WACA,IAAAtiB,EAAAxD,EAAA4f,cAAAxU,KAAA,QACA2a,EAAAzlB,KAAAmF,EAAA,QAGAnF,KAAA2V,UAAA,WACA1I,MACArM,KAAA,SACA2B,KAAA,WACAia,MAAA,WAEAvZ,SAAAwiB,GAGA9hB,WAAA,WAGA8hB,EAAAxiB,SAAAC,GACAuiB,EAAAC,UACG,IAQHC,sBAAA,WACA3lB,KAAAmF,EAAA,WAAAygB,QAAA,UASAC,yBAAA,SAAAniB,GACAA,EAAAD,mBASAqiB,qBAAA,WACA9lB,KAAAolB,OAAAW,QAUAC,cAAA,SAAAtiB,GACA,IAAAsX,EAAAhb,KAAAmF,EAAAzB,EAAAuiB,eACAC,EAAAlL,EAAAmL,QAAA,MAWAnmB,KAAA8F,KAAA,uBACAL,OAAAygB,EACAjE,YAAAjiB,KAAAomB,SAAAzT,MAAAuT,GACAG,cAAA3iB,IAKAA,EAAAmD,iBACA7G,KAAAqE,OAAAS,OAAAkB,KAAA,WAIAG,OAAAiV,SAAAxZ,KAAAoZ,EAAA/N,KAAA,WASAnK,WAAA,WACA,IACAwjB,EADAvjB,EAAA/C,KAcA,SAAAumB,IACAxjB,EAAAqU,SAAArT,OACAyiB,aAAAF,GAbArJ,EAAAlc,UAAA+B,WAAA/C,KAAAC,MAEAA,KAAAolB,OAAAplB,KAAAmF,EAAA,SACAnF,KAAAmlB,OAAAnlB,KAAAmF,EAAA,UACAnF,KAAAymB,eAAAzmB,KAAAmF,EAAA,mBAAApB,OACA/D,KAAA0mB,gBAAA1mB,KAAAmF,EAAA,oBAAApB,OACA/D,KAAA2mB,iBAAA3mB,KAAAmF,EAAA,2BAWAnF,KAAAoX,SAAApX,KAAAmF,EAAA,sBACAnF,KAAAqD,GAAA,wBAAAujB,GACAN,GACAC,IAEAD,EAAA3iB,WAAA,WACAZ,EAAAqU,SAAA7R,QAzQA,IA0QIqhB,EAAAC,SAEJ7mB,KAAAqD,GAAA,iBAAAkjB,GAGA,KAAAxjB,EAAAqiB,OAAAC,OACArlB,KAAAmlB,OAAAphB,QAUA+iB,aAAA,WACA,IAAAC,EAAA/mB,KAAAolB,OAAAC,MAAAngB,OACAlF,KAAAolB,OAAAG,QAEAvlB,KAAAolB,OAAA,GAAA4B,mBACAhnB,KAAAolB,OAAA,GAAA4B,kBAAAD,MASAxhB,KAAA,WAEA0X,EAAAlc,UAAAwE,KAAA1E,MAAAb,KAAAW,WAEAX,KAAA8mB,eAKA9mB,KAAA8F,KAAA,gBASA/B,KAAA,WACA,IAAAhB,EAAA/C,KAWA,OAVAN,EAAA4f,cAEAnU,SAAA,eACApI,EAAAG,IAAAE,SAAA,YACAO,WAAA,WACAsZ,EAAAlc,UAAAgD,KAAAlD,MAAAkC,EAAApC,YACI,MAEJsc,EAAAlc,UAAAgD,KAAAlD,MAAAkC,EAAApC,YAEA,GAUAukB,cAAA,WACA,IACAniB,EAAA/C,KACAiQ,EAAAjQ,KAAAiQ,IACAqC,EAAAtS,KAAAolB,OAAAC,MACAwB,EAAA7mB,KAAAqX,QAAAqM,SAAApR,GAAA,EAtVA,IA0VAA,IAAAtS,KAAAinB,YACAlkB,EAAAmkB,eACAnkB,EAAAmkB,cAAAvD,QAEA6C,aAAAxmB,KAAAsmB,OAEAhU,EAAApN,OACAlF,KAAAsmB,MAAA3iB,WAAA,WACA,IAAA6f,EAMAzgB,EAAA+C,KAAA,gBACAwM,QACAuU,UAGArD,EAAAzgB,EAAAsU,QAAAmH,OAAAlM,GACAvP,EAAAmkB,cAAA1D,EAAAxd,KAAA,SAAAmH,GAGAA,KAAAmF,QAAAvP,EAAAqiB,OAAAC,QACAtiB,EAAAG,IAAAgX,YAAA,iBAAA/M,EAAA0U,QAAA3c,QACAnC,EAAA0jB,eACAlhB,OACAuF,KAAA,KACA/G,OACAoG,OAAAgD,EAAA0U,QAAA3c,OAAA,oCACAK,OAGA,IAAAuY,GACA7N,MACAkX,OAAA,SACA1T,MAAAtG,EAAA0U,QACAzU,GAAArK,EAAA4jB,mBAGA5jB,EAAAqjB,SAAArjB,EAAA4jB,iBAAA7b,KAAA,MASA/H,EAAA+C,KAAA,kBACA+b,QAAA1U,EAAA0U,aAGM9b,SAAa4d,MAAA,WAAqBH,EAAAG,YACnCkD,GAEL9jB,EAAAqkB,cAGApnB,KAAAinB,UAAA3U,IAQA8U,YAAA,WACApnB,KAAAoX,SAAArT,OACA/D,KAAAymB,eAAA1iB,OACA/D,KAAA0mB,gBAAA3iB,OACA/D,KAAA2mB,iBAAAU,WAIArlB,EAAAC,QAAAgc,wEC1YAjc,EAAAC,SACAwc,+BAnCA,WACAne,GAAAyH,OAAA+Y,OACA,gCACA9a,KAAA,WACA,IACAoX,EADA9c,GAAA+d,eACArW,QAAA,0BAOAkW,EAAA,IAAAoJ,EALAhnB,GAAAinB,SAAAD,QAMA,kBAEAhnB,GAAAC,OAAAC,IAAA,oCAQAgnB,SAAA,YACAC,gBAAArK,EAAAX,YAIAnc,GAAAonB,eAAA,oCAAAC,EAAAxa,GACA+Q,EAAAvZ,IAAAwI,yDC7BA,IAAAya,GAAA,qDACAloB,EAAQF,EAAS,gCACjBqoB,GAAA,gCAWA,SAAAC,EAAAC,GAEA,IADA,IAAAzM,EAAA,EACAA,EAAAuM,EAAA3iB,QAAA6iB,EAAAF,EAAAvM,EAAA,MACAA,EAEA,OACAkB,MAAAnN,KAAA2Y,MAAAD,EAAAF,EAAAvM,IACA2M,KAAAL,EAAAtM,IAWA,SAAA4M,EAAA5Z,GAGA,OAAAwZ,EAFAzY,KAAA2Y,OAAA,IAAA3Z,MAAAE,UAAA,KAEAD,GAqBA,SAAA6Z,EAAAC,GACA,kBAAAA,EAAAH,MAAAG,EAAA5L,MAAA,GAqFAxa,EAAAC,SACAmM,uBAxEA,SAAAia,EAAAC,EAAApW,EAAAR,GACA,IAAA0W,EAAAlgB,EASA2D,KAsBA,OApBAqG,KAAA,UAGAiW,EADAC,EAAAF,EAAAG,IAEAxc,EAAAnL,KAAA,mDAAAwR,EAAAoW,GAEAzc,EAAAnL,MAfA6nB,QAAA,kDACAC,QAAA,kDACAC,MAAA,gDACAC,KAAA,+CACAC,OAAA,iDACAC,MAAA,iDAUAR,EAAAH,MAAA/V,EAAAoW,EACAhoB,GAAA2S,SAAAmF,cAAAgQ,EAAA5L,QAIA3Q,EAAAnL,KACAgR,GAAA,IAEApR,GAAA2S,SAAAmF,cAAAkQ,EAAA,KAGAA,EAAAhoB,GAAAZ,KAAAmC,OAAA,QAAAymB,GAAA,IAEApgB,EAAA5H,GAAAiY,QAAA1X,MAAAb,KAAA6L,GAAA2M,QACA9G,EACAxJ,EAEAxI,EAAAiW,UAAA,SAAAzN,QAAA4H,QAsCA+Y,uBA1BA,SAAAR,EAAAnW,GACA,IAAAkW,EASAvc,KAWA,OATAqG,KAAA,UAGAiW,EADAC,EAAAF,EAAArY,SAAAwY,EAAA,MAEAxc,EAAAnL,KAAA,kCAAAwR,GAEArG,EAAAnL,MAfA6nB,QAAA,iCACAC,QAAA,iCACAC,MAAA,+BACAC,KAAA,8BACAC,OAAA,gCACAC,MAAA,gCAUAR,EAAAH,MAAA/V,EAAA5R,GAAA2S,SAAAmF,cAAAgQ,EAAA5L,QAEAlc,GAAAiY,QAAA1X,MAAAb,KAAA6L,GAAA2M,SAOAsP,UACAI,kBACAC,QACAW,SAvGA,SAAAV,GACA,oCAAA/M,QAAA+M,EAAAH,OAAA,qDC7CA,IACAvoB,EAAQF,EAAS,gCACjBupB,EAAA,uBAMA,SAAAC,IACA1oB,GAAA2oB,oBAAAjpB,KAAAkpB,aAAA3lB,KAAAvD,OAaAgpB,EAAAjoB,UAAAwE,KAAA,SAAApE,EAAArB,GACA,iBAAAA,IACAQ,GAAAqE,IAAAC,KAAA,0GAEA9E,GACAc,KAAAd,IAIAA,EAAAJ,EAAAU,QACAsU,IAAA,SACE5U,GAEFE,KAAAmpB,aAAA7oB,GAAA8oB,OAAAjoB,EAAArB,IAQAkpB,EAAAjoB,UAAAgD,KAAA,gBACA6C,IAAA5G,KAAAmpB,cACAnpB,KAAAmpB,aAAAnjB,KAAA,SAAAqjB,GACAA,EAAAC,WAgBAN,EAAAjoB,UAAAwoB,iBAAA,SAAAxF,EAAA1hB,GACA/B,GAAA+Y,QAAA7Y,IAAAuoB,GACAzoB,GAAAqE,IAAAC,KACA,qFAKAtE,GAAA+Y,QAAAE,IAAAwP,EAAA3P,KAAAI,WACAuK,UACA1hB,gBAUA2mB,EAAAjoB,UAAAmoB,aAAA,WACA,IAAA/b,EAAA7M,GAAA+Y,QAAA7Y,IAAAuoB,GACA5b,IACAA,EAAAiM,KAAAZ,MAAArL,GACAnN,KAAAuF,KAAA4H,EAAA4W,QAAA5W,EAAA9K,WACA/B,GAAA+Y,QAAAvB,OAAAiR,KAIA/mB,EAAAC,QAAA,IAAA+mB,iEC3FA,IAAA1gB,EAAW9I,EAAS,gCACpBgqB,EAAoBhqB,EAAS,sDAC7BiV,EAASjV,EAAS,iCAClBE,EAAQF,EAAS,gCACjBD,EAAYC,EAAS,oCACrBme,EAASne,EAAS,iCAClBgP,EAAAlO,GAAAkO,KACA3O,EAAaL,EAAS,qCAetB,SAAAqe,EAAA/d,GACAwI,EAAAvI,KAAAC,KACAN,EAAAU,QACAiC,UAAAoS,EAAAgV,YAAAzK,gBACGlf,IAIHP,EAAAse,EAAAvV,GAMA1F,QAEA8mB,UAAA,eACA7mB,MAAA,kBAWA/B,UACA2P,UAAA7J,EACAugB,OAAA,WAOAwC,kBACA5F,QAAAzjB,GAAAa,IAAA,iCACAO,aACAkoB,QAAA,oCACAC,SAAA,4BACAC,cAAA,wBAEAhoB,mBACA8nB,QAAA,4CAOAroB,SAAAjB,GAAAiB,SAAAwoB,QAAA,mCAA6D,SAM7DC,WAAA,SAAAlqB,GACA,IACAmqB,EAAA3hB,EAAAvH,UAAAipB,WAEAhqB,KAAAkqB,SAAApqB,EAAAyL,UACAvL,KAAAqX,QAAA,IAAAmS,EAAA1pB,EAAAmQ,KAEAga,EAAAlqB,KANAC,KAMAF,IAOA2B,UAAA,WACAzB,KAAAF,QAAAqqB,QAAAnqB,KAAAkqB,SAAA5pB,GAAAa,IAAA,mBAAAb,GAAAa,IAAA,kBAOA2B,WAAA,WACA,IAAAsnB,EAAA3V,EAAAgV,YAAAY,oBACAC,EAAA7V,EAAA8V,cAAAF,oBAAA,WAIArqB,KAAAkD,IAAA+J,KAAA,QAAAjN,KAAAF,QAAAqqB,UAGA3b,EAAAgc,UAAAxqB,KAAAkqB,SACAlqB,KAAAkD,IAAAE,SAAAknB,GAAArmB,YAAAmmB,GAEApqB,KAAAkD,IAAAE,SAAAgnB,GAAAnmB,YAAAqmB,GAEAtqB,KAAAkD,IAAAe,YAAA,WASAwmB,aAAA,SAAA/mB,GACAA,EAAAmD,kBAQA6jB,mBAAA,WACA1qB,KAAAyf,SACAzf,KAAAyf,OAAA,IAAA5f,EAAAG,KAAA2pB,mBAGA3pB,KAAAyf,OAAAla,QAQAolB,mBAAA,WACA,IAIAC,EAHA7nB,EAAA/C,KACAqX,EAAArX,KAAAqX,QACA5G,EAAAzQ,KAAAF,QAAA2Q,KAEAoa,GAAA7qB,KAAAkqB,SAKA,SAAAY,IACAC,cAAAH,GAJAA,EAAAI,YAAA,WACArN,EAAApY,KAAAjF,GAAAa,IAAA,2CACG,KAIHkW,EAAA4T,qBAAAxa,EAAA/E,YAAAmf,GAAA7kB,KAAA,WACA8kB,IAEA/nB,EAAAmnB,SAAAW,EACAA,GACA9nB,EAAAgN,SAKAhN,EAAA+C,KAAA,SACA6X,EAAApY,KAAAjF,GAAAa,IAAA,gCAAAsP,EAAA9H,UAMA5F,EAAA+C,KAAA,WACA/C,EAAAgN,SACA4N,EAAApY,KAAAjF,GAAAa,IAAA,oCAAAsP,EAAA9H,UAEG,WACHmiB,IAEAnN,EAAApY,KAAAjF,GAAAa,IAAA,+CAUA+pB,eAAA,WACA1c,EAAAgc,SACAxqB,KAAA0qB,mBAAA7pB,MAAAb,KAAAW,WAEAX,KAAA2qB,mBAAA9pB,MAAAb,KAAAW,cAMAqB,EAAAC,QAAA4b,wEC7MA,IAAAne,EAAWF,EAAS,gCACpBoP,EAAgBpP,EAAS,wCAwBzB,SAAAgqB,EAAAvZ,GACAjQ,KAAAiQ,MAGAuZ,EAAAzoB,WAuBAoqB,YAAA,SAAAC,EAAA/X,GAEA,OAAA3T,EAAAoV,KACA9U,KAAAqrB,gBAAAD,GACAprB,KAAAsrB,mBAAAjY,IACArN,KAAA,WAAuB,OAAAtG,EAAAU,OAAAS,MAAAnB,EAAAiB,cASvB0qB,gBAAA,SAAAD,GACA,IAAAroB,EAAA/C,KACA,OAAAorB,EAAAlmB,OAIAlF,KAAAiQ,IAAAzP,KACA+qB,cAAA,EACA/a,OAAA,QACAI,KAAA,OACA4a,OAAA,UACAC,QAAAL,IACGplB,KAAA,SAAA0lB,GACH,OAAA3oB,EAAA4oB,sBAAAD,KAVAhsB,EAAA4Q,WAAAwG,aAoBAwU,mBAAA,SAAAjY,GACA,IAAAtQ,EAAA/C,KACA,OAAAqT,EAAAnO,OAIAlF,KAAAiQ,IAAAzP,IAAAoO,GACAgC,KAAA,OACA4a,OAAA,UACAnY,YACGrN,KAAA,SAAA0lB,GACH,OAAA3oB,EAAA4oB,sBAAAD,KARAhsB,EAAA4Q,WAAAwG,aAmBAmU,oBAAA,SAAA5X,EAAAuY,GACA,IAAA1rB,GACAsQ,OAAA,QACA6C,UAKA,OAHAuY,IACA1rB,EAAA2rB,SAAAD,GAEA5rB,KAAAiQ,IAAA6b,cAAA,QAAA5rB,IAWAyrB,sBAAA,SAAAD,GAEA,OADAA,KAAApZ,OAAAoZ,EAAApZ,MAAAmB,WACAlN,OAAA,SAAAwlB,EAAAtb,GAEA,OADAsb,EAAAtb,EAAA9H,OAAA8H,EAAAmb,QACAG,SAKA/pB,EAAAC,QAAAunB,yEC3IA,IAAAvV,EAAezU,EAAS,oCACxBqe,EAAare,EAAS,+CACtBgP,EAAAlO,GAAAkO,KACA9O,EAAQF,EAAS,gCACjBkJ,EAAQlJ,EAAS,gCACjBD,EAAYC,EAAS,oCACrBgqB,EAAoBhqB,EAAS,sDAkB7B,SAAAse,EAAAhe,GACAE,KAAAgsB,UAAA,IAAAxC,EAAA1pB,EAAAmQ,KACAgE,EAAApT,MAAAb,KAAAW,WAGApB,EAAAue,EAAA7J,GASAnR,WAAA,WACA,IAEAmpB,EACAxY,EAFA1Q,EAAA/C,KAGAorB,KACA/X,KAoBA,OAlBAY,EAAAlT,UAAA+B,WAAAjC,MAAAb,MAEAisB,EAAAjsB,KAAAksB,wBACAzY,EAAAzT,KAAAmsB,oBAAAF,GAEA5lB,OAAAC,KAAAmN,GAAArH,QAAA,SAAAzD,GACA,IAAAlC,EAAAgN,EAAA9K,GAGAlC,GAAA,MAAAA,EAEA2kB,EAAA1qB,KAAA+F,GAGA4M,EAAA3S,KAAAiI,KAIA3I,KAAAosB,SAAAhB,EAAA/X,GAAArN,KAAA,SAAA+lB,GACAhpB,EAAAspB,YAAAJ,EAAAF,MASAG,sBAAA,WACA,OAAAlsB,KAAAmF,EAAA,4BAYAinB,SAAA,SAAAhB,EAAA/X,GAGA,OAAA7E,EAAAgc,SACA9qB,EAAA4Q,WAAAwG,YAGA9W,KAAAgsB,UAAAb,YAAAC,EAAA/X,IASA8Y,oBAAA,SAAAF,GACA,IACAlpB,EAAA/C,KACAyT,KAKA,OAJAwY,EAAArf,KAAA,SAAA0f,EAAA1Z,GACA,IAAA2Z,EAAAxpB,EAAAoC,EAAAyN,GACAa,EAAA8Y,EAAAtf,KAAA,UAAAsf,EAAApf,KAAA,QAEAsG,GAQA4Y,YAAA,SAAAJ,EAAAF,GACA,IAAAhpB,EAAA/C,KAGAwO,EAAAgc,UAKAyB,EAAArf,KAAA,SAAA0f,EAAA1Z,GACA,IACA2Z,EAAAxpB,EAAAoC,EAAAyN,GACAnC,EAAA,IAAA/H,GAEAiB,YACAhB,MAAA4jB,EAAAtf,KAAA,SACAxG,GAAA8lB,EAAApf,KAAA,QAEAC,EAAArK,EAAA4S,UAAA,SAAA1S,SAAAspB,GACAX,EAAAG,EAAAtb,EAAA/E,YAEA3I,EAAAypB,iBAAApf,EAAAqD,EAAAmb,GACAW,EAAAnpB,SAAA,qBAUAopB,iBAAA,SAAApf,EAAAqD,EAAAmb,GACA,IAAAa,EAAA,IAAA5O,GACA5N,IAAAjQ,KAAAF,QAAAmQ,IACAkX,OAAAnnB,KAAAF,QAAAqnB,OACAqD,OAAAhc,EAAAgc,SAIAjf,UAAAqgB,EACAnb,OACArD,OAeA,OARA1N,EAAAgtB,YAAAD,EAAAzsB,KAAA,SAMAN,EAAAgtB,YAAAD,EAAAzsB,KAAA,WAEAysB,KAIAzqB,EAAAC,QAAA6b","file":"mobile.startup.js","sourcesContent":["var\n\tmfExtend = require( './mfExtend' ),\n\tDrawer = require( './Drawer' ),\n\tutil = require( './util' ),\n\tButton = require( './Button' ),\n\tAnchor = require( './Anchor' );\n\n/**\n * @typedef {string|number|boolean|undefined} QueryVal\n * @typedef {Object.<string, QueryVal|QueryVal[]>} QueryParams\n *\n * @typedef {Object} Options\n * @prop {string} [returnTo]\n * @prop {QueryParams} [queryParams]\n * @prop {QueryParams} [signupQueryParams]\n */\n\n/**\n * This creates the drawer at the bottom of the screen that appears when an anonymous\n * user tries to perform an action that requires being logged in. It presents the user\n * with options to log in or sign up for a new account.\n * @class CtaDrawer\n * @extends Drawer\n * @uses Button\n * @uses Icon\n * @uses Anchor\n * @param {Options} options\n */\nfunction CtaDrawer( options ) {\n\tDrawer.call( this, options );\n}\n\nmfExtend( CtaDrawer, Drawer, {\n\t/**\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t * @mixes Drawer#defaults\n\t\t * @property {Object} defaults Default options hash.\n\t\t * @property {Object} defaults.collapseIcon options for Icon for collapsing the drawer\n\t\t * @property {Object} defaults.progressiveButton options for Button element for signing in\n\t\t * @property {Object} defaults.actionAnchor options for Anchor element for signing up\n\t\t */\n\tdefaults: util.extend( {}, Drawer.prototype.defaults, {\n\t\tprogressiveButton: new Button( {\n\t\t\tprogressive: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-login' )\n\t\t} ).options,\n\t\tactionAnchor: new Anchor( {\n\t\t\tprogressive: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-signup' )\n\t\t} ).options\n\t} ),\n\t/**\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t */\n\ttemplatePartials: util.extend( {}, Drawer.prototype.templatePartials, {\n\t\tbutton: Button.prototype.template,\n\t\tanchor: Anchor.prototype.template\n\t} ),\n\t/**\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'CtaDrawer.hogan' ),\n\t/**\n\t\t * @inheritdoc\n\t\t * @memberof CtaDrawer\n\t\t * @instance\n\t\t */\n\tpreRender: function () {\n\t\tvar params = redirectParams( this.options.queryParams, this.options.returnTo );\n\n\t\t// Give the button and the anchor a default target, if it isn't set already. Buttons are\n\t\t// customized by Minerva's red link drawer, skins.minerva.scripts/init.js.\n\t\tif ( !this.options.progressiveButton.href ) {\n\t\t\tthis.options.progressiveButton.href = mw.util.getUrl( 'Special:UserLogin', params );\n\t\t}\n\t\tif ( !this.options.actionAnchor.href ) {\n\t\t\tthis.options.actionAnchor.href = mw.util.getUrl(\n\t\t\t\t'Special:UserLogin', signUpParams( params, this.options.signupQueryParams )\n\t\t\t);\n\t\t}\n\t}\n} );\n\n/**\n * Special:UserLogin post-request redirect query parameters.\n * @param {QueryParams} params\n * @param {string} [redirectURL]\n * @return {QueryParams}\n */\nfunction redirectParams( params, redirectURL ) {\n\treturn util.extend( {\n\t\t// use wgPageName as this includes the namespace if outside Main\n\t\treturnto: redirectURL || mw.config.get( 'wgPageName' )\n\t}, params );\n}\n\n/**\n * Special:UserLogin account creation query parameters.\n * @param {...QueryParams} params\n * @return {QueryParams}\n */\nfunction signUpParams() {\n\t[].push.call( arguments, { type: 'signup' } );\n\treturn util.extend.apply( util, arguments );\n}\n\nCtaDrawer.prototype.test = {\n\tredirectParams: redirectParams,\n\tsignUpParams: signUpParams\n};\n\nmodule.exports = CtaDrawer;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tPanel = require( './Panel' ),\n\tutil = require( './util' ),\n\tIcon = require( './Icon' );\n\n/**\n * A {@link View} that pops up from the bottom of the screen.\n * @class Drawer\n * @extends Panel\n * @param {Object} props\n */\nfunction Drawer( props ) {\n\tPanel.call( this,\n\t\tutil.extend( {\n\t\t\tclassName: 'drawer position-fixed'\n\t\t}, props )\n\t);\n}\n\nmfExtend( Drawer, Panel, {\n\t/**\n\t * @memberof Drawer\n\t * @instance\n\t * @mixes Panel#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.cancelButton HTML of the button that closes the drawer.\n\t */\n\tdefaults: util.extend( {}, Panel.prototype.defaults, {\n\t\t// Used by CtaDrawer, BlockMessage.\n\t\tcollapseIcon: new Icon( {\n\t\t\tname: 'arrow',\n\t\t\tadditionalClassNames: 'cancel'\n\t\t} ).options\n\t} ),\n\t/**\n\t * @memberof Drawer\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, Panel.prototype.templatePartials, {\n\t\ticon: Icon.prototype.template\n\t} ),\n\t/**\n\t * Defines an element that the Drawer should automatically be appended to.\n\t * @memberof Drawer\n\t * @instance\n\t * @property {string}\n\t */\n\tappendToElement: 'body',\n\t/**\n\t * Whether the drawer should disappear on a scroll event\n\t * @memberof Drawer\n\t * @instance\n\t * @property {boolean}\n\t */\n\tcloseOnScroll: true,\n\tevents: util.extend( {}, Panel.prototype.events, {\n\t\tclick: 'stopPropagation'\n\t} ),\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Drawer\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this;\n\t\t// This module might be loaded at the top of the page e.g. Special:Uploads\n\t\t// Thus ensure we wait for the DOM to be loaded\n\t\tutil.docReady( function () {\n\t\t\tself.appendTo( self.appendToElement );\n\t\t\tself.$el.parent().addClass( 'has-drawer' );\n\t\t} );\n\t\tthis.on( 'show', this.onShowDrawer.bind( this ) );\n\t\tthis.on( 'hide', this.onHideDrawer.bind( this ) );\n\t},\n\t/**\n\t * Stop Propagation event handler\n\t * @memberof Drawer\n\t * @instance\n\t * @param {Object} ev event object\n\t * Allow the drawer itself to be clickable (e.g. for copying and pasting references\n\t * clicking links in reference)\n\t */\n\tstopPropagation: function ( ev ) {\n\t\tev.stopPropagation();\n\t},\n\n\t/**\n\t * ShowDrawer event handler\n\t * @memberof Drawer\n\t * @instance\n\t */\n\tonShowDrawer: function () {\n\t\tvar self = this;\n\n\t\tthis.$el.parent().addClass( 'drawer-visible' );\n\n\t\tsetTimeout( function () {\n\t\t\tvar $window = util.getWindow();\n\t\t\t$window.one( 'click.drawer', self.hide.bind( self ) );\n\t\t\tif ( self.closeOnScroll ) {\n\t\t\t\t$window.one( 'scroll.drawer', self.hide.bind( self ) );\n\t\t\t}\n\t\t}, self.minHideDelay );\n\t},\n\n\t/**\n\t * HideDrawer event handler\n\t * @memberof Drawer\n\t * @instance\n\t */\n\tonHideDrawer: function () {\n\t\tthis.$el.parent().removeClass( 'drawer-visible' );\n\t\t// .one() registers one callback for scroll and click independently\n\t\t// if one fired, get rid of the other one\n\t\tutil.getWindow().off( '.drawer' );\n\t}\n} );\n\nmodule.exports = Drawer;\n","/* global $ */\nvar\n\tutil = require( './util' ),\n\tmfExtend = require( './mfExtend' ),\n\toverlayManager = null;\n\n/**\n * Manages opening and closing overlays when the URL hash changes to one\n * of the registered values (see OverlayManager.add()).\n *\n * This allows overlays to function like real pages, with similar browser back/forward\n * and refresh behavior.\n *\n * @class OverlayManager\n * @param {Router} router\n * @param {string} appendToSelector\n */\nfunction OverlayManager( router, appendToSelector ) {\n\trouter.on( 'route', this._checkRoute.bind( this ) );\n\tthis.router = router;\n\t// use an object instead of an array for entries so that we don't\n\t// duplicate entries that already exist\n\tthis.entries = {};\n\t// stack of all the open overlays, stack[0] is the latest one\n\tthis.stack = [];\n\tthis.hideCurrent = true;\n\t// Set the element that overlays will be appended to\n\tif ( !appendToSelector ) {\n\t\tmw.log.warn( 'appendToSelector will soon be a required parameter to OverlayManager' );\n\t}\n\tthis.appendToSelector = appendToSelector || 'body';\n}\n\nmfExtend( OverlayManager, {\n\t/**\n\t * Don't try to hide the active overlay on a route change event triggered\n\t * by hiding another overlay.\n\t * Called when hiding an overlay.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t */\n\t_onHideOverlay: function () {\n\t\tthis.hideCurrent = false;\n\n\t\tthis.router.back();\n\t},\n\n\t/** Attach overlay to DOM\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to attach\n\t*/\n\t_attachOverlay: function ( overlay ) {\n\t\tif ( !overlay.$el.parents().length ) {\n\t\t\t$( this.appendToSelector ).append( overlay.$el );\n\t\t}\n\t},\n\t/**\n\t * Show the overlay and bind the '_om_hide' event to _onHideOverlay.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to show\n\t */\n\t_show: function ( overlay ) {\n\n\t\t// if hidden using overlay (not hardware) button, update the state\n\t\toverlay.once( '_om_hide', this._onHideOverlay.bind( this ) );\n\n\t\tthis._attachOverlay( overlay );\n\t\toverlay.show();\n\t},\n\n\t/**\n\t * Hide overlay\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Overlay} overlay to hide\n\t * @return {boolean} Whether the overlay has been hidden\n\t */\n\t_hideOverlay: function ( overlay ) {\n\t\tvar result;\n\n\t\t// remove the callback for updating state when overlay closed using\n\t\t// overlay close button\n\t\toverlay.off( '_om_hide' );\n\n\t\tresult = overlay.hide( this.stack.length > 1 );\n\n\t\t// if closing prevented, reattach the callback\n\t\tif ( !result ) {\n\t\t\toverlay.once( '_om_hide', this._onHideOverlay.bind( this ) );\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Show match's overlay if match is not null.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {Object|null} match Object with factory function's result. null if no match.\n\t */\n\t_processMatch: function ( match ) {\n\t\tvar factoryResult,\n\t\t\tself = this;\n\n\t\t/**\n\t\t * Attach an event to the overlays hide event\n\t\t * @param {Overlay} overlay\n\t\t */\n\t\tfunction attachHideEvent( overlay ) {\n\t\t\toverlay.on( 'hide', function () {\n\t\t\t\toverlay.emit( '_om_hide' );\n\t\t\t} );\n\t\t}\n\n\t\tif ( match ) {\n\t\t\tif ( match.overlay ) {\n\t\t\t\t// if the match is an overlay that was previously opened, reuse it\n\t\t\t\tself._show( match.overlay );\n\t\t\t} else {\n\t\t\t\t// else create an overlay using the factory function result (either\n\t\t\t\t// a promise or an overlay)\n\t\t\t\tfactoryResult = match.factoryResult;\n\t\t\t\t// http://stackoverflow.com/a/13075985/365238\n\t\t\t\tif ( typeof factoryResult.promise === 'function' ) {\n\t\t\t\t\tfactoryResult.then( function ( overlay ) {\n\t\t\t\t\t\tmatch.overlay = overlay;\n\t\t\t\t\t\tattachHideEvent( overlay );\n\t\t\t\t\t\tself._show( overlay );\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tmatch.overlay = factoryResult;\n\t\t\t\t\tattachHideEvent( match.overlay );\n\t\t\t\t\tself._show( factoryResult );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * A callback for Router's `route` event.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {jQuery.Event} ev Event object.\n\t */\n\t_checkRoute: function ( ev ) {\n\t\tvar\n\t\t\tcurrent = this.stack[0],\n\t\t\tmatch;\n\n\t\t// When entering an overlay for the first time,\n\t\t// the manager should remember the user's scroll position\n\t\t// overlays always open at top of page\n\t\t// and we'll want to restore it later.\n\t\t// This should happen before the call to _matchRoute which will \"show\" the overlay.\n\t\t// The Overlay has similar logic for overlays that are not managed via the overlay.\n\t\tif ( !current ) {\n\t\t\tthis.scrollTop = window.pageYOffset;\n\t\t}\n\n\t\tmatch = Object.keys( this.entries ).reduce( function ( m, id ) {\n\t\t\treturn m || this._matchRoute( ev.path, this.entries[ id ] );\n\t\t}.bind( this ), null );\n\n\t\t// if there is an overlay in the stack and it's opened, try to close it\n\t\tif (\n\t\t\tcurrent &&\n\t\t\tcurrent.overlay !== undefined &&\n\t\t\tthis.hideCurrent &&\n\t\t\t!this._hideOverlay( current.overlay )\n\t\t) {\n\t\t\t// if hide prevented, prevent route change event\n\t\t\tev.preventDefault();\n\t\t} else if ( !match ) {\n\t\t\t// if hidden and no new matches, reset the stack\n\t\t\tthis.stack = [];\n\t\t\t// restore the scroll position.\n\t\t\twindow.scrollTo( window.pageXOffset, this.scrollTop );\n\t\t}\n\n\t\tthis.hideCurrent = true;\n\t\tthis._processMatch( match );\n\t},\n\n\t/**\n\t * Check if a given path matches one of the entries.\n\t * @memberof OverlayManager\n\t * @instance\n\t * @private\n\t * @param {string} path Path (hash) to check.\n\t * @param {Object} entry Entry object created in OverlayManager#add.\n\t * @return {Object|null} Match object with factory function's result.\n\t *  Returns null if no match.\n\t */\n\t_matchRoute: function ( path, entry ) {\n\t\tvar\n\t\t\tnext,\n\t\t\tmatch = path.match( entry.route ),\n\t\t\tprevious = this.stack[1],\n\t\t\tself = this;\n\n\t\t/**\n\t\t * Returns object to add to stack\n\t\t * @method\n\t\t * @ignore\n\t\t * @return {Object}\n\t\t */\n\t\tfunction getNext() {\n\t\t\treturn {\n\t\t\t\tpath: path,\n\t\t\t\tfactoryResult: entry.factory.apply( self, match.slice( 1 ) )\n\t\t\t};\n\t\t}\n\n\t\tif ( match ) {\n\t\t\t// if previous stacked overlay's path matches, assume we're going back\n\t\t\t// and reuse a previously opened overlay\n\t\t\tif ( previous && previous.path === path ) {\n\t\t\t\tif ( previous.overlay && previous.overlay.hasLoadError ) {\n\t\t\t\t\tself.stack.shift();\n\t\t\t\t\t// Loading of overlay failed so we want to replace it with a new\n\t\t\t\t\t// overlay (which will try to load successfully)\n\t\t\t\t\tself.stack[0] = getNext();\n\t\t\t\t\treturn self.stack[0];\n\t\t\t\t}\n\n\t\t\t\tself.stack.shift();\n\t\t\t\treturn previous;\n\t\t\t} else {\n\t\t\t\tnext = getNext();\n\t\t\t\tif ( this.stack[0] && next.path === this.stack[0].path ) {\n\t\t\t\t\t// current overlay path is same as path to check which means overlay\n\t\t\t\t\t// is attempting to refresh so just replace current overlay with new\n\t\t\t\t\t// overlay\n\t\t\t\t\tself.stack[0] = next;\n\t\t\t\t} else {\n\t\t\t\t\tself.stack.unshift( next );\n\t\t\t\t}\n\t\t\t\treturn next;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Add an overlay that should be shown for a specific fragment identifier.\n\t *\n\t * The following code will display an overlay whenever a user visits a URL that\n\t * end with '#/hi/name'. The value of `name` will be passed to the overlay.\n\t *\n\t *     @example\n\t *     overlayManager.add( /\\/hi\\/(.*)/, function ( name ) {\n\t *       var factoryResult = $.Deferred();\n\t *\n\t *       mw.using( 'mobile.HiOverlay', function () {\n\t *         var HiOverlay = M.require( 'HiOverlay' );\n\t *         factoryResult.resolve( new HiOverlay( { name: name } ) );\n\t *       } );\n\t *\n\t *       return factoryResult;\n\t *     } );\n\t *\n\t * @memberof OverlayManager\n\t * @instance\n\t * @param {RegExp} route route regular expression, optionally with parameters.\n\t * @param {Function} factory a function returning an overlay or a $.Deferred\n\t * which resolves to an overlay.\n\t */\n\tadd: function ( route, factory ) {\n\t\tvar self = this,\n\t\t\tentry = {\n\t\t\t\troute: route,\n\t\t\t\tfactory: factory\n\t\t\t};\n\n\t\tthis.entries[route] = entry;\n\t\t// Check if overlay should be shown for the current path.\n\t\t// The DOM must fully load before we can show the overlay because Overlay relies on it.\n\t\tutil.docReady( function () {\n\t\t\tself._processMatch( self._matchRoute( self.router.getPath(), entry ) );\n\t\t} );\n\t},\n\n\t/**\n\t * Replace the currently displayed overlay with a new overlay without changing the\n\t * URL. This is useful for when you want to switch overlays, but don't want to\n\t * change the back button or close box behavior.\n\t *\n\t * @memberof OverlayManager\n\t * @instance\n\t * @param {Object} overlay The overlay to display\n\t */\n\treplaceCurrent: function ( overlay ) {\n\t\tif ( this.stack.length === 0 ) {\n\t\t\tthrow new Error( 'Trying to replace OverlayManager\\'s current overlay, but stack is empty' );\n\t\t}\n\t\tthis._hideOverlay( this.stack[0].overlay );\n\t\tthis.stack[0].overlay = overlay;\n\t\tthis._show( overlay );\n\t}\n} );\n\n/**\n * Retrieve a singleton instance using 'mediawiki.router'.\n * @memberof OverlayManager\n * @return {OverlayManager}\n */\nOverlayManager.getSingleton = function () {\n\tif ( !overlayManager ) {\n\t\toverlayManager = new OverlayManager( mw.loader.require( 'mediawiki.router' ), 'body' );\n\t}\n\treturn overlayManager;\n};\n\nmodule.exports = OverlayManager;\n","var\n\tHTML = mw.html,\n\tmfExtend = require( './mfExtend' ),\n\ttime = require( './time' ),\n\tutil = require( './util' ),\n\tSection = require( './Section' ),\n\tThumbnail = require( './Thumbnail' ),\n\tView = require( './View' ),\n\tHEADING_SELECTOR = mw.config.get( 'wgMFMobileFormatterHeadings', [ 'h1', 'h2', 'h3', 'h4', 'h5' ] ).join( ',' ),\n\tBLACKLISTED_THUMBNAIL_CLASS_SELECTORS = [ 'noviewer', 'metadata' ];\n\n/**\n * Mobile page view object\n *\n * @class Page\n * @uses Section\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Page( options ) {\n\n\tutil.extend( this, {\n\t\toptions: options,\n\t\ttitle: options.title,\n\t\tdisplayTitle: options.displayTitle,\n\t\turl: options.url || mw.util.getUrl( options.title ),\n\t\tid: options.id,\n\t\twikidataDescription: options.wikidataDescription,\n\t\tthumbnail: ( Object.prototype.hasOwnProperty.call( options, 'thumbnail' ) ) ?\n\t\t\toptions.thumbnail : false,\n\t\tisMissing: ( options.isMissing !== undefined ) ?\n\t\t\toptions.isMissing : options.id === 0\n\t} );\n\n\tthis.options.isBorderBox = false;\n\tthis.options.languageUrl = mw.util.getUrl( 'Special:MobileLanguages/' + this.title );\n\n\tView.call( this, this.options );\n\n\t// Fallback if no displayTitle provided\n\tif ( !this.displayTitle ) {\n\t\tthis.displayTitle = this.getDisplayTitle();\n\t}\n\n\tif ( this.thumbnail && this.thumbnail.width ) {\n\t\tthis.thumbnail.isLandscape = this.thumbnail.width > this.thumbnail.height;\n\t}\n}\n\nmfExtend( Page, View, {\n\t/**\n\t * @memberof Page\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {number} defaults.id Page ID. The default value of 0 represents a\n\t * new or missing page. Be sure to override it to avoid side effects.\n\t * @property {string} defaults.title Title of the page. It includes prefix where needed and\n\t * is human readable, e.g. Talk:The man who lived.\n\t * @property {string} defaults.displayTitle HTML title of the page for display. Falls back\n\t * to defaults.title (escaped) if no value is provided. Must be safe HTML!\n\t * @property {number} defaults.namespaceNumber the number of the\n\t *  namespace the page belongs to\n\t * @property {Object} defaults.protection List of permissions as returned by API,\n\t * e.g. [{ edit: ['*'] }]\n\t * @property {Array} defaults.sections Array of {Section} objects.\n\t * @property {boolean} defaults.isMainPage Whether the page is the Main Page.\n\t * @property {boolean} defaults.isMissing Whether the page exists in the wiki.\n\t * @property {Object} defaults.thumbnail thumbnail definition corresponding to page image\n\t * @property {boolean} defaults.thumbnail.isLandscape whether the image is in\n\t *  landscape format\n\t * @property {number} defaults.thumbnail.width of image in pixels.\n\t * @property {number} defaults.thumbnail.height of image in pixels.\n\t * @property {string} defaults.thumbnail.source url for image\n\t */\n\tdefaults: {\n\t\tid: 0,\n\t\ttitle: '',\n\t\tdisplayTitle: '',\n\t\tnamespaceNumber: 0,\n\t\tprotection: {\n\t\t\tedit: [ '*' ]\n\t\t},\n\t\tsections: [],\n\t\tisMissing: false,\n\t\tisMainPage: false,\n\t\turl: undefined,\n\t\tthumbnail: {\n\t\t\tisLandscape: undefined,\n\t\t\tsource: undefined,\n\t\t\twidth: undefined,\n\t\t\theight: undefined\n\t\t}\n\t},\n\t/**\n\t * Retrieve the title that should be displayed to the user\n\t * @memberof Page\n\t * @instance\n\t * @return {string} HTML\n\t */\n\tgetDisplayTitle: function () {\n\t\treturn this.options.displayTitle || HTML.escape( this.options.title );\n\t},\n\t/**\n\t * Determine if current page is in a specified namespace\n\t * @memberof Page\n\t * @instance\n\t * @param {string} namespace Name of namespace\n\t * @return {boolean}\n\t */\n\tinNamespace: function ( namespace ) {\n\t\treturn this.options.namespaceNumber === mw.config.get( 'wgNamespaceIds' )[namespace];\n\t},\n\n\t/**\n\t * Find the heading in the page.\n\t * This has the benefit of excluding any additional h2s and h3s that may\n\t * have been added programatically.\n\t * @method\n\t * @param {number} sectionIndex as defined by the PHP parser.\n\t *  It should correspond to the section id\n\t *  used in the edit link for the section.\n\t *  Note, confusingly, this is different from section \"ID\" which is\n\t * used in methods\n\t * @return {jQuery.Object}\n\t */\n\tfindSectionHeadingByIndex: function ( sectionIndex ) {\n\t\tif ( sectionIndex < 1 ) {\n\t\t\t// negative indexes will search from the end, which is behaviour we do not want.\n\t\t\t// return an empty set when this happens.\n\t\t\treturn this.$();\n\t\t} else {\n\t\t\treturn this.$( HEADING_SELECTOR )\n\t\t\t\t// Headings must strictly be a child element of a section element\n\t\t\t\t// or the parser-output.\n\t\t\t\t// Not an ancestor!\n\t\t\t\t.filter( '.mw-parser-output > *, [class^=\"mf-section-\"] > *' ).eq( sectionIndex - 1 );\n\t\t}\n\t},\n\t/**\n\t * Finds all child elements that match the selector in a given section or subsection.\n\t * Returns any direct child elements that match the selector,\n\t * (i.e. searches only one level deep)\n\t * as well as any elements that match the selector within those children.\n\t * If the Page has no headings (e.g. a stub),\n\t * then the search will target all nodes within the page.\n\t *\n\t * This code should work on desktop (PHP parser HTML)\n\t * as well as mobile formatted HTML (PHP parser + MobileFormatter)\n\t * @method\n\t * @param {number} sectionIndex as defined by the PHP parser. It should correspond to\n\t *  the section id used in the edit link for the section.\n\t *  Note, confusingly, this is different from section \"ID\" which is\n\t *  used in methods\n\t * @param {string} selector to match\n\t * @return {jQuery.Object}\n\t */\n\tfindChildInSectionLead: function ( sectionIndex, selector ) {\n\t\tvar $heading, $nextHeading, $container, $lead,\n\t\t\theadingSelector = HEADING_SELECTOR;\n\n\t\tfunction withNestedChildren( $matchingNodes ) {\n\t\t\treturn $matchingNodes.find( selector ).addBack();\n\t\t}\n\n\t\tif ( sectionIndex === 0 ) {\n\t\t\t// lead is easy\n\t\t\t$lead = this.getLeadSectionElement();\n\t\t\tif ( $lead && $lead.length ) {\n\t\t\t\treturn withNestedChildren( $lead.children( selector ) );\n\t\t\t} else {\n\t\t\t\t$heading = this.findSectionHeadingByIndex( 1 );\n\t\t\t\treturn $heading.length ? withNestedChildren( $heading.prevAll( selector ) ) :\n\t\t\t\t\t// this page is a stub so search entire page\n\t\t\t\t\tthis.$( selector );\n\t\t\t}\n\t\t}\n\n\t\t// find heading associated with the section by looking at its\n\t\t// index position in the article\n\t\t// section ids relate to the element position in the page and the first heading\n\t\t// lead has been dealt with above, so first heading corresponds to section 1,\n\t\t// the first heading in the article.\n\t\t$heading = this.findSectionHeadingByIndex( sectionIndex );\n\n\t\t// If section-heading is present on the heading,\n\t\t// then we know the page has been MobileFormatted\n\t\t// and that this is a wrapped section\n\t\tif ( $heading.hasClass( 'section-heading' ) ) {\n\t\t\t// get content of section\n\t\t\t$container = $heading.next();\n\t\t\t// inside section find the first heading\n\t\t\t$nextHeading = $container.find( headingSelector ).eq( 0 );\n\t\t\treturn $nextHeading.length ?\n\t\t\t\t// find all amboxes before the next heading\n\t\t\t\twithNestedChildren( $nextHeading.prevAll( selector ) ) :\n\t\t\t\t// There is no subheadings inside\n\t\t\t\t// Grab all issues in section\n\t\t\t\twithNestedChildren( $container.children( selector ) );\n\t\t} else {\n\t\t\t// the heading relates to a subsection (or unwrapped desktop section),\n\t\t\t// so grab elements between this and the next one\n\t\t\t$nextHeading = $heading.eq( 0 ).nextAll( headingSelector ).eq( 0 );\n\t\t\treturn $heading.nextUntil( $nextHeading, selector );\n\t\t}\n\t},\n\n\t/**\n\t * Get the lead section of the page view.\n\t * @memberof Page\n\t * @instance\n\t * @return {jQuery.Object|null}\n\t */\n\tgetLeadSectionElement: function () {\n\t\t/*\n\t\t * The page is formatted as follows:\n\t\t * <div id=\"bodyContent\">\n\t\t *   <!-- content of the page.. -->\n\t\t *   <div id=\"mw-content-text\">\n\t\t *     <div class=\"mf-section-0\">lead section</div>\n\t\t *     <h2></h2>\n\t\t *     <div class=\"mf-section-1\">second section</div>\n\t\t *   </div>\n\t\t * </div>\n\t\t */\n\t\tif ( this.$( '.mf-section-0' ).length ) {\n\t\t\treturn this.$( '.mf-section-0' );\n\t\t}\n\t\t// no lead section found\n\t\treturn null;\n\t},\n\n\t/**\n\t * Determines if content model is wikitext\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisWikiText: function () {\n\t\treturn mw.config.get( 'wgPageContentModel' ) === 'wikitext';\n\t},\n\n\t/**\n\t * Checks whether the current page is the main page\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisMainPage: function () {\n\t\treturn this.options.isMainPage;\n\t},\n\t/**\n\t * Checks whether the current page is watched\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisWatched: function () {\n\t\treturn this.options.isWatched;\n\t},\n\n\t/**\n\t * Return the latest revision id for this page\n\t * @memberof Page\n\t * @instance\n\t * @return {number}\n\t */\n\tgetRevisionId: function () {\n\t\treturn this.options.revId;\n\t},\n\n\t/**\n\t * Return prefixed page title\n\t * @memberof Page\n\t * @instance\n\t * @return {string}\n\t */\n\tgetTitle: function () {\n\t\treturn this.options.title;\n\t},\n\n\t/**\n\t * Return page id\n\t * @memberof Page\n\t * @instance\n\t * @return {number}\n\t */\n\tgetId: function () {\n\t\treturn this.options.id;\n\t},\n\n\t/**\n\t * return namespace id\n\t * @memberof Page\n\t * @instance\n\t * @return {number} namespace Number\n\t */\n\tgetNamespaceId: function () {\n\t\tvar nsId,\n\t\t\targs = this.options.title.split( ':' );\n\n\t\tif ( args[1] ) {\n\t\t\tnsId = mw.config.get( 'wgNamespaceIds' )[ args[0].toLowerCase().replace( ' ', '_' ) ] || 0;\n\t\t} else {\n\t\t\tnsId = 0;\n\t\t}\n\t\treturn nsId;\n\t},\n\n\t/**\n\t * Determines if current page is a talk page\n\t * @memberof Page\n\t * @instance\n\t * @return {boolean} Whether the page is a talk page or not\n\t */\n\tisTalkPage: function () {\n\t\tvar ns = this.getNamespaceId();\n\t\t// all talk pages are odd Numbers (except the case of special pages)\n\t\treturn ns > 0 && ns % 2 === 1;\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Page\n\t * @instance\n\t */\n\tpreRender: function () {\n\t\tthis.sections = [];\n\t\tthis._sectionLookup = {};\n\t\tthis.title = this.options.title;\n\n\t\tthis.options.sections.forEach( function ( sectionData ) {\n\t\t\tvar section = new Section( sectionData );\n\t\t\tthis.sections.push( section );\n\t\t\tthis._sectionLookup[section.id] = section;\n\t\t}.bind( this ) );\n\t},\n\n\t/**\n\t * Return all the thumbnails in the article.\n\t * Images which have a class or link container (.image|.thumbimage)\n\t * that matches one of the items of the constant BLACKLISTED_THUMBNAIL_CLASS_SELECTORS\n\t * will be excluded.\n\t * A thumbnail nested inside one of these classes will still be returned.\n\t * e.g. `<div class=\"noviewer\"><a class=\"image\"><img></a></div>` is not a valid thumbnail\n\t * `<a class=\"image noviewer\"><img></a>` is not a valid thumbnail\n\t * `<a class=\"image\"><img class=\"noviewer\"></a>` is not a valid thumbnail\n\t * @memberof Page\n\t * @instance\n\t * @return {Thumbnail[]}\n\t */\n\tgetThumbnails: function () {\n\t\tvar $thumbs,\n\t\t\t$el = this.$el,\n\t\t\tblacklistSelector = '.' + BLACKLISTED_THUMBNAIL_CLASS_SELECTORS.join( ',.' ),\n\t\t\tthumbs = [];\n\n\t\tif ( !this._thumbs ) {\n\t\t\t$thumbs = $el.find( 'a.image, a.thumbimage' )\n\t\t\t\t.not( blacklistSelector );\n\n\t\t\t$thumbs.each( function () {\n\t\t\t\tvar $a = $el.find( this ),\n\t\t\t\t\t$lazyImage = $a.find( '.lazy-image-placeholder' ),\n\t\t\t\t\t// Parents need to be checked as well.\n\t\t\t\t\tvalid = $a.parents( blacklistSelector ).length === 0 &&\n\t\t\t\t\t\t$a.find( blacklistSelector ).length === 0,\n\t\t\t\t\tlegacyMatch = $a.attr( 'href' ).match( /title=([^/&]+)/ ),\n\t\t\t\t\tmatch = $a.attr( 'href' ).match( /[^/]+$/ );\n\n\t\t\t\t// filter out invalid lazy loaded images if so far image is valid\n\t\t\t\tif ( $lazyImage.length && valid ) {\n\t\t\t\t\t// if the regex matches it means the image has one of the classes\n\t\t\t\t\t// thus we must invert the result\n\t\t\t\t\tvalid = !new RegExp( '\\\\b(' + BLACKLISTED_THUMBNAIL_CLASS_SELECTORS.join( '|' ) + ')\\\\b' )\n\t\t\t\t\t\t.test( $lazyImage.data( 'class' ) );\n\t\t\t\t}\n\n\t\t\t\tif ( valid && ( legacyMatch || match ) ) {\n\t\t\t\t\tthumbs.push(\n\t\t\t\t\t\tnew Thumbnail( {\n\t\t\t\t\t\t\tel: $a,\n\t\t\t\t\t\t\tfilename: decodeURIComponent(\n\t\t\t\t\t\t\t\tlegacyMatch ? legacyMatch[1] : match[0]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} );\n\t\t\tthis._thumbs = thumbs;\n\t\t}\n\t\treturn this._thumbs;\n\t},\n\n\t/**\n\t * FIXME: Change function signature to take the anchor of the heading\n\t * @memberof Page\n\t * @instance\n\t * @param {string} id of the section as defined by MobileFormatter.\n\t * Note, that currently, this is different from\n\t * the PHP parser in that it relates to top-level sections.\n\t * For example, mf-section-1 would relate to section 1. See FIXME.\n\t * @return {Section}\n\t */\n\tgetSection: function ( id ) {\n\t\treturn this._sectionLookup[ id ];\n\t},\n\n\t/**\n\t * Obtain the list of high level (and grouped) sections.\n\t * Note that this list will not include subsections.\n\t * @memberof Page\n\t * @instance\n\t * @return {Array} of Section instances\n\t */\n\tgetSections: function () {\n\t\treturn this.sections;\n\t},\n\n\t/**\n\t * Returns a jQuery object representing all redlinks on the page.\n\t * @memberof Page\n\t * @instance\n\t * @return {jQuery.Object}\n\t */\n\tgetRedLinks: function () {\n\t\treturn this.$( '.new' );\n\t}\n} );\n\n/**\n * Create a Page object from an API response.\n *\n * @memberof Page\n * @param {Object} resp as representing a page in the API\n * @return {Page}\n */\nPage.newFromJSON = function ( resp ) {\n\tvar revision, displayTitle,\n\t\tthumb = resp.thumbnail,\n\t\tpageprops = resp.pageprops || {\n\t\t\tdisplaytitle: HTML.escape( resp.title )\n\t\t},\n\t\tterms = resp.terms;\n\n\tif ( pageprops || terms ) {\n\t\t// The label is either the display title or the label pageprop\n\t\t// (the latter used by Wikidata)\n\t\t// Long term we want to consolidate these.\n\t\t// Note that pageprops.displaytitle is HTML, while\n\t\t// terms.label[0] is plain text.\n\t\tdisplayTitle = terms && terms.label ?\n\t\t\tHTML.escape( terms.label[0] ) : pageprops.displaytitle;\n\t}\n\t// Add Wikidata descriptions if available (T101719)\n\tresp.wikidataDescription = resp.description || undefined;\n\n\tif ( thumb ) {\n\t\tresp.thumbnail.isLandscape = thumb.width > thumb.height;\n\t}\n\n\t// page may or may not exist.\n\tif ( resp.revisions && resp.revisions[0] ) {\n\t\trevision = resp.revisions[0];\n\t\tresp.lastModified = time.getLastModifiedMessage(\n\t\t\tnew Date( revision.timestamp ).getTime() / 1000,\n\t\t\trevision.user\n\t\t);\n\t}\n\n\treturn new Page(\n\t\tutil.extend( resp, {\n\t\t\tid: resp.pageid,\n\t\t\tisMissing: !!resp.missing,\n\t\t\turl: mw.util.getUrl( resp.title ),\n\t\t\tdisplayTitle: displayTitle // this is HTML!\n\t\t} )\n\t);\n};\n\n/**\n * Selector for matching headings\n *\n * @memberof Page\n */\nPage.HEADING_SELECTOR = HEADING_SELECTOR;\n\nmodule.exports = Page;\n","var sectionTemplate = mw.template.get( 'mobile.startup', 'Section.hogan' ),\n\tutil = require( './util.js' ),\n\tactionParams = require( './actionParams' ),\n\tcache = {};\n\n/**\n * Add child to listOfSections if the level of child is the same as the last\n * child of listOfSections, otherwise add it to the children of the last\n * section of listOfSections. If listOfSections is empty, just add child to it.\n * @private\n * @param {Array} listOfSections - Array of section ids\n * @param {Object} child - Section to be added to listOfSections\n */\nfunction assignToParent( listOfSections, child ) {\n\tvar section;\n\tif ( listOfSections.length === 0 ) {\n\t\tlistOfSections.push( child );\n\t} else {\n\t\t// take a look at the last child\n\t\tsection = listOfSections[listOfSections.length - 1];\n\t\t// If the level is the same as another section in this list it is a sibling\n\t\tif ( parseInt( section.level, 10 ) === parseInt( child.level, 10 ) ) {\n\t\t\tlistOfSections.push( child );\n\t\t} else {\n\t\t\t// Otherwise take a look at that sections children recursively\n\t\t\tassignToParent( section.subsections, child );\n\t\t}\n\t}\n}\n\n/**\n * Order sections hierarchically\n * @private\n * @param {Array} sections Array of section objects created from response HTML\n * @return {Array} Ordered array of sections\n */\nfunction transformSections( sections ) {\n\tvar\n\t\tsectionLevels = sections.map( function ( s ) {\n\t\t\treturn s.level;\n\t\t} ),\n\t\texistingSectionLevels = sectionLevels.filter( function ( level ) {\n\t\t\treturn !!level;\n\t\t} ),\n\t\tcollapseLevel = Math.min.apply( this, existingSectionLevels ).toString(),\n\t\tlastSection,\n\t\tresult = [];\n\n\t// if the first section level is not equal to collapseLevel, this first\n\t// section will not have a parent and will be appended to the result.\n\tsections.forEach( function ( section ) {\n\t\tif ( section.line !== undefined ) {\n\t\t\tsection.line = section.line.replace( /<\\/?a\\b[^>]*>/g, '' );\n\t\t}\n\t\tsection.subsections = [];\n\n\t\tif (\n\t\t\t!lastSection ||\n\t\t\t(\n\t\t\t\t!section.level ||\n\t\t\t\tsection.level === collapseLevel\n\t\t\t) ||\n\t\t\t// make sure lastSections first child's level is bigger than section.level\n\t\t\t(\n\t\t\t\tlastSection.subsections.length &&\n\t\t\t\tlastSection.subsections[0].level > section.level\n\t\t\t) ||\n\t\t\t// also make sure section.level is not bigger than the lastSection.level\n\t\t\t(\n\t\t\t\tlastSection.level &&\n\t\t\t\tlastSection.level >= section.level\n\t\t\t)\n\t\t) {\n\t\t\tresult.push( section );\n\t\t\tlastSection = section;\n\t\t} else {\n\t\t\tassignToParent( lastSection.subsections, section );\n\t\t\tlastSection.text += sectionTemplate.render( section );\n\t\t}\n\t} );\n\n\treturn result;\n}\n\n/**\n * API for providing Page data\n * @class PageGateway\n * @param {mw.Api} api\n */\nfunction PageGateway( api ) {\n\tthis.api = api;\n}\n\nPageGateway.prototype = {\n\t/**\n\t * Retrieve a page from the api\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page to be retrieved\n\t * @param {string} endpoint an alternative api url to retrieve the page from\n\t * @param {boolean} leadOnly When set only the lead section content is returned\n\t * @return {jQuery.Deferred} with parameter page data that can be passed to a Page view\n\t */\n\tgetPage: function ( title, endpoint, leadOnly ) {\n\t\tvar timestamp,\n\t\t\td = util.Deferred(),\n\t\t\tparams = endpoint ? {\n\t\t\t\turl: endpoint,\n\t\t\t\tdataType: 'jsonp'\n\t\t\t} : {},\n\t\t\tprotection = {\n\t\t\t\tedit: [ '*' ]\n\t\t\t};\n\n\t\tutil.extend( params,\n\t\t\tactionParams( {\n\t\t\t\taction: 'mobileview',\n\t\t\t\tpage: title,\n\t\t\t\tvariant: mw.config.get( 'wgPageContentLanguage' ),\n\t\t\t\tredirect: 'yes',\n\t\t\t\tprop: 'id|sections|text|lastmodified|lastmodifiedby|languagecount|hasvariants|protection|displaytitle|revision',\n\t\t\t\tnoheadings: 'yes',\n\t\t\t\tsectionprop: 'level|line|anchor',\n\t\t\t\tsections: leadOnly ? 0 : 'all'\n\t\t\t} )\n\t\t);\n\n\t\tif ( !cache[title] ) {\n\t\t\tcache[title] = this.api.get( params ).then( function ( resp ) {\n\t\t\t\tvar sections, lastModified, resolveObj, mv;\n\n\t\t\t\tif ( resp.error ) {\n\t\t\t\t\treturn d.reject( resp.error );\n\t\t\t\t} else if ( !resp.mobileview.sections ) {\n\t\t\t\t\treturn d.reject( 'No sections' );\n\t\t\t\t} else {\n\t\t\t\t\tmv = resp.mobileview;\n\t\t\t\t\tsections = transformSections( mv.sections );\n\t\t\t\t\t// Assume the timestamp is in the form TS_ISO_8601\n\t\t\t\t\t// and we don't care about old browsers\n\t\t\t\t\t// change to seconds to be consistent with PHP\n\t\t\t\t\ttimestamp = new Date( mv.lastmodified ).getTime() / 1000;\n\t\t\t\t\tlastModified = mv.lastmodifiedby;\n\n\t\t\t\t\t// FIXME: [API] the API sometimes returns an object and sometimes an array\n\t\t\t\t\t// There are various quirks with the format of protection level\n\t\t\t\t\t// as returned by api.\n\t\t\t\t\t// Also it is usually incomplete - if something is missing this means\n\t\t\t\t\t// that it has no protection level.\n\t\t\t\t\t// When an array this means there is no protection level set.\n\t\t\t\t\t// To keep the data type consistent either use the predefined\n\t\t\t\t\t// protection level,\n\t\t\t\t\t// or extend it with what is returned by API.\n\t\t\t\t\tprotection = Array.isArray( mv.protection ) ?\n\t\t\t\t\t\tprotection :\n\t\t\t\t\t\tutil.extend( protection, mv.protection );\n\n\t\t\t\t\tresolveObj = {\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tid: mv.id,\n\t\t\t\t\t\trevId: mv.revId,\n\t\t\t\t\t\tprotection: protection,\n\t\t\t\t\t\tlead: sections[0].text,\n\t\t\t\t\t\tsections: sections.slice( 1 ),\n\t\t\t\t\t\tisMainPage: mv.mainpage !== undefined,\n\t\t\t\t\t\thistoryUrl: mw.util.getUrl( title, {\n\t\t\t\t\t\t\taction: 'history'\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\tlastModifiedTimestamp: timestamp,\n\t\t\t\t\t\tlanguageCount: mv.languagecount,\n\t\t\t\t\t\thasVariants: mv.hasvariants !== undefined,\n\t\t\t\t\t\tdisplayTitle: mv.displaytitle\n\t\t\t\t\t};\n\t\t\t\t\t// Add non-anonymous user information\n\t\t\t\t\tif ( lastModified ) {\n\t\t\t\t\t\tutil.extend( resolveObj, {\n\t\t\t\t\t\t\tlastModifiedUserName: lastModified.name,\n\t\t\t\t\t\t\tlastModifiedUserGender: lastModified.gender\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t\t// FIXME: Return a Page class here\n\t\t\t\t\treturn resolveObj;\n\t\t\t\t}\n\t\t\t}, function ( msg ) {\n\t\t\t\treturn d.reject( msg );\n\t\t\t} );\n\t\t}\n\n\t\treturn cache[title];\n\t},\n\n\t/**\n\t * Invalidate the internal cache for a given page\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page who's cache you want to invalidate\n\t */\n\tinvalidatePage: function ( title ) {\n\t\tdelete cache[title];\n\t},\n\n\t/**\n\t * Gets language variant list for a page; helper function for getPageLanguages()\n\t * @memberof PageGateway\n\t * @instance\n\t * @private\n\t * @param  {string} title Name of the page to obtain variants for\n\t * @param  {Object} data Data from API\n\t * @return {Array|boolean} List of language variant objects or false if no variants exist\n\t */\n\t_getLanguageVariantsFromApiResponse: function ( title, data ) {\n\t\tvar generalData = data.query.general,\n\t\t\tvariantPath = generalData.variantarticlepath,\n\t\t\tvariants = [];\n\n\t\tif ( !generalData.variants ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Create the data object for each variant and store it\n\t\tObject.keys( generalData.variants ).forEach( function ( index ) {\n\t\t\tvar item = generalData.variants[ index ],\n\t\t\t\tvariant = {\n\t\t\t\t\tautonym: item.name,\n\t\t\t\t\tlang: item.code\n\t\t\t\t};\n\n\t\t\tif ( variantPath ) {\n\t\t\t\tvariant.url = variantPath\n\t\t\t\t\t.replace( '$1', title )\n\t\t\t\t\t.replace( '$2', item.code );\n\t\t\t} else {\n\t\t\t\tvariant.url = mw.util.getUrl( title, {\n\t\t\t\t\tvariant: item.code\n\t\t\t\t} );\n\t\t\t}\n\t\t\tvariants.push( variant );\n\t\t} );\n\n\t\treturn variants;\n\t},\n\n\t/**\n\t * Retrieve available languages for a given title\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {string} title the title of the page languages should be retrieved for\n\t * @param {string} [language] when provided the names of the languages returned\n\t *  will be translated additionally into this language.\n\t * @return {jQuery.Deferred} which is called with an object containing langlinks\n\t * and variant links as defined @ https://en.m.wikipedia.org/w/api.php?action=help&modules=query%2Blanglinks\n\t */\n\tgetPageLanguages: function ( title, language ) {\n\t\tvar self = this,\n\t\t\targs = actionParams( {\n\t\t\t\tmeta: 'siteinfo',\n\t\t\t\tsiprop: 'general',\n\t\t\t\tprop: 'langlinks',\n\t\t\t\tlllimit: 'max',\n\t\t\t\ttitles: title\n\t\t\t} );\n\n\t\tif ( language ) {\n\t\t\targs.llprop = 'url|autonym|langname';\n\t\t\targs.llinlanguagecode = language;\n\t\t} else {\n\t\t\targs.llprop = 'url|autonym';\n\t\t}\n\t\treturn this.api.get( args ).then( function ( resp ) {\n\t\t\treturn {\n\t\t\t\tlanguages: resp.query.pages[0].langlinks || [],\n\t\t\t\tvariants: self._getLanguageVariantsFromApiResponse( title, resp )\n\t\t\t};\n\t\t}, function () {\n\t\t\treturn util.Deferred().reject();\n\t\t} );\n\t},\n\n\t/**\n\t * Extract sections from headings in $el\n\t * @memberof PageGateway\n\t * @instance\n\t * @private\n\t * @param {jQuery.Object} $el object from which sections are extracted\n\t * @return {Array} Array of section objects created from headings in $el\n\t * FIXME: Where's a better place for getSectionsFromHTML and this function to live?\n\t * Answer: Possibly Page.js\n\t */\n\t_getAPIResponseFromHTML: function ( $el ) {\n\t\t// FIXME: use Page.HEADING_SELECTOR\n\t\tvar $headings = $el.find( 'h1,h2,h3,h4,h5,h6' ),\n\t\t\tsections = [];\n\n\t\t$headings.each( function () {\n\t\t\tvar level = this.tagName.substr( 1 ),\n\t\t\t\t$span = $el.find( this ).find( '.mw-headline' );\n\n\t\t\tif ( $span.length ) {\n\t\t\t\tsections.push( {\n\t\t\t\t\tlevel: level,\n\t\t\t\t\tline: $span.html(),\n\t\t\t\t\tanchor: $span.attr( 'id' ) || '',\n\t\t\t\t\ttext: ''\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t\treturn sections;\n\t},\n\n\t/**\n\t * Order sections hierarchically\n\t * @memberof PageGateway\n\t * @instance\n\t * @param {jQuery.Object} $el object from which sections are extracted\n\t * @return {Array} Ordered array of sections\n\t */\n\tgetSectionsFromHTML: function ( $el ) {\n\t\treturn transformSections( this._getAPIResponseFromHTML( $el ) );\n\t}\n};\n\nmodule.exports = PageGateway;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tView = require( './View' ),\n\tbrowser = require( './Browser' ).getSingleton();\n\n/**\n * List of items page view\n * @class PageList\n * @extends View\n */\nfunction PageList() {\n\tView.apply( this, arguments );\n}\n\nmfExtend( PageList, View, {\n\t/**\n\t * @memberof PageList\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {Page[]} defaults.pages Array of Page objects. These should match\n\t *                              the Page model and not necessarily the\n\t *                              underlying API format used.\n\t * E.g. [\n\t *   {\n\t *     heading: \"<strong>C</strong>laude Monet\",\n\t *     id: undefined,\n\t *     title: \"Claude Monet\",\n\t *     displayTitle: \"<i>Claude Monet</i>\",\n\t *     url: \"/wiki/Claude_Monet\",\n\t *     thumbnail: {\n\t *       height: 62,\n\t *       source: \"http://127.0.0.1:8080/images/thumb/thumb.jpg\",\n\t *       width: 80,\n\t *       isLandscape: true\n\t *     }\n\t *   }\n\t * ]\n\t */\n\tdefaults: {\n\t\tpages: []\n\t},\n\t/**\n\t * Render page images for the existing page list. Assumes no page images have been loaded.\n\t * @memberof PageList\n\t * @instance\n\t */\n\trenderPageImages: function () {\n\t\tvar self = this;\n\n\t\tsetTimeout( function () {\n\t\t\tself.$( '.list-thumb' ).each( function () {\n\t\t\t\tvar style = self.$( this ).data( 'style' );\n\t\t\t\tself.$( this ).attr( 'style', style );\n\t\t\t} );\n\t\t\t// Delay an unnecessary load of images on mobile (slower?) connections\n\t\t\t// In particular on search results which can be regenerated quickly.\n\t\t}, browser.isWideScreen() ? 0 : 1000 );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof PageList\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tthis.renderPageImages();\n\t},\n\ttemplate: mw.template.get( 'mobile.startup', 'PageList.hogan' ),\n\t/**\n\t * @memberof PageList\n\t * @instance\n\t */\n\ttemplatePartials: {\n\t\t// The server uses a very different structure in\n\t\t// SpecialMobileEditWatchlist.getLineHtml(). Be aware of these differences\n\t\t// when updating server rendered items.\n\t\titem: mw.template.get( 'mobile.startup', 'PageListItem.hogan' )\n\t}\n} );\n\nmodule.exports = PageList;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tutil = require( './util' ),\n\tView = require( './View' );\n\n/**\n * An abstract class for a {@link View} that comprises a simple panel.\n * @class Panel\n * @extends View\n *\n * @param {Object} params Configuration options\n */\nfunction Panel( params ) {\n\tvar defaultParams = {\n\t\t\tclassName: 'panel'\n\t\t},\n\t\toptions = util.extend( {}, defaultParams, params );\n\n\tView.call( this, options );\n}\n\nmfExtend( Panel, View, {\n\t// in milliseconds\n\tminHideDelay: 10,\n\tevents: {\n\t\t'click .cancel': 'onCancel'\n\t},\n\n\t/**\n\t * Cancel event handler\n\t * @memberof Panel\n\t * @instance\n\t * @param {Object} ev Event Object\n\t */\n\tonCancel: function ( ev ) {\n\t\tev.preventDefault();\n\t\tthis.hide();\n\t},\n\n\t/**\n\t * Shows panel after a slight delay\n\t * @memberof Panel\n\t * @instance\n\t * @method\n\t */\n\tshow: function () {\n\t\tvar self = this;\n\n\t\tif ( !self.isVisible() ) {\n\t\t\t// use setTimeout to allow the browser to redraw if render() was called\n\t\t\t// just before show(); this is important for animations to work\n\t\t\t// (0ms doesn't work on Firefox, 10ms is enough)\n\t\t\t//\n\t\t\t// FIXME: setTimeout should be reconsidered in T209129\n\t\t\tsetTimeout( function () {\n\t\t\t\tself.$el.addClass( 'visible animated' );\n\t\t\t\tself.emit( 'show' );\n\t\t\t}, self.minHideDelay );\n\t\t}\n\t},\n\n\t/**\n\t * Hides panel\n\t * @memberof Panel\n\t * @instance\n\t */\n\thide: function () {\n\t\tvar self = this;\n\n\t\t// see comment in show()\n\t\tsetTimeout( function () {\n\t\t\tself.$el.removeClass( 'visible' );\n\t\t\tself.emit( 'hide' );\n\t\t}, self.minHideDelay );\n\t},\n\n\t/**\n\t * Determines if panel is visible\n\t * @memberof Panel\n\t * @instance\n\t * @return {boolean} Panel is visible\n\t */\n\tisVisible: function () {\n\t\treturn this.$el.hasClass( 'visible' );\n\t},\n\n\t/**\n\t * Shows or hides panel\n\t * @memberof Panel\n\t * @instance\n\t */\n\ttoggle: function () {\n\t\tif ( this.isVisible() ) {\n\t\t\tthis.hide();\n\t\t} else {\n\t\t\tthis.show();\n\t\t}\n\t}\n} );\n\nmodule.exports = Panel;\n","var\n\tmfExtend = require( './mfExtend' ),\n\ticons = require( './icons' ),\n\tView = require( './View' );\n\n/**\n * Builds a section of a page\n * @class Section\n * @extends View\n *\n * @param {Object} options Configuration options\n */\nfunction Section( options ) {\n\tvar self = this;\n\toptions.tag = 'h' + options.level;\n\tthis.line = options.line;\n\tthis.text = options.text;\n\tthis.hasReferences = options.hasReferences || false;\n\tthis.id = options.id || null;\n\tthis.anchor = options.anchor;\n\tthis.subsections = [];\n\t( options.subsections || [] ).forEach( function ( section ) {\n\t\tself.subsections.push( new Section( section ) );\n\t} );\n\tView.call( this, options );\n}\n\nmfExtend( Section, View, {\n\ttemplate: mw.template.get( 'mobile.startup', 'Section.hogan' ),\n\t/**\n\t * @memberof Section\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.text Section text.\n\t * @property {string} defaults.spinner HTML of the spinner icon.\n\t */\n\tdefaults: {\n\t\tline: undefined,\n\t\ttext: '',\n\t\tspinner: icons.spinner().toHtmlString()\n\t}\n} );\n\nmodule.exports = Section;\n","var\n\tbrowser = require( './Browser' ).getSingleton(),\n\tView = require( './View' ),\n\tutil = require( './util' ),\n\tPage = require( './Page' ),\n\tDeferred = util.Deferred,\n\twhen = util.when,\n\ticons = require( './icons' ),\n\tviewport = mw.viewport,\n\tspinner = icons.spinner(),\n\tmfExtend = require( './mfExtend' );\n\n/**\n * Get the id of the section $el belongs to.\n * @param {jQuery.Object} $el\n * @return {string|null} either the anchor (id attribute of the section heading\n *  or null if none found)\n */\nfunction getSectionId( $el ) {\n\tvar id,\n\t\thSelector = Page.HEADING_SELECTOR,\n\t\t$parent = $el.parent(),\n\t\t// e.g. matches Subheading in\n\t\t// <h2>H</h2><div><h3 id=\"subheading\">Subh</h3><a class=\"element\"></a></div>\n\t\t$heading = $el.prevAll( hSelector ).eq( 0 );\n\n\tif ( $heading.length ) {\n\t\tid = $heading.find( '.mw-headline' ).attr( 'id' );\n\t\tif ( id ) {\n\t\t\treturn id;\n\t\t}\n\t}\n\tif ( $parent.length ) {\n\t\t// if we couldnt find a sibling heading, check the sibling of the parents\n\t\t// consider <div><h2 /><div><$el/></div></div>\n\t\treturn getSectionId( $parent );\n\t} else {\n\t\treturn null;\n\t}\n}\n\n/**\n * Representation of the current skin being rendered.\n *\n * @class Skin\n * @extends View\n * @uses Browser\n * @uses Page\n * @fires Skin#click\n * @fires Skin#references-loaded\n * @fires Skin#changed\n * @param {Object} params Configuration options\n * @param {OO.EventEmitter} params.eventBus Object used to listen for\n * before-section-toggled, scroll:throttled, resize:throttled, and\n * section-toggled events\n */\nfunction Skin( params ) {\n\tvar self = this,\n\t\toptions = util.extend( {}, params );\n\n\tthis.page = options.page;\n\tthis.name = options.name;\n\tif ( options.mainMenu ) {\n\t\tthis.mainMenu = options.mainMenu;\n\t\tmw.log.warn( 'Skin: Use of mainMenu is deprecated.' );\n\t}\n\tthis.eventBus = options.eventBus;\n\toptions.isBorderBox = false;\n\tView.call( this, options );\n\tthis.referencesGateway = options.referencesGateway;\n\n\tif (\n\t\tmw.config.get( 'wgMFLazyLoadImages' )\n\t) {\n\t\tutil.docReady( function () {\n\t\t\tself.setupImageLoading();\n\t\t} );\n\t}\n\n\tif ( mw.config.get( 'wgMFLazyLoadReferences' ) ) {\n\t\tthis.eventBus.on( 'before-section-toggled', this.lazyLoadReferences.bind( this ) );\n\t}\n}\n\nmfExtend( Skin, View, {\n\t/**\n\t * @memberof Skin\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {Page} defaults.page page the skin is currently rendering\n\t * @property {ReferencesGateway} defaults.referencesGateway instance of references gateway\n\t */\n\tdefaults: {\n\t\tpage: undefined\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Skin\n\t * @instance\n\t */\n\tevents: {},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof Skin\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar $el = this.$el;\n\t\tif ( browser.supportsAnimations() ) {\n\t\t\t$el.addClass( 'animations' );\n\t\t}\n\t\tif ( browser.supportsTouchEvents() ) {\n\t\t\t$el.addClass( 'touch-events' );\n\t\t}\n\t\tutil.parseHTML( '<div class=\"transparent-shield cloaked-element\">' )\n\t\t\t.appendTo( $el.find( '#mw-mf-page-center' ) );\n\t\t/**\n\t\t * Fired when appearance of skin changes.\n\t\t * @event Skin#changed\n\t\t */\n\t\tthis.emit( 'changed' );\n\n\t\t/**\n\t\t * Fired when the skin is clicked.\n\t\t * @event Skin#click\n\t\t */\n\t\tthis.$( '#mw-mf-page-center' ).on( 'click', this.emit.bind( this, 'click' ) );\n\t},\n\t/**\n\t * Get images that have not yet been loaded in the page\n\t * @memberof Skin\n\t * @instance\n\t * @param {jQuery.Object} [$container] The container that should be\n\t *  searched for image placeholders. Defaults to \"#content\".\n\t * @return {Array} of unloaded image placeholders in the page\n\t */\n\tgetUnloadedImages: function ( $container ) {\n\t\t$container = $container || this.$( '#content' );\n\t\treturn $container.find( '.lazy-image-placeholder' ).toArray();\n\t},\n\t/**\n\t * Setup listeners to watch unloaded images and load them into the page\n\t * as and when they are needed.\n\t * @memberof Skin\n\t * @instance\n\t * @param {jQuery.Object} [$container] The container that should be\n\t *  searched for image placeholders. Defaults to \"#content\".\n\t * @return {jQuery.Deferred} which will be resolved when the attempts to\n\t *  load all images subject to loading have been completed.\n\t */\n\tsetupImageLoading: function ( $container ) {\n\t\tvar self = this,\n\t\t\toffset = util.getWindow().height() * 1.5,\n\t\t\tloadImagesList = this.loadImagesList.bind( this ),\n\t\t\timagePlaceholders = this.getUnloadedImages( $container );\n\n\t\t/**\n\t\t * Check whether an image should be loaded based on its proximity to the\n\t\t * viewport; and whether it is displayed to the user.\n\t\t * @param {jQuery.Object} $placeholder\n\t\t * @return {boolean}\n\t\t */\n\t\tfunction shouldLoadImage( $placeholder ) {\n\t\t\treturn viewport.isElementCloseToViewport( $placeholder[0], offset ) &&\n\t\t\t\t// If a placeholder is an inline element without a height attribute set\n\t\t\t\t// it will record as hidden\n\t\t\t\t// to circumvent this we also need to test the height (see T143768).\n\t\t\t\t( $placeholder.is( ':visible' ) || $placeholder.height() === 0 );\n\t\t}\n\n\t\t/**\n\t\t * Load remaining images in viewport\n\t\t * @return {jQuery.Deferred}\n\t\t */\n\t\tfunction _loadImages() {\n\t\t\tvar images = [];\n\t\t\t// Filter unloaded images to only the images that still need to be loaded\n\t\t\timagePlaceholders = util.grep( imagePlaceholders, function ( placeholder ) {\n\t\t\t\tvar $placeholder = self.$( placeholder );\n\t\t\t\t// Check length to ensure the image is still in the DOM.\n\t\t\t\tif ( $placeholder.length && shouldLoadImage( $placeholder ) ) {\n\t\t\t\t\timages.push( placeholder );\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} );\n\n\t\t\t// When no images are left unbind all events\n\t\t\tif ( !imagePlaceholders.length ) {\n\t\t\t\tself.eventBus.off( 'scroll:throttled', _loadImages );\n\t\t\t\tself.eventBus.off( 'resize:throttled', _loadImages );\n\t\t\t\tself.eventBus.off( 'section-toggled', _loadImages );\n\t\t\t\tself.off( 'changed', _loadImages );\n\t\t\t}\n\n\t\t\t// load any remaining images.\n\t\t\treturn loadImagesList( images );\n\t\t}\n\n\t\tthis.eventBus.on( 'scroll:throttled', _loadImages );\n\t\tthis.eventBus.on( 'resize:throttled', _loadImages );\n\t\tthis.eventBus.on( 'section-toggled', _loadImages );\n\t\tthis.on( 'changed', _loadImages );\n\n\t\treturn _loadImages();\n\t},\n\t/**\n\t * Load an image on demand\n\t * @memberof Skin\n\t * @instance\n\t * @param {Array} [images] a list of images that have not been loaded.\n\t *  If none given all will be loaded.\n\t * @return {jQuery.Deferred}\n\t */\n\tloadImagesList: function ( images ) {\n\t\tvar callbacks,\n\t\t\t$ = this.$.bind( this ),\n\t\t\tloadImage = this.loadImage.bind( this );\n\n\t\timages = images || this.getUnloadedImages();\n\t\tcallbacks = images.map( function ( placeholder ) {\n\t\t\treturn loadImage( $( placeholder ) );\n\t\t} );\n\n\t\treturn when.apply( null, callbacks );\n\t},\n\t/**\n\t * Load an image on demand\n\t * @memberof Skin\n\t * @instance\n\t * @param {jQuery.Object} $placeholder\n\t * @return {jQuery.Deferred}\n\t */\n\tloadImage: function ( $placeholder ) {\n\t\tvar\n\t\t\td = Deferred(),\n\t\t\twidth = $placeholder.attr( 'data-width' ),\n\t\t\theight = $placeholder.attr( 'data-height' ),\n\t\t\t// document must be passed to ensure image will start downloading\n\t\t\t$downloadingImage = util.parseHTML( '<img>', this.$el[0].ownerDocument );\n\n\t\t// When the image has loaded\n\t\t$downloadingImage.on( 'load', function () {\n\t\t\t// Swap the HTML inside the placeholder (to keep the layout and\n\t\t\t// dimensions the same and not trigger layouts\n\t\t\t$downloadingImage.addClass( 'image-lazy-loaded' );\n\t\t\t$placeholder.replaceWith( $downloadingImage );\n\t\t\td.resolve();\n\t\t} );\n\t\t$downloadingImage.on( 'error', function () {\n\t\t\td.reject();\n\t\t} );\n\n\t\t// Trigger image download after binding the load handler\n\t\t$downloadingImage.attr( {\n\t\t\t'class': $placeholder.attr( 'data-class' ),\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tsrc: $placeholder.attr( 'data-src' ),\n\t\t\talt: $placeholder.attr( 'data-alt' ),\n\t\t\tstyle: $placeholder.attr( 'style' ),\n\t\t\tsrcset: $placeholder.attr( 'data-srcset' )\n\t\t} );\n\t\treturn d;\n\t},\n\n\t/**\n\t * Load the references section content from API if it's not already loaded.\n\t *\n\t * All references tags content will be loaded per section.\n\t * @memberof Skin\n\t * @instance\n\t * @param {Object} data Information about the section. It's in the following form:\n\t * {\n\t *     @property {string} page,\n\t *     @property {boolean} wasExpanded,\n\t *     @property {jQuery.Object} $heading,\n\t *     @property {boolean} isReferenceSection\n\t * }\n\t * @return {jQuery.Promise} rejected when not a reference section.\n\t */\n\tlazyLoadReferences: function ( data ) {\n\t\tvar $content, $spinner,\n\t\t\tgateway = this.referencesGateway,\n\t\t\tgetUnloadedImages = this.getUnloadedImages.bind( this ),\n\t\t\tloadImagesList = this.loadImagesList.bind( this ),\n\t\t\tself = this;\n\n\t\t// If the section was expanded before toggling, do not load anything as\n\t\t// section is being collapsed now.\n\t\t// Also return early if lazy loading is not required or the section is\n\t\t// not a reference section\n\t\tif (\n\t\t\tdata.wasExpanded ||\n\t\t\t!data.isReferenceSection\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t$content = data.$heading.next();\n\n\t\tfunction loadImagesAndSetData() {\n\t\t\t// lazy load images if any\n\t\t\tloadImagesList( getUnloadedImages( $content ) );\n\t\t\t// Do not attempt further loading even if we're unable to load this time.\n\t\t\t$content.data( 'are-references-loaded', 1 );\n\t\t}\n\n\t\tif ( !$content.data( 'are-references-loaded' ) ) {\n\t\t\t$content.children().addClass( 'hidden' );\n\t\t\t$spinner = spinner.$el.prependTo( $content );\n\n\t\t\t// First ensure we retrieve all of the possible lists\n\t\t\treturn gateway.getReferencesLists( data.page )\n\t\t\t\t.then( function () {\n\t\t\t\t\tvar lastId;\n\n\t\t\t\t\t$content.find( '.mf-lazy-references-placeholder' ).each( function () {\n\t\t\t\t\t\tvar refListIndex = 0,\n\t\t\t\t\t\t\t$placeholder = $content.find( this ),\n\t\t\t\t\t\t\t// search for id of the collapsible heading\n\t\t\t\t\t\t\tid = getSectionId( $placeholder );\n\n\t\t\t\t\t\tif ( lastId !== id ) {\n\t\t\t\t\t\t\t// If the placeholder belongs to a new section reset index\n\t\t\t\t\t\t\trefListIndex = 0;\n\t\t\t\t\t\t\tlastId = id;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// otherwise increment it\n\t\t\t\t\t\t\trefListIndex++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( id ) {\n\t\t\t\t\t\t\tgateway.getReferencesList( data.page, id )\n\t\t\t\t\t\t\t\t.then( function ( refListElements ) {\n\t\t\t\t\t\t\t\t\t// Note if no section html is provided\n\t\t\t\t\t\t\t\t\t// no substitution will happen\n\t\t\t\t\t\t\t\t\t// so user is forced to rely on placeholder link.\n\t\t\t\t\t\t\t\t\tif ( refListElements && refListElements[refListIndex] ) {\n\t\t\t\t\t\t\t\t\t\t$placeholder.replaceWith(\n\t\t\t\t\t\t\t\t\t\t\trefListElements[refListIndex]\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t\t// Show the section now the references lists have been placed.\n\t\t\t\t\t$spinner.remove();\n\t\t\t\t\t$content.children().removeClass( 'hidden' );\n\t\t\t\t\t/**\n\t\t\t\t\t * Fired when references list is loaded into the HTML\n\t\t\t\t\t * @event references-loaded\n\t\t\t\t\t */\n\t\t\t\t\tself.emit( 'references-loaded', self.page );\n\n\t\t\t\t\tloadImagesAndSetData();\n\t\t\t\t}, function () {\n\t\t\t\t\t$spinner.remove();\n\t\t\t\t\t// unhide on a failure\n\t\t\t\t\t$content.children().removeClass( 'hidden' );\n\n\t\t\t\t\tloadImagesAndSetData();\n\t\t\t\t} );\n\t\t} else {\n\t\t\treturn Deferred().reject().promise();\n\t\t}\n\t},\n\n\t/**\n\t * Returns the appropriate license message including links/name to\n\t * terms of use (if any) and license page\n\t * @memberof Skin\n\t * @instance\n\t * @return {string}\n\t */\n\tgetLicenseMsg: function () {\n\t\tvar licenseMsg,\n\t\t\tmfLicense = mw.config.get( 'wgMFLicense' ),\n\t\t\tlicensePlural = mw.language.convertNumber( mfLicense.plural );\n\n\t\tif ( mfLicense.link ) {\n\t\t\tif ( this.$( '#footer-places-terms-use' ).length > 0 ) {\n\t\t\t\tlicenseMsg = mw.msg(\n\t\t\t\t\t'mobile-frontend-editor-licensing-with-terms',\n\t\t\t\t\tmw.message(\n\t\t\t\t\t\t'mobile-frontend-editor-terms-link',\n\t\t\t\t\t\tthis.$( '#footer-places-terms-use a' ).attr( 'href' )\n\t\t\t\t\t).parse(),\n\t\t\t\t\tmfLicense.link,\n\t\t\t\t\tlicensePlural\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlicenseMsg = mw.msg(\n\t\t\t\t\t'mobile-frontend-editor-licensing',\n\t\t\t\t\tmfLicense.link,\n\t\t\t\t\tlicensePlural\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn licenseMsg;\n\t}\n} );\n\nSkin.getSectionId = getSectionId;\n\nmodule.exports = Skin;\n","var\n\tmfExtend = require( './mfExtend' ),\n\tutil = require( './util' ),\n\tView = require( './View' );\n\n/**\n * Representation of a thumbnail\n *\n * @class Thumbnail\n * @extends View\n * @param {Object} options\n */\nfunction Thumbnail( options ) {\n\tView.call( this,\n\t\tutil.extend( { isBorderBox: false }, options )\n\t);\n}\n\nmfExtend( Thumbnail, View, {\n\t/**\n\t * @memberof Thumbnail\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.filename uri decoded filename including File: prefix\n\t *  associated with thumbnail\n\t */\n\tdefaults: {\n\t\tfilename: undefined\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Thumbnail\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tthis.options.description = this.$el.siblings( '.thumbcaption' ).text();\n\t},\n\t/**\n\t * Obtain description for thumbnail\n\t * @memberof Thumbnail\n\t * @instance\n\t * @return {string}\n\t */\n\tgetDescription: function () {\n\t\treturn this.options.description;\n\t},\n\t/**\n\t * Return the page title for the thumbnail\n\t * @memberof Thumbnail\n\t * @instance\n\t * @return {string}\n\t */\n\tgetFileName: function () {\n\t\treturn this.options.filename;\n\t}\n} );\n\nmodule.exports = Thumbnail;\n","var browser = require( './Browser' ).getSingleton(),\n\tutil = require( './util' ),\n\tescapeHash = util.escapeHash,\n\tarrowOptions = {\n\t\tname: 'arrow',\n\t\tadditionalClassNames: 'indicator'\n\t},\n\tIcon = require( './Icon' );\n\n/**\n * A class for enabling toggling\n *\n * @class Toggler\n * @param {Object} options\n * @param {OO.EventEmitter} options.eventBus Object used to emit before-section-toggled\n * and section-toggled events\n * @param {jQuery.Object} options.$container to apply toggling to\n * @param {string} options.prefix a prefix to use for the id.\n * @param {Page} [options.page] to allow storage of session for future visits\n * @param {Page} [options.isClosed] whether the element should begin closed\n * and section-toggled events\n */\nfunction Toggler( options ) {\n\tthis.eventBus = options.eventBus;\n\tthis._enable( options.$container, options.prefix, options.page, options.isClosed );\n}\n\n/**\n * Using the settings module looks at what sections were previously expanded on\n * existing page.\n *\n * @param {Page} page\n * @return {Object} representing open sections\n */\nfunction getExpandedSections( page ) {\n\tvar expandedSections = JSON.parse(\n\t\tmw.storage.get( 'expandedSections' ) || '{}'\n\t);\n\texpandedSections[page.title] = expandedSections[page.title] || {};\n\treturn expandedSections;\n}\n\n/**\n* @param {Object} expandedSections\n* Save expandedSections to localStorage\n*/\nfunction saveExpandedSections( expandedSections ) {\n\tmw.storage.set(\n\t\t'expandedSections', JSON.stringify( expandedSections )\n\t);\n}\n\n/**\n * Given an expanded heading, store it to localStorage.\n * If the heading is collapsed, remove it from localStorage.\n *\n * @param {jQuery.Object} $heading - A heading belonging to a section\n * @param {Page} page\n */\nfunction storeSectionToggleState( $heading, page ) {\n\tvar headline = $heading.find( 'span' ).attr( 'id' ),\n\t\tisSectionOpen = $heading.hasClass( 'open-block' ),\n\t\texpandedSections = getExpandedSections( page );\n\n\tif ( headline ) {\n\t\tif ( isSectionOpen ) {\n\t\t\texpandedSections[page.title][headline] = ( new Date() ).getTime();\n\t\t} else {\n\t\t\tdelete expandedSections[page.title][headline];\n\t\t}\n\n\t\tsaveExpandedSections( expandedSections );\n\t}\n}\n\n/**\n * Expand sections that were previously expanded before leaving this page.\n * @param {Toggler} toggler\n * @param {jQuery.Object} $container\n * @param {Page} page\n */\nfunction expandStoredSections( toggler, $container, page ) {\n\tvar $sectionHeading, $headline,\n\t\texpandedSections = getExpandedSections( page ),\n\t\t$headlines = $container.find( '.section-heading span' );\n\n\t$headlines.each( function () {\n\t\t$headline = $container.find( this );\n\t\t$sectionHeading = $headline.parents( '.section-heading' );\n\t\t// toggle only if the section is not already expanded\n\t\tif (\n\t\t\texpandedSections[page.title][$headline.attr( 'id' )] &&\n\t\t!$sectionHeading.hasClass( 'open-block' )\n\t\t) {\n\t\t\ttoggler.toggle( $sectionHeading, page );\n\t\t}\n\t} );\n}\n\n/**\n * Clean obsolete (saved more than a day ago) expanded sections from\n * localStorage.\n * @param {Page} page\n */\nfunction cleanObsoleteStoredSections( page ) {\n\tvar now = ( new Date() ).getTime(),\n\t\texpandedSections = getExpandedSections( page ),\n\t\t// the number of days between now and the time a setting was saved\n\t\tdaysDifference;\n\tObject.keys( expandedSections ).forEach( function ( page ) {\n\t\tvar sections = expandedSections[ page ];\n\t\t// clean the setting if it is more than a day old\n\t\tObject.keys( sections ).forEach( function ( section ) {\n\t\t\tvar timestamp = sections[ section ];\n\t\t\tdaysDifference = Math.floor( ( now - timestamp ) / 1000 / 60 / 60 / 24 );\n\t\t\tif ( daysDifference >= 1 ) {\n\t\t\t\tdelete expandedSections[page][section];\n\t\t\t}\n\t\t} );\n\t} );\n\tsaveExpandedSections( expandedSections );\n}\n\n/**\n * Given a heading, toggle it and any of its children\n *\n * @memberof Toggler\n * @instance\n * @param {jQuery.Object} $heading A heading belonging to a section\n */\nToggler.prototype.toggle = function ( $heading ) {\n\tvar indicator,\n\t\twasExpanded = $heading.is( '.open-block' ),\n\t\tpage = $heading.data( 'page' ),\n\t\tsectionNumber = $heading.data( 'section-number' ),\n\t\t$content = $heading.next();\n\n\t$heading.toggleClass( 'open-block' );\n\t$heading.data( 'indicator' ).remove();\n\n\tarrowOptions.rotation = wasExpanded ? 0 : 180;\n\tindicator = new Icon( arrowOptions ).prependTo( $heading );\n\t$heading.data( 'indicator', indicator );\n\n\t/**\n\t * Global event emitted before a section is being toggled\n\t *\n\t * @event section-toggling\n\t * @type {Object}\n\t * @property {Page} page\n\t * @property {bool} wasExpanded\n\t * @property {bool} isReferenceSection\n\t * @property {jQuery.Object} $heading\n\t */\n\tthis.eventBus.emit( 'before-section-toggled', {\n\t\tpage: page,\n\t\twasExpanded: wasExpanded,\n\t\t$heading: $heading,\n\t\tisReferenceSection: Boolean( $content.attr( 'data-is-reference-section' ) )\n\t} );\n\n\t$content\n\t\t.toggleClass( 'open-block' )\n\t\t.attr( {\n\t\t\t'aria-pressed': !wasExpanded,\n\t\t\t'aria-expanded': !wasExpanded\n\t\t} );\n\n\t/**\n\t * Global event emitted after a section has been toggled\n\t * @event section-toggled\n\t * @type {Object}\n\t * @property {bool} wasExpanded\n\t * @property {number} sectionNumber\n\t */\n\tthis.eventBus.emit( 'section-toggled', wasExpanded, sectionNumber );\n\n\tif ( !browser.isWideScreen() ) {\n\t\tstoreSectionToggleState( $heading, page );\n\t}\n};\n\n/**\n * Enables toggling via enter and space keys\n *\n * @param {Toggler} toggler instance.\n * @param {jQuery.Object} $heading\n */\nfunction enableKeyboardActions( toggler, $heading ) {\n\t$heading.on( 'keypress', function ( ev ) {\n\t\tif ( ev.which === 13 || ev.which === 32 ) {\n\t\t\t// Only handle keypresses on the \"Enter\" or \"Space\" keys\n\t\t\ttoggler.toggle( $heading );\n\t\t}\n\t} ).find( 'a' ).on( 'keypress mouseup', function ( ev ) {\n\t\tev.stopPropagation();\n\t} );\n}\n\n/**\n * Reveals an element and its parent section as identified by it's id\n *\n * @memberof Toggler\n * @instance\n * @param {string} selector A css selector that identifies a single element\n * @param {Object} $container jQuery element to search in\n */\nToggler.prototype.reveal = function ( selector, $container ) {\n\tvar $target, $heading;\n\n\t// jQuery will throw for hashes containing certain characters which can break toggling\n\ttry {\n\t\t$target = $container.find( escapeHash( selector ) );\n\t\t$heading = $target.parents( '.collapsible-heading' );\n\t\t// The heading is not a section heading, check if in a content block!\n\t\tif ( !$heading.length ) {\n\t\t\t$heading = $target.parents( '.collapsible-block' ).prev( '.collapsible-heading' );\n\t\t}\n\t\tif ( $heading.length && !$heading.hasClass( 'open-block' ) ) {\n\t\t\tthis.toggle( $heading );\n\t\t}\n\t\tif ( $heading.length ) {\n\t\t\t// scroll again after opening section (opening section makes the page longer)\n\t\t\twindow.scrollTo( 0, $target.offset().top );\n\t\t}\n\t} catch ( e ) {}\n};\n\n/**\n * Enables section toggling in a given container when wgMFCollapseSectionsByDefault\n * is enabled.\n *\n * @memberof Toggler\n * @instance\n * @param {jQuery.Object} $container to apply toggling to\n * @param {string} prefix a prefix to use for the id.\n * @param {Page} [page] to allow storage of session for future visits\n * @param {Page} [isClosed] whether the element should begin closed\n * @private\n */\nToggler.prototype._enable = function ( $container, prefix, page, isClosed ) {\n\tvar tagName, expandSections, indicator, $content,\n\t\t$firstHeading,\n\t\t$link,\n\t\tself = this,\n\t\tcollapseSectionsByDefault = mw.config.get( 'wgMFCollapseSectionsByDefault' );\n\n\t// Also allow .section-heading if some extensions like Wikibase\n\t// want to toggle other headlines than direct descendants of $container.\n\t$firstHeading = $container.find( '> h1,> h2,> h3,> h4,> h5,> h6,.section-heading' ).eq( 0 );\n\ttagName = $firstHeading.prop( 'tagName' ) || 'H1';\n\n\tif ( collapseSectionsByDefault === undefined ) {\n\t\t// Old default behavior if on cached output\n\t\tcollapseSectionsByDefault = true;\n\t}\n\texpandSections = !collapseSectionsByDefault ||\n\t( mw.config.get( 'wgMFExpandAllSectionsUserOption' ) && mw.storage.get( 'expandSections' ) === 'true' );\n\n\t$container.children( tagName ).each( function ( i ) {\n\t\tvar isReferenceSection,\n\t\t\t$heading = $container.find( this ),\n\t\t\t$indicator = $heading.find( '.indicator' ),\n\t\t\tid = prefix + 'collapsible-block-' + i;\n\t\t// Be sure there is a div wrapping the section content.\n\t\t// Otherwise, collapsible sections for this page is not enabled.\n\t\tif ( $heading.next().is( 'div' ) ) {\n\t\t\t$content = $heading.next( 'div' );\n\t\t\tisReferenceSection = Boolean( $content.attr( 'data-is-reference-section' ) );\n\t\t\t$heading\n\t\t\t\t.addClass( 'collapsible-heading ' )\n\t\t\t\t.data( 'section-number', i )\n\t\t\t\t.data( 'page', page )\n\t\t\t\t.attr( {\n\t\t\t\t\ttabindex: 0,\n\t\t\t\t\t'aria-haspopup': 'true',\n\t\t\t\t\t'aria-controls': id\n\t\t\t\t} )\n\t\t\t\t.on( 'click', function ( ev ) {\n\t\t\t\t\t// don't toggle, if the click target was a link\n\t\t\t\t\t// (a link in a section heading)\n\t\t\t\t\t// See T117880\n\t\t\t\t\tif ( !ev.target.href ) {\n\t\t\t\t\t\t// prevent taps/clicks on edit button after toggling (bug 56209)\n\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\tself.toggle( $heading );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\tarrowOptions.rotation = expandSections ? 180 : 0;\n\t\t\tindicator = new Icon( arrowOptions );\n\t\t\tif ( $indicator.length ) {\n\t\t\t\t// replace the existing indicator\n\t\t\t\t$indicator.replaceWith( indicator.$el );\n\t\t\t} else {\n\t\t\t\tindicator.prependTo( $heading );\n\t\t\t}\n\t\t\t$heading.data( 'indicator', indicator.$el );\n\t\t\t$content\n\t\t\t\t.addClass( 'collapsible-block' )\n\t\t\t\t.eq( 0 )\n\t\t\t\t.attr( {\n\t\t\t\t\t// We need to give each content block a unique id as that's\n\t\t\t\t\t// the only way we can tell screen readers what element we're\n\t\t\t\t\t// referring to (aria-controls)\n\t\t\t\t\tid: id,\n\t\t\t\t\t'aria-pressed': 'false',\n\t\t\t\t\t'aria-expanded': 'false'\n\t\t\t\t} );\n\n\t\t\tenableKeyboardActions( self, $heading );\n\t\t\tif (\n\t\t\t\t!isReferenceSection && (\n\t\t\t\t\t!isClosed && browser.isWideScreen() || expandSections\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// Expand sections by default on wide screen devices\n\t\t\t\t// or if the expand sections setting is set.\n\t\t\t\t// The wide screen logic for determining whether to collapse sections initially\n\t\t\t\t// should be kept in sync with mobileoptions#initLocalStorageElements().\n\t\t\t\tself.toggle( $heading );\n\t\t\t}\n\t\t}\n\t} );\n\n\t/* eslint-disable no-restricted-properties */\n\t/**\n\t * Checks the existing hash and toggles open any section that contains the fragment.\n\t *\n\t * @method\n\t */\n\tfunction checkHash() {\n\t\tvar hash = window.location.hash;\n\t\tif ( hash.indexOf( '#' ) === 0 ) {\n\t\t\tself.reveal( hash, $container );\n\t\t}\n\t}\n\n\t/**\n\t * Checks the value of wgInternalRedirectTargetUrl and reveals the collapsed\n\t * section that contains it if present\n\t *\n\t * @method\n\t */\n\tfunction checkInternalRedirectAndHash() {\n\t\tvar internalRedirect = mw.config.get( 'wgInternalRedirectTargetUrl' ),\n\t\t\tinternalRedirectHash = internalRedirect ? internalRedirect.split( '#' )[1] : false;\n\n\t\tif ( internalRedirectHash ) {\n\t\t\twindow.location.hash = internalRedirectHash;\n\t\t\tself.reveal( internalRedirectHash, $container );\n\t\t}\n\t}\n\t/* eslint-enable no-restricted-properties */\n\n\tcheckInternalRedirectAndHash();\n\tcheckHash();\n\t// Restricted to links created by editors and thus outside our control\n\t// T166544 - don't do this for reference links - they will be handled elsewhere\n\t$link = $container.find( 'a:not(.reference a)' );\n\t$link.on( 'click', function () {\n\t\t// the link might be an internal link with a hash.\n\t\t// if it is check if we need to reveal any sections.\n\t\tif ( $link.attr( 'href' ) !== undefined &&\n\t\t$link.attr( 'href' ).indexOf( '#' ) > -1\n\t\t) {\n\t\t\tcheckHash();\n\t\t}\n\t} );\n\tutil.getWindow().on( 'hashchange', function () {\n\t\tcheckHash();\n\t} );\n\n\tif ( !browser.isWideScreen() && page ) {\n\t\texpandStoredSections( this, $container, page );\n\t\tcleanObsoleteStoredSections( page );\n\t}\n};\n\nToggler._getExpandedSections = getExpandedSections;\nToggler._expandStoredSections = expandStoredSections;\nToggler._cleanObsoleteStoredSections = cleanObsoleteStoredSections;\n\nmodule.exports = Toggler;\n","/* This module defines several types of cache classes to use in other\n * modules.\n * The interface, that all types use, is kept synchronous driven by current\n * usage patterns, but will need to be revisited in case usage patterns\n * suggest we need asynchronous caches.\n */\n\n/**\n * In memory cache implementation\n *\n * @class MemoryCache\n */\nfunction MemoryCache() {\n\tthis._cache = {};\n}\n\n/**\n * Retrieve a cached value from a key\n * @memberof MemoryCache\n * @instance\n * @param {string} key\n * @return {Mixed}\n */\nMemoryCache.prototype.get = function ( key ) {\n\treturn this._cache[ key ];\n};\n\n/**\n * Cache a value by key\n * @memberof MemoryCache\n * @instance\n * @param {string} key\n * @param {Mixed} value\n */\nMemoryCache.prototype.set = function ( key, value ) {\n\tthis._cache[ key ] = value;\n};\n\n/**\n * Null object cache implementation\n *\n * @class NoCache\n */\nfunction NoCache() { }\n\n/**\n * NoOp\n * @memberof NoCache\n * @instance\n */\nNoCache.prototype.get = function () { };\n\n/**\n * NoOp\n * @memberof NoCache\n * @instance\n */\nNoCache.prototype.set = function () { };\n\nmodule.exports = {\n\tMemoryCache: MemoryCache,\n\tNoCache: NoCache\n};\n","/**\n * Mobile mode helper class\n *\n * @class context\n * @singleton\n */\nmodule.exports = {\n\t/**\n\t * Gets current mobile mode\n\t * @memberof context\n\t * @instance\n\t * @return {string|null} Name of mode - either `stable` or `beta`. It is `null` if desktop.\n\t */\n\tgetMode: function () {\n\t\treturn mw.config.get( 'wgMFMode' );\n\t}\n};\n","/**\n * T156186: Please make judicious use of this singleton whose purpose is to\n * allow disparate components the ability to subscribe to a set of events and\n * react to those events.\n *\n * Prefer to use a more localized event bus when possible. (e.g.\n * mobile.special.nearby.scripts/nearby.js in Change-Id:\n * I632124515d4c26ae5ce77dd503d00a62e5a65dda)\n *\n * Only import this in files at the edges. For example:\n *\n * Good: initialization scripts responsible for initializing classes such as\n * mobile.init/init.js\n * Bad: ImageOverlay.js or in any other component.\n *\n * By doing this, and using dependency injection of the event bus in the\n * components themselves, it will make it easier to switch this event bus out\n * for something more localized later on in our refactoring efforts.\n */\nmodule.exports = new OO.EventEmitter();\n","var util = require( './util' ),\n\tactionParams = require( './actionParams.js' );\n\n/**\n * Extends the API query parameters to include those parameters required to also fetch Wikibase\n * descriptions and appropriately sized thumbnail images as well as those required to make a query.\n *\n * This function wraps `util.extend` with some Wikibase-specific configuration\n * variable management\n * but, like `util.extend`, is variadic and so can be used as a replacement for it in search\n * gateways, e.g.\n *\n * ```\n * var params = extendSearchParams(\n *   'nearby',\n *   baseParams,\n *   specializedParams,\n *   moreSpecializedParams\n * );\n * ```\n *\n * @param {string} feature The name of the feature\n * @throws {Error} If `feature` isn't one that shows Wikidata descriptions. See the\n *  `wgMFDisplayWikibaseDescriptions` configuration variable for detail\n * @return {Object}\n */\nfunction extendSearchParams( feature ) {\n\tvar displayWikibaseDescriptions = mw.config.get( 'wgMFDisplayWikibaseDescriptions', {} ),\n\t\tscriptPath = mw.config.get( 'wgMFContentProviderScriptPath' ),\n\t\targs,\n\t\tresult;\n\n\tif ( !Object.prototype.hasOwnProperty.call( displayWikibaseDescriptions, feature ) ) {\n\t\tthrow new Error( '\"' + feature + '\" isn\\'t a feature that shows Wikibase descriptions.' );\n\t}\n\n\t// Construct the arguments for a call to `util.extend`\n\t// such that if it were hand-written, then it\n\t// would look like the following:\n\t//\n\t// ```\n\t// var result = util.extend( {\n\t//   prop: []\n\t// }, params, /* ..., */ mw.config.get( 'wgMFSearchAPIParams' ) );\n\t// ```\n\targs = Array.prototype.slice.call( arguments, 1 );\n\targs.unshift( {\n\t\tprop: []\n\t} );\n\targs.push( mw.config.get( 'wgMFSearchAPIParams' ) );\n\n\tresult = util.extend.apply( {}, args );\n\tresult.prop = result.prop.concat( mw.config.get( 'wgMFQueryPropModules' ) );\n\n\tif ( displayWikibaseDescriptions[feature] ) {\n\t\tif ( result.prop.indexOf( 'description' ) === -1 ) {\n\t\t\tresult.prop.push( 'description' );\n\t\t}\n\t}\n\n\tif ( scriptPath ) {\n\t\t// A foreign api is being accessed! Enable anonymous CORS queries!\n\t\tresult.origin = '*';\n\t}\n\treturn actionParams( result );\n}\nmodule.exports = extendSearchParams;\n","var\n\ticons = require( './icons' ),\n\tOverlay = require( './Overlay' );\n\n/**\n * Overlay that initially shows loading animation until\n * caller hides it with .hide()\n *\n * @return {Overlay}\n */\nfunction loadingOverlay() {\n\tvar overlay = new Overlay( {\n\t\tclassName: 'overlay overlay-loading',\n\t\tnoHeader: true\n\t} );\n\ticons.spinner().$el.appendTo( overlay.$( '.overlay-content' ) );\n\treturn overlay;\n}\n\nmodule.exports = loadingOverlay;\n","var\n\tmoduleLoader = require( './moduleLoaderSingleton' ),\n\tmfExtend = require( './mfExtend' ),\n\tcontext = require( './context' ),\n\ttime = require( './time' ),\n\tactionParams = require( './actionParams' ),\n\tutil = require( './util' ),\n\tView = require( './View' ),\n\tPageGateway = require( './PageGateway' ),\n\tBrowser = require( './Browser' ),\n\tcache = require( './cache' ),\n\tButton = require( './Button' ),\n\tIcon = require( './Icon' ),\n\tReferencesDrawer = require( './references/ReferencesDrawer' ),\n\tReferencesGateway = require( './references/ReferencesGateway' ),\n\tReferencesHtmlScraperGateway = require( './references/ReferencesHtmlScraperGateway' ),\n\tReferencesMobileViewGateway = require( './references/ReferencesMobileViewGateway' ),\n\ticons = require( './icons' ),\n\tPanel = require( './Panel' ),\n\tSection = require( './Section' ),\n\tThumbnail = require( './Thumbnail' ),\n\tPage = require( './Page' ),\n\tAnchor = require( './Anchor' ),\n\tSkin = require( './Skin' ),\n\tOverlayManager = require( './OverlayManager' ),\n\tOverlay = require( './Overlay' ),\n\tloadingOverlay = require( './loadingOverlay' ),\n\tDrawer = require( './Drawer' ),\n\tCtaDrawer = require( './CtaDrawer' ),\n\tPageList = require( './PageList' ),\n\ttoast = require( './toast' ),\n\textendSearchParams = require( './extendSearchParams' ),\n\tWatchstar = require( './watchstar/Watchstar' ),\n\tWatchstarPageList = require( './watchstar/WatchstarPageList' ),\n\trlModuleLoader = require( './rlModuleLoader' ),\n\teventBusSingleton = require( './eventBusSingleton' ),\n\tToggler = require( './Toggler' ),\n\tSearchOverlay = require( './search/SearchOverlay' ),\n\tschemaMobileWebSearch = require( './search/schemaMobileWebSearch' ),\n\tMobileWebSearchLogger = require( './search/MobileWebSearchLogger' ),\n\tSearchGateway = require( './search/SearchGateway' );\n\nmw.mobileFrontend = moduleLoader;\n\nOO.mfExtend = mfExtend;\n\n// I know there is a temptation to use moduleLoader here, but if you do resource-modules will fail\n// as webpack might change the variable name. Using mw.mobileFrontend means that the variable\n// will not be recast.\n// These will soon be deprecated - please use the import path mobile.startup going forward.\nmw.mobileFrontend.define( 'mobile.startup/util', util );\nmw.mobileFrontend.define( 'mobile.startup/View', View );\nmw.mobileFrontend.define( 'mobile.startup/Browser', Browser );\nmw.mobileFrontend.define( 'mobile.startup/cache', cache );\nmw.mobileFrontend.define( 'mobile.startup/time', time );\nmw.mobileFrontend.define( 'mobile.startup/context', context );\nmw.mobileFrontend.define( 'mobile.startup/PageGateway', PageGateway );\nmw.mobileFrontend.define( 'mobile.startup/Button', Button );\nmw.mobileFrontend.define( 'mobile.startup/Icon', Icon );\nmw.mobileFrontend.define( 'mobile.startup/icons', icons );\nmw.mobileFrontend.define( 'mobile.startup/Panel', Panel );\nmw.mobileFrontend.define( 'mobile.startup/Section', Section );\nmw.mobileFrontend.define( 'mobile.startup/Thumbnail', Thumbnail );\nmw.mobileFrontend.define( 'mobile.startup/Page', Page );\nmw.mobileFrontend.define( 'mobile.startup/Anchor', Anchor );\nmw.mobileFrontend.define( 'mobile.startup/Skin', Skin );\nmw.mobileFrontend.define( 'mobile.startup/OverlayManager', OverlayManager );\nmw.mobileFrontend.define( 'mobile.startup/Overlay', Overlay );\nmw.mobileFrontend.define( 'mobile.startup/Drawer', Drawer );\nmw.mobileFrontend.define( 'mobile.startup/CtaDrawer', CtaDrawer );\nmw.mobileFrontend.define( 'mobile.startup/PageList', PageList );\nmw.mobileFrontend.define( 'mobile.startup/toast', toast );\nmw.mobileFrontend.define( 'mobile.startup/rlModuleLoader', rlModuleLoader );\nmw.mobileFrontend.define( 'mobile.startup/eventBusSingleton', eventBusSingleton );\nmw.mobileFrontend.deprecate( 'mobile.startup/LoadingOverlay', loadingOverlay, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search.util/extendSearchParams', extendSearchParams, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references/ReferencesDrawer', ReferencesDrawer, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references.gateway/ReferencesGateway', ReferencesGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references.gateway/ReferencesHtmlScraperGateway',\n\tReferencesHtmlScraperGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.references.gateway/ReferencesMobileViewGateway',\n\tReferencesMobileViewGateway, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.watchstar/Watchstar', Watchstar, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.pagelist.scripts/WatchstarPageList', WatchstarPageList, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.toggle/Toggler', Toggler, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search/SearchOverlay', SearchOverlay, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search/MobileWebSearchLogger', MobileWebSearchLogger, 'mobile.startup' );\nmw.mobileFrontend.deprecate( 'mobile.search.api/SearchGateway', SearchGateway, 'mobile.startup' );\n\n// Expose the entry chunk through libraryTarget and library. This allows\n// arbitrary file access via ResourceLoader like\n// `mfModules['mobile.startup'].moduleLoader.require('mobile.startup/LoadingOverlay')`.\nmodule.exports = {\n\textendSearchParams: extendSearchParams,\n\tReferencesDrawer: ReferencesDrawer,\n\tReferencesGateway: ReferencesGateway,\n\tReferencesHtmlScraperGateway: ReferencesHtmlScraperGateway,\n\tReferencesMobileViewGateway: ReferencesMobileViewGateway,\n\tmoduleLoader: moduleLoader,\n\ttime: time,\n\tutil: util,\n\tactionParams: actionParams,\n\tView: View,\n\tBrowser: Browser,\n\tcontext: context,\n\tcache: cache,\n\tButton: Button,\n\tIcon: Icon,\n\ticons: icons,\n\tPanel: Panel,\n\tSection: Section,\n\tPage: Page,\n\tAnchor: Anchor,\n\tSkin: Skin,\n\tOverlayManager: OverlayManager,\n\tOverlay: Overlay,\n\tloadingOverlay: loadingOverlay,\n\tDrawer: Drawer,\n\tCtaDrawer: CtaDrawer,\n\tPageList: PageList,\n\ttoast: toast,\n\tWatchstar: Watchstar,\n\tWatchstarPageList: WatchstarPageList,\n\trlModuleLoader: rlModuleLoader,\n\teventBusSingleton: eventBusSingleton,\n\tToggler: Toggler,\n\tsearch: {\n\t\tSearchOverlay: SearchOverlay,\n\t\tMobileWebSearchLogger: MobileWebSearchLogger,\n\t\tSearchGateway: SearchGateway\n\t}\n};\n\n// Setup a single export for new modules to fold all of the above lines into.\n// One export to rule them all!\nmw.mobileFrontend.define( 'mobile.startup', module.exports );\n\nschemaMobileWebSearch.subscribeMobileWebSearchSchema();\n","var Drawer = require( './../Drawer' ),\n\tutil = require( './../util' ),\n\ticons = require( './../icons' ),\n\tmfExtend = require( './../mfExtend' ),\n\tReferencesGateway = require( './ReferencesGateway' ),\n\tIcon = require( './../Icon' );\n\n/**\n * Drawer for references\n * @class ReferencesDrawer\n * @extends Drawer\n * @uses Icon\n * @param {Object} props\n */\nfunction ReferencesDrawer( props ) {\n\tDrawer.call( this,\n\t\tutil.extend( {\n\t\t\tclassName: 'drawer position-fixed text references'\n\t\t}, props )\n\t);\n}\n\nmfExtend( ReferencesDrawer, Drawer, {\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @mixes Drawer#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.cancelButton HTML of the button that closes the drawer.\n\t * @property {boolean} defaults.error whether an error message is being shown\n\t */\n\tdefaults: util.extend( {}, Drawer.prototype.defaults, {\n\t\tspinner: icons.spinner().toHtmlString(),\n\t\tcancelButton: icons.cancel( 'gray' ).toHtmlString(),\n\t\tcitation: new Icon( {\n\t\t\tisSmall: true,\n\t\t\tname: 'citation',\n\t\t\tadditionalClassNames: 'text',\n\t\t\thasText: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-references-citation' )\n\t\t} ).toHtmlString(),\n\t\terrorClassName: new Icon( {\n\t\t\tname: 'error',\n\t\t\thasText: true,\n\t\t\tisSmall: true\n\t\t} ).getClassName()\n\t} ),\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tevents: {\n\t\t'click sup a': 'showNestedReference'\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tshow: function () {\n\t\treturn Drawer.prototype.show.apply( this, arguments );\n\t},\n\t/**\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.startup', 'ReferencesDrawer.hogan' ),\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tcloseOnScroll: false,\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar windowHeight = util.getWindow().height();\n\n\t\tDrawer.prototype.postRender.apply( this );\n\n\t\t// make sure the drawer doesn't take up more than 50% of the viewport height\n\t\tif ( windowHeight / 2 < 400 ) {\n\t\t\tthis.$el.css( 'max-height', windowHeight / 2 );\n\t\t}\n\n\t\tthis.on( 'show', this.onShow.bind( this ) );\n\t\tthis.on( 'hide', this.onHide.bind( this ) );\n\t},\n\t/**\n\t * Make body not scrollable\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tonShow: function () {\n\t\tutil.getDocument().find( 'body' ).addClass( 'drawer-enabled' );\n\t},\n\t/**\n\t * Restore body scroll\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t */\n\tonHide: function () {\n\t\tutil.getDocument().find( 'body' ).removeClass( 'drawer-enabled' );\n\t},\n\t/**\n\t * Fetch and render nested reference upon click\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @param {string} id of the reference to be retrieved\n\t * @param {Page} page to locate reference for\n\t * @param {string} refNumber the number it identifies as in the page\n\t * @return {jQuery.Deferred}\n\t */\n\tshowReference: function ( id, page, refNumber ) {\n\t\tvar drawer = this,\n\t\t\tgateway = this.options.gateway;\n\n\t\t// Save the page in case we have to show a nested reference.\n\t\tthis.options.page = page;\n\t\t// If API is being used we want to show the drawer with the spinner while query runs\n\t\tdrawer.show();\n\t\treturn gateway.getReference( id, page ).then( function ( reference ) {\n\t\t\tdrawer.render( {\n\t\t\t\ttitle: refNumber,\n\t\t\t\ttext: reference.text\n\t\t\t} );\n\t\t}, function ( err ) {\n\t\t\tif ( err === ReferencesGateway.ERROR_NOT_EXIST ) {\n\t\t\t\tdrawer.hide();\n\t\t\t} else {\n\t\t\t\tdrawer.render( {\n\t\t\t\t\terror: true,\n\t\t\t\t\ttitle: refNumber,\n\t\t\t\t\ttext: mw.msg( 'mobile-frontend-references-citation-error' )\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\t/**\n\t * Fetch and render nested reference upon click\n\t * @memberof ReferencesDrawer\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t * @return {boolean} False to cancel the native event\n\t */\n\tshowNestedReference: function ( ev ) {\n\t\tvar $dest = this.$( ev.target );\n\n\t\tthis.showReference( $dest.attr( 'href' ), this.options.page, $dest.text() );\n\t\t// Don't hide the already shown drawer via propagation\n\t\t// and stop default scroll behaviour.\n\t\treturn false;\n\t}\n} );\n\nmodule.exports = ReferencesDrawer;\n","/**\n * Abstract base class\n * Gateway for retrieving references\n *\n * @class ReferencesGateway\n * @abstract\n *\n * @param {mw.Api} api\n */\nfunction ReferencesGateway( api ) {\n\tthis.api = api;\n}\n\n/**\n * Return the matched reference via API or DOM query\n *\n * @memberof ReferencesGateway\n * @instance\n * @param {string} id CSS selector\n * @param {Page} page to find reference for\n * @return {jQuery.Promise} resolves with an Object representing reference\n *  with a `text` property\n *  The promise should be rejected with ReferenceGateway.ERROR_NOT_EXIST:\n *  if the reference is not found.\n *  If for some reason locating the reference fails return ReferenceGateway.ERROR_OTHER.\n */\nReferencesGateway.prototype.getReference = null;\n\n/**\n * @memberof ReferencesGateway\n * @property ERROR_NOT_EXIST error code to be returned by getReference\n *  when a reference does not exist.\n */\nReferencesGateway.ERROR_NOT_EXIST = 'NOT_EXIST_ERROR';\n/**\n * @memberof ReferencesGateway\n * @property ERROR_OTHER error code to be returned by getReference\n *  under any other circumstance not covered\n *  by ERROR_NOT_EXIST. It should be used if it is unclear whether a reference exists or not.\n */\nReferencesGateway.ERROR_OTHER = 'OTHER_ERROR';\n\nmodule.exports = ReferencesGateway;\n","var ReferencesGateway = require( './ReferencesGateway' ),\n\tmfExtend = require( './../mfExtend' ),\n\tutil = require( './../util' );\n\n/**\n * Gateway for retrieving references via the content of the Page\n *\n * @class ReferencesHtmlScraperGateway\n * @extends ReferencesGateway\n * @inheritdoc\n */\nfunction ReferencesHtmlScraperGateway() {\n\tReferencesGateway.apply( this, arguments );\n}\n\nmfExtend( ReferencesHtmlScraperGateway, ReferencesGateway, {\n\t/**\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @instance\n\t * @param {string} id of a DOM element in the page with '#' prefix.\n\t *  can be encoded or decoded.\n\t * @param {jQuery.Object} $container to scan for an element\n\t * @return {jQuery.Promise} that can be used by getReference\n\t */\n\tgetReferenceFromContainer: function ( id, $container ) {\n\t\tvar $el,\n\t\t\tresult = util.Deferred();\n\n\t\t$el = $container.find( '#' + util.escapeSelector( id.substr( 1 ) ) );\n\t\tif ( $el.length ) {\n\t\t\tresult.resolve( { text: $el.html() } );\n\t\t} else {\n\t\t\tresult.reject( ReferencesGateway.ERROR_NOT_EXIST );\n\t\t}\n\t\treturn result.promise();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @instance\n\t */\n\tgetReference: function ( id, page ) {\n\t\t// If an id is not found it's possible the id passed needs decoding (per T188547).\n\t\treturn this.getReferenceFromContainer( decodeURIComponent( id ), page.$( 'ol.references' ) );\n\t}\n} );\n\nmodule.exports = ReferencesHtmlScraperGateway;\n","var ReferencesHtmlScraperGateway =\n\trequire( './ReferencesHtmlScraperGateway' ),\n\tcache = require( './../cache' ),\n\tReferencesGateway = require( './ReferencesGateway' ),\n\tMemoryCache = cache.MemoryCache,\n\tutil = require( './../util' ),\n\tmfExtend = require( './../mfExtend' ),\n\tNoCache = cache.NoCache,\n\treferencesMobileViewGateway = null;\n\n/**\n * Gateway for retrieving references via the MobileView API\n *\n * By default not cached, if it receives a cache instance then it will be\n * used to store and get references sections.\n *\n * @class ReferencesMobileViewGateway\n * @extends ReferencesHtmlScraperGateway\n * @inheritdoc\n *\n * @param {mw.Api} api class to use for making requests\n * @param {NoCache|MemoryCache} [cache] class to use for caching request\n * results. By default it uses the NoCache implementation, which doesn't\n * cache anything. The singleton instance exposed by this module uses\n * a MemoryCache which caches requests in-memory. Any other Cache class\n * compatible with mobile.startup/cache's interface will actually work.\n */\nfunction ReferencesMobileViewGateway( api, cache ) {\n\tReferencesHtmlScraperGateway.call( this, api );\n\tthis.cache = cache || new NoCache();\n}\n\nmfExtend( ReferencesMobileViewGateway, ReferencesHtmlScraperGateway, {\n\t/**\n\t * Retrieve references list for a given page.\n\t * Also cache the result for a later use.\n\t *\n\t * @memberof ReferencesMobileViewGateway\n\t * @instance\n\t * @param {Page} page\n\t * @return {jQuery.Deferred} promise that resolves with the list of\n\t *  sections on the page\n\t */\n\tgetReferencesLists: function ( page ) {\n\t\tvar self = this,\n\t\t\tresult = util.Deferred(),\n\t\t\tcachedReferencesSections = this.cache.get( page.id );\n\n\t\tif ( cachedReferencesSections ) {\n\t\t\treturn result.resolve( cachedReferencesSections ).promise();\n\t\t}\n\n\t\tthis.api.get( {\n\t\t\taction: 'mobileview',\n\t\t\tpage: page.getTitle(),\n\t\t\tsections: 'references',\n\t\t\tprop: 'text',\n\t\t\trevision: page.getRevisionId()\n\t\t} ).then( function ( data ) {\n\t\t\tvar sections = {};\n\n\t\t\tdata.mobileview.sections.forEach( function ( section ) {\n\t\t\t\tvar $section = util.parseHTML( '<div>' ).html( section.text );\n\n\t\t\t\tsections[ $section.find( '.mw-headline' ).attr( 'id' ) ] = $section.find( '.references' );\n\t\t\t} );\n\n\t\t\tself.cache.set( page.id, sections );\n\t\t\tresult.resolve( sections );\n\t\t}, function () {\n\t\t\tresult.reject( ReferencesGateway.ERROR_OTHER );\n\t\t} );\n\n\t\treturn result.promise();\n\t},\n\t/**\n\t * Retrieve all the references lists for a given page and section ID.\n\t *\n\t * @memberof ReferencesMobileViewGateway\n\t * @instance\n\t * @param {Page} page\n\t * @param {string} headingId\n\t * @return {jQuery.Promise} promise that resolves with the section\n\t *  HTML or `false` if no such section exists\n\t */\n\tgetReferencesList: function ( page, headingId ) {\n\t\treturn this.getReferencesLists( page ).then( function ( data ) {\n\t\t\treturn Object.prototype.hasOwnProperty.call( data, headingId ) ?\n\t\t\t\tdata[ headingId ] : false;\n\t\t} );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesMobileViewGateway\n\t * @instance\n\t */\n\tgetReference: function ( id, page ) {\n\t\tvar self = this;\n\n\t\treturn this.getReferencesLists( page ).then( function ( sections ) {\n\t\t\tvar $container = util.parseHTML( '<div>' );\n\n\t\t\tObject.keys( sections ).forEach( function ( sectionId ) {\n\t\t\t\t$container.append( sections[ sectionId ] );\n\t\t\t} );\n\n\t\t\treturn self.getReferenceFromContainer( id, $container );\n\t\t} );\n\t}\n} );\n\n/**\n * Retrieve a singleton instance w/ cache that uses mw.Api\n * @memberof ReferencesMobileViewGateway\n * @return {ReferencesMobileViewGateway}\n */\nReferencesMobileViewGateway.getSingleton = function () {\n\tif ( !referencesMobileViewGateway ) {\n\t\treferencesMobileViewGateway = new ReferencesMobileViewGateway(\n\t\t\tnew mw.Api(),\n\t\t\tnew MemoryCache()\n\t\t);\n\t}\n\treturn referencesMobileViewGateway;\n};\n\nmodule.exports = ReferencesMobileViewGateway;\n","var\n\tloadingOverlay = require( './loadingOverlay' ),\n\tutil = require( './util' );\n\n/**\n * Utility library for looking up details on the current user\n * @class loader\n * @singleton\n */\nmodule.exports = {\n\t// Exported to support testing and stubbing\n\tnewLoadingOverlay: function () {\n\t\treturn loadingOverlay();\n\t},\n\t/**\n\t * Loads a module via ResourceLoader\n\t * and displays a full screen LoadingOverlay during load time.\n\t * @memberof loader\n\t * @instance\n\t * @param {string} name ResourceLoader module name to load asynchronously.\n\t * @param {boolean} delegateHide if true the caller is responsible for hiding\n\t *  the intermediate loader.\n\t * @param {boolean} [showLoadingOverlay] if false a loading overlay will be hidden while\n\t *  loading the module. Defaults to true.\n\t * @return {jQuery.Promise}\n\t */\n\tloadModule: function ( name, delegateHide, showLoadingOverlay ) {\n\t\tvar loadingOverlay = this.newLoadingOverlay();\n\n\t\tshowLoadingOverlay = ( showLoadingOverlay !== undefined ) ? showLoadingOverlay : true;\n\t\tif ( showLoadingOverlay ) {\n\t\t\tloadingOverlay.show();\n\t\t}\n\n\t\tfunction hideOverlayIfNeeded() {\n\t\t\tif ( !delegateHide && showLoadingOverlay ) {\n\t\t\t\tloadingOverlay.hide();\n\t\t\t}\n\t\t}\n\t\treturn mw.loader.using( name ).then( function () {\n\t\t\thideOverlayIfNeeded();\n\n\t\t\treturn loadingOverlay;\n\t\t}, function () {\n\t\t\thideOverlayIfNeeded();\n\n\t\t\treturn util.Deferred().reject().promise();\n\t\t} );\n\t}\n};\n","/**\n * Coordinates the logging of MobileWebSchema events.\n * Implements schema defined at https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n *\n * @class\n */\nfunction MobileWebSearchLogger() {\n\tthis.userSessionToken = null;\n\tthis.searchSessionToken = null;\n}\n\nMobileWebSearchLogger.prototype = {\n\t/**\n\t * Sets the internal state required to deal with logging user session\n\t * data.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newUserSession: function () {\n\t\tthis.userSessionToken = mw.user.generateRandomSessionId();\n\t},\n\n\t/**\n\t * Sets the internal state required to deal with logging search session\n\t * data.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newSearchSession: function () {\n\t\tthis.searchSessionToken = mw.user.generateRandomSessionId();\n\t\tthis.searchSessionCreatedAt = new Date().getTime();\n\t},\n\n\t/**\n\t * Handles the 'search-show' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchShow: function () {\n\t\tthis._newUserSession();\n\t},\n\n\t/**\n\t * Handles the 'search-start' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchStart: function () {\n\t\tthis._newSearchSession();\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'session-start',\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: 0\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-results' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {Object[]} event.results\n\t */\n\tonSearchResults: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'impression-results',\n\t\t\tresultSetType: 'prefix',\n\t\t\tnumberOfResults: event.results.length,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\t// FIXME: Unless I'm mistaken, the timeToDisplayResults\n\t\t\t// property isn't necessary.\n\t\t\ttimeToDisplayResults: timeOffsetSinceStart,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-result-click' event.\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {number} event.index\n\t *  The zero-based index of the result in the set of results.\n\t */\n\tonSearchResultClick: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'click-result',\n\t\t\t// NOTE: clickIndex is 1-based.\n\t\t\tclickIndex: event.resultIndex + 1,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t}\n};\n\n/**\n * Convenience function that wires up an instance of the\n * MobileWebSearchLogger class to the search-* events emitted by the\n * search overlay.\n * @memberof MobileWebSearchLogger\n * @param {SearchOverlay} searchOverlay\n */\nMobileWebSearchLogger.register = function ( searchOverlay ) {\n\tvar logger = new MobileWebSearchLogger();\n\n\tsearchOverlay.on( 'search-show', logger.onSearchShow.bind( logger ) );\n\tsearchOverlay.on( 'search-start', logger.onSearchStart.bind( logger ) );\n\tsearchOverlay.on( 'search-results', logger.onSearchResults.bind( logger ) );\n\tsearchOverlay.on( 'search-result-click', logger.onSearchResultClick.bind( logger ) );\n};\n\nmodule.exports = MobileWebSearchLogger;\n","var\n\tPage = require( '../Page' ),\n\tutil = require( '../util' ),\n\textendSearchParams = require( '../extendSearchParams' );\n\n/**\n * @class SearchGateway\n * @uses mw.Api\n * @param {mw.Api} api\n */\nfunction SearchGateway( api ) {\n\tthis.api = api;\n\tthis.searchCache = {};\n\tthis.generator = mw.config.get( 'wgMFSearchGenerator' );\n}\n\nSearchGateway.prototype = {\n\t/**\n\t * The namespace to search in.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @type {number}\n\t */\n\tsearchNamespace: 0,\n\n\t/**\n\t * Get the data used to do the search query api call.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @return {Object}\n\t */\n\tgetApiData: function ( query ) {\n\t\tvar prefix = this.generator.prefix,\n\t\t\tdata = extendSearchParams( 'search', {\n\t\t\t\tgenerator: this.generator.name\n\t\t\t} );\n\n\t\tdata.redirects = '';\n\n\t\tdata['g' + prefix + 'search'] = query;\n\t\tdata['g' + prefix + 'namespace'] = this.searchNamespace;\n\t\tdata['g' + prefix + 'limit'] = 15;\n\n\t\t// If PageImages is being used configure further.\n\t\tif ( data.pilimit ) {\n\t\t\tdata.pilimit = 15;\n\t\t\tdata.pithumbsize = mw.config.get( 'wgMFThumbnailSizes' ).tiny;\n\t\t}\n\t\treturn data;\n\t},\n\n\t/**\n\t * Escapes regular expression wildcards (metacharacters) by adding a \\\\ prefix\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} str a string\n\t * @return {Object} a regular expression that can be used to search for that str\n\t * @private\n\t */\n\t_createSearchRegEx: function ( str ) {\n\t\t// '\\[' can be unescaped, but leave it balanced with '`]'\n\t\t// eslint-disable-next-line no-useless-escape\n\t\tstr = str.replace( /[-\\[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&' );\n\t\treturn new RegExp( '^(' + str + ')', 'ig' );\n\t},\n\n\t/**\n\t * Takes a label potentially beginning with term\n\t * and highlights term if it is present with strong\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} label a piece of text\n\t * @param {string} term a string to search for from the start\n\t * @return {string} safe html string with matched terms encapsulated in strong tags\n\t * @private\n\t */\n\t_highlightSearchTerm: function ( label, term ) {\n\t\tlabel = util.parseHTML( '<span>' ).text( label ).html();\n\t\tterm = util.parseHTML( '<span>' ).text( term ).html();\n\n\t\treturn label.replace( this._createSearchRegEx( term ), '<strong>$1</strong>' );\n\t},\n\n\t/**\n\t * Return data used for creating {Page} objects\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @param {Object} pageInfo from the API\n\t * @return {Object} data needed to create a {Page}\n\t * @private\n\t */\n\t_getPage: function ( query, pageInfo ) {\n\t\tvar page = Page.newFromJSON( pageInfo );\n\n\t\t// If displaytext is set in the generator result (eg. by Wikibase),\n\t\t// use that as display title.\n\t\t// Otherwise default to the page's title.\n\t\t// FIXME: Given that displayTitle could have html in it be safe and just highlight text.\n\t\t// Note that highlightSearchTerm does full HTML escaping before highlighting.\n\t\tpage.displayTitle = this._highlightSearchTerm(\n\t\t\tpageInfo.displaytext ? pageInfo.displaytext : page.title,\n\t\t\tquery\n\t\t);\n\t\tpage.index = pageInfo.index;\n\n\t\treturn page;\n\t},\n\n\t/**\n\t * Process the data returned by the api call.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @param {Object} data from api\n\t * @return {Array}\n\t * @private\n\t */\n\t_processData: function ( query, data ) {\n\t\tvar self = this,\n\t\t\tresults = [];\n\n\t\tif ( data.query ) {\n\n\t\t\tresults = data.query.pages || {};\n\t\t\tresults = Object.keys( results ).map( function ( id ) {\n\t\t\t\treturn self._getPage( query, results[ id ] );\n\t\t\t} );\n\t\t\t// sort in order of index\n\t\t\tresults.sort( function ( a, b ) {\n\t\t\t\treturn a.index < b.index ? -1 : 1;\n\t\t\t} );\n\t\t}\n\n\t\treturn results;\n\t},\n\n\t/**\n\t * Perform a search for the given query.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query to search for\n\t * @return {jQuery.Deferred}\n\t */\n\tsearch: function ( query ) {\n\t\tvar xhr, request,\n\t\t\tself = this;\n\n\t\tif ( !this.isCached( query ) ) {\n\t\t\txhr = this.api.get( this.getApiData( query ) );\n\t\t\trequest = xhr\n\t\t\t\t.then( function ( data ) {\n\t\t\t\t\t// resolve the Deferred object\n\t\t\t\t\treturn {\n\t\t\t\t\t\tquery: query,\n\t\t\t\t\t\tresults: self._processData( query, data )\n\t\t\t\t\t};\n\t\t\t\t}, function () {\n\t\t\t\t\t// reset cached result, it maybe contains no value\n\t\t\t\t\tself.searchCache[query] = undefined;\n\t\t\t\t} );\n\n\t\t\t// cache the result to prevent the execution of one search query twice\n\t\t\t// in one session\n\t\t\tthis.searchCache[query] = request.promise( {\n\t\t\t\tabort: function () { xhr.abort(); }\n\t\t\t} );\n\t\t}\n\n\t\treturn this.searchCache[query];\n\t},\n\n\t/**\n\t * Check if the search has already been performed in given session.\n\t * @memberof SearchGateway\n\t * @instance\n\t * @param {string} query\n\t * @return {boolean}\n\t */\n\tisCached: function ( query ) {\n\t\treturn Boolean( this.searchCache[ query ] );\n\t}\n};\n\nmodule.exports = SearchGateway;\n","var\n\tmfExtend = require( '../mfExtend' ),\n\tOverlay = require( '../Overlay' ),\n\tutil = require( '../util' ),\n\tAnchor = require( '../Anchor' ),\n\tIcon = require( '../Icon' ),\n\tWatchstarPageList = require( '../watchstar/WatchstarPageList' ),\n\tSEARCH_DELAY = 300,\n\tSEARCH_SPINNER_DELAY = 2000,\n\tfeedbackLink = mw.config.get( 'wgCirrusSearchFeedbackLink' );\n\n/**\n * Overlay displaying search results\n * @class SearchOverlay\n * @extends Overlay\n * @uses SearchGateway\n * @uses Icon\n *\n * @param {Object} params Configuration options\n * @fires SearchOverlay#search-show\n * @fires SearchOverlay#search-start\n * @fires SearchOverlay#search-results\n * @fires SearchOverlay#search-result-click\n */\nfunction SearchOverlay( params ) {\n\tvar defaultParams = {\n\t\t\tisBorderBox: false,\n\t\t\tclassName: 'overlay search-overlay'\n\t\t},\n\t\toptions = util.extend( {}, defaultParams, params );\n\n\tOverlay.call( this, options );\n\n\tthis.api = options.api;\n\t// eslint-disable-next-line new-cap\n\tthis.gateway = new options.gatewayClass( this.api );\n\n\tthis.router = options.router;\n}\n\nmfExtend( SearchOverlay, Overlay, {\n\t/**\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, Overlay.prototype.templatePartials, {\n\t\theader: mw.template.get( 'mobile.startup', 'search/SearchHeader.hogan' ),\n\t\tcontent: mw.template.get( 'mobile.startup', 'search/SearchContent.hogan' ),\n\t\ticon: Icon.prototype.template\n\t} ),\n\t/**\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @mixes Overlay#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {SearchGateway} defaults.gatewayClass The class to use to setup an API gateway.\n\t *  FIXME: Should be removed when wikidata descriptions in stable (T101719)\n\t * @property {Router} defaults.router instance\n\t * @property {Object} defaults.clearIcon options for the button that clears the search text.\n\t * @property {Object} defaults.searchContentIcon options for the button that allows you to\n\t *  search within content\n\t * @property {string} defaults.searchTerm Search text.\n\t * @property {string} defaults.placeholderMsg Search input placeholder text.\n\t * @property {string} defaults.clearMsg Tooltip for clear button that appears when you type\n\t * into search box.\n\t * @property {string} defaults.searchContentMsg Caption for a button performing full text\n\t * search of a given search query.\n\t * @property {string} defaults.noResultsMsg Message informing user that no pages were found\n\t * for a given query.\n\t * @property {string} defaults.searchContentNoResultsMsg Used when no pages with matching\n\t * titles were found.\n\t * @property {string} defaults.action The value of wgScript\n\t * @property {Object} defaults.feedback options for the feedback link\n\t *  below the search results\n\t */\n\tdefaults: util.extend( {}, Overlay.prototype.defaults, {\n\t\theaderChrome: true,\n\t\tclearIcon: new Icon( {\n\t\t\ttagName: 'button',\n\t\t\tname: 'search-clear',\n\t\t\tisSmall: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-clear-search' ),\n\t\t\tadditionalClassNames: 'clear'\n\t\t} ).options,\n\t\tsearchContentIcon: new Icon( {\n\t\t\ttagName: 'a',\n\t\t\t// When this icon is clicked we want to reset the hash for subsequent views\n\t\t\thref: '#',\n\t\t\tname: 'search-content',\n\t\t\tlabel: mw.msg( 'mobile-frontend-search-content' )\n\t\t} ).options,\n\t\tsearchTerm: '',\n\t\tplaceholderMsg: '',\n\t\tnoResultsMsg: mw.msg( 'mobile-frontend-search-no-results' ),\n\t\tsearchContentNoResultsMsg: mw.message( 'mobile-frontend-search-content-no-results' ).parse(),\n\t\taction: mw.config.get( 'wgScript' ),\n\t\tfeedback: !feedbackLink ? false : {\n\t\t\tfeedback: new Anchor( {\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-search-feedback-link-text' ),\n\t\t\t\thref: feedbackLink\n\t\t\t} ).options,\n\t\t\tprompt: mw.msg( 'mobile-frontend-search-feedback-prompt' )\n\t\t}\n\t} ),\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tevents: util.extend( {}, Overlay.prototype.events, {\n\t\t'input input': 'onInputInput',\n\t\t'click .clear': 'onClickClear',\n\t\t'click .search-content': 'onClickSearchContent',\n\t\t'click .overlay-content': 'onClickOverlayContent',\n\t\t'click .overlay-content > div': 'onClickOverlayContentDiv',\n\t\t'touchstart .results': 'hideKeyboardOnScroll',\n\t\t'mousedown .results': 'hideKeyboardOnScroll',\n\t\t'click .results a': 'onClickResult'\n\t} ),\n\n\t/**\n\t * Make sure search header is docked to the top of the screen when the\n\t * user begins typing so that there is adequate space for search results\n\t * above the keyboard. (This is only a potential issue when sitenotices\n\t * are displayed.)\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonInputInput: function () {\n\t\tthis.performSearch();\n\t\tthis.$clear.toggle( this.$input.val() !== '' );\n\t},\n\n\t/**\n\t * Initialize the button that clears the search field\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @return {boolean} False to cancel the native event\n\t */\n\tonClickClear: function () {\n\t\tthis.$input.val( '' ).focus();\n\t\tthis.performSearch();\n\t\tthis.$clear.hide();\n\t\t// In beta the clear button is on top of the search input.\n\t\t// Stop propagation so that the input doesn't receive the click.\n\t\treturn false;\n\t},\n\n\t/**\n\t * Initialize 'search within pages' functionality\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickSearchContent: function () {\n\t\tvar $el = util.getDocument().find( 'body' ),\n\t\t\t$form = this.$( 'form' );\n\n\t\t// Add fulltext input to force fulltext search\n\t\tthis.parseHTML( '<input>' )\n\t\t\t.attr( {\n\t\t\t\ttype: 'hidden',\n\t\t\t\tname: 'fulltext',\n\t\t\t\tvalue: 'search'\n\t\t\t} )\n\t\t\t.appendTo( $form );\n\t\t// history.back queues a task so might run after this call. Thus we use setTimeout\n\t\t// http://www.w3.org/TR/2011/WD-html5-20110113/webappapis.html#queue-a-task\n\t\tsetTimeout( function () {\n\t\t\t// Firefox doesn't allow submission of a form not in the DOM\n\t\t\t// so temporarily re-add it\n\t\t\t$form.appendTo( $el );\n\t\t\t$form.submit();\n\t\t}, 0 );\n\t},\n\n\t/**\n\t * Tapping on background only should hide the overlay\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickOverlayContent: function () {\n\t\tthis.$( '.cancel' ).trigger( 'click' );\n\t},\n\n\t/**\n\t * Stop propagation\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonClickOverlayContentDiv: function ( ev ) {\n\t\tev.stopPropagation();\n\t},\n\n\t/**\n\t * Hide the keyboard when scrolling starts (avoid weird situation when\n\t * user taps on an item, the keyboard hides and wrong item is clicked).\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\thideKeyboardOnScroll: function () {\n\t\tthis.$input.blur();\n\t},\n\n\t/**\n\t * Handle the user clicking a result.\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonClickResult: function ( ev ) {\n\t\tvar $link = this.$( ev.currentTarget ),\n\t\t\t$result = $link.closest( 'li' );\n\t\t/**\n\t\t * Fired when the user clicks a search result\n\t\t * @event SearchOverlay#search-result-click\n\t\t * @type {Object}\n\t\t * @property {jQuery.Object} result The jQuery-wrapped DOM element that\n\t\t *  the user clicked\n\t\t * @property {number} resultIndex The zero-based index of the\n\t\t *  result in the set of results\n\t\t * @property {jQuery.Event} originalEvent The original event\n\t\t */\n\t\tthis.emit( 'search-result-click', {\n\t\t\tresult: $result,\n\t\t\tresultIndex: this.$results.index( $result ),\n\t\t\toriginalEvent: ev\n\t\t} );\n\n\t\t// FIXME: ugly hack that removes search from browser history\n\t\t// when navigating to search results\n\t\tev.preventDefault();\n\t\tthis.router.back().then( function () {\n\t\t\t// Router.navigate does not support changing href.\n\t\t\t// FIXME: Needs upstream change T189173\n\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\twindow.location.href = $link.attr( 'href' );\n\t\t} );\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this,\n\t\t\ttimer;\n\n\t\tOverlay.prototype.postRender.call( this );\n\n\t\tthis.$input = this.$( 'input' );\n\t\tthis.$clear = this.$( '.clear' );\n\t\tthis.$searchContent = this.$( '.search-content' ).hide();\n\t\tthis.$searchFeedback = this.$( '.search-feedback' ).hide();\n\t\tthis.$resultContainer = this.$( '.results-list-container' );\n\n\t\t/**\n\t\t * Hide the spinner and abort timed spinner shows.\n\t\t */\n\t\tfunction clearSearch() {\n\t\t\tself.$spinner.hide();\n\t\t\tclearTimeout( timer );\n\t\t}\n\n\t\t// Show a spinner on top of search results\n\t\tthis.$spinner = this.$( '.spinner-container' );\n\t\tthis.on( 'search-start', function ( searchData ) {\n\t\t\tif ( timer ) {\n\t\t\t\tclearSearch();\n\t\t\t}\n\t\t\ttimer = setTimeout( function () {\n\t\t\t\tself.$spinner.show();\n\t\t\t}, SEARCH_SPINNER_DELAY - searchData.delay );\n\t\t} );\n\t\tthis.on( 'search-results', clearSearch );\n\n\t\t// Hide the clear button if the search input is empty\n\t\tif ( self.$input.val() === '' ) {\n\t\t\tthis.$clear.hide();\n\t\t}\n\t},\n\n\t/**\n\t * Trigger a focus() event on search input in order to\n\t * bring up the virtual keyboard.\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshowKeyboard: function () {\n\t\tvar len = this.$input.val().length;\n\t\tthis.$input.focus();\n\t\t// Cursor to the end of the input\n\t\tif ( this.$input[0].setSelectionRange ) {\n\t\t\tthis.$input[0].setSelectionRange( len, len );\n\t\t}\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\t// Overlay#show defines the actual overlay visibility.\n\t\tOverlay.prototype.show.apply( this, arguments );\n\n\t\tthis.showKeyboard();\n\t\t/**\n\t\t * Fired after the search overlay is shown\n\t\t * @event SearchOverlay#search-show\n\t\t */\n\t\tthis.emit( 'search-show' );\n\t},\n\n\t/**\n\t * Fade out if the browser supports animations\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\thide: function () {\n\t\tvar self = this,\n\t\t\t$html = util.getDocument();\n\n\t\tif ( $html.hasClass( 'animations' ) ) {\n\t\t\tself.$el.addClass( 'fade-out' );\n\t\t\tsetTimeout( function () {\n\t\t\t\tOverlay.prototype.hide.apply( self, arguments );\n\t\t\t}, 500 );\n\t\t} else {\n\t\t\tOverlay.prototype.hide.apply( self, arguments );\n\t\t}\n\t\treturn true;\n\t},\n\n\t/**\n\t * Perform search and render results inside current view.\n\t * FIXME: Much of the logic for caching and pending queries inside this function should\n\t * actually live in SearchGateway, please move out.\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tperformSearch: function () {\n\t\tvar\n\t\t\tself = this,\n\t\t\tapi = this.api,\n\t\t\tquery = this.$input.val(),\n\t\t\tdelay = this.gateway.isCached( query ) ? 0 : SEARCH_DELAY;\n\n\t\t// it seems the input event can be fired when virtual keyboard is closed\n\t\t// (Chrome for Android)\n\t\tif ( query !== this.lastQuery ) {\n\t\t\tif ( self._pendingQuery ) {\n\t\t\t\tself._pendingQuery.abort();\n\t\t\t}\n\t\t\tclearTimeout( this.timer );\n\n\t\t\tif ( query.length ) {\n\t\t\t\tthis.timer = setTimeout( function () {\n\t\t\t\t\tvar xhr;\n\t\t\t\t\t/**\n\t\t\t\t\t * Fired immediately before the search API request is sent\n\t\t\t\t\t * @event SearchOverlay#search-start\n\t\t\t\t\t * @property {Object} data related to the current search\n\t\t\t\t\t */\n\t\t\t\t\tself.emit( 'search-start', {\n\t\t\t\t\t\tquery: query,\n\t\t\t\t\t\tdelay: delay\n\t\t\t\t\t} );\n\n\t\t\t\t\txhr = self.gateway.search( query );\n\t\t\t\t\tself._pendingQuery = xhr.then( function ( data ) {\n\t\t\t\t\t\t// check if we're getting the rights response in case of out of\n\t\t\t\t\t\t// order responses (need to get the current value of the input)\n\t\t\t\t\t\tif ( data && data.query === self.$input.val() ) {\n\t\t\t\t\t\t\tself.$el.toggleClass( 'no-results', data.results.length === 0 );\n\t\t\t\t\t\t\tself.$searchContent\n\t\t\t\t\t\t\t\t.show()\n\t\t\t\t\t\t\t\t.find( 'p' )\n\t\t\t\t\t\t\t\t.hide()\n\t\t\t\t\t\t\t\t.filter( data.results.length ? '.with-results' : '.without-results' )\n\t\t\t\t\t\t\t\t.show();\n\n\t\t\t\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\t\t\t\tnew WatchstarPageList( {\n\t\t\t\t\t\t\t\tapi: api,\n\t\t\t\t\t\t\t\tfunnel: 'search',\n\t\t\t\t\t\t\t\tpages: data.results,\n\t\t\t\t\t\t\t\tel: self.$resultContainer\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\tself.$results = self.$resultContainer.find( 'li' );\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Fired when search API returns results\n\t\t\t\t\t\t\t * @event SearchOverlay#search-results\n\t\t\t\t\t\t\t * @type {Object}\n\t\t\t\t\t\t\t * @property {Object[]} results The results returned by the search\n\t\t\t\t\t\t\t *  API\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tself.emit( 'search-results', {\n\t\t\t\t\t\t\t\tresults: data.results\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ).promise( { abort: function () { xhr.abort(); } } );\n\t\t\t\t}, delay );\n\t\t\t} else {\n\t\t\t\tself.resetSearch();\n\t\t\t}\n\n\t\t\tthis.lastQuery = query;\n\t\t}\n\t},\n\t/**\n\t * Clear results\n\t *\n\t * @private\n\t */\n\tresetSearch: function () {\n\t\tthis.$spinner.hide();\n\t\tthis.$searchContent.hide();\n\t\tthis.$searchFeedback.hide();\n\t\tthis.$resultContainer.empty();\n\t}\n} );\n\nmodule.exports = SearchOverlay;\n","function subscribeMobileWebSearchSchema() {\n\tmw.loader.using( [\n\t\t'ext.eventLogging.subscriber'\n\t] ).then( function () {\n\t\tvar M = mw.mobileFrontend,\n\t\t\tcontext = M.require( 'mobile.startup/context' ),\n\t\t\t// Schema provided by ext.eventLogging.subscriber class\n\t\t\tSchema = mw.eventLog.Schema, // resource-modules-disable-line\n\t\t\t/**\n\t\t * MobileWebSearch schema\n\t\t * https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n\t\t */\n\t\t\tschemaMobileWebSearch = new Schema(\n\t\t\t\t'MobileWebSearch',\n\t\t\t\t// todo: use a default value of 0 once config lands in production.\n\t\t\t\tmw.config.get( 'wgMFSchemaSearchSampleRate', 1 / 1000 ),\n\t\t\t\t/**\n\t\t\t * @property {Object} defaults Default options hash.\n\t\t\t * @property {string} defaults.platform Always \"mobileweb\"\n\t\t\t * @property {string} defaults.platformVersion The version of MobileFrontend\n\t\t\t *  that the user is using. One of \"stable\" or \"beta\"\n\t\t\t */\n\t\t\t\t{\n\t\t\t\t\tplatform: 'mobileweb',\n\t\t\t\t\tplatformVersion: context.getMode()\n\t\t\t\t}\n\t\t\t);\n\n\t\tmw.trackSubscribe( 'mf.schemaMobileWebSearch', function ( topic, data ) {\n\t\t\tschemaMobileWebSearch.log( data );\n\t\t} );\n\t} );\n}\n\nmodule.exports = {\n\tsubscribeMobileWebSearchSchema: subscribeMobileWebSearchSchema\n};\n","var units = [ 'seconds', 'minutes', 'hours', 'days', 'months', 'years' ],\n\tutil = require( './util' ),\n\tlimits = [ 1, 60, 3600, 86400, 2592000, 31536000 ];\n\n/** @class time */\n\n/**\n * Calculate the correct unit of timestamp\n * @memberof time\n * @instance\n * @param {number} timestampDelta\n * @return {{value: number, unit: string}}\n */\nfunction timeAgo( timestampDelta ) {\n\tvar i = 0;\n\twhile ( i < limits.length && timestampDelta > limits[i + 1] ) {\n\t\t++i;\n\t}\n\treturn {\n\t\tvalue: Math.round( timestampDelta / limits[i] ),\n\t\tunit: units[i]\n\t};\n}\n\n/**\n * Calculate the correct unit of timestamp delta\n * @memberof time\n * @instance\n * @param {number} timestamp\n * @return {{value: number, unit: string}}\n */\nfunction getTimeAgoDelta( timestamp ) {\n\tvar currentTimestamp = Math.round( new Date().getTime() / 1000 );\n\n\treturn timeAgo( currentTimestamp - timestamp );\n}\n\n/**\n * Whether timestamp delta is less than a day old\n * @memberof time\n * @instance\n * @param {{value: number, unit: string}} delta Object of timestamp and its label\n * @return {boolean}\n */\nfunction isRecent( delta ) {\n\treturn [ 'seconds', 'minutes', 'hours' ].indexOf( delta.unit ) > -1;\n}\n\n/**\n * Is delta less than 10 seconds?\n * @memberof time\n * @instance\n * @param {{value: number, unit: string}} delta Object of timestamp and its label\n * @return {boolean}\n */\nfunction isNow( delta ) {\n\treturn delta.unit === 'seconds' && delta.value < 10;\n}\n\n/**\n * Return a message relating to the last modified relative time.\n * @memberof time\n * @instance\n * @param {number} ts timestamp\n * @param {string} username of the last user to modify the page\n * @param {string} [gender] of the last user to modify the page\n * @param {string} [historyUrl] url to the history page for the message, if omitted\n *  returns plain text string rather than html\n * @return {string}\n */\nfunction getLastModifiedMessage( ts, username, gender, historyUrl ) {\n\tvar delta, html,\n\t\tkeys = {\n\t\t\tseconds: 'mobile-frontend-last-modified-with-user-seconds',\n\t\t\tminutes: 'mobile-frontend-last-modified-with-user-minutes',\n\t\t\thours: 'mobile-frontend-last-modified-with-user-hours',\n\t\t\tdays: 'mobile-frontend-last-modified-with-user-days',\n\t\t\tmonths: 'mobile-frontend-last-modified-with-user-months',\n\t\t\tyears: 'mobile-frontend-last-modified-with-user-years'\n\t\t},\n\t\targs = [];\n\n\tgender = gender || 'unknown';\n\n\tdelta = getTimeAgoDelta( ts );\n\tif ( isNow( delta ) ) {\n\t\targs.push( 'mobile-frontend-last-modified-with-user-just-now', gender, username );\n\t} else {\n\t\targs.push( keys[ delta.unit ], gender, username,\n\t\t\tmw.language.convertNumber( delta.value )\n\t\t);\n\t}\n\n\targs.push(\n\t\thistoryUrl || '#',\n\t\t// Abuse PLURAL support to determine if the user is anonymous or not\n\t\tmw.language.convertNumber( username ? 1 : 0 ),\n\t\t// Our abuse of PLURAL support means we have to pass the relative URL\n\t\t// rather than construct it from a wikilink\n\t\tusername ? mw.util.getUrl( 'User:' + username ) : ''\n\t);\n\thtml = mw.message.apply( this, args ).parse();\n\tif ( historyUrl ) {\n\t\treturn html;\n\t} else {\n\t\treturn util.parseHTML( '<div>' ).html( html ).text();\n\t}\n}\n\n/**\n * Return a message relating to the registration date of the user\n * @memberof time\n * @instance\n * @param {string} ts timestamp\n * @param {string} [gender] of the last user editing this page\n * @return {string}\n */\nfunction getRegistrationMessage( ts, gender ) {\n\tvar delta, html,\n\t\tkeys = {\n\t\t\tseconds: 'mobile-frontend-joined-seconds',\n\t\t\tminutes: 'mobile-frontend-joined-minutes',\n\t\t\thours: 'mobile-frontend-joined-hours',\n\t\t\tdays: 'mobile-frontend-joined-days',\n\t\t\tmonths: 'mobile-frontend-joined-months',\n\t\t\tyears: 'mobile-frontend-joined-years'\n\t\t},\n\t\targs = [];\n\n\tgender = gender || 'unknown';\n\n\tdelta = getTimeAgoDelta( parseInt( ts, 10 ) );\n\tif ( isNow( delta ) ) {\n\t\targs.push( 'mobile-frontend-joined-just-now', gender );\n\t} else {\n\t\targs.push( keys[ delta.unit ], gender, mw.language.convertNumber( delta.value ) );\n\t}\n\thtml = mw.message.apply( this, args ).parse();\n\treturn html;\n}\n\nmodule.exports = {\n\tgetLastModifiedMessage: getLastModifiedMessage,\n\tgetRegistrationMessage: getRegistrationMessage,\n\ttimeAgo: timeAgo,\n\tgetTimeAgoDelta: getTimeAgoDelta,\n\tisNow: isNow,\n\tisRecent: isRecent\n};\n","var\n\tutil = require( './util' ),\n\tstorageKey = 'mobileFrontend/toast';\n\n/**\n * Wrapper for one global Toast\n * @class Toast\n */\nfunction Toast() {\n\tmw.requestIdleCallback( this._showPending.bind( this ) );\n}\n\n/**\n * Show a message with the given class in a toast.\n * @memberof Toast\n * @instance\n * @param {string} msg Message to show in the toast\n * @param {Object} options CSS class to add to the element if a string.\n *  If an object, more options for the notification see mw.notification.show.\n *  For backwards compatibility reasons if a string is given it will be\n *  treated as options.type\n */\nToast.prototype.show = function ( msg, options ) {\n\tif ( typeof options === 'string' ) {\n\t\tmw.log.warn( 'The use of the cssClass parameter of Toast.show is deprecated, please convert it to an ' +\n\t\t\t\t'options object.' );\n\t\toptions = {\n\t\t\ttype: options\n\t\t};\n\t}\n\n\toptions = util.extend( {\n\t\ttag: 'toast'\n\t}, options );\n\n\tthis.notification = mw.notify( msg, options );\n};\n\n/**\n * Hide the Toast if it's visible.\n * @memberof Toast\n * @instance\n */\nToast.prototype.hide = function () {\n\tif ( this.notification !== undefined ) {\n\t\tthis.notification.then( function ( notif ) {\n\t\t\tnotif.close();\n\t\t} );\n\t}\n};\n\n/**\n * Save the toast data in storage so that we can show it on page reload.\n * Also check whether there is a pending message that's not shown yet.\n * If yes, output a warning message and discard this message.\n * This is to ensure that the page needs to be reloaded before adding\n * a new message for showing later.\n * @memberof Toast\n * @instance\n * @param {string} content Content to be placed in element\n * @param {string} className class to add to element\n */\nToast.prototype.showOnPageReload = function ( content, className ) {\n\tif ( mw.storage.get( storageKey ) ) {\n\t\tmw.log.warn(\n\t\t\t'A pending toast message already exits. ' +\n\t\t\t\t'The page should have been reloaded by now.'\n\t\t);\n\t\treturn;\n\t}\n\tmw.storage.set( storageKey, JSON.stringify( {\n\t\tcontent: content,\n\t\tclassName: className\n\t} ) );\n};\n\n/**\n * Show the previously saved toast data and delete it from storage\n * @memberof Toast\n * @instance\n * @private\n */\nToast.prototype._showPending = function () {\n\tvar data = mw.storage.get( storageKey );\n\tif ( data ) {\n\t\tdata = JSON.parse( data );\n\t\tthis.show( data.content, data.className );\n\t\tmw.storage.remove( storageKey );\n\t}\n};\n\nmodule.exports = new Toast();\n","var View = require( '../View' ),\n\tWatchstarGateway = require( './WatchstarGateway' ),\n\ticons = require( '../icons' ),\n\tutil = require( '../util' ),\n\tmfExtend = require( '../mfExtend' ),\n\ttoast = require( '../toast' ),\n\tuser = mw.user,\n\tCtaDrawer = require( '../CtaDrawer' );\n\n/**\n * A clickable watchstar\n * @class Watchstar\n * @extends View\n * @uses CtaDrawer\n * @uses Icon\n * @uses WatchstarGateway\n * @uses Toast\n * @fires Watchstar#unwatch\n * @fires Watchstar#watch\n *\n * @param {Object} options Configuration options\n */\nfunction Watchstar( options ) {\n\tView.call( this,\n\t\tutil.extend( {\n\t\t\tclassName: icons.watchIcon().getClassName()\n\t\t}, options )\n\t);\n}\n\nmfExtend( Watchstar, View, {\n\t/**\n\t * @inheritdoc\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tevents: {\n\t\t// Disable clicks on original link\n\t\t'click a': 'onLinksClick',\n\t\tclick: 'onStatusToggle'\n\t},\n\t/**\n\t * @memberof Watchstar\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {mw.Api} defaults.api\n\t * @property {Page} defaults.page Current page.\n\t * @property {string} defaults.funnel to log events with\n\t */\n\tdefaults: {\n\t\tpage: undefined,\n\t\tfunnel: 'unknown'\n\t},\n\t/**\n\t * @memberof Watchstar\n\t * @instance\n\t * @property {Object} ctaDrawerOptions Default options hash for the anonymous CtaDrawer.\n\t */\n\tctaDrawerOptions: {\n\t\tcontent: mw.msg( 'mobile-frontend-watchlist-cta' ),\n\t\tqueryParams: {\n\t\t\twarning: 'mobile-frontend-watchlist-purpose',\n\t\t\tcampaign: 'mobile_watchPageActionCta',\n\t\t\treturntoquery: 'article_action=watch'\n\t\t},\n\t\tsignupQueryParams: {\n\t\t\twarning: 'mobile-frontend-watchlist-signup-action'\n\t\t}\n\t},\n\t/**\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\ttemplate: mw.template.compile( '<a role=\"button\">{{tooltip}}</a>', 'hogan' ),\n\t/**\n\t * @inheritdoc\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tinitialize: function ( options ) {\n\t\tvar self = this,\n\t\t\t_super = View.prototype.initialize;\n\n\t\tthis._watched = options.isWatched;\n\t\tthis.gateway = new WatchstarGateway( options.api );\n\n\t\t_super.call( self, options );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tpreRender: function () {\n\t\tthis.options.tooltip = this._watched ? mw.msg( 'unwatchthispage' ) : mw.msg( 'watchthispage' );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar unwatchedClass = icons.watchIcon().getGlyphClassName(),\n\t\t\twatchedClass = icons.watchedIcon().getGlyphClassName() + ' watched';\n\n\t\t// add tooltip to the div, not the <a> inside\n\t\t// because that <a> has zero width/height so cannot be hovered\n\t\tthis.$el.attr( 'title', this.options.tooltip );\n\n\t\t// Add watched class if necessary\n\t\tif ( !user.isAnon() && this._watched ) {\n\t\t\tthis.$el.addClass( watchedClass ).removeClass( unwatchedClass );\n\t\t} else {\n\t\t\tthis.$el.addClass( unwatchedClass ).removeClass( watchedClass );\n\t\t}\n\t\tthis.$el.removeClass( 'hidden' );\n\t},\n\n\t/**\n\t * Prevent default on incoming events\n\t * @memberof Watchstar\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonLinksClick: function ( ev ) {\n\t\tev.preventDefault();\n\t},\n\n\t/**\n\t * Triggered when a user anonymously clicks on the watchstar.\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tonStatusToggleAnon: function () {\n\t\tif ( !this.drawer ) {\n\t\t\tthis.drawer = new CtaDrawer( this.ctaDrawerOptions );\n\n\t\t}\n\t\tthis.drawer.show();\n\t},\n\n\t/**\n\t * Triggered when a logged in user clicks on the watchstar.\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tonStatusToggleUser: function () {\n\t\tvar\n\t\t\tself = this,\n\t\t\tgateway = this.gateway,\n\t\t\tpage = this.options.page,\n\t\t\tchecker,\n\t\t\tpostWatched = !this._watched;\n\n\t\tchecker = setInterval( function () {\n\t\t\ttoast.show( mw.msg( 'mobile-frontend-watchlist-please-wait' ) );\n\t\t}, 1000 );\n\t\tfunction stopInterval() {\n\t\t\tclearInterval( checker );\n\t\t}\n\t\tgateway.postStatusesByTitle( [ page.getTitle() ], postWatched ).then( function () {\n\t\t\tstopInterval();\n\n\t\t\tself._watched = postWatched;\n\t\t\tif ( postWatched ) {\n\t\t\t\tself.render();\n\t\t\t\t/**\n\t\t\t\t * Fired when the watch star is changed to watched status\n\t\t\t\t * @event Watchstar#watch\n\t\t\t\t */\n\t\t\t\tself.emit( 'watch' );\n\t\t\t\ttoast.show( mw.msg( 'mobile-frontend-watchlist-add', page.title ) );\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * Fired when the watch star is changed to unwatched status\n\t\t\t\t * @event Watchstar#unwatch\n\t\t\t\t */\n\t\t\t\tself.emit( 'unwatch' );\n\t\t\t\tself.render();\n\t\t\t\ttoast.show( mw.msg( 'mobile-frontend-watchlist-removed', page.title ) );\n\t\t\t}\n\t\t}, function () {\n\t\t\tstopInterval();\n\n\t\t\ttoast.show( mw.msg( 'mobile-frontend-watchlist-error' ), 'error' );\n\t\t} );\n\t},\n\n\t/**\n\t * Event handler for clicking on watch star.\n\t * Make an API request if user is not anonymous.\n\t * @memberof Watchstar\n\t * @instance\n\t */\n\tonStatusToggle: function () {\n\t\tif ( user.isAnon() ) {\n\t\t\tthis.onStatusToggleAnon.apply( this, arguments );\n\t\t} else {\n\t\t\tthis.onStatusToggleUser.apply( this, arguments );\n\t\t}\n\t}\n\n} );\n\nmodule.exports = Watchstar;\n","var util = require( '../util' ),\n\tactionParams = require( '../actionParams' );\n\n/**\n * @typedef {string|number} PageID Page ID. 0 / \"0\" is a special no-ID value.\n * {@link https://www.mediawiki.org/wiki/Manual:Page_table#page_id Page ID}\n *\n * @typedef {string} PageTitle Canonical page title.\n * {@link https://www.mediawiki.org/wiki/Manual:Title.php#Canonical_forms Canonical forms}\n *\n * @typedef {boolean} WatchStatus Page watch status; true if watched, false if\n *                                unwatched.\n * {@link https://www.mediawiki.org/wiki/API:Info API:Info} (see inprop.watched)\n * {@link https://www.mediawiki.org/wiki/API:Watch API:Watch} (see unwatch)\n *\n * @typedef {Object.<PageTitle, WatchStatus>} WatchStatusMap\n */\n\n/**\n * API for retrieving and modifying page watch statuses. This module interacts\n * with two endpoints, API:Info for GETs and API:Watch and for POSTs.\n *\n * @class WatchstarGateway\n * @param {mw.Api} api\n */\nfunction WatchstarGateway( api ) {\n\tthis.api = api;\n}\n\nWatchstarGateway.prototype = {\n\t/**\n\t * Issues zero to two asynchronous HTTP requests for the watch status of\n\t * each page ID and title passed.\n\t *\n\t * Every watch entry has a title but not necessarily a page ID. Entries\n\t * without IDs are missing pages, i.e., pages that do not exist. These\n\t * entries are used to observe when a page with a given title is created.\n\t * Although it is convenient to use titles because they're always present,\n\t * IDs are preferred since they're far less likely to exceed the URL length\n\t * limit.\n\t *\n\t * No request is issued when no IDs and no titles are passed. Given that the\n\t * server state does not change between the two requests, overlapping title\n\t * and ID members will behave as expected but there is no reason to issue\n\t * such a request.\n\t *\n\t * @memberof WatchstarGateway\n\t * @instance\n\t * @param {PageID[]} ids\n\t * @param {PageTitle[]} titles\n\t * @return {JQuery.Deferred<WatchStatusMap>}\n\t */\n\tgetStatuses: function ( ids, titles ) {\n\t\t// Issue two requests and coalesce the results.\n\t\treturn util.when(\n\t\t\tthis.getStatusesByID( ids ),\n\t\t\tthis.getStatusesByTitle( titles )\n\t\t).then( function () { return util.extend.apply( util, arguments ); } );\n\t},\n\n\t/**\n\t * @memberof WatchstarGateway\n\t * @instance\n\t * @param {PageID[]} ids\n\t * @return {JQuery.Deferred<WatchStatusMap>}\n\t */\n\tgetStatusesByID: function ( ids ) {\n\t\tvar self = this;\n\t\tif ( !ids.length ) {\n\t\t\treturn util.Deferred().resolve( {} );\n\t\t}\n\n\t\treturn this.api.get( {\n\t\t\tformatversion: 2,\n\t\t\taction: 'query',\n\t\t\tprop: 'info',\n\t\t\tinprop: 'watched',\n\t\t\tpageids: ids\n\t\t} ).then( function ( rsp ) {\n\t\t\treturn self._unmarshalGetResponse( rsp );\n\t\t} );\n\t},\n\n\t/**\n\t * @memberof WatchstarGateway\n\t * @instance\n\t * @param {PageTitle[]} titles\n\t * @return {JQuery.Deferred<WatchStatusMap>}\n\t */\n\tgetStatusesByTitle: function ( titles ) {\n\t\tvar self = this;\n\t\tif ( !titles.length ) {\n\t\t\treturn util.Deferred().resolve( {} );\n\t\t}\n\n\t\treturn this.api.get( actionParams( {\n\t\t\tprop: 'info',\n\t\t\tinprop: 'watched',\n\t\t\ttitles: titles\n\t\t} ) ).then( function ( rsp ) {\n\t\t\treturn self._unmarshalGetResponse( rsp );\n\t\t} );\n\t},\n\n\t/**\n\t * @memberof WatchstarGateway\n\t * @instance\n\t * @param {PageTitle[]} titles\n\t * @param {WatchStatus} watched\n\t * @return {JQuery.Deferred}\n\t */\n\tpostStatusesByTitle: function ( titles, watched ) {\n\t\tvar params = {\n\t\t\taction: 'watch',\n\t\t\ttitles: titles\n\t\t};\n\t\tif ( !watched ) {\n\t\t\tparams.unwatch = !watched;\n\t\t}\n\t\treturn this.api.postWithToken( 'watch', params );\n\t},\n\n\t/**\n\t * @memberof WatchstarGateway\n\t * @instance\n\t * @param {Object} rsp The API:Info response.\n\t * @return {JQuery.Deferred<WatchStatusMap>}\n\t * @see getStatusesByID\n\t * @see getStatusesByTitle\n\t */\n\t_unmarshalGetResponse: function ( rsp ) {\n\t\tvar pages = rsp && rsp.query && rsp.query.pages || [];\n\t\treturn pages.reduce( function ( statuses, page ) {\n\t\t\tstatuses[page.title] = page.watched;\n\t\t\treturn statuses;\n\t\t}, {} );\n\t}\n};\n\nmodule.exports = WatchstarGateway;\n","var PageList = require( '../PageList' ),\n\tWatchstar = require( './Watchstar' ),\n\tuser = mw.user,\n\tutil = require( '../util' ),\n\tPage = require( '../Page' ),\n\tmfExtend = require( '../mfExtend' ),\n\tWatchstarGateway = require( './WatchstarGateway' );\n\n/**\n * @typedef {Object.<PageTitle, PageID>} PageTitleToPageIDMap\n */\n\n/**\n * List of items page view\n * @class WatchstarPageList\n * @uses Page\n * @uses WatchstarGateway\n * @uses Watchstar\n * @extends PageList\n *\n * @fires WatchstarPageList#unwatch\n * @fires WatchstarPageList#watch\n * @param {Object} options Configuration options\n */\nfunction WatchstarPageList( options ) {\n\tthis.wsGateway = new WatchstarGateway( options.api );\n\tPageList.apply( this, arguments );\n}\n\nmfExtend( WatchstarPageList, PageList, {\n\t/**\n\t * @memberof WatchstarPageList\n\t * @instance\n\t * @mixes PageList#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {mw.Api} defaults.api\n\t */\n\n\tpostRender: function () {\n\t\tvar\n\t\t\tself = this,\n\t\t\t$items,\n\t\t\tpages,\n\t\t\tids = [],\n\t\t\ttitles = [];\n\n\t\tPageList.prototype.postRender.apply( this );\n\n\t\t$items = this.queryUnitializedItems();\n\t\tpages = this.parsePagesFromItems( $items );\n\n\t\tObject.keys( pages ).forEach( function ( title ) {\n\t\t\tvar id = pages[title];\n\t\t\t// Favor IDs since they're short and unlikely to exceed URL length\n\t\t\t// limits when batched.\n\t\t\tif ( id && id !== '0' ) {\n\t\t\t\t// ID is present and valid.\n\t\t\t\tids.push( id );\n\t\t\t} else {\n\t\t\t\t// Only titles are available for missing pages.\n\t\t\t\ttitles.push( title );\n\t\t\t}\n\t\t} );\n\n\t\treturn this.getPages( ids, titles ).then( function ( statuses ) {\n\t\t\tself.renderItems( $items, statuses );\n\t\t} );\n\t},\n\n\t/**\n\t * @param {JQuery.Element} $items\n\t * @param {WatchStatusMap} statuses\n\t * @return {void}\n\t */\n\tqueryUnitializedItems: function () {\n\t\treturn this.$( 'li:not(.with-watchstar)' );\n\t},\n\n\t/**\n\t * Retrieve pages\n\t *\n\t * @memberof WatchstarPageList\n\t * @instance\n\t * @param {PageID[]} ids\n\t * @param {PageTitle[]} titles\n\t * @return {JQuery.Deferred<WatchStatusMap>}\n\t */\n\tgetPages: function ( ids, titles ) {\n\t\t// Rendering Watchstars for anonymous users is not useful. Short-circuit\n\t\t// the request.\n\t\tif ( user.isAnon() ) {\n\t\t\treturn util.Deferred().resolve( {} );\n\t\t}\n\n\t\treturn this.wsGateway.getStatuses( ids, titles );\n\t},\n\n\t/**\n\t * @param {JQuery.Element} $items\n\t * @return {PageTitleToPageIDMap}\n\t * @memberof WatchstarPageList\n\t * @instance\n\t */\n\tparsePagesFromItems: function ( $items ) {\n\t\tvar\n\t\t\tself = this,\n\t\t\tpages = {};\n\t\t$items.each( function ( _, item ) {\n\t\t\tvar $item = self.$( item );\n\t\t\tpages[ $item.attr( 'title' ) ] = $item.data( 'id' );\n\t\t} );\n\t\treturn pages;\n\t},\n\n\t/**\n\t * @param {JQuery.Element} $items\n\t * @param {WatchStatusMap} statuses\n\t * @return {void}\n\t */\n\trenderItems: function ( $items, statuses ) {\n\t\tvar self = this;\n\n\t\t// Rendering Watchstars for anonymous users is not useful. Nothing to do.\n\t\tif ( user.isAnon() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Create watch stars for each entry in list\n\t\t$items.each( function ( _, item ) {\n\t\t\tvar\n\t\t\t\t$item = self.$( item ),\n\t\t\t\tpage = new Page( {\n\t\t\t\t\t// FIXME: Set sections so we don't hit the api (hacky)\n\t\t\t\t\tsections: [],\n\t\t\t\t\ttitle: $item.attr( 'title' ),\n\t\t\t\t\tid: $item.data( 'id' )\n\t\t\t\t} ),\n\t\t\t\tel = self.parseHTML( '<div>' ).appendTo( $item ),\n\t\t\t\twatched = statuses[ page.getTitle() ];\n\n\t\t\tself._appendWatchstar( el, page, watched );\n\t\t\t$item.addClass( 'with-watchstar' );\n\t\t} );\n\t},\n\n\t/**\n\t * @param {HTMLElement} el\n\t * @param {Page} page\n\t * @param {WatchStatus} watched\n\t * @return {Watchstar}\n\t */\n\t_appendWatchstar: function ( el, page, watched ) {\n\t\tvar watchstar = new Watchstar( {\n\t\t\tapi: this.options.api,\n\t\t\tfunnel: this.options.funnel,\n\t\t\tisAnon: user.isAnon(),\n\t\t\t// WatchstarPageList.getPages() already retrieved the status of\n\t\t\t// each page. Explicitly set the watch state so another request\n\t\t\t// will not be issued by the Watchstar.\n\t\t\tisWatched: watched,\n\t\t\tpage: page,\n\t\t\tel: el\n\t\t} );\n\n\t\t/**\n\t\t * @event watch\n\t\t * Fired when an article in the PageList is watched.\n\t\t */\n\t\tutil.repeatEvent( watchstar, this, 'watch' );\n\n\t\t/**\n\t\t * @event unwatch\n\t\t * Fired when an article in the PageList is watched.\n\t\t */\n\t\tutil.repeatEvent( watchstar, this, 'unwatch' );\n\n\t\treturn watchstar;\n\t}\n} );\n\nmodule.exports = WatchstarPageList;\n"],"sourceRoot":""}