{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.init/BetaOptInPanel.js","webpack://mfModules.[name]/./src/mobile.init/editor.js","webpack://mfModules.[name]/./src/mobile.init/editorLoadingOverlay.js","webpack://mfModules.[name]/./src/mobile.init/fakeToolbar.js","webpack://mfModules.[name]/./src/mobile.init/mobile.init.js"],"names":["Button","require","util","View","user","mw","BetaOptInPanel","props","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","extend","isTemplateMode","events","click .optin","click .cancel","onCancel","$el","find","append","options","buttons","map","button","ev","currentTarget","closest","trigger","template","prototype","defaults","postUrl","undefined","editToken","tokens","get","text","msg","progressive","additionalClassNames","label","module","exports","M","router","loader","editorLoadingOverlay","overlayManager","getSingleton","$allEditLinks","$","popup","CtaDrawer","blacklisted","test","navigator","userAgent","contentModel","config","isEditingSupported","isSupported","veConfig","editCount","editorPath","onEditLinkClick","section","Uri","href","query","navigate","setupEditor","page","skin","currentPageHTMLParser","uri","fragment","editorOverride","isNewPage","id","on","add","sectionId","veAnimationDelayDeferred","abortableDataPromise","scrollbarWidth","window","innerWidth","document","documentElement","clientWidth","scrollTop","pageYOffset","$content","editorOptions","fakeScroll","api","Api","licenseMsg","getLicenseMsg","title","titleObj","isAnon","oldId","getParamValue","contentLang","attr","contentDir","sessionId","generateRandomSessionId","initMechanism","showLoadingVE","$page","$sectionTop","enableVisualSectionEditing","body","addClass","css","padding-right","box-sizing","prop","getBoundingClientRect","top","transform","padding-bottom","margin-bottom","setTimeout","resolve","clearLoadingVE","abort","removeClass","logInit","editor","track","action","type","mechanism","editor_interface","editing_session_id","loadSourceEditor","hook","fire","loadModule","then","isWikiText","isVisualEditorEnabled","preferredEditor","storage","getPreferredEditor","visualEditorNamespaces","namespaces","indexOf","shouldLoadVisualEditor","loadingOverlay","Deferred","mode","dataPromise","using","libs","ve","targetLoader","requestPageData","getPrefixedDb","sessionStore","targetName","addPlugin","loadModules","overlay","VisualEditorOverlay","SourceEditorOverlay","overlayData","stack","off","replaceCurrent","loadVisualEditorMaybe","i","toString","getPath","history","pushState","veaction","replaceState","init","currentPage","isReadOnly","editRestrictions","hide","hideSectionEditIcons","Array","isArray","drawer","content","signupQueryParams","warning","show","preventDefault","route","checkRoute","showLoginDrawer","showSorryToast","isMissing","inNamespace","fakeToolbar","Overlay","$fakeToolbar","className","noHeader","appendTo","emit","$goBack","$loadingMessage","skinName","isPageContentModelEditable","mfUtil","$window","getWindow","$html","getDocument","context","experiments","activeExperiments","Skin","eventBus","apply2","fn1","fn2","apply","arguments","updateFontSize","userFontSize","debounce","throttle","betaoptin","experiment","pageHTMLParser","betaOptInPanel","inStable","inSample","token","isMainPage","set","getMode","getBucket","getUrl","returnto","remove","getLeadSectionElement","isPanelShown","displayBetaOptIn","console","log","mobileFrontend","deprecate"],"mappings":"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","file":"mobile.init.js","sourcesContent":["var Button = require( '../mobile.startup/Button' ),\n\tutil = require( '../mobile.startup/util' ),\n\tView = require( '../mobile.startup/View' ),\n\tuser = mw.user;\n\n/**\n * @extends View\n */\nclass BetaOptInPanel extends View {\n\t/**\n\t * @param {Object} props\n\t * @param {string} props.postUrl url for form to post to\n\t * @param {Function} [props.onCancel]\n\t */\n\tconstructor( props ) {\n\t\tsuper(\n\t\t\tutil.extend(\n\t\t\t\t{\n\t\t\t\t\tisTemplateMode: true,\n\t\t\t\t\tevents: {\n\t\t\t\t\t\t'click .optin': '_onOptin',\n\t\t\t\t\t\t'click .cancel': props.onCancel\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tprops\n\t\t\t)\n\t\t);\n\t}\n\n\t/** @inheritdoc */\n\tpostRender() {\n\t\tthis.$el.find( '.message' ).append(\n\t\t\tthis.options.buttons.map( function ( button ) {\n\t\t\t\treturn button.$el;\n\t\t\t} )\n\t\t);\n\t}\n\n\t/**\n\t * Cancel event handler\n\t * @param {jQuery.Event} ev\n\t */\n\t_onOptin( ev ) {\n\t\tthis.$el.find( ev.currentTarget ).closest( 'form' ).trigger( 'submit' );\n\t}\n\n\t/**\n\t * @inheritdoc\n\t * @type {Object}\n\t */\n\tget template() {\n\t\treturn util.template( `\n\t<div class=\"beta-opt-in-panel panel panel-inline visible\">\n\t\t<form class=\"message content\" action=\"{{postUrl}}\" method=\"POST\">\n\t\t\t<p>{{text}}</p>\n\t\t\t<input type=\"hidden\" name=\"enableBeta\" value=\"true\">\n\t\t\t<input type=\"hidden\" name=\"token\" value=\"{{editToken}}\">\n\t\t</form>\n\t</div>\n\t` );\n\t}\n\n\t/**\n\t * @inheritdoc\n\t * @mixes View#defaults\n\t * @type {Object}\n\t */\n\tget defaults() {\n\t\treturn util.extend(\n\t\t\t{},\n\t\t\tView.prototype.defaults,\n\t\t\t{\n\t\t\t\tpostUrl: undefined,\n\t\t\t\teditToken: user.tokens.get( 'editToken' ),\n\t\t\t\ttext: mw.msg( 'mobile-frontend-panel-betaoptin-msg' ),\n\t\t\t\tbuttons: [\n\t\t\t\t\tnew Button( {\n\t\t\t\t\t\tprogressive: true,\n\t\t\t\t\t\tadditionalClassNames: 'optin',\n\t\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-panel-ok' )\n\t\t\t\t\t} ),\n\t\t\t\t\tnew Button( {\n\t\t\t\t\t\tadditionalClassNames: 'cancel',\n\t\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-panel-cancel' )\n\t\t\t\t\t} )\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = BetaOptInPanel;\n","/* global $ */\nvar M = require( '../mobile.startup/moduleLoaderSingleton' ),\n\tutil = require( '../mobile.startup/util' ),\n\trouter = mw.loader.require( 'mediawiki.router' ),\n\teditorLoadingOverlay = require( './editorLoadingOverlay' ),\n\tOverlayManager = require( '../mobile.startup/OverlayManager' ),\n\toverlayManager = OverlayManager.getSingleton(),\n\tloader = require( '../mobile.startup/rlModuleLoader' ),\n\t// #ca-edit, .mw-editsection are standard MediaWiki elements\n\t// .edit-link comes from MobileFrontend user page creation CTA\n\t$allEditLinks = $( '#ca-edit, .mw-editsection a, .edit-link' ),\n\tuser = mw.user,\n\tpopup = require( '../mobile.startup/toast' ),\n\tCtaDrawer = require( '../mobile.startup/CtaDrawer' ),\n\t// FIXME: Disable on IE < 10 for time being\n\tblacklisted = /MSIE \\d\\./.test( navigator.userAgent ),\n\tcontentModel = mw.config.get( 'wgPageContentModel' ),\n\tisEditingSupported = router.isSupported() && !blacklisted,\n\tveConfig = mw.config.get( 'wgVisualEditorConfig' ),\n\teditCount = mw.config.get( 'wgUserEditCount' ),\n\teditorPath = /^\\/editor\\/(\\d+|all)$/;\n\n/**\n * Event handler for edit link clicks. Will prevent default link\n * behaviour and will not allow propagation\n * @method\n * @ignore\n * @return {boolean}\n */\nfunction onEditLinkClick() {\n\tvar section = ( new mw.Uri( this.href ) ).query.section || 'all';\n\trouter.navigate( '#/editor/' + section );\n\t// prevent folding section when clicking Edit by stopping propagation\n\treturn false;\n}\n\n/**\n * Retrieve the user's preferred editor setting. If none is set, return the default\n * editor for this wiki.\n * @method\n * @ignore\n * @return {string} Either 'VisualEditor' or 'SourceEditor'\n */\nfunction getPreferredEditor() {\n\tvar preferredEditor = mw.storage.get( 'preferredEditor' );\n\tif ( preferredEditor ) {\n\t\treturn preferredEditor;\n\t}\n\tswitch ( mw.config.get( 'wgMFDefaultEditor' ) ) {\n\t\tcase 'source':\n\t\t\treturn 'SourceEditor';\n\t\tcase 'visual':\n\t\t\treturn 'VisualEditor';\n\t\tcase 'preference':\n\t\t\treturn mw.user.options.get( 'visualeditor-editor' ) === 'visualeditor' ? 'VisualEditor' : 'SourceEditor';\n\t}\n\t// In the event of misconfiguration, fall back to source\n\treturn 'SourceEditor';\n}\n\n/**\n * Initialize the edit button so that it launches the editor interface when clicked.\n * @method\n * @ignore\n * @param {Page} page The page to edit.\n * @param {Skin} skin\n * @param {PageHTMLParser} currentPageHTMLParser\n */\nfunction setupEditor( page, skin, currentPageHTMLParser ) {\n\tvar uri, fragment, editorOverride,\n\t\tisNewPage = page.id === 0;\n\n\t$allEditLinks.on( 'click', onEditLinkClick );\n\toverlayManager.add( editorPath, function ( sectionId ) {\n\t\tvar\n\t\t\tscrollbarWidth = window.innerWidth - document.documentElement.clientWidth,\n\t\t\tscrollTop = window.pageYOffset,\n\t\t\t$content = $( '#mw-content-text' ),\n\t\t\teditorOptions = {\n\t\t\t\toverlayManager: overlayManager,\n\t\t\t\tcurrentPageHTMLParser: currentPageHTMLParser,\n\t\t\t\tfakeScroll: 0,\n\t\t\t\tapi: new mw.Api(),\n\t\t\t\tlicenseMsg: skin.getLicenseMsg(),\n\t\t\t\ttitle: page.title,\n\t\t\t\ttitleObj: page.titleObj,\n\t\t\t\tisAnon: user.isAnon(),\n\t\t\t\tisNewPage: isNewPage,\n\t\t\t\teditCount: editCount,\n\t\t\t\toldId: mw.util.getParamValue( 'oldid' ),\n\t\t\t\tcontentLang: $content.attr( 'lang' ),\n\t\t\t\tcontentDir: $content.attr( 'dir' ),\n\t\t\t\tsessionId: user.generateRandomSessionId()\n\t\t\t},\n\t\t\tveAnimationDelayDeferred, abortableDataPromise,\n\t\t\tinitMechanism = mw.util.getParamValue( 'redlink' ) ? 'new' : 'click';\n\n\t\tif ( sectionId !== 'all' ) {\n\t\t\teditorOptions.sectionId = page.isWikiText() ? +sectionId : null;\n\t\t}\n\n\t\tfunction showLoadingVE() {\n\t\t\tvar $page, $content, $sectionTop, fakeScroll, enableVisualSectionEditing;\n\n\t\t\t$( document.body ).addClass( 've-loading' );\n\n\t\t\tenableVisualSectionEditing = veConfig.enableVisualSectionEditing === true ||\n\t\t\t\t// === ve.init.mw.MobileArticleTarget.static.trackingName\n\t\t\t\tveConfig.enableVisualSectionEditing === 'mobile';\n\t\t\t$page = $( '#mw-mf-page-center' );\n\t\t\t$content = $( '#content' );\n\t\t\tif ( sectionId === '0' || sectionId === 'all' ) {\n\t\t\t\t$sectionTop = $( '#bodyContent' );\n\t\t\t} else {\n\t\t\t\t$sectionTop = $( '[data-section=\"' + sectionId + '\"]' )\n\t\t\t\t\t.closest( 'h1, h2, h3, h4, h5, h6' );\n\t\t\t}\n\t\t\t// If there was a scrollbar that was hidden when the overlay was shown, add a margin\n\t\t\t// with the same width. This is mostly so that developers testing this on desktop\n\t\t\t// don't go crazy when the fake scroll fails to line up.\n\t\t\t$page.css( {\n\t\t\t\t'padding-right': '+=' + scrollbarWidth,\n\t\t\t\t'box-sizing': 'border-box'\n\t\t\t} );\n\t\t\t// Pretend that we didn't just scroll the page to the top.\n\t\t\t$page.prop( 'scrollTop', scrollTop );\n\t\t\t// Then, pretend that we're scrolling to the position of the clicked heading.\n\t\t\tfakeScroll = $sectionTop[0].getBoundingClientRect().top;\n\t\t\t// Adjust for height of the toolbar.\n\t\t\tfakeScroll -= 48;\n\t\t\tif ( sectionId === '0' || sectionId === 'all' || enableVisualSectionEditing ) {\n\t\t\t\t// Adjust for surface padding. Only needed if we're at the beginning of the doc.\n\t\t\t\tfakeScroll -= 16;\n\t\t\t}\n\t\t\t$content.css( {\n\t\t\t\t// Use transform instead of scroll for smoother animation (via CSS transitions).\n\t\t\t\ttransform: 'translate( 0, ' + -fakeScroll + 'px )',\n\t\t\t\t// If the clicked heading is near the end of the page, we might need to insert\n\t\t\t\t// some extra space to allow us to scroll \"beyond the end\" of the page.\n\t\t\t\t'padding-bottom': '+=' + fakeScroll,\n\t\t\t\t'margin-bottom': '-=' + fakeScroll\n\t\t\t} );\n\t\t\teditorOptions.fakeScroll = fakeScroll;\n\t\t\tsetTimeout( veAnimationDelayDeferred.resolve, 500 );\n\t\t}\n\n\t\tfunction clearLoadingVE() {\n\t\t\tif ( abortableDataPromise.abort ) {\n\t\t\t\tabortableDataPromise.abort();\n\t\t\t}\n\n\t\t\t$( '#content' ).css( {\n\t\t\t\ttransform: '',\n\t\t\t\t'padding-bottom': '',\n\t\t\t\t'margin-bottom': ''\n\t\t\t} );\n\t\t\t$( '#mw-mf-page-center' ).css( {\n\t\t\t\t'padding-right': '',\n\t\t\t\t'box-sizing': ''\n\t\t\t} );\n\n\t\t\t$( document.body ).removeClass( 've-loading' );\n\t\t}\n\n\t\t/**\n\t\t * Log init event to edit schema.\n\t\t * Need to log this from outside the Overlay object because that module\n\t\t * won't have loaded yet.\n\t\t * @private\n\t\t * @ignore\n\t\t * @param {string} editor name e.g. wikitext or visualeditor\n\t\t * @method\n\t\t */\n\t\tfunction logInit( editor ) {\n\t\t\tmw.track( 'mf.schemaEditAttemptStep', {\n\t\t\t\taction: 'init',\n\t\t\t\ttype: 'section',\n\t\t\t\tmechanism: initMechanism,\n\t\t\t\t/* eslint-disable camelcase */\n\t\t\t\teditor_interface: editor,\n\t\t\t\tediting_session_id: editorOptions.sessionId\n\t\t\t\t/* eslint-enable camelcase */\n\t\t\t} );\n\t\t}\n\n\t\t/**\n\t\t * Check whether VisualEditor should be loaded\n\t\t * @private\n\t\t * @ignore\n\t\t * @method\n\t\t * @return {bool}\n\t\t */\n\t\tfunction shouldLoadVisualEditor() {\n\t\t\tvar\n\t\t\t\t// FIXME: Should we consider default site options and user prefs?\n\t\t\t\tisVisualEditorEnabled = !!veConfig,\n\t\t\t\tpreferredEditor = getPreferredEditor(),\n\t\t\t\tvisualEditorNamespaces = ( veConfig && veConfig.namespaces ) || [];\n\n\t\t\treturn isVisualEditorEnabled &&\n\n\t\t\t\t// Only for pages with a wikitext content model\n\t\t\t\tpage.isWikiText() &&\n\n\t\t\t\t// Only in enabled namespaces\n\t\t\t\tvisualEditorNamespaces.indexOf( mw.config.get( 'wgNamespaceNumber' ) ) !== -1 &&\n\n\t\t\t\t// Not on pages which are outputs of the Page Translation feature\n\t\t\t\tmw.config.get( 'wgTranslatePageTranslation' ) !== 'translation' &&\n\n\t\t\t\t(\n\t\t\t\t\t// If the user prefers the VisualEditor or the user has no preference and\n\t\t\t\t\t// the VisualEditor is the default editor for this wiki\n\t\t\t\t\tpreferredEditor === 'VisualEditor' ||\n\t\t\t\t\t// We've loaded it via the URL for this request\n\t\t\t\t\teditorOverride === 'VisualEditor'\n\t\t\t\t) &&\n\n\t\t\t\teditorOverride !== 'SourceEditor';\n\t\t}\n\n\t\t/**\n\t\t * Load source editor\n\t\t * @private\n\t\t * @ignore\n\t\t * @method\n\t\t * @return {jQuery.Promise}\n\t\t */\n\t\tfunction loadSourceEditor() {\n\t\t\tlogInit( 'wikitext' );\n\t\t\t// Inform other interested code that we're loading the editor\n\t\t\tmw.hook( 'mobileFrontend.editorOpening' ).fire();\n\n\t\t\treturn loader.loadModule( 'mobile.editor.overlay' ).then( function () {\n\t\t\t\tvar SourceEditorOverlay = M.require( 'mobile.editor.overlay/SourceEditorOverlay' );\n\t\t\t\treturn new SourceEditorOverlay( editorOptions );\n\t\t\t} );\n\t\t}\n\n\t\t/**\n\t\t * Load visual editor. If it fails to load for any reason, load the source editor instead.\n\t\t * @private\n\t\t * @ignore\n\t\t * @method\n\t\t * @return {Overlay} The loading overlay\n\t\t */\n\t\tfunction loadVisualEditorMaybe() {\n\t\t\tvar loadingOverlay;\n\n\t\t\tlogInit( 'visualeditor' );\n\t\t\t// Inform other interested code that we're loading the editor\n\t\t\tmw.hook( 'mobileFrontend.editorOpening' ).fire();\n\n\t\t\tveAnimationDelayDeferred = util.Deferred();\n\n\t\t\teditorOptions.mode = 'visual';\n\t\t\teditorOptions.dataPromise = mw.loader.using( 'ext.visualEditor.targetLoader' ).then( function () {\n\t\t\t\tabortableDataPromise = mw.libs.ve.targetLoader.requestPageData(\n\t\t\t\t\teditorOptions.mode,\n\t\t\t\t\teditorOptions.titleObj.getPrefixedDb(),\n\t\t\t\t\t{\n\t\t\t\t\t\tsessionStore: true,\n\t\t\t\t\t\tsection: editorOptions.sectionId || null,\n\t\t\t\t\t\toldId: editorOptions.oldId || undefined,\n\t\t\t\t\t\t// Should be ve.init.mw.MobileArticleTarget.static.trackingName,\n\t\t\t\t\t\t// but the class hasn't loaded yet.\n\t\t\t\t\t\ttargetName: 'mobile'\n\t\t\t\t\t} );\n\t\t\t\t// Ensure the scroll animation finishes before we load the editor\n\t\t\t\treturn veAnimationDelayDeferred.then( function () {\n\t\t\t\t\treturn abortableDataPromise;\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tloadingOverlay = editorLoadingOverlay();\n\t\t\t// This has to run after the overlay has opened, which disables page scrolling\n\t\t\tloadingOverlay.on( 'show', showLoadingVE );\n\t\t\t// Clear loading interface if loading is aborted before overlay is replaced\n\t\t\tloadingOverlay.on( 'hide', clearLoadingVE );\n\n\t\t\tmw.loader.using( 'ext.visualEditor.targetLoader' ).then( function () {\n\t\t\t\tmw.libs.ve.targetLoader.addPlugin( 'mobile.editor.ve' );\n\t\t\t\treturn mw.libs.ve.targetLoader.loadModules( editorOptions.mode );\n\t\t\t} ).then( function () {\n\t\t\t\t// We need to wait for the data to load before showing the overlay,\n\t\t\t\t// because the VE overlay has no loading indicator (progress bar / spinner).\n\t\t\t\t// We can't show the normal toolbar if it wouldn't work.\n\t\t\t\treturn editorOptions.dataPromise;\n\t\t\t} ).then( function () {\n\t\t\t\tvar VisualEditorOverlay = M.require( 'mobile.editor.overlay/VisualEditorOverlay' ),\n\t\t\t\t\tSourceEditorOverlay = M.require( 'mobile.editor.overlay/SourceEditorOverlay' ),\n\t\t\t\t\toverlay;\n\t\t\t\teditorOptions.SourceEditorOverlay = SourceEditorOverlay;\n\t\t\t\toverlay = new VisualEditorOverlay( editorOptions );\n\t\t\t\toverlay.on( 'editor-loaded', clearLoadingVE );\n\t\t\t\treturn overlay;\n\t\t\t}, function () {\n\t\t\t\treturn loadSourceEditor();\n\t\t\t} ).then( function ( overlay ) {\n\t\t\t\t// Make sure the user did not close the overlay while we were loading\n\t\t\t\tvar overlayData = overlayManager.stack[0];\n\t\t\t\tif ( !overlayData || overlayData.overlay !== loadingOverlay ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tloadingOverlay.off( 'hide', clearLoadingVE );\n\t\t\t\t// Clear loading interface if loading is aborted after overlay is replaced\n\t\t\t\toverlay.on( 'hide', clearLoadingVE );\n\t\t\t\toverlayManager.replaceCurrent( overlay );\n\t\t\t} );\n\n\t\t\treturn loadingOverlay;\n\t\t}\n\n\t\tif ( shouldLoadVisualEditor() ) {\n\t\t\treturn loadVisualEditorMaybe();\n\t\t} else {\n\t\t\treturn loadSourceEditor();\n\t\t}\n\t} );\n\n\t$( '#ca-edit a' ).prop( 'href', function ( i, href ) {\n\t\tvar uri = new mw.Uri( href );\n\t\t// By default the editor opens section 0 (lead section), rather than the whole article.\n\t\t// This might be changed in the future (T210659).\n\t\turi.query.section = 0;\n\t\treturn uri.toString();\n\t} );\n\n\tif ( !router.getPath() && ( mw.util.getParamValue( 'veaction' ) || mw.util.getParamValue( 'action' ) === 'edit' ) ) {\n\t\tif ( mw.util.getParamValue( 'veaction' ) === 'edit' ) {\n\t\t\teditorOverride = 'VisualEditor';\n\t\t} else if ( mw.util.getParamValue( 'veaction' ) === 'editsource' ) {\n\t\t\teditorOverride = 'SourceEditor';\n\t\t}\n\t\t// else: action=edit, for which we allow the default to take effect\n\t\tfragment = '#/editor/' + ( mw.util.getParamValue( 'section' ) || ( mw.util.getParamValue( 'action' ) === 'edit' && 'all' ) || '0' );\n\t\t// eslint-disable-next-line no-restricted-properties\n\t\tif ( window.history && history.pushState ) {\n\t\t\turi = mw.Uri();\n\t\t\tdelete uri.query.action;\n\t\t\tdelete uri.query.veaction;\n\t\t\tdelete uri.query.section;\n\t\t\t// Note: replaceState rather than pushState, because we're\n\t\t\t// just reformatting the URL to the equivalent-meaning for the\n\t\t\t// mobile site.\n\t\t\thistory.replaceState( null, document.title, uri.toString() + fragment );\n\t\t} else {\n\t\t\trouter.navigate( fragment );\n\t\t}\n\t}\n}\n\n/**\n * Hide any section id icons in the page. This will not hide the edit icon in the page action\n * menu.\n * @method\n * @ignore\n * @param {PageHTMLParser} currentPageHTMLParser\n */\nfunction hideSectionEditIcons( currentPageHTMLParser ) {\n\tcurrentPageHTMLParser.$el.find( '.mw-editsection' ).hide();\n}\n\n/**\n * Show a drawer with log in / sign up buttons.\n * @method\n * @ignore\n */\nfunction showLoginDrawer() {\n\tvar drawer = new CtaDrawer( {\n\t\tcontent: mw.msg( 'mobile-frontend-editor-disabled-anon' ),\n\t\tsignupQueryParams: {\n\t\t\twarning: 'mobile-frontend-watchlist-signup-action'\n\t\t}\n\t} );\n\t$allEditLinks.on( 'click', function ( ev ) {\n\t\tdrawer.show();\n\t\tev.preventDefault();\n\t\treturn drawer;\n\t} );\n\trouter.route( editorPath, function () {\n\t\tdrawer.show();\n\t} );\n\trouter.checkRoute();\n}\n\n/**\n * Setup the editor if the user can edit the page otherwise show a sorry toast.\n * @method\n * @ignore\n * @param {Page} currentPage\n * @param {PageHTMLParser} currentPageHTMLParser\n * @param {Skin} skin\n */\nfunction init( currentPage, currentPageHTMLParser, skin ) {\n\tvar isReadOnly, isEditable, editErrorMessage, editRestrictions;\n\t// see: https://www.mediawiki.org/wiki/Manual:Interface/JavaScript#Page-specific\n\tisReadOnly = mw.config.get( 'wgMinervaReadOnly' );\n\tisEditable = !isReadOnly && mw.config.get( 'wgIsProbablyEditable' );\n\n\tif ( isEditable ) {\n\t\t// Edit button updated in setupEditor.\n\t\tsetupEditor( currentPage, skin, currentPageHTMLParser );\n\t} else {\n\t\thideSectionEditIcons( currentPageHTMLParser );\n\t\teditRestrictions = mw.config.get( 'wgRestrictionEdit' );\n\t\tif ( mw.user.isAnon() && Array.isArray( editRestrictions ) && editRestrictions.indexOf( '*' ) !== -1 ) {\n\t\t\tshowLoginDrawer();\n\t\t} else {\n\t\t\teditErrorMessage = isReadOnly ? mw.msg( 'apierror-readonly' ) : mw.msg( 'mobile-frontend-editor-disabled' );\n\t\t\tshowSorryToast( editErrorMessage );\n\t\t}\n\t}\n}\n\n/**\n * Show a toast message with sincere condolences.\n * @method\n * @ignore\n * @param {string} msg Message for sorry message\n */\nfunction showSorryToast( msg ) {\n\t$allEditLinks.on( 'click', function ( ev ) {\n\t\tpopup.show( msg );\n\t\tev.preventDefault();\n\t} );\n\trouter.route( editorPath, function () {\n\t\tpopup.show( msg );\n\t} );\n\trouter.checkRoute();\n}\n\nmodule.exports = function ( currentPage, currentPageHTMLParser, skin ) {\n\tvar isMissing = currentPage.id === 0;\n\tif ( contentModel !== 'wikitext' ) {\n\t\t// Only load the wikitext editor on wikitext. Otherwise we'll rely on the fallback behaviour\n\t\t// (You can test this on MediaWiki:Common.css) ?action=edit url (T173800)\n\t\treturn;\n\t}\n\n\tif ( mw.util.getParamValue( 'undo' ) ) {\n\t\t// Our fancy editor doesn't support undo, but we can rely on the fallback.\n\t\treturn;\n\t}\n\n\tif ( !isEditingSupported ) {\n\t\t// Browser doesn't support mobile editor (or is blacklisted), use the fallback editor.\n\t\treturn;\n\t}\n\n\tif ( currentPage.inNamespace( 'file' ) && isMissing ) {\n\t\t// Is a new file page (enable upload image only) Bug 58311\n\t\tshowSorryToast( mw.msg( 'mobile-frontend-editor-uploadenable' ) );\n\t} else {\n\t\t// Edit button is currently hidden. A call to init() will update it as needed.\n\t\tinit( currentPage, currentPageHTMLParser, skin );\n\t}\n};\n","var\n\tfakeToolbar = require( './fakeToolbar' ),\n\tOverlay = require( '../mobile.startup/Overlay' );\n\n/**\n * Like loadingOverlay(), but with a fake editor toolbar instead of the spinner.\n *\n * @return {Overlay}\n */\nfunction editorLoadingOverlay() {\n\tvar\n\t\t$fakeToolbar = fakeToolbar(),\n\t\toverlay = new Overlay( {\n\t\t\tclassName: 'overlay overlay-loading',\n\t\t\tnoHeader: true\n\t\t} );\n\n\t$fakeToolbar.appendTo( overlay.$el.find( '.overlay-content' ) );\n\n\t// Animate the toolbar sliding into place.\n\t$fakeToolbar.addClass( 'toolbar-hidden' );\n\tsetTimeout( function () {\n\t\t$fakeToolbar.addClass( 'toolbar-shown' );\n\t\tsetTimeout( function () {\n\t\t\t$fakeToolbar.addClass( 'toolbar-shown-done' );\n\t\t}, 250 );\n\t} );\n\n\toverlay.show = function () {\n\t\tOverlay.prototype.show.call( this );\n\t\tthis.emit( 'show' );\n\t};\n\n\treturn overlay;\n}\n\nmodule.exports = editorLoadingOverlay;\n","/* global $ */\nmodule.exports = function fakeToolbar() {\n\tvar $fakeToolbar, $goBack, $loadingMessage;\n\n\t$goBack = $( '<a>' )\n\t\t.attr( 'tabindex', '0' )\n\t\t.attr( 'role', 'button' )\n\t\t.addClass( 'mw-ui-icon mw-ui-icon-close mw-ui-icon-element' )\n\t\t// This class makes it a functional close button for the overlay\n\t\t.addClass( 'cancel' )\n\t\t.text( mw.msg( 'mobile-frontend-overlay-close' ) );\n\n\t$loadingMessage = $( '<span>' )\n\t\t.addClass( 'mw-ui-icon mw-ui-icon-mf-spinner mw-ui-icon-before' )\n\t\t.text( mw.msg( 'mobile-frontend-editor-loading' ) );\n\n\t// Wrappers similar to .overlay-header-container, .overlay-header and .oo-ui-toolbar\n\t$fakeToolbar = $( '<div>' )\n\t\t.addClass( 've-mobile-fakeToolbar-container' )\n\t\t.append( $( '<div>' )\n\t\t\t.addClass( 've-mobile-fakeToolbar-header' )\n\t\t\t// Minerva has some complicated styling for this class, so we have to include it\n\t\t\t.addClass( 'header' )\n\t\t\t.append( $( '<div>' )\n\t\t\t\t.addClass( 've-mobile-fakeToolbar' )\n\t\t\t\t.append( $goBack, $loadingMessage )\n\t\t\t)\n\t\t);\n\n\treturn $fakeToolbar;\n};\n","/* global $ */\n\n// FIXME: make this an object with a constructor to facilitate testing\n// (see https://bugzilla.wikimedia.org/show_bug.cgi?id=44264)\n/**\n * mobileFrontend namespace\n * @class mw.mobileFrontend\n * @singleton\n */\nvar skin,\n\tstorage = mw.storage,\n\tskinName = mw.config.get( 'skin' ),\n\tisPageContentModelEditable = mw.config.get( 'wgMFIsPageContentModelEditable' ),\n\teditor = require( './editor' ),\n\tcurrentPage = require( '../mobile.startup/currentPage' )(),\n\tcurrentPageHTMLParser = require( '../mobile.startup/currentPageHTMLParser' )(),\n\tBetaOptInPanel = require( './BetaOptInPanel' ),\n\tutil = mw.util,\n\tmfUtil = require( '../mobile.startup/util' ),\n\t$window = mfUtil.getWindow(),\n\t$html = mfUtil.getDocument(),\n\tuser = mw.user,\n\tcontext = require( '../mobile.startup/context' ),\n\texperiments = mw.experiments,\n\tactiveExperiments = mw.config.get( 'wgMFExperiments' ) || {},\n\tSkin = require( '../mobile.startup/Skin' ),\n\teventBus = require( '../mobile.startup/eventBusSingleton' );\n\nskin = Skin.getSingleton();\n\n/**\n * Given 2 functions, it returns a function that will run both with it's\n * context and parameters and return the results combined\n * @private\n * @param {Function} fn1\n * @param {Function} fn2\n * @return {Function} which returns the results of [fn1, fn2]\n */\nfunction apply2( fn1, fn2 ) {\n\treturn function () {\n\t\treturn [\n\t\t\tfn1.apply( this, arguments ),\n\t\t\tfn2.apply( this, arguments )\n\t\t];\n\t};\n}\n\n/**\n * The `window`'s resize event debounced at 100 ms.\n * The `resize:throttled` event is the `window`'s\n * resize event throttled to 200 ms.\n * @event resize\n */\n\n/**\n * The `window`'s scroll event debounced at 100 ms.\n * The `scroll:throttled` event is the `window`'s\n * scroll event throttled to 200 ms.\n * @event scroll\n */\n\n$window\n\t.on( 'resize', apply2(\n\t\t$.debounce( 100, function () { eventBus.emit( 'resize' ); } ),\n\t\t$.throttle( 200, function () { eventBus.emit( 'resize:throttled' ); } )\n\t) )\n\t.on( 'scroll', apply2(\n\t\t$.debounce( 100, function () { eventBus.emit( 'scroll' ); } ),\n\t\t$.throttle( 200, function () { eventBus.emit( 'scroll:throttled' ); } )\n\t) );\n\n/**\n * Displays a prompt to ask the user to join the mobile beta mode.\n *\n * @private\n * @param {Object} experiment sampling data\n * @param {Page} page\n * @param {PageHTMLParser} pageHTMLParser\n */\nfunction displayBetaOptIn( experiment, page, pageHTMLParser ) {\n\tvar betaOptInPanel, inStable, inSample,\n\t\ttoken = storage.get( 'mobile-betaoptin-token' );\n\n\t// local storage is supported in this case, when ~ means it was dismissed\n\tif ( token !== false && token !== '~' &&\n\t\t!page.isMainPage() && !page.inNamespace( 'special' )\n\t) {\n\t\tif ( !token ) {\n\t\t\ttoken = user.generateRandomSessionId();\n\t\t\tstorage.set( 'mobile-betaoptin-token', token );\n\t\t}\n\n\t\tinStable = context.getMode() === 'stable';\n\t\tinSample = experiments.getBucket( experiment, token ) === 'A';\n\t\tif ( inStable && ( inSample || util.getParamValue( 'debug' ) ) ) {\n\t\t\tbetaOptInPanel = new BetaOptInPanel( {\n\t\t\t\tpostUrl: util.getUrl( 'Special:MobileOptions', {\n\t\t\t\t\treturnto: page.title\n\t\t\t\t} ),\n\t\t\t\tonCancel: function ( ev ) {\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t\tstorage.set( 'mobile-betaoptin-token', '~' );\n\t\t\t\t\tthis.remove();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tbetaOptInPanel.appendTo( pageHTMLParser.getLeadSectionElement() );\n\t\t}\n\n\t\t// let the interested parties e.g. QuickSurveys know whether the panel is shown\n\t\tmw.track( 'mobile.betaoptin', {\n\t\t\tisPanelShown: betaOptInPanel !== undefined\n\t\t} );\n\t}\n}\n\n/**\n * Updates the font size based on the current value in storage\n */\nfunction updateFontSize() {\n\t// FIXME: Ideally 'regular' would come from a shared constant\n\t// (currently not possible without using webpack)\n\tvar userFontSize = storage.get( 'userFontSize', 'regular' );\n\t$html.addClass( 'mf-font-size-' + userFontSize );\n}\n\n// Font must be updated on back button press as users may click\n// back after changing font.\n$window.on( 'pageshow', function () {\n\tupdateFontSize();\n} );\nupdateFontSize();\n\nif ( activeExperiments.betaoptin ) {\n\tdisplayBetaOptIn( activeExperiments.betaoptin, currentPage, currentPageHTMLParser );\n}\n\n// Recruit volunteers through the console\n// (note console.log may not be a function so check via apply)\n/* eslint-disable no-console */\nif ( window.console && window.console.log && window.console.log.apply &&\n\t\tmw.config.get( 'wgMFEnableJSConsoleRecruitment' ) ) {\n\tconsole.log( mw.msg( 'mobile-frontend-console-recruit' ) );\n}\n/* eslint-enable no-console */\n\n// setup editor\nif ( !currentPage.inNamespace( 'special' ) && isPageContentModelEditable ) {\n\t// TODO: Mobile editor doesn't work well with other skins yet (it looks horribly broken\n\t// without some styles that are only defined by Minerva).\n\tif ( skinName === 'minerva' ) {\n\t\t// TODO: This code should not even be loaded on desktop.\n\t\t// Remove this check when that is fixed (T216537).\n\t\tif ( context.getMode() !== null ) {\n\t\t\teditor( currentPage, currentPageHTMLParser, skin );\n\t\t}\n\t}\n}\n\nmw.mobileFrontend.deprecate( 'mobile.init/skin', skin,\n\t'instance of mobile.startup/Skin. Minerva should have no dependencies on mobile.init' );\n"],"sourceRoot":""}