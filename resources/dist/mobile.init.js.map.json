{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.init/BetaOptinPanel.js","webpack://mfModules.[name]/./src/mobile.init/mobile.init.js"],"names":["Button","__webpack_require__","util","mfExtend","Panel","user","mw","BetaOptinPanel","props","call","this","extend","className","templatePartials","prototype","button","template","get","defaults","postUrl","undefined","editToken","tokens","text","msg","buttons","progressive","additionalClassNames","label","options","events","click .optin","onOptin","ev","$","currentTarget","closest","submit","module","exports","currentPage","skin","storage","PageGateway","gateway","Api","mfUtil","$window","getWindow","$html","getDocument","context","Page","experiments","activeExperiments","config","Skin","eventBus","ReferencesMobileViewGateway","apply2","fn1","fn2","apply","arguments","getCurrentPage","permissions","$content","length","push","el","title","replace","protection","edit","revId","isMainPage","isWatched","hasClass","sections","getSectionsFromHTML","isMissing","id","namespaceNumber","loadCurrentPage","updateFontSize","userFontSize","addClass","page","referencesGateway","getSingleton","on","debounce","proxy","throttle","betaoptin","experiment","betaOptinPanel","inStable","inSample","token","inNamespace","generateRandomSessionId","set","getMode","getBucket","getParamValue","getUrl","returnto","appendTo","getLeadSectionElement","track","isPanelShown","displayBetaOptIn","window","console","log","mobileFrontend","define"],"mappings":"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","file":"mobile.init.js","sourcesContent":["var Button = require( '../mobile.startup/Button' ),\n\tutil = require( '../mobile.startup/util' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\tPanel = require( '../mobile.startup/Panel' ),\n\tuser = mw.user;\n\n/**\n * @class BetaOptinPanel\n * @extends Panel\n * @param {Object} props\n */\nfunction BetaOptinPanel( props ) {\n\tPanel.call( this,\n\t\tutil.extend( {\n\t\t\tclassName: 'panel panel-inline visible'\n\t\t}, props )\n\t);\n}\n\nmfExtend( BetaOptinPanel, Panel, {\n\t/**\n\t * @memberof BetaOptinPanel\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, Panel.prototype.templatePartials, {\n\t\tbutton: Button.prototype.template\n\t} ),\n\t/**\n\t * @memberof BetaOptinPanel\n\t * @instance\n\t */\n\ttemplate: mw.template.get( 'mobile.init', 'Panel.hogan' ),\n\t/**\n\t * @memberof BetaOptinPanel\n\t * @instance\n\t */\n\tdefaults: util.extend( {}, Panel.prototype.defaults, {\n\t\tpostUrl: undefined,\n\t\teditToken: user.tokens.get( 'editToken' ),\n\t\ttext: mw.msg( 'mobile-frontend-panel-betaoptin-msg' ),\n\t\tbuttons: [\n\t\t\tnew Button( {\n\t\t\t\tprogressive: true,\n\t\t\t\tadditionalClassNames: 'optin',\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-panel-ok' )\n\t\t\t} ).options,\n\t\t\tnew Button( {\n\t\t\t\tadditionalClassNames: 'cancel',\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-panel-cancel' )\n\t\t\t} ).options\n\t\t]\n\t} ),\n\t/**\n\t * @memberof BetaOptinPanel\n\t * @instance\n\t */\n\tevents: util.extend( {}, Panel.prototype.events, {\n\t\t'click .optin': 'onOptin'\n\t} ),\n\t/**\n\t * Cancel event handler\n\t * @memberof BetaOptinPanel\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonOptin: function ( ev ) {\n\t\tthis.$( ev.currentTarget ).closest( 'form' ).submit();\n\t}\n} );\n\nmodule.exports = BetaOptinPanel;\n","/* global $ */\n\n// FIXME: make this an object with a constructor to facilitate testing\n// (see https://bugzilla.wikimedia.org/show_bug.cgi?id=44264)\n/**\n * mobileFrontend namespace\n * @class mw.mobileFrontend\n * @singleton\n */\nvar currentPage, skin, exports,\n\tstorage = mw.storage,\n\tPageGateway = require( '../mobile.startup/PageGateway' ),\n\tBetaOptinPanel = require( './BetaOptinPanel' ),\n\tgateway = new PageGateway( new mw.Api() ),\n\tutil = mw.util,\n\tmfUtil = require( '../mobile.startup/util' ),\n\t$window = mfUtil.getWindow(),\n\t$html = mfUtil.getDocument(),\n\tuser = mw.user,\n\tcontext = require( '../mobile.startup/context' ),\n\tPage = require( '../mobile.startup/Page' ),\n\texperiments = mw.experiments,\n\tactiveExperiments = mw.config.get( 'wgMFExperiments' ) || {},\n\tSkin = require( '../mobile.startup/Skin' ),\n\teventBus = require( '../mobile.startup/eventBusSingleton' ),\n\tReferencesMobileViewGateway = require( '../mobile.startup/references/ReferencesMobileViewGateway' ),\n\tskinData = {\n\t\tel: 'body',\n\t\tpage: getCurrentPage(),\n\t\treferencesGateway: ReferencesMobileViewGateway.getSingleton(),\n\t\teventBus: eventBus\n\t};\n\nskin = new Skin( skinData );\n\n/**\n * Given 2 functions, it returns a function that will run both with it's\n * context and parameters and return the results combined\n * @private\n * @param {Function} fn1\n * @param {Function} fn2\n * @return {Function} which returns the results of [fn1, fn2]\n */\nfunction apply2( fn1, fn2 ) {\n\treturn function () {\n\t\treturn [\n\t\t\tfn1.apply( this, arguments ),\n\t\t\tfn2.apply( this, arguments )\n\t\t];\n\t};\n}\n\n/**\n * The `window`'s resize event debounced at 100 ms.\n * The `resize:throttled` event is the `window`'s\n * resize event throttled to 200 ms.\n * @event resize\n */\n\n/**\n * The `window`'s scroll event debounced at 100 ms.\n * The `scroll:throttled` event is the `window`'s\n * scroll event throttled to 200 ms.\n * @event scroll\n */\n\n$window\n\t.on( 'resize', apply2(\n\t\t$.debounce( 100, $.proxy( eventBus, 'emit', 'resize' ) ),\n\t\t$.throttle( 200, $.proxy( eventBus, 'emit', 'resize:throttled' ) )\n\t) )\n\t.on( 'scroll', apply2(\n\t\t$.debounce( 100, $.proxy( eventBus, 'emit', 'scroll' ) ),\n\t\t$.throttle( 200, $.proxy( eventBus, 'emit', 'scroll:throttled' ) )\n\t) );\n\n/**\n * Get current page view object\n * @return {Page}\n */\nfunction getCurrentPage() {\n\tif ( currentPage ) {\n\t\treturn currentPage;\n\t} else {\n\t\treturn loadCurrentPage();\n\t}\n}\n\n/**\n * Constructs an incomplete Page object representing the currently loaded page.\n *\n * @private\n * @return {Page}\n */\nfunction loadCurrentPage() {\n\tvar permissions = mw.config.get( 'wgRestrictionEdit', [] ),\n\t\t$content = $( '#content #bodyContent' );\n\tif ( permissions.length === 0 ) {\n\t\tpermissions.push( '*' );\n\t}\n\tcurrentPage = new Page( {\n\t\tel: $content,\n\t\ttitle: mw.config.get( 'wgPageName' ).replace( /_/g, ' ' ),\n\t\tprotection: {\n\t\t\tedit: permissions\n\t\t},\n\t\trevId: mw.config.get( 'wgRevisionId' ),\n\t\tisMainPage: mw.config.get( 'wgIsMainPage' ),\n\t\tisWatched: $( '#ca-watch' ).hasClass( 'watched' ),\n\t\tsections: gateway.getSectionsFromHTML( $content ),\n\t\tisMissing: mw.config.get( 'wgArticleId' ) === 0,\n\t\tid: mw.config.get( 'wgArticleId' ),\n\t\tnamespaceNumber: mw.config.get( 'wgNamespaceNumber' )\n\t} );\n\treturn currentPage;\n}\n\n/**\n * Displays a prompt to ask the user to join the mobile beta mode.\n *\n * @private\n * @param {Object} experiment sampling data\n * @param {Page} page\n */\nfunction displayBetaOptIn( experiment, page ) {\n\tvar betaOptinPanel, inStable, inSample,\n\t\ttoken = storage.get( 'mobile-betaoptin-token' );\n\n\t// local storage is supported in this case, when ~ means it was dismissed\n\tif ( token !== false && token !== '~' &&\n\t\t!page.isMainPage() && !page.inNamespace( 'special' )\n\t) {\n\t\tif ( !token ) {\n\t\t\ttoken = user.generateRandomSessionId();\n\t\t\tstorage.set( 'mobile-betaoptin-token', token );\n\t\t}\n\n\t\tinStable = context.getMode() === 'stable';\n\t\tinSample = experiments.getBucket( experiment, token ) === 'A';\n\t\tif ( inStable && ( inSample || util.getParamValue( 'debug' ) ) ) {\n\t\t\tbetaOptinPanel = new BetaOptinPanel( {\n\t\t\t\tpostUrl: util.getUrl( 'Special:MobileOptions', {\n\t\t\t\t\treturnto: page.title\n\t\t\t\t} )\n\t\t\t} );\n\n\t\t\tbetaOptinPanel\n\t\t\t\t.on( 'hide', function () {\n\t\t\t\t\tstorage.set( 'mobile-betaoptin-token', '~' );\n\t\t\t\t} ).appendTo( page.getLeadSectionElement() );\n\t\t}\n\n\t\t// let the interested parties e.g. QuickSurveys know whether the panel is shown\n\t\tmw.track( 'mobile.betaoptin', {\n\t\t\tisPanelShown: betaOptinPanel !== undefined\n\t\t} );\n\t}\n}\n\n/**\n * Updates the font size based on the current value in storage\n */\nfunction updateFontSize() {\n\t// FIXME: Ideally 'regular' would come from a shared constant\n\t// (currently not possible without using webpack)\n\tvar userFontSize = storage.get( 'userFontSize', 'regular' );\n\t$html.addClass( 'mf-font-size-' + userFontSize );\n}\n\n// Font must be updated on back button press as users may click\n// back after changing font.\n$window.on( 'pageshow', function () {\n\tupdateFontSize();\n} );\nupdateFontSize();\n\nif ( activeExperiments.betaoptin ) {\n\tdisplayBetaOptIn( activeExperiments.betaoptin, getCurrentPage() );\n}\n\n// Recruit volunteers through the console\n// (note console.log may not be a function so check via apply)\n/* eslint-disable no-console */\nif ( window.console && window.console.log && window.console.log.apply &&\n\t\tmw.config.get( 'wgMFEnableJSConsoleRecruitment' ) ) {\n\tconsole.log( mw.msg( 'mobile-frontend-console-recruit' ) );\n}\n/* eslint-enable no-console */\n\nexports = {\n\tgetCurrentPage: getCurrentPage\n};\n\n// Make getCurrentPage available to mobile.editor and Minerva modules\nmfUtil.extend( mw.mobileFrontend, exports );\n// expose to Minerva and mobile.editor\nmw.mobileFrontend.define( 'mobile.init/skin', skin );\nmodule.exports = exports;\n"],"sourceRoot":""}