{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.editor.overlay/BlockMessageDetails.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/EditorGateway.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/EditorOverlayBase.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/SourceEditorOverlay.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/VisualEditorOverlay.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/blockMessageDrawer.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/identifyLeadParagraph.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/mobile.editor.overlay.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/parseBlockInfo.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/saveFailureMessage.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/setPreferredEditor.js"],"names":["Button","require","View","Icon","util","BlockMessageDetails","cta","config","progressive","wiki","mw","get","user","isAnon","this","options","anonOnly","label","msg","href","Title","getUrl","partial","quiet","tagName","additionalClassNames","track","events","click","drawer","$el","find","prepend","getButtonConfig","name","parsedReason","then","htmlReason","html","createDetailsAnchorHref","blockId","render","wpTarget","createDetailsAnchorLabel","createTitle","msgKey","createBody","noCreateAccount","seeMoreLink","reasonHeader","creatorHeader","expiryHeader","template","module","exports","actionParams","EditorGateway","api","title","sectionId","oldId","content","isNewPage","undefined","fromModified","hasChanged","prototype","getBlockInfo","pageObj","blockedError","actions","edit","Array","isArray","some","error","indexOf","code","data","blockinfo","getContent","self","resolve","Deferred","text","prop","rvprop","titles","intestactions","intestactionsdetail","rvstartid","rvsection","resp","revision","reject","query","pages","missing","revisions","timestamp","originalContent","setContent","setPrependText","prependtext","save","apiOptions","result","action","errorformat","errorlang","errorsuselocal","formatversion","summary","captchaid","captchaId","captchaword","captchaWord","basetimestamp","starttimestamp","section","postWithToken","newrevid","abortPreview","_pending","abort","getPreview","sectionLine","extend","sectionpreview","disableeditsection","pst","mobileformat","post","parse","sections","anchor","line","id","promise","Overlay","parseBlockInfo","headers","PageGateway","icons","toast","saveFailureMessage","mfExtend","blockMessageDrawer","MessageBox","mwUser","EditVeTool","toolGroup","classes","super","call","EditorOverlayBase","params","onBeforeExit","bind","className","isBorderBox","placeholder","summaryRequestMsg","pageGateway","editCount","isNewEditor","sessionId","overlayManager","OO","inheritClass","ui","Tool","static","icon","group","onSelect","onUpdateState","defaults","hasToolbar","continueMsg","closeMsg","summaryMsg","captchaMsg","captchaTryAgainMsg","switchMsg","confirmMsg","licenseMsg","log","editor_interface","editor","editing_session_id","logFeatureUse","confirmSave","window","confirm","onSaveComplete","newRevId","$window","getWindow","saved","invalidatePage","hook","fire","showOnPageReload","type","revision_id","location","hash","off","reload","onSaveFailure","key","errors","captcha","message","editconflict","wasdeleted","spamprotectiontext","reportError","errorNotice","heading","$errorNoticeContainer","hideErrorNotice","empty","onStageChanges","showHidden","scrollTo","onSaveBegin","confirmAborted","preRender","formHeader","editSwitcher","editingMsg","readOnly","disabled","cancel","saveHeader","previewingMsg","savingHeader","postRender","apply","show","allowCloseWindow","confirmCloseWindow","test","namespace","onClickBack","onClickSubmit","onClickContinue","onClickAnonymous","exit","windowManager","switching","getWindowManager","addWindows","widgets","AbandonEditDialog","openWindow","closed","mechanism","release","target","edited","createAnonWarning","$actions","$","addClass","$anonWarning","append","returnto","returnTo","returntoquery","warning","queryParams","signupParams","signupQueryParams","anonymousEditorActions","block","map","getOptionsForSwitch","switched","currentPageHTMLParser","fakeScroll","titleObj","contentLang","contentDir","getLoadingPromise","dataPromise","loader","using","handleCaptcha","details","$input","captchaShown","val","attr","setTimeout","mime","detach","url","question","Section","fakeToolbar","setPreferredEditor","VisualEditorOverlay","SourceEditorOverlay","isFirefox","navigator","userAgent","visualEditorConfig","gateway","isVisualEditorEnabled","templatePartials","arguments","_resizeEditor","ns","namespaces","onInputWikitextEditor","_hidePreview","showAnonWarning","switchToolbar","switchWindow","toolFactory","ToolFactory","toolGroupFactory","ToolGroupFactory","register","libs","ve","MWEditModeVisualTool","MWEditModeSourceTool","Toolbar","on","mode","canSwitch","fullRestbaseUrl","allowLossySwitching","_switchToVisualEditor","WindowManager","SwitchConfirmDialog","$element","appendTo","document","body","destroy","setup","include","emit","spinner","hideSpinner","$preview","$content","hide","$anonHiddenButtons","one","docEl","documentElement","scrollTop","blockScroll","addEventListener","removeEventListener","_loadContent","hideSpinnerAndShowPreview","getDocument","showSpinner","mainpage","parsedText","parsedSectionLine","parseHTML","el","removeClass","container","$scrollContainer","Element","getClosestScrollableContainer","length","css","height","wikitext","feature","targetLoader","addPlugin","loadModules","newOverlay","requestPageData","targetName","modified","replaceCurrent","remove","router","identifyLeadParagraph","surfaceReady","origDataPromise","getPrefixedDb","sessionStore","init","MobileArticleTarget","trackingName","targetFactory","create","once","getSurface","getModel","load","visualeditor","editHeader","destroyTarget","redoTargetInit","adjustContentPadding","restoreEditSection","scrollToLeadParagraph","editLead","editLeadView","readLead","offset","initialCursorOffset","surface","getMode","getView","$attachedRootNode","getLeadSectionElement","top","setLinearSelection","Range","getRange","start","getSelection","getSelectionBoundingRect","padding","overlay","switchToEditor","switchToSourceEditor","setReadOnly","navigateTo","path","useReplaceState","hasBeenModified","Drawer","props","blockDrawer","onBeforeHide","onShow","$drawer","drawerTop","creatorTop","buttonsTop","$seeMore","$container","children","$body","$paragraphs","i","node","isNonLeadParagraph","cloneNode","textContent","isNotEmptyNode","m","define","blockInfo","blockpartial","blocknocreate","blockanononly","creator","blockedby","expiry","duration","reason","blockid","blockexpiry","blockreason","moment","jqueryMsgParse","parser","jqueryMsg","ast","wikiTextToAst","emitter","e","blockedbyid","makeTitle","diff","format","escaped","to","escape","Api","contentmodel","catch","readonlyreason","storage","set","saveOption"],"mappings":"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","file":"mobile.editor.overlay.js","sourcesContent":["'use strict';\nconst Button = require( '../mobile.startup/Button' ),\n\tView = require( '../mobile.startup/View' ),\n\tIcon = require( '../mobile.startup/Icon' ),\n\tutil = require( '../mobile.startup/util' );\n\n/**\n * @extends View\n */\nclass BlockMessageDetails extends View {\n\t/** @inheritdoc */\n\tget isTemplateMode() {\n\t\treturn true;\n\t}\n\t/**\n\t * @inheritdoc\n\t */\n\tget defaults() {\n\t\treturn {\n\t\t\tcreateDetailsAnchorHref: function () {\n\t\t\t\treturn function ( blockId, render ) {\n\t\t\t\t\treturn mw.util.getUrl( 'Special:BlockList', { wpTarget: '#' + render( blockId ) } );\n\t\t\t\t};\n\t\t\t},\n\t\t\tcreateDetailsAnchorLabel: function () {\n\t\t\t\treturn mw.msg( 'mobile-frontend-editor-blocked-drawer-help' );\n\t\t\t},\n\t\t\tcreateTitle: function () {\n\t\t\t\tlet msgKey = 'mobile-frontend-editor-blocked-drawer-title';\n\t\t\t\tif ( mw.user.isAnon() ) {\n\t\t\t\t\tmsgKey += '-ip';\n\t\t\t\t}\n\t\t\t\tif ( this.partial ) {\n\t\t\t\t\tmsgKey += '-partial';\n\t\t\t\t}\n\t\t\t\t// The following messages can be passed here:\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-title\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-title-partial\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-title-ip\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-title-ip-partial\n\t\t\t\treturn mw.msg( msgKey );\n\t\t\t},\n\t\t\tcreateBody: function () {\n\t\t\t\tlet msgKey = '';\n\t\t\t\tif ( mw.user.isAnon() && this.anonOnly ) {\n\t\t\t\t\tmsgKey = 'mobile-frontend-editor-blocked-drawer-body';\n\t\t\t\t\tif ( this.noCreateAccount ) {\n\t\t\t\t\t\tmsgKey += '-login';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmsgKey += '-login-createaccount';\n\t\t\t\t\t}\n\t\t\t\t\tif ( this.partial ) {\n\t\t\t\t\t\tmsgKey += '-partial';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ( this.partial ) {\n\t\t\t\t\t\tmsgKey = 'mobile-frontend-editor-blocked-drawer-body-partial';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// The following messages can be passed here:\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-body-partial\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-body-login\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-body-login-partial\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-body-login-createaccount\n\t\t\t\t// * mobile-frontend-editor-blocked-drawer-body-login-createaccount-partial\n\t\t\t\treturn msgKey ? mw.msg( msgKey ) : msgKey;\n\t\t\t},\n\t\t\tseeMoreLink: mw.msg( 'mobile-frontend-editor-blocked-drawer-body-link' ),\n\t\t\treasonHeader: mw.msg( 'mobile-frontend-editor-blocked-drawer-reason-header' ),\n\t\t\tcreatorHeader: function () {\n\t\t\t\t// The gender is the subject (the blockee) not the object (the blocker).\n\t\t\t\treturn mw.msg( 'mobile-frontend-editor-blocked-drawer-creator-header',\n\t\t\t\t\tmw.user.options.get( 'gender' ) );\n\t\t\t},\n\t\t\texpiryHeader: mw.msg( 'mobile-frontend-editor-blocked-drawer-expiry-header' )\n\t\t};\n\t}\n\t/**\n\t * Configure the call to action depending on the type of block.\n\t *\n\t * @return {Object} Configuration options\n\t */\n\tgetButtonConfig() {\n\t\tlet cta = true;\n\t\tconst config = {\n\t\t\t\tprogressive: true\n\t\t\t},\n\t\t\twiki = mw.config.get( 'wgDBname' );\n\n\t\tif ( mw.user.isAnon() && this.options.anonOnly ) {\n\t\t\t// The user can avoid the block by logging in\n\t\t\tconfig.label = mw.msg( 'mobile-frontend-editor-blocked-drawer-action-login' );\n\t\t\tconfig.href = new mw.Title( 'Special:UserLogin' ).getUrl();\n\t\t} else if ( this.options.partial ) {\n\t\t\t// The user can avoid the block by editing a different page\n\t\t\tconfig.label = mw.msg( 'mobile-frontend-editor-blocked-drawer-action-randompage' );\n\t\t\tconfig.href = new mw.Title( 'Special:Random' ).getUrl();\n\t\t\tconfig.quiet = true;\n\t\t} else {\n\t\t\t// The user cannot avoid the block\n\t\t\tconfig.tagName = 'button';\n\t\t\tconfig.label = mw.msg( 'mobile-frontend-editor-blocked-drawer-action-ok' );\n\t\t\tconfig.additionalClassNames = 'cancel';\n\t\t\tcta = false;\n\t\t}\n\n\t\tif ( cta && mw.config.get( 'wgMFTrackBlockNotices' ) ) {\n\t\t\tmw.track( 'counter.MediaWiki.BlockNotices.' + wiki + '.MobileFrontend.ctaShown', 1 );\n\t\t\tconfig.events = {\n\t\t\t\tclick: function () {\n\t\t\t\t\tmw.track( 'counter.MediaWiki.BlockNotices.' + wiki + '.MobileFrontend.ctaClicked', 1 );\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\treturn config;\n\t}\n\t/**\n\t * @inheritdoc\n\t */\n\tpostRender() {\n\t\tconst drawer = this;\n\t\tthis.$el.find( '.block-message-buttons' ).prepend(\n\t\t\tnew Button( this.getButtonConfig() ).$el\n\t\t);\n\t\tthis.$el.find( '.block-message-icon' ).prepend(\n\t\t\t( new Icon( {\n\t\t\t\tname: 'block-destructive',\n\t\t\t\tadditionalClassNames: 'mw-ui-icon-flush-top'\n\t\t\t} ) ).$el\n\t\t);\n\t\tthis.options.parsedReason.then( function ( htmlReason ) {\n\t\t\tdrawer.$el.find( '.block-message-reason div' ).html( htmlReason );\n\t\t} );\n\t}\n\t/**\n\t * @inheritdoc\n\t */\n\tget template() {\n\t\treturn util.template( `\n<div class=\"block-message block-message-container\">\n  <div class=\"block-message-icon\"></div>\n  <div class=\"block-message-info\">\n    <div class=\"block-message-item block-message-title\">\n      <h5>{{ createTitle }}</h5>\n    </div>\n    <div class=\"block-message-data\">\n      <div class=\"block-message-item\">\n        <p>\n          {{ createBody }}\n          <a class =\"block-message-see-more\" href=\"#\">{{ seeMoreLink }}</a>\n        </p>\n      </div>\n      <div class=\"block-message-item block-message-creator\">\n        {{#creator.name}}\n          <p>\n            {{ creatorHeader }}\n            <strong>\n              {{#creator.url}}\n                <a href=\"{{ creator.url }}\">{{ creator.name }}</a>\n              {{/creator.url}}\n              {{^creator.url}}\n                {{ creator.name }}\n              {{/creator.url}}\n            </strong>\n          </p>\n        {{/creator.name}}\n      </div>\n      {{#duration}}\n        <div class=\"block-message-item\">\n          <p>\n            {{ expiryHeader }}\n            <strong>{{ duration }}</strong>\n          </p>\n        </div>\n      {{/duration}}\n      {{#blockId}}\n        <div class=\"block-message-item\">\n          <a href=\"{{#createDetailsAnchorHref}}{{ blockId }}{{/createDetailsAnchorHref}}\">\n            {{ createDetailsAnchorLabel }}\n          </a>\n        </div>\n      {{/blockId}}\n    </div>\n  </div>\n  {{#reason}}\n    <div class=\"block-message-item block-message-reason\">\n      <h5>{{ reasonHeader }}</h5>\n      <div><p>{{{ reason }}}</p></div>\n    </div>\n  {{/reason}}\n  <div class=\"block-message-buttons\">\n  </div>\n</div>` );\n\t}\n}\n\nmodule.exports = BlockMessageDetails;\n","var util = require( '../mobile.startup/util' ),\n\tactionParams = require( '../mobile.startup/actionParams' );\n\n/**\n * API that helps save and retrieve page content\n *\n * @class EditorGateway\n *\n * @param {Object} options Configuration options\n * @param {mw.Api} options.api an Api to use.\n * @param {string} options.title the title to edit\n * @param {string|null} options.sectionId the id of the section to operate edits on.\n * @param {number} [options.oldId] revision to operate on. If absent defaults to latest.\n * @param {boolean} [options.isNewPage] whether the page being created is new\n * @param {boolean} [options.fromModified] whether the page was loaded in a modified state\n */\nfunction EditorGateway( options ) {\n\tthis.api = options.api;\n\tthis.title = options.title;\n\tthis.sectionId = options.sectionId;\n\tthis.oldId = options.oldId;\n\t// return an empty section for new pages\n\tthis.content = options.isNewPage ? '' : undefined;\n\tthis.fromModified = options.fromModified;\n\tthis.hasChanged = options.fromModified;\n}\n\nEditorGateway.prototype = {\n\n\t/**\n\t * Get the block (if there is one) from the result.\n\t *\n\t * @memberof EditorGateway\n\t * @param {Object} pageObj Page object\n\t * @return {Object|null}\n\t */\n\tgetBlockInfo: function ( pageObj ) {\n\t\tvar blockedError;\n\n\t\tif ( pageObj.actions &&\n\t\t\tpageObj.actions.edit &&\n\t\t\tArray.isArray( pageObj.actions.edit )\n\t\t) {\n\t\t\tpageObj.actions.edit.some( function ( error ) {\n\t\t\t\tif ( [ 'blocked', 'autoblocked' ].indexOf( error.code ) !== -1 ) {\n\t\t\t\t\tblockedError = error;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t} );\n\n\t\t\tif ( blockedError && blockedError.data && blockedError.data.blockinfo ) {\n\t\t\t\treturn blockedError.data.blockinfo;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\t/**\n\t * Get the content of a page.\n\t *\n\t * @memberof EditorGateway\n\t * @instance\n\t * @return {jQuery.Promise}\n\t */\n\tgetContent: function () {\n\t\tvar options,\n\t\t\tself = this;\n\n\t\tfunction resolve() {\n\t\t\treturn util.Deferred().resolve( {\n\t\t\t\ttext: self.content || '',\n\t\t\t\tblockinfo: self.blockinfo\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.content !== undefined ) {\n\t\t\treturn resolve();\n\t\t} else {\n\t\t\toptions = actionParams( {\n\t\t\t\tprop: [ 'revisions', 'info' ],\n\t\t\t\trvprop: [ 'content', 'timestamp' ],\n\t\t\t\ttitles: self.title,\n\t\t\t\t// get block information for this user\n\t\t\t\tintestactions: 'edit',\n\t\t\t\tintestactionsdetail: 'full'\n\t\t\t} );\n\t\t\t// Load text of old revision if desired\n\t\t\tif ( this.oldId ) {\n\t\t\t\toptions.rvstartid = this.oldId;\n\t\t\t}\n\t\t\t// See Bug 50136 - passing rvsection will fail with non wikitext\n\t\t\tif ( this.sectionId ) {\n\t\t\t\toptions.rvsection = this.sectionId;\n\t\t\t}\n\t\t\treturn this.api.get( options ).then( function ( resp ) {\n\t\t\t\tvar revision, pageObj;\n\n\t\t\t\tif ( resp.error ) {\n\t\t\t\t\treturn util.Deferred().reject( resp.error.code );\n\t\t\t\t}\n\n\t\t\t\tpageObj = resp.query.pages[0];\n\t\t\t\t// page might not exist and caller might not have known.\n\t\t\t\tif ( pageObj.missing !== undefined ) {\n\t\t\t\t\tself.content = '';\n\t\t\t\t} else {\n\t\t\t\t\trevision = pageObj.revisions[0];\n\t\t\t\t\tself.content = revision.content;\n\t\t\t\t\tself.timestamp = revision.timestamp;\n\t\t\t\t}\n\n\t\t\t\t// save content a second time to be able to check for changes\n\t\t\t\tself.originalContent = self.content;\n\t\t\t\tself.blockinfo = self.getBlockInfo( pageObj );\n\n\t\t\t\treturn resolve();\n\t\t\t} );\n\t\t}\n\t},\n\n\t/**\n\t * Mark content as modified and set changes to be submitted when #save\n\t * is invoked.\n\t *\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {string} content New section content.\n\t */\n\tsetContent: function ( content ) {\n\t\tif ( this.originalContent !== content || this.fromModified ) {\n\t\t\tthis.hasChanged = true;\n\t\t} else {\n\t\t\tthis.hasChanged = false;\n\t\t}\n\t\tthis.content = content;\n\t},\n\n\t/**\n\t * Mark content as modified and set text that should be prepended to given\n\t * section when #save is invoked.\n\t *\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {string} text Text to be prepended.\n\t */\n\tsetPrependText: function ( text ) {\n\t\tthis.prependtext = text;\n\t\tthis.hasChanged = true;\n\t},\n\n\t/**\n\t * Save the new content of the section, previously set using #setContent.\n\t *\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {Object} options Configuration options\n\t * @param {string} [options.summary] Optional summary for the edit.\n\t * @param {string} [options.captchaId] If CAPTCHA was requested, ID of the\n\t * captcha.\n\t * @param {string} [options.captchaWord] If CAPTCHA was requested, term\n\t * displayed in the CAPTCHA.\n\t * @return {jQuery.Deferred} On failure callback is passed an object with\n\t * `type` and `details` properties. `type` is a string describing the type\n\t * of error, `details` can be any object (usually error message).\n\t */\n\tsave: function ( options ) {\n\t\tvar self = this,\n\t\t\tresult = util.Deferred();\n\n\t\toptions = options || {};\n\n\t\t/**\n\t\t * Save content. Make an API request.\n\t\t *\n\t\t * @return {jQuery.Deferred}\n\t\t */\n\t\tfunction saveContent() {\n\t\t\tvar apiOptions = {\n\t\t\t\taction: 'edit',\n\t\t\t\terrorformat: 'html',\n\t\t\t\terrorlang: mw.config.get( 'wgUserLanguage' ),\n\t\t\t\terrorsuselocal: 1,\n\t\t\t\tformatversion: 2,\n\t\t\t\ttitle: self.title,\n\t\t\t\tsummary: options.summary,\n\t\t\t\tcaptchaid: options.captchaId,\n\t\t\t\tcaptchaword: options.captchaWord,\n\t\t\t\tbasetimestamp: self.timestamp,\n\t\t\t\tstarttimestamp: self.timestamp\n\t\t\t};\n\n\t\t\tif ( self.content !== undefined ) {\n\t\t\t\tapiOptions.text = self.content;\n\t\t\t} else if ( self.prependtext ) {\n\t\t\t\tapiOptions.prependtext = self.prependtext;\n\t\t\t}\n\n\t\t\tif ( self.sectionId ) {\n\t\t\t\tapiOptions.section = self.sectionId;\n\t\t\t}\n\n\t\t\tself.api.postWithToken( 'csrf', apiOptions ).then( function ( data ) {\n\t\t\t\tif ( data && data.edit && data.edit.result === 'Success' ) {\n\t\t\t\t\tself.hasChanged = false;\n\t\t\t\t\tresult.resolve( data.edit.newrevid );\n\t\t\t\t} else {\n\t\t\t\t\tresult.reject( data );\n\t\t\t\t}\n\t\t\t}, function ( code, data ) {\n\t\t\t\tresult.reject( data );\n\t\t\t} );\n\t\t\treturn result;\n\t\t}\n\n\t\treturn saveContent();\n\t},\n\n\t/**\n\t * Abort any pending previews.\n\t *\n\t * @memberof EditorGateway\n\t * @instance\n\t */\n\tabortPreview: function () {\n\t\tif ( this._pending ) {\n\t\t\tthis._pending.abort();\n\t\t}\n\t},\n\n\t/**\n\t * Get page preview from the API and abort any existing previews.\n\t *\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {Object} options API query parameters\n\t * @return {jQuery.Deferred}\n\t */\n\tgetPreview: function ( options ) {\n\t\tvar\n\t\t\tsectionLine = '',\n\t\t\tsectionId = '',\n\t\t\tself = this;\n\n\t\tutil.extend( options, {\n\t\t\taction: 'parse',\n\t\t\t// Enable section preview mode to avoid errors (bug 49218)\n\t\t\tsectionpreview: true,\n\t\t\t// Hide section edit links\n\t\t\tdisableeditsection: true,\n\t\t\t// needed for pre-save transform to work (bug 53692)\n\t\t\tpst: true,\n\t\t\t// Output mobile HTML (bug 54243)\n\t\t\tmobileformat: true,\n\t\t\ttitle: this.title,\n\t\t\tprop: [ 'text', 'sections' ]\n\t\t} );\n\n\t\tthis.abortPreview();\n\t\tthis._pending = this.api.post( options );\n\n\t\treturn this._pending.then( function ( resp ) {\n\t\t\tif ( resp && resp.parse && resp.parse.text ) {\n\t\t\t\t// When editing section 0 or the whole page, there is no section name, so skip\n\t\t\t\tif ( self.sectionId && self.sectionId !== '0' &&\n\t\t\t\t\tresp.parse.sections !== undefined &&\n\t\t\t\t\tresp.parse.sections[0] !== undefined\n\t\t\t\t) {\n\t\t\t\t\tif ( resp.parse.sections[0].anchor !== undefined ) {\n\t\t\t\t\t\tsectionId = resp.parse.sections[0].anchor;\n\t\t\t\t\t}\n\t\t\t\t\tif ( resp.parse.sections[0].line !== undefined ) {\n\t\t\t\t\t\tsectionLine = resp.parse.sections[0].line;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\ttext: resp.parse.text['*'],\n\t\t\t\t\tid: sectionId,\n\t\t\t\t\tline: sectionLine\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn util.Deferred().reject();\n\t\t\t}\n\t\t} ).promise( {\n\t\t\tabort: function () { self._pending.abort(); }\n\t\t} );\n\t}\n};\n\nmodule.exports = EditorGateway;\n","/* global $ */\nvar Overlay = require( '../mobile.startup/Overlay' ),\n\tutil = require( '../mobile.startup/util' ),\n\tparseBlockInfo = require( './parseBlockInfo' ),\n\theaders = require( '../mobile.startup/headers' ),\n\tPageGateway = require( '../mobile.startup/PageGateway' ),\n\ticons = require( '../mobile.startup/icons' ),\n\tButton = require( '../mobile.startup/Button' ),\n\tIcon = require( '../mobile.startup/Icon' ),\n\ttoast = require( '../mobile.startup/showOnPageReload' ),\n\tsaveFailureMessage = require( './saveFailureMessage' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\tblockMessageDrawer = require( './blockMessageDrawer' ),\n\tMessageBox = require( '../mobile.startup/MessageBox' ),\n\tmwUser = mw.user;\n\n/**\n * 'Edit' button\n *\n * @param {OO.ui.ToolGroup} toolGroup\n * @param {Object} config\n */\nfunction EditVeTool( toolGroup, config ) {\n\tconfig = config || {};\n\tconfig.classes = [ 'visual-editor' ];\n\tEditVeTool.super.call( this, toolGroup, config );\n}\nOO.inheritClass( EditVeTool, OO.ui.Tool );\n\nEditVeTool.static.name = 'editVe';\nEditVeTool.static.icon = 'edit';\nEditVeTool.static.group = 'editorSwitcher';\nEditVeTool.static.title = mw.msg( 'mobile-frontend-editor-switch-visual-editor' );\n/**\n * click handler\n *\n * @memberof EditVeTool\n * @instance\n */\nEditVeTool.prototype.onSelect = function () {\n\t// will be overridden later\n};\n/**\n * Toolbar update state handler.\n *\n * @memberof EditVeTool\n * @instance\n */\nEditVeTool.prototype.onUpdateState = function () {\n\t// do nothing\n};\n\n/**\n * Base class for SourceEditorOverlay and VisualEditorOverlay\n *\n * @class EditorOverlayBase\n * @extends Overlay\n * @uses Icon\n * @uses user\n * @param {Object} params Configuration options\n * @param {number|null} params.editCount of user\n * @param {boolean} params.editSwitcher whether possible to switch mode in header\n * @param {boolean} params.hasToolbar whether the editor has a toolbar\n */\nfunction EditorOverlayBase( params ) {\n\tvar\n\t\toptions = util.extend(\n\t\t\ttrue,\n\t\t\t{\n\t\t\t\tonBeforeExit: this.onBeforeExit.bind( this ),\n\t\t\t\tclassName: 'overlay editor-overlay',\n\t\t\t\tisBorderBox: false\n\t\t\t},\n\t\t\tparams,\n\t\t\t{\n\t\t\t\tevents: util.extend(\n\t\t\t\t\t{\n\t\t\t\t\t\t'click .back': 'onClickBack',\n\t\t\t\t\t\t'click .continue': 'onClickContinue',\n\t\t\t\t\t\t'click .submit': 'onClickSubmit',\n\t\t\t\t\t\t'click .anonymous': 'onClickAnonymous'\n\t\t\t\t\t},\n\t\t\t\t\tparams.events\n\t\t\t\t)\n\t\t\t}\n\t\t);\n\n\tif ( options.isNewPage ) {\n\t\toptions.placeholder = mw.msg( 'mobile-frontend-editor-placeholder-new-page', mwUser );\n\t}\n\t// change the message to request a summary when not in article namespace\n\tif ( mw.config.get( 'wgNamespaceNumber' ) !== 0 ) {\n\t\toptions.summaryRequestMsg = mw.msg( 'mobile-frontend-editor-summary' );\n\t}\n\tthis.pageGateway = new PageGateway( options.api );\n\tthis.editCount = options.editCount;\n\tthis.isNewPage = options.isNewPage;\n\tthis.isNewEditor = options.editCount === 0;\n\tthis.sectionId = options.sectionId;\n\tthis.sessionId = options.sessionId;\n\tthis.overlayManager = options.overlayManager;\n\n\tOverlay.call( this, options );\n}\n\nmfExtend( EditorOverlayBase, Overlay, {\n\t/**\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @mixes Overlay#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {OverlayManager} defaults.overlayManager instance\n\t * @property {mw.Api} defaults.api to interact with\n\t * @property {boolean} defaults.hasToolbar Whether the editor has a toolbar or not. When\n\t *  disabled a header will be show instead.\n\t * @property {string} defaults.continueMsg Caption for the next button on edit form\n\t * which takes you to the screen that shows a preview and license information.\n\t * @property {string} defaults.closeMsg Caption for a button that takes you back to editing\n\t * from edit preview screen.\n\t * @property {string} defaults.summaryRequestMsg Header above edit summary input field\n\t * asking the user to summarize the changes they made to the page.\n\t * @property {string} defaults.summaryMsg A placeholder with examples for the summary input\n\t * field asking user what they changed.\n\t * @property {string} defaults.placeholder Placeholder text for empty sections.\n\t * @property {string} defaults.captchaMsg Placeholder for captcha input field.\n\t * @property {string} defaults.captchaTryAgainMsg A message shown when user enters\n\t * wrong CAPTCHA and a new one is displayed.\n\t * @property {string} defaults.switchMsg Label for button that allows the user\n\t * to switch between two different editing interfaces.\n\t * @property {string} defaults.licenseMsg Text and link of the license,\n\t * under which this contribution will be released to inform the user.\n\t */\n\tdefaults: util.extend( {}, Overlay.prototype.defaults, {\n\t\thasToolbar: false,\n\t\tcontinueMsg: mw.msg( 'mobile-frontend-editor-continue' ),\n\t\tcloseMsg: mw.msg( 'mobile-frontend-editor-keep-editing' ),\n\t\tsummaryRequestMsg: mw.msg( 'mobile-frontend-editor-summary-request' ),\n\t\tsummaryMsg: mw.msg( 'mobile-frontend-editor-summary-placeholder' ),\n\t\tplaceholder: mw.msg( 'mobile-frontend-editor-placeholder' ),\n\t\tcaptchaMsg: mw.msg( 'mobile-frontend-account-create-captcha-placeholder' ),\n\t\tcaptchaTryAgainMsg: mw.msg( 'mobile-frontend-editor-captcha-try-again' ),\n\t\tswitchMsg: mw.msg( 'mobile-frontend-editor-switch-editor' ),\n\t\tconfirmMsg: mw.msg( 'mobile-frontend-editor-cancel-confirm' ),\n\t\tlicenseMsg: undefined\n\t} ),\n\t/**\n\t * @inheritdoc\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\ttemplate: util.template( `\n<div class=\"overlay-header-container header-container position-fixed\"></div>\n\n<div class=\"overlay-content\">\n\t<div class=\"panels\">\n\t\t<div class=\"save-panel panel hideable hidden\">\n\t\t\t<div id=\"error-notice-container\"></div>\n\t\t\t<h2 class=\"summary-request\">{{{summaryRequestMsg}}}</h2>\n\t\t\t<textarea rows=\"2\" class=\"mw-ui-input summary\" placeholder=\"{{summaryMsg}}\"></textarea>\n\t\t\t{{#licenseMsg}}<div class=\"license\">{{{licenseMsg}}}</div>{{/licenseMsg}}\n\t\t</div>\n\t\t<div class=\"captcha-panel panel hideable hidden\">\n\t\t\t<div class=\"captcha-box\">\n\t\t\t\t<img id=\"image\" src=\"\">\n\t\t\t\t<div id=\"question\"></div>\n\t\t\t\t<input class=\"captcha-word mw-ui-input\" placeholder=\"{{captchaMsg}}\" />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t{{>content}}\n</div>\n<div class=\"overlay-footer-container position-fixed\">\n\t{{>footer}}\n</div>\n\t` ),\n\t/**\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tsectionId: '',\n\t/**\n\t * Logs an event to http://meta.wikimedia.org/wiki/Schema:EditAttemptStep\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Object} data\n\t */\n\tlog: function ( data ) {\n\t\tmw.track( 'mf.schemaEditAttemptStep', util.extend( data, {\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\teditor_interface: this.editor,\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tediting_session_id: this.sessionId\n\t\t} ) );\n\t},\n\t/**\n\t * Logs an event to http://meta.wikimedia.org/wiki/Schema:VisualEditorFeatureUse\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Object} data\n\t */\n\tlogFeatureUse: function ( data ) {\n\t\tmw.track( 'mf.schemaVisualEditorFeatureUse', util.extend( data, {\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\teditor_interface: this.editor,\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tediting_session_id: this.sessionId\n\t\t} ) );\n\t},\n\n\t/**\n\t * If this is a new article, require confirmation before saving.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @return {boolean} The user confirmed saving\n\t */\n\tconfirmSave: function () {\n\t\tif ( this.isNewPage &&\n\t\t\t// TODO: Replace with an OOUI dialog\n\t\t\t// eslint-disable-next-line no-alert\n\t\t\t!window.confirm( mw.msg( 'mobile-frontend-editor-new-page-confirm', mwUser ) )\n\t\t) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t},\n\t/**\n\t * Executed when page save is complete. Handles reloading the page, showing toast\n\t * messages.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {number} newRevId ID of the newly created revision\n\t */\n\tonSaveComplete: function ( newRevId ) {\n\t\tvar msg,\n\t\t\t$window = util.getWindow(),\n\t\t\ttitle = this.options.title,\n\t\t\tself = this;\n\n\t\tthis.saved = true;\n\n\t\t// FIXME: use generic method for following 3 lines\n\t\tthis.pageGateway.invalidatePage( title );\n\n\t\tif ( this.isNewPage ) {\n\t\t\tmsg = mw.msg( 'mobile-frontend-editor-success-new-page' );\n\t\t} else if ( this.isNewEditor ) {\n\t\t\tmsg = mw.msg( 'mobile-frontend-editor-success-landmark-1' );\n\t\t} else {\n\t\t\tmsg = mw.msg( 'mobile-frontend-editor-success' );\n\t\t}\n\t\t/**\n\t\t * Fired after an edit was successfully saved, like postEdit in MediaWiki core.\n\t\t *\n\t\t * @event postEditMobile\n\t\t * @member mw.hook\n\t\t */\n\t\tmw.hook( 'postEditMobile' ).fire();\n\n\t\tif ( !mw.config.get( 'wgPostEditConfirmationDisabled' ) ) {\n\t\t\ttoast.showOnPageReload( msg, { type: 'success' } );\n\t\t}\n\n\t\t// Ensure we don't lose this event when logging\n\t\tthis.log( {\n\t\t\taction: 'saveSuccess',\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\trevision_id: newRevId\n\t\t} );\n\t\tif ( self.sectionId ) {\n\t\t\t// Ideally we'd want to do this via replaceState (see T189173)\n\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\twindow.location.hash = '#' + self.sectionId;\n\t\t} else {\n\t\t\t// Cancel the hash fragment\n\t\t\t// otherwise clicking back after a save will take you back to the editor.\n\t\t\t// We avoid calling the hide method of the overlay here as this can be asynchronous\n\t\t\t// and may conflict with the window.reload call below.\n\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\twindow.location.hash = '#';\n\t\t}\n\n\t\t$window.off( 'beforeunload.mfeditorwarning' );\n\n\t\t// Note the \"#\" may be in the URL.\n\t\t// If so, using window.location alone will not reload the page\n\t\t// we need to forcefully refresh\n\t\t// eslint-disable-next-line no-restricted-properties\n\t\twindow.location.reload();\n\t},\n\t/**\n\t * Executed when page save fails. Handles logging the error. Subclasses\n\t * should display error messages as appropriate.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Object} data API response\n\t */\n\tonSaveFailure: function ( data ) {\n\t\tvar key = data && data.errors && data.errors[0] && data.errors[0].code,\n\t\t\t// TODO: This looks incomplete and most of the error codes are wrong.\n\t\t\t// Compare to ve.init.mw.ArticleTargetEvents.js in VisualEditor.\n\t\t\ttypeMap = {\n\t\t\t\teditconflict: 'editConflict',\n\t\t\t\twasdeleted: 'editPageDeleted',\n\t\t\t\t'abusefilter-disallowed': 'extensionAbuseFilter',\n\t\t\t\tcaptcha: 'extensionCaptcha',\n\t\t\t\tspamprotectiontext: 'extensionSpamBlacklist',\n\t\t\t\t'titleblacklist-forbidden-edit': 'extensionTitleBlacklist'\n\t\t\t};\n\n\t\tif ( data.edit && data.edit.captcha ) {\n\t\t\tkey = 'captcha';\n\t\t}\n\n\t\tthis.log( {\n\t\t\taction: 'saveFailure',\n\t\t\tmessage: saveFailureMessage( data ),\n\t\t\ttype: typeMap[key] || 'responseUnknown'\n\t\t} );\n\t},\n\t/**\n\t * Report load errors back to the user. Silently record the error using EventLogging.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {string} text Text (HTML) of message to display to user\n\t */\n\treportError: function ( text ) {\n\t\tvar errorNotice = new MessageBox( {\n\t\t\tclassName: 'errorbox',\n\t\t\tmsg: text,\n\t\t\theading: mw.msg( 'mobile-frontend-editor-error' )\n\t\t} );\n\t\tthis.$errorNoticeContainer.html( errorNotice.$el );\n\t},\n\thideErrorNotice: function () {\n\t\tthis.$errorNoticeContainer.empty();\n\t},\n\t/**\n\t * Prepares the penultimate screen before saving.\n\t * Expects to be overridden by child class.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonStageChanges: function () {\n\t\tthis.showHidden( '.save-header, .save-panel' );\n\t\tthis.hideErrorNotice();\n\t\tthis.log( {\n\t\t\taction: 'saveIntent'\n\t\t} );\n\t\t// Scroll to the top of the page, so that the summary input is visible\n\t\t// (even if overlay was scrolled down when editing) and weird iOS header\n\t\t// problems are avoided (header position not updating to the top of the\n\t\t// screen, instead staying lower until a subsequent scroll event).\n\t\twindow.scrollTo( 0, 1 );\n\t},\n\t/**\n\t * Executed when the editor clicks the save button. Expects to be overridden by child\n\t * class. Checks if the save needs to be confirmed.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonSaveBegin: function () {\n\t\tthis.confirmAborted = false;\n\t\tthis.hideErrorNotice();\n\t\t// Ask for confirmation in some cases\n\t\tif ( !this.confirmSave() ) {\n\t\t\tthis.confirmAborted = true;\n\t\t\treturn;\n\t\t}\n\t\tthis.log( {\n\t\t\taction: 'saveAttempt'\n\t\t} );\n\t},\n\t/**\n\t * @inheritdoc\n\t */\n\tpreRender: function () {\n\t\tconst options = this.options;\n\n\t\tthis.options.headers = [\n\t\t\theaders.formHeader(\n\t\t\t\tutil.template( `\n{{^hasToolbar}}\n<div class=\"overlay-title\">\n\t<h2>{{{editingMsg}}}</h2>\n</div>\n{{/hasToolbar}}\n{{#hasToolbar}}<div class=\"toolbar\"></div>{{/hasToolbar}}\n{{#editSwitcher}}\n\t<div class=\"switcher-container\">\n\t</div>\n{{/editSwitcher}}\n\t\t\t\t` ).render( {\n\t\t\t\t\thasToolbar: options.hasToolbar,\n\t\t\t\t\teditSwitcher: options.editSwitcher,\n\t\t\t\t\teditingMsg: options.editingMsg\n\t\t\t\t} ),\n\t\t\t\toptions.readOnly ? [] : [\n\t\t\t\t\tnew Icon( {\n\t\t\t\t\t\ttagName: 'button',\n\t\t\t\t\t\tname: 'next-invert',\n\t\t\t\t\t\tadditionalClassNames: 'continue',\n\t\t\t\t\t\tdisabled: true,\n\t\t\t\t\t\ttitle: options.continueMsg\n\t\t\t\t\t} )\n\t\t\t\t],\n\t\t\t\ticons.cancel(),\n\t\t\t\t'initial-header'\n\t\t\t),\n\t\t\theaders.saveHeader( options.previewingMsg, 'save-header hidden' ),\n\t\t\theaders.savingHeader( mw.msg( 'mobile-frontend-editor-wait' ) )\n\t\t];\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tthis.$errorNoticeContainer = this.$el.find( '#error-notice-container' );\n\n\t\tOverlay.prototype.postRender.apply( this );\n\n\t\tthis.showHidden( '.initial-header' );\n\t},\n\tshow: function () {\n\t\tvar self = this;\n\t\tthis.allowCloseWindow = mw.confirmCloseWindow( {\n\t\t\t// Returns true if content has changed\n\t\t\ttest: function () {\n\t\t\t\t// Check if content has changed\n\t\t\t\treturn self.hasChanged();\n\t\t\t},\n\n\t\t\t// Message to show the user, if content has changed\n\t\t\tmessage: mw.msg( 'mobile-frontend-editor-cancel-confirm' ),\n\t\t\t// Event namespace\n\t\t\tnamespace: 'editwarning'\n\t\t} );\n\n\t\tthis.saved = false;\n\t\tOverlay.prototype.show.call( this );\n\n\t\t// Inform other interested code that the editor has loaded\n\t\tmw.hook( 'mobileFrontend.editorOpened' ).fire( this.editor );\n\t},\n\t/**\n\t * Back button click handler\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonClickBack: function () {},\n\t/**\n\t * Submit button click handler\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonClickSubmit: function () {\n\t\tthis.onSaveBegin();\n\t},\n\t/**\n\t * Continue button click handler\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonClickContinue: function () {\n\t\tthis.onStageChanges();\n\t},\n\t/**\n\t * \"Edit without logging in\" button click handler\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonClickAnonymous: function () {},\n\t/**\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Function} exit Callback to exit the overlay\n\t */\n\tonBeforeExit: function ( exit ) {\n\t\tvar windowManager,\n\t\t\tself = this;\n\t\tif ( this.hasChanged() && !this.switching ) {\n\t\t\twindowManager = OO.ui.getWindowManager();\n\t\t\twindowManager.addWindows( [ new mw.widgets.AbandonEditDialog() ] );\n\t\t\twindowManager.openWindow( 'abandonedit' )\n\t\t\t\t.closed.then( function ( data ) {\n\t\t\t\t\tif ( data && data.action === 'discard' ) {\n\t\t\t\t\t\t// log abandonment\n\t\t\t\t\t\tself.log( {\n\t\t\t\t\t\t\taction: 'abort',\n\t\t\t\t\t\t\tmechanism: 'cancel',\n\t\t\t\t\t\t\ttype: 'abandon'\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tself.allowCloseWindow.release();\n\t\t\t\t\t\tmw.hook( 'mobileFrontend.editorClosed' ).fire();\n\t\t\t\t\t\texit();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\treturn;\n\t\t}\n\t\tif ( !this.switching && !this.saved ) {\n\t\t\t// log leaving without changes\n\t\t\tthis.log( {\n\t\t\t\taction: 'abort',\n\t\t\t\tmechanism: 'cancel',\n\t\t\t\t// if this is VE, hasChanged will be false because the Surface has\n\t\t\t\t// already been destroyed (which is good because it stops us\n\t\t\t\t// double-showing the abandon changes dialog above)... but we can\n\t\t\t\t// test whether there *were* changes for logging purposes by\n\t\t\t\t// examining the target:\n\t\t\t\ttype: ( this.target && this.target.edited ) ? 'abandon' : 'nochange'\n\t\t\t} );\n\t\t}\n\t\tthis.allowCloseWindow.release();\n\t\tmw.hook( 'mobileFrontend.editorClosed' ).fire();\n\t\texit();\n\t},\n\t/**\n\t * Sets additional values used for anonymous editing warning.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Object} options\n\t * @return {jQuery.Element}\n\t */\n\tcreateAnonWarning: function ( options ) {\n\t\tvar $actions = $( '<div>' ).addClass( 'actions' ),\n\t\t\t$anonWarning = $( '<div>' ).addClass( 'anonwarning content' ).append(\n\t\t\t\tnew MessageBox( {\n\t\t\t\t\tclassName: 'warningbox anon-msg',\n\t\t\t\t\tmsg: mw.msg( 'mobile-frontend-editor-anonwarning' )\n\t\t\t\t} ).$el,\n\t\t\t\t$actions\n\t\t\t),\n\t\t\tparams = util.extend( {\n\t\t\t// use wgPageName as this includes the namespace if outside Main\n\t\t\t\treturnto: options.returnTo || mw.config.get( 'wgPageName' ),\n\t\t\t\treturntoquery: 'action=edit&section=' + options.sectionId,\n\t\t\t\twarning: 'mobile-frontend-edit-login-action'\n\t\t\t}, options.queryParams ),\n\t\t\tsignupParams = util.extend( {\n\t\t\t\ttype: 'signup',\n\t\t\t\twarning: 'mobile-frontend-edit-signup-action'\n\t\t\t}, options.signupQueryParams ),\n\t\t\tanonymousEditorActions = [\n\t\t\t\tnew Button( {\n\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-editor-anon' ),\n\t\t\t\t\tblock: true,\n\t\t\t\t\tadditionalClassNames: 'anonymous progressive',\n\t\t\t\t\tprogressive: true\n\t\t\t\t} ),\n\t\t\t\tnew Button( {\n\t\t\t\t\tblock: true,\n\t\t\t\t\thref: mw.util.getUrl( 'Special:UserLogin', params ),\n\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-login' )\n\t\t\t\t} ),\n\t\t\t\tnew Button( {\n\t\t\t\t\tblock: true,\n\t\t\t\t\thref: mw.util.getUrl( 'Special:UserLogin', util.extend( params, signupParams ) ),\n\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-signup' )\n\t\t\t\t} )\n\t\t\t];\n\n\t\t$actions.append(\n\t\t\tanonymousEditorActions.map( function ( action ) {\n\t\t\t\treturn action.$el;\n\t\t\t} )\n\t\t);\n\n\t\treturn $anonWarning;\n\t},\n\n\t/**\n\t * Get an options object not containing any defaults or editor\n\t * specific options, so that it can be used to construct a\n\t * different editor for switching.\n\t *\n\t * @return {Object} Options\n\t */\n\tgetOptionsForSwitch: function () {\n\t\t// Only preserve options that would be passed in editor.js#setupEditor\n\t\t// and skip over defaults.\n\t\treturn {\n\t\t\tswitched: true,\n\t\t\toverlayManager: this.options.overlayManager,\n\t\t\tcurrentPageHTMLParser: this.options.currentPageHTMLParser,\n\t\t\tfakeScroll: this.options.fakeScroll,\n\t\t\tapi: this.options.api,\n\t\t\tlicenseMsg: this.options.licenseMsg,\n\t\t\ttitle: this.options.title,\n\t\t\ttitleObj: this.options.titleObj,\n\t\t\tisAnon: this.options.isAnon,\n\t\t\tisNewPage: this.options.isNewPage,\n\t\t\teditCount: this.options.editCount,\n\t\t\toldId: this.options.oldId,\n\t\t\tcontentLang: this.options.contentLang,\n\t\t\tcontentDir: this.options.contentDir,\n\t\t\tsessionId: this.options.sessionId,\n\t\t\tsectionId: this.options.sectionId\n\t\t};\n\t},\n\n\t/**\n\t * Checks whether the state of the thing being edited as changed. Expects to be\n\t * implemented by child class.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\thasChanged: function () {},\n\t/**\n\t * Get a promise that is resolved when the editor data has loaded,\n\t * or rejected when we're refusing to load the editor because the user is blocked.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @return {jQuery.Promise}\n\t */\n\tgetLoadingPromise: function () {\n\t\treturn this.dataPromise.then( function ( result ) {\n\t\t\t// check if user is blocked\n\t\t\tif ( result && result.blockinfo ) {\n\t\t\t\t// Lazy-load moment only if it's needed, it's somewhat large (it is already used on\n\t\t\t\t// mobile by Echo's notifications panel, where it's also lazy-loaded)\n\t\t\t\treturn mw.loader.using( 'moment' ).then( function () {\n\t\t\t\t\tvar block = parseBlockInfo( result.blockinfo ),\n\t\t\t\t\t\tmessage = blockMessageDrawer( block );\n\t\t\t\t\treturn util.Deferred().reject( message );\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn result;\n\t\t} );\n\t},\n\t/**\n\t * Handles a failed save due to a CAPTCHA provided by ConfirmEdit extension.\n\t *\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Object} details Details returned from the api.\n\t */\n\thandleCaptcha: function ( details ) {\n\t\tvar self = this,\n\t\t\t$input = this.$el.find( '.captcha-word' );\n\n\t\tif ( this.captchaShown ) {\n\t\t\t$input.val( '' );\n\t\t\t$input.attr( 'placeholder', this.options.captchaTryAgainMsg );\n\t\t\tsetTimeout( function () {\n\t\t\t\t$input.attr( 'placeholder', self.options.captchaMsg );\n\t\t\t}, 2000 );\n\t\t}\n\n\t\t// handle different mime types different\n\t\tif ( details.mime.indexOf( 'image/' ) === 0 ) {\n\t\t\t// image based CAPTCHA's like provided by FancyCaptcha, ReCaptcha or similar\n\t\t\tthis.$el.find( '.captcha-panel#question' ).detach();\n\t\t\tthis.$el.find( '.captcha-panel img' ).attr( 'src', details.url );\n\t\t} else {\n\t\t\t// not image based CAPTCHA.\n\t\t\tthis.$el.find( '.captcha-panel #image' ).detach();\n\t\t\tif ( details.mime.indexOf( 'text/html' ) === 0 ) {\n\t\t\t\t// handle mime type of HTML as HTML content (display as-is).\n\t\t\t\t// QuestyCaptcha now have default MIME type \"text/html\": see T147606\n\t\t\t\tthis.$el.find( '.captcha-panel #question' ).html( details.question );\n\t\t\t} else {\n\t\t\t\t// handle mime types\n\t\t\t\t// (other than image based ones and HTML based ones)\n\t\t\t\t// as plain text by default.\n\t\t\t\t// e.g. MathCaptcha (solve a math formula) or\n\t\t\t\t// SimpleCaptcha (simple math formula)\n\t\t\t\tthis.$el.find( '.captcha-panel #question' ).text( details.question );\n\t\t\t}\n\t\t}\n\n\t\tthis.showHidden( '.save-header, .captcha-panel' );\n\t\tthis.captchaShown = true;\n\t}\n} );\n\nmodule.exports = EditorOverlayBase;\n","var EditorOverlayBase = require( './EditorOverlayBase' ),\n\tutil = require( '../mobile.startup/util' ),\n\ticons = require( '../mobile.startup/icons' ),\n\tSection = require( '../mobile.startup/Section' ),\n\tsaveFailureMessage = require( './saveFailureMessage' ),\n\tEditorGateway = require( './EditorGateway' ),\n\tfakeToolbar = require( '../mobile.init/fakeToolbar' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\tsetPreferredEditor = require( './setPreferredEditor' ),\n\tVisualEditorOverlay = require( './VisualEditorOverlay' );\n\n/**\n * Overlay that shows an editor\n *\n * @class SourceEditorOverlay\n * @uses Section\n * @uses EditorGateway\n * @uses VisualEditorOverlay\n * @extends EditorOverlayBase\n *\n * @param {Object} options Configuration options\n * @param {Object} [options.visualEditorConfig] falls back to wgVisualEditorConfig if not defined\n * @param {jQuery.Promise} [dataPromise] Optional promise for loading content\n */\nfunction SourceEditorOverlay( options, dataPromise ) {\n\tthis.isFirefox = /firefox/i.test( window.navigator.userAgent );\n\tthis.visualEditorConfig = options.visualEditorConfig ||\n\t\tmw.config.get( 'wgVisualEditorConfig' ) || {};\n\tthis.gateway = new EditorGateway( {\n\t\tapi: options.api,\n\t\ttitle: options.title,\n\t\tsectionId: options.sectionId,\n\t\toldId: options.oldId,\n\t\tisNewPage: options.isNewPage,\n\t\tfromModified: !!dataPromise\n\t} );\n\tthis.readOnly = !!options.oldId; // If old revision, readOnly mode\n\tthis.dataPromise = dataPromise || this.gateway.getContent();\n\tif ( this.isVisualEditorEnabled() ) {\n\t\toptions.editSwitcher = true;\n\t}\n\tif ( this.readOnly ) {\n\t\toptions.readOnly = true;\n\t\toptions.editingMsg = mw.msg( 'mobile-frontend-editor-viewing-source-page', options.title );\n\t} else {\n\t\toptions.editingMsg = mw.msg( 'mobile-frontend-editor-editing-page', options.title );\n\t}\n\toptions.previewingMsg = mw.msg( 'mobile-frontend-editor-previewing-page', options.title );\n\tEditorOverlayBase.call(\n\t\tthis,\n\t\tutil.extend( true,\n\t\t\t{ events: { 'input .wikitext-editor': 'onInputWikitextEditor' } },\n\t\t\toptions\n\t\t)\n\t);\n}\n\nmfExtend( SourceEditorOverlay, EditorOverlayBase, {\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, EditorOverlayBase.prototype.templatePartials, {\n\t\tcontent: util.template( `\n<div lang=\"{{contentLang}}\" dir=\"{{contentDir}}\" class=\"editor-container content\">\n\t<textarea class=\"wikitext-editor\" id=\"wikitext-editor\" cols=\"40\" rows=\"10\" placeholder=\"{{placeholder}}\"></textarea>\n\t<div class=\"preview\"></div>\n</div>\n\t\t` )\n\t} ),\n\t/**\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\teditor: 'wikitext',\n\t/**\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tsectionLine: '',\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\tEditorOverlayBase.prototype.show.apply( this, arguments );\n\t\t// Ensure we do this after showing the overlay, otherwise it doesn't work.\n\t\tthis._resizeEditor();\n\t},\n\t/**\n\t * Check whether VisualEditor is enabled or not.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisVisualEditorEnabled: function () {\n\t\tvar config = this.visualEditorConfig,\n\t\t\tns = config.namespaces;\n\n\t\treturn ns &&\n\t\t\tns.indexOf(\n\t\t\t\tmw.config.get( 'wgNamespaceNumber' )\n\t\t\t) > -1 &&\n\t\t\tmw.config.get( 'wgTranslatePageTranslation' ) !== 'translation' &&\n\t\t\tmw.config.get( 'wgPageContentModel' ) === 'wikitext';\n\t},\n\t/**\n\t * Wikitext Editor input handler\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonInputWikitextEditor: function () {\n\t\tthis.gateway.setContent( this.$el.find( '.wikitext-editor' ).val() );\n\t\tthis.$el.find( '.continue, .submit' ).prop( 'disabled', false );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonClickBack: function () {\n\t\tEditorOverlayBase.prototype.onClickBack.apply( this, arguments );\n\t\tthis._hidePreview();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this,\n\t\t\tconfig = this.visualEditorConfig,\n\t\t\toptions = this.options,\n\t\t\tshowAnonWarning = options.isAnon && !options.switched;\n\n\t\t// log edit attempt\n\t\tthis.log( { action: 'ready' } );\n\t\tthis.log( { action: 'loaded' } );\n\n\t\tif ( this.isVisualEditorEnabled() ) {\n\t\t\tmw.loader.using( 'ext.visualEditor.switching' ).then( function () {\n\t\t\t\tvar switchToolbar, windowManager, switchWindow,\n\t\t\t\t\ttoolFactory = new OO.ui.ToolFactory(),\n\t\t\t\t\ttoolGroupFactory = new OO.ui.ToolGroupFactory();\n\n\t\t\t\ttoolFactory.register( mw.libs.ve.MWEditModeVisualTool );\n\t\t\t\ttoolFactory.register( mw.libs.ve.MWEditModeSourceTool );\n\t\t\t\tswitchToolbar = new OO.ui.Toolbar( toolFactory, toolGroupFactory, {\n\t\t\t\t\tclasses: [ 'editor-switcher' ]\n\t\t\t\t} );\n\n\t\t\t\tswitchToolbar.on( 'switchEditor', function ( mode ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tcanSwitch = config.fullRestbaseUrl || config.allowLossySwitching;\n\t\t\t\t\tif ( mode === 'visual' ) {\n\t\t\t\t\t\tif ( !self.gateway.hasChanged ) {\n\t\t\t\t\t\t\tself._switchToVisualEditor();\n\t\t\t\t\t\t} else if ( canSwitch ) {\n\t\t\t\t\t\t\t// Pass wikitext if there are changes.\n\t\t\t\t\t\t\tself._switchToVisualEditor( self.gateway.content );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twindowManager = new OO.ui.WindowManager();\n\t\t\t\t\t\t\tswitchWindow = new mw.libs.ve.SwitchConfirmDialog();\n\t\t\t\t\t\t\twindowManager.$element.appendTo( document.body );\n\t\t\t\t\t\t\twindowManager.addWindows( [ switchWindow ] );\n\t\t\t\t\t\t\twindowManager.openWindow( switchWindow, { mode: 'simple' } )\n\t\t\t\t\t\t\t\t.closed.then( function ( data ) {\n\t\t\t\t\t\t\t\t\tif ( data && data.action === 'discard' ) {\n\t\t\t\t\t\t\t\t\t\tself._switchToVisualEditor();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twindowManager.destroy();\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tswitchToolbar.setup( [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'editMode',\n\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\ticon: 'edit',\n\t\t\t\t\t\ttitle: mw.msg( 'visualeditor-mweditmode-tooltip' ),\n\t\t\t\t\t\tinclude: [ 'editModeVisual', 'editModeSource' ]\n\t\t\t\t\t}\n\t\t\t\t] );\n\n\t\t\t\tself.$el.find( '.switcher-container' ).html( switchToolbar.$element );\n\t\t\t\tswitchToolbar.emit( 'updateState' );\n\t\t\t} );\n\t\t}\n\n\t\tEditorOverlayBase.prototype.postRender.apply( this );\n\n\t\t// This spinner is still used when displaying save/preview panel\n\t\tthis.$el.find( '.overlay-content' ).append( icons.spinner().$el );\n\t\tthis.hideSpinner();\n\n\t\tthis.$preview = this.$el.find( '.preview' );\n\t\tthis.$content = this.$el.find( '.wikitext-editor' );\n\t\t// The following classes can be used here:\n\t\t// * mw-editfont-monospace\n\t\t// * mw-editfont-sans-serif\n\t\t// * mw-editfont-serif\n\t\tthis.$content.addClass( 'mw-editfont-' + mw.user.options.get( 'editfont' ) );\n\t\tif ( showAnonWarning ) {\n\t\t\tthis.$anonWarning = this.createAnonWarning( options );\n\t\t\tthis.$el.find( '.editor-container' ).append( this.$anonWarning );\n\t\t\tthis.$content.hide();\n\t\t\t// the user has to click login, signup or edit without login,\n\t\t\t// disable \"Next\" button on top right\n\t\t\tthis.$anonHiddenButtons = this.$el.find( '.overlay-header .continue, .editor-switcher' ).hide();\n\t\t}\n\t\t// make license links open in separate tabs\n\t\tthis.$el.find( '.license a' ).attr( 'target', '_blank' );\n\n\t\t// If in readOnly mode, make textarea readonly\n\t\tif ( this.readOnly ) {\n\t\t\tthis.$content.prop( 'readonly', true );\n\t\t}\n\n\t\tthis.$content\n\t\t\t.on( 'input', this._resizeEditor.bind( this ) )\n\t\t\t.one( 'input', function () {\n\t\t\t\tself.log( { action: 'firstChange' } );\n\t\t\t} );\n\n\t\tif ( this.isFirefox ) {\n\t\t\tthis.$content.on( 'mousedown', function () {\n\t\t\t\t// Support: Firefox Mobile\n\t\t\t\t// Firefox scrolls back to the top of the page *every time*\n\t\t\t\t// you tap on the textarea. This makes things slightly\n\t\t\t\t// more usable by restoring your scroll offset every time\n\t\t\t\t// the page scrolls for the next 1000ms.\n\t\t\t\t// The page will still flicker every time the user touches\n\t\t\t\t// to place the cursor, but this is better than completely\n\t\t\t\t// losing your scroll offset. (T214880)\n\t\t\t\tvar docEl = document.documentElement,\n\t\t\t\t\tscrollTop = docEl.scrollTop;\n\t\t\t\tfunction blockScroll() {\n\t\t\t\t\tdocEl.scrollTop = scrollTop;\n\t\t\t\t}\n\t\t\t\twindow.addEventListener( 'scroll', blockScroll );\n\t\t\t\tsetTimeout( function () {\n\t\t\t\t\twindow.removeEventListener( 'scroll', blockScroll );\n\t\t\t\t}, 1000 );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !showAnonWarning ) {\n\t\t\tthis._loadContent();\n\t\t}\n\t},\n\n\t/**\n\t * Handles click on \"Edit without login\" in anonymous editing warning.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t */\n\tonClickAnonymous: function () {\n\t\tthis.$anonWarning.hide();\n\t\t// reenable \"Next\" button\n\t\tthis.$anonHiddenButtons.show();\n\t\tthis._loadContent();\n\t},\n\n\t/**\n\t * Prepares the preview interface and reveals the save screen of the overlay\n\t *\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonStageChanges: function () {\n\t\tvar self = this,\n\t\t\tparams = {\n\t\t\t\ttext: this.getContent()\n\t\t\t};\n\n\t\tthis.scrollTop = util.getDocument().find( 'body' ).scrollTop();\n\t\tthis.$content.hide();\n\t\tthis.showSpinner();\n\n\t\tif ( mw.config.get( 'wgIsMainPage' ) ) {\n\t\t\tparams.mainpage = 1; // Setting it to 0 will have the same effect\n\t\t}\n\n\t\tfunction hideSpinnerAndShowPreview() {\n\t\t\tself.hideSpinner();\n\t\t\tself.$preview.show();\n\t\t}\n\n\t\tthis.gateway.getPreview( params ).then( function ( result ) {\n\t\t\tvar parsedText = result.text,\n\t\t\t\tparsedSectionLine = result.line;\n\n\t\t\tself.sectionId = result.id;\n\t\t\t// On desktop edit summaries strip tags. Mimic this behavior on mobile devices\n\t\t\tself.sectionLine = self.parseHTML( '<div>' ).html( parsedSectionLine ).text();\n\t\t\tnew Section( {\n\t\t\t\tel: self.$preview,\n\t\t\t\ttext: parsedText\n\t\t\t} ).$el.find( 'a' ).on( 'click', false );\n\n\t\t\thideSpinnerAndShowPreview();\n\t\t}, function () {\n\t\t\tself.$preview.addClass( 'errorbox' ).text( mw.msg( 'mobile-frontend-editor-error-preview' ) );\n\n\t\t\thideSpinnerAndShowPreview();\n\t\t} );\n\n\t\tEditorOverlayBase.prototype.onStageChanges.apply( this, arguments );\n\t},\n\n\t/**\n\t * Hides the preview and reverts back to initial screen.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t */\n\t_hidePreview: function () {\n\t\tthis.gateway.abortPreview();\n\t\tthis.hideSpinner();\n\t\tthis.$preview.removeClass( 'errorbox' ).hide();\n\t\tthis.$content.show();\n\t\twindow.scrollTo( 0, this.scrollTop );\n\t\tthis.showHidden( '.initial-header' );\n\t},\n\n\t/**\n\t * Resize the editor textarea, maintaining scroll position in iOS\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\t_resizeEditor: function () {\n\t\tvar scrollTop, container, $scrollContainer;\n\n\t\tif ( !this.$scrollContainer ) {\n\t\t\tcontainer = OO.ui.Element.static\n\t\t\t\t.getClosestScrollableContainer( this.$content[ 0 ] );\n\t\t\t// The scroll container will be either within the view\n\t\t\t// or the document element itself.\n\t\t\t$scrollContainer = this.$el.find( container ).length ?\n\t\t\t\tthis.$el.find( container ) : util.getDocument();\n\t\t\tthis.$scrollContainer = $scrollContainer;\n\t\t\tthis.$content.css( 'padding-bottom', this.$scrollContainer.height() * 0.6 );\n\t\t} else {\n\t\t\t$scrollContainer = this.$scrollContainer;\n\t\t}\n\n\t\t// Only do this if scroll container exists\n\t\tif ( this.$content.prop( 'scrollHeight' ) && $scrollContainer.length ) {\n\t\t\tscrollTop = $scrollContainer.scrollTop();\n\t\t\tthis.$content\n\t\t\t\t.css( 'height', 'auto' )\n\t\t\t\t// can't reuse prop( 'scrollHeight' ) because we need the current value\n\t\t\t\t.css( 'height', ( this.$content.prop( 'scrollHeight' ) + 2 ) + 'px' );\n\t\t\t$scrollContainer.scrollTop( scrollTop );\n\t\t}\n\t},\n\n\t/**\n\t * Set content to the user input field.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @param {string} content The content to set.\n\t */\n\tsetContent: function ( content ) {\n\t\tthis.$content\n\t\t\t.show()\n\t\t\t.val( content );\n\t\tthis._resizeEditor();\n\t},\n\n\t/**\n\t * Returns the content of the user input field.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @return {string}\n\t */\n\tgetContent: function () {\n\t\treturn this.$content.val();\n\t},\n\n\t/**\n\t * Requests content from the API and reveals it in UI.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t */\n\t_loadContent: function () {\n\t\tvar self = this;\n\n\t\tthis.$content.hide();\n\n\t\tthis.getLoadingPromise()\n\t\t\t.then( function ( result ) {\n\t\t\t\tvar content = result.text;\n\n\t\t\t\tself.setContent( content );\n\n\t\t\t\tif ( self.gateway.fromModified ) {\n\t\t\t\t\t// Trigger intial EditorGateway#setContent and update save button\n\t\t\t\t\tself.onInputWikitextEditor();\n\t\t\t\t}\n\t\t\t} );\n\t},\n\n\t/**\n\t * Loads a {VisualEditorOverlay} and replaces the existing SourceEditorOverlay with it\n\t * based on the current option values.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t * @param {string} [wikitext] Wikitext to pass to VE\n\t */\n\t_switchToVisualEditor: function ( wikitext ) {\n\t\tvar self = this;\n\t\tthis.log( {\n\t\t\taction: 'abort',\n\t\t\ttype: 'switchnochange',\n\t\t\tmechanism: 'navigate'\n\t\t} );\n\t\tthis.logFeatureUse( {\n\t\t\tfeature: 'editor-switch',\n\t\t\taction: 'visual-mobile'\n\t\t} );\n\n\t\t// Save a user setting indicating that this user prefers using the VisualEditor\n\t\tsetPreferredEditor( 'VisualEditor' );\n\n\t\tthis.$el.addClass( 'switching' );\n\t\tthis.$el.find( '.overlay-header-container' ).hide();\n\t\tthis.$el.append( fakeToolbar() );\n\t\tthis.$content.prop( 'readonly', true );\n\n\t\tmw.loader.using( 'ext.visualEditor.targetLoader' ).then( function () {\n\t\t\tmw.libs.ve.targetLoader.addPlugin( 'mobile.editor.ve' );\n\t\t\treturn mw.libs.ve.targetLoader.loadModules( 'visual' );\n\t\t} ).then(\n\t\t\tfunction () {\n\t\t\t\tvar newOverlay, options = self.getOptionsForSwitch();\n\t\t\t\toptions.SourceEditorOverlay = SourceEditorOverlay;\n\t\t\t\tif ( wikitext ) {\n\t\t\t\t\toptions.dataPromise = mw.libs.ve.targetLoader.requestPageData( 'visual', mw.config.get( 'wgRelevantPageName' ), {\n\t\t\t\t\t\tsection: options.sectionId,\n\t\t\t\t\t\toldId: options.oldId || mw.config.get( 'wgRevisionId' ),\n\t\t\t\t\t\ttargetName: 'mobile',\n\t\t\t\t\t\tmodified: true,\n\t\t\t\t\t\twikitext: wikitext\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tdelete options.dataPromise;\n\t\t\t\t}\n\t\t\t\tnewOverlay = new VisualEditorOverlay( options );\n\t\t\t\tnewOverlay.getLoadingPromise().then( function () {\n\t\t\t\t\tself.switching = true;\n\t\t\t\t\tself.overlayManager.replaceCurrent( newOverlay );\n\t\t\t\t\tself.switching = false;\n\t\t\t\t} );\n\t\t\t},\n\t\t\tfunction () {\n\t\t\t\tself.$el.removeClass( 'switching' );\n\t\t\t\tself.$el.find( '.overlay-header-container' ).show();\n\t\t\t\tself.$el.find( '.ve-mobile-fakeToolbar-container' ).remove();\n\t\t\t\tself.$content.prop( 'readonly', false );\n\t\t\t\t// FIXME: We should show an error notification, but right now toast\n\t\t\t\t// notifications are not dismissible when shown within the editor.\n\t\t\t}\n\t\t);\n\t},\n\n\t/**\n\t * Executed when the editor clicks the save/publish button. Handles logging and submitting\n\t * the save action to the editor API.\n\t *\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonSaveBegin: function () {\n\t\tvar self = this,\n\t\t\toptions = {\n\t\t\t\tsummary: this.$el.find( '.summary' ).val()\n\t\t\t};\n\n\t\tif ( self.sectionLine !== '' ) {\n\t\t\toptions.summary = '/* ' + self.sectionLine + ' */' + options.summary;\n\t\t}\n\t\tEditorOverlayBase.prototype.onSaveBegin.apply( this, arguments );\n\t\tif ( this.confirmAborted ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( this.captchaId ) {\n\t\t\toptions.captchaId = this.captchaId;\n\t\t\toptions.captchaWord = this.$el.find( '.captcha-word' ).val();\n\t\t}\n\n\t\tthis.showHidden( '.saving-header' );\n\n\t\tthis.gateway.save( options )\n\t\t\t.then( function ( newRevId ) {\n\t\t\t\tvar title = self.options.title;\n\t\t\t\t// Special case behaviour of main page\n\t\t\t\tif ( mw.config.get( 'wgIsMainPage' ) ) {\n\t\t\t\t\t// FIXME: Blocked on T189173\n\t\t\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\t\t\twindow.location = mw.util.getUrl( title );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tself.onSaveComplete( newRevId );\n\t\t\t}, function ( data ) {\n\t\t\t\tself.onSaveFailure( data );\n\t\t\t} );\n\t},\n\n\t/**\n\t * Executed when page save fails. Handles error display and bookkeeping,\n\t * passes logging duties to the parent.\n\t *\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonSaveFailure: function ( data ) {\n\t\tvar msg, noRetry;\n\n\t\tif ( data.edit && data.edit.captcha ) {\n\t\t\tthis.captchaId = data.edit.captcha.id;\n\t\t\tthis.handleCaptcha( data.edit.captcha );\n\t\t} else {\n\t\t\tmsg = saveFailureMessage( data );\n\t\t\tthis.reportError( msg );\n\t\t\tthis.showHidden( '.save-header, .save-panel' );\n\n\t\t\t// Some errors may be temporary, but for others we know for sure that the save will\n\t\t\t// never succeed, so don't confuse the user by giving them the option to retry.\n\t\t\tnoRetry = data.errors && data.errors.some( function ( error ) {\n\t\t\t\treturn error.code === 'abusefilter-disallowed';\n\t\t\t} );\n\n\t\t\tif ( noRetry ) {\n\t\t\t\t// disable continue and save buttons, reenabled when user changes content\n\t\t\t\tthis.$el.find( '.continue, .submit' ).prop( 'disabled', true );\n\t\t\t}\n\t\t}\n\n\t\tEditorOverlayBase.prototype.onSaveFailure.apply( this, arguments );\n\t},\n\n\t/**\n\t * Checks whether the existing content has changed.\n\t *\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @return {boolean}\n\t */\n\thasChanged: function () {\n\t\treturn this.gateway.hasChanged;\n\t}\n} );\n\nmodule.exports = SourceEditorOverlay;\n","/* global ve, $ */\nvar EditorOverlayBase = require( './EditorOverlayBase' ),\n\tEditorGateway = require( './EditorGateway' ),\n\tfakeToolbar = require( '../mobile.init/fakeToolbar' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\trouter = mw.loader.require( 'mediawiki.router' ),\n\tidentifyLeadParagraph = require( './identifyLeadParagraph' ),\n\tsetPreferredEditor = require( './setPreferredEditor' ),\n\tutil = require( '../mobile.startup/util' );\n\n/**\n * Overlay for VisualEditor view\n *\n * @class VisualEditorOverlay\n * @extends EditorOverlayBase\n *\n * @param {Object} options Configuration options\n * @param {SourceEditorOverlay} options.SourceEditorOverlay Class to use for standard\n *  Wikitext editor. It must be passed in explicitly to avoid a cyclic\n *  dependency between VisualEditorOverlay and SourceEditorOverlay\n */\nfunction VisualEditorOverlay( options ) {\n\tvar surfaceReady = util.Deferred();\n\n\tEditorOverlayBase.call( this,\n\t\tutil.extend( {\n\t\t\teditSwitcher: false,\n\t\t\thasToolbar: true,\n\t\t\tonBeforeExit: this.onBeforeExit.bind( this ),\n\t\t\tisBorderBox: false,\n\t\t\tclassName: 'overlay editor-overlay editor-overlay-ve'\n\t\t}, options )\n\t);\n\tthis.SourceEditorOverlay = options.SourceEditorOverlay;\n\tthis.isNewPage = options.isNewPage;\n\tthis.fromModified = options.dataPromise && options.switched;\n\n\t// Gateway present for a few utility purposes; the VE articletarget\n\t// handles the actual API calls separately\n\tthis.gateway = new EditorGateway( {\n\t\tapi: options.api,\n\t\ttitle: options.title,\n\t\tsectionId: options.sectionId,\n\t\toldId: options.oldId,\n\t\tisNewPage: options.isNewPage\n\t} );\n\n\tthis.origDataPromise = this.options.dataPromise || mw.libs.ve.targetLoader.requestPageData(\n\t\t'visual',\n\t\toptions.titleObj.getPrefixedDb(),\n\t\t{\n\t\t\tsessionStore: true,\n\t\t\tsection: options.sectionId || null,\n\t\t\toldId: options.oldId || undefined,\n\t\t\ttargetName: ve.init.mw.MobileArticleTarget.static.trackingName\n\t\t}\n\t);\n\n\tthis.target = ve.init.mw.targetFactory.create( 'article', this, {\n\t\t$element: this.$el,\n\t\t// string or null, but not undefined\n\t\tsection: this.options.sectionId || null\n\t} );\n\tthis.target.once( 'surfaceReady', function () {\n\t\tsurfaceReady.resolve();\n\n\t\tthis.target.getSurface().getModel().getDocument().once( 'transact', function () {\n\t\t\tthis.log( { action: 'firstChange' } );\n\t\t}.bind( this ) );\n\t}.bind( this ) );\n\n\tthis.target.load( this.origDataPromise );\n\n\t// Overlay is only shown after this is resolved. It must be resolved\n\t// with the API response regardless of what we are waiting for.\n\tthis.dataPromise = this.origDataPromise.then( function ( data ) {\n\t\treturn surfaceReady.then( function () {\n\t\t\treturn data && data.visualeditor;\n\t\t} );\n\t} );\n}\n\nmfExtend( VisualEditorOverlay, EditorOverlayBase, {\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, EditorOverlayBase.prototype.templatePartials, {\n\t\teditHeader: util.template( `\n<div class=\"overlay-header header initial-header hideable hidden\">\n\t<div class=\"toolbar\"></div>\n</div>\n\t\t` ),\n\t\tcontent: util.template( `\n<div class=\"surface\" lang=\"{{contentLang}}\" dir=\"{{contentDir}}\">\n</div>\n\t\t` )\n\t} ),\n\t/**\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\teditor: 'visualeditor',\n\t/**\n\t * Destroy the existing VisualEditor target.\n\t *\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tdestroyTarget: function () {\n\t\tif ( this.target ) {\n\t\t\tthis.target.destroy();\n\t\t\tthis.target = null;\n\t\t}\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\tvar\n\t\t\toptions = this.options,\n\t\t\tshowAnonWarning = options.isAnon && !options.switched;\n\n\t\tEditorOverlayBase.prototype.show.apply( this, arguments );\n\n\t\tthis.emit( 'editor-loaded' );\n\t\t// log edit attempt\n\t\tthis.log( { action: 'ready' } );\n\t\tthis.log( { action: 'loaded' } );\n\n\t\tif ( !showAnonWarning ) {\n\t\t\tthis.redoTargetInit();\n\t\t} else {\n\t\t\tthis.$anonWarning = this.createAnonWarning( this.options );\n\t\t\tthis.$el.append( this.$anonWarning );\n\t\t\tthis.$el.find( '.overlay-content' ).hide();\n\t\t}\n\t},\n\t/**\n\t * Re-do some initialization steps that might have happened while the overlay\n\t * was hidden, but only work correctly after it is shown.\n\t */\n\tredoTargetInit: function () {\n\t\tthis.target.adjustContentPadding();\n\t\tthis.target.restoreEditSection();\n\t\tthis.scrollToLeadParagraph();\n\t},\n\t/**\n\t * Scroll so that the lead paragraph in edit mode shows at the same place on the screen\n\t * as the lead paragraph in read mode.\n\t *\n\t * Their normal position is different because of (most importantly) the lead paragraph\n\t * transformation to move it before the infobox, and also invisible templates and slugs\n\t * caused by the presence of hatnote templates (both only shown in edit mode).\n\t */\n\tscrollToLeadParagraph: function () {\n\t\tvar editLead, editLeadView, readLead, offset, initialCursorOffset,\n\t\t\tcurrentPageHTMLParser = this.options.currentPageHTMLParser,\n\t\t\tfakeScroll = this.options.fakeScroll,\n\t\t\t$window = $( window ),\n\t\t\tsection = this.target.section,\n\t\t\tsurface = this.target.getSurface(),\n\t\t\tmode = surface.getMode();\n\n\t\tif ( ( section === null || section === '0' ) && mode === 'visual' ) {\n\t\t\teditLead = identifyLeadParagraph( surface.getView().$attachedRootNode );\n\t\t\tif ( currentPageHTMLParser.getLeadSectionElement() ) {\n\t\t\t\treadLead = identifyLeadParagraph( currentPageHTMLParser.getLeadSectionElement() );\n\t\t\t}\n\n\t\t\tif ( editLead && readLead ) {\n\t\t\t\toffset = $( editLead ).offset().top - ( $( readLead ).offset().top - fakeScroll );\n\t\t\t\t// Set a model range to match\n\t\t\t\teditLeadView = $( editLead ).data( 'view' );\n\t\t\t\tif ( editLeadView ) {\n\t\t\t\t\tsurface.getModel().setLinearSelection(\n\t\t\t\t\t\tnew ve.Range( editLeadView.getModel().getRange().start )\n\t\t\t\t\t);\n\t\t\t\t\tinitialCursorOffset =\n\t\t\t\t\t\tsurface.getView().getSelection().getSelectionBoundingRect().top;\n\t\t\t\t\t// Ensure the surface is tall enough to scroll the cursor into view\n\t\t\t\t\tsurface.$element.css( 'min-height', $window.height() + initialCursorOffset - surface.padding.top );\n\t\t\t\t}\n\t\t\t\t$window.scrollTop( offset );\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonBeforeExit: function ( exit ) {\n\t\tvar overlay = this;\n\t\tEditorOverlayBase.prototype.onBeforeExit.call( this, function () {\n\t\t\t// If this function is called, the parent method has decided that we should exit\n\t\t\texit();\n\t\t\t// VE-specific cleanup\n\t\t\toverlay.destroyTarget();\n\t\t} );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonClickBack: function () {\n\t\tEditorOverlayBase.prototype.onClickBack.apply( this, arguments );\n\t\tthis.switchToEditor();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonClickAnonymous: function () {\n\t\tvar self = this;\n\t\tthis.$anonWarning.hide();\n\t\tself.$el.find( '.overlay-content' ).show();\n\t\tthis.redoTargetInit();\n\t},\n\t/**\n\t * Reveal the editing interface.\n\t *\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tswitchToEditor: function () {\n\t\tthis.showHidden( '.initial-header' );\n\t},\n\t/**\n\t * Loads an {SourceEditorOverlay} and replaces the existing {VisualEditorOverlay}\n\t *\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t * @param {jQuery.Promise} [dataPromise] Optional promise for loading content\n\t */\n\tswitchToSourceEditor: function ( dataPromise ) {\n\t\tvar self = this,\n\t\t\tSourceEditorOverlay = this.SourceEditorOverlay,\n\t\t\tnewOverlay,\n\t\t\toptions = this.getOptionsForSwitch();\n\t\tthis.log( {\n\t\t\taction: 'abort',\n\t\t\ttype: 'switchnochange',\n\t\t\tmechanism: 'navigate'\n\t\t} );\n\t\tthis.logFeatureUse( {\n\t\t\tfeature: 'editor-switch',\n\t\t\taction: 'source-mobile'\n\t\t} );\n\n\t\t// Save a user setting indicating that this user prefers using the SourceEditor\n\t\tsetPreferredEditor( 'SourceEditor' );\n\n\t\tthis.$el.addClass( 'switching' );\n\t\tthis.$el.find( '.overlay-header-container' ).hide();\n\t\tthis.$el.append( fakeToolbar() );\n\t\tthis.target.getSurface().setReadOnly( true );\n\n\t\tif ( dataPromise ) {\n\t\t\t// If switching with edits we can't stay in section editing, as a VE edit\n\t\t\t// can always affect the whole document (e.g. references)\n\t\t\toptions.sectionId = null;\n\t\t\trouter.navigateTo( document.title, {\n\t\t\t\tpath: '#/editor/all',\n\t\t\t\tuseReplaceState: true\n\t\t\t} );\n\t\t}\n\t\tnewOverlay = new SourceEditorOverlay( options, dataPromise );\n\t\tnewOverlay.getLoadingPromise().then( function () {\n\t\t\tself.switching = true;\n\t\t\tself.overlayManager.replaceCurrent( newOverlay );\n\t\t\tself.switching = false;\n\t\t} );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonSaveComplete: function () {\n\t\tEditorOverlayBase.prototype.onSaveComplete.apply( this, arguments );\n\t\tthis.destroyTarget();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\thasChanged: function () {\n\t\tif ( this.saved ) {\n\t\t\t// If we just saved, there's not really any changes, and the\n\t\t\t// target is going to be destroyed in one tick\n\t\t\treturn false;\n\t\t}\n\t\treturn this.fromModified || (\n\t\t\tthis.target &&\n\t\t\tthis.target.getSurface() &&\n\t\t\tthis.target.getSurface().getModel().hasBeenModified()\n\t\t);\n\t}\n} );\n\nmodule.exports = VisualEditorOverlay;\n","const\n\tDrawer = require( '../mobile.startup/Drawer' ),\n\tBlockMessageDetails = require( './BlockMessageDetails' );\n\n/**\n * @typedef {Object} BlockMessageOptions\n * @property {number} blockId representing the block\n * @property {boolean} partial is this a partial block?\n * @property {Object} creator\n * @property {string} creator.name of the blocker\n * @property {string} creator.url associated with the block\n * @property {string} reason for block\n * @property {string} [duration] of block e.g. \"1 week\"\n * @property {string} [expiry] of block, wrapped in parentheses\n *  e.g. \"(1st September 2019)\"\n */\n\n/**\n * This creates the drawer at the bottom of the screen that appears when a\n * blocked user tries to edit.\n *\n * @param {BlockMessageOptions} props\n * @return {Drawer}\n */\nmodule.exports = function blockMessageDrawer( props ) {\n\tconst blockDrawer = new Drawer( {\n\t\tclassName: 'drawer block-message',\n\t\tonBeforeHide: function ( drawer ) {\n\t\t\tdrawer.$el.remove();\n\t\t},\n\t\tonShow: function () {\n\t\t\tconst $drawer = blockDrawer.$el.find( '.drawer.block-message' ),\n\t\t\t\tdrawerTop = $drawer.offset().top - 100,\n\t\t\t\tcreatorTop = blockDrawer.$el.find( '.block-message-creator' ).offset().top - 100,\n\t\t\t\tbuttonsTop = blockDrawer.$el.find( '.block-message-buttons' ).offset().top - 100,\n\t\t\t\t$seeMore = blockDrawer.$el.find( '.block-message-see-more' ),\n\t\t\t\twiki = mw.config.get( 'wgDBname' );\n\n\t\t\t$drawer.css( 'top', drawerTop + ( buttonsTop - creatorTop ) );\n\t\t\t$seeMore.on(\n\t\t\t\t'click',\n\t\t\t\tfunction () {\n\t\t\t\t\tconst $container = blockDrawer.$el.find( '.block-message-container' );\n\t\t\t\t\t$drawer.css( 'top', 0 );\n\t\t\t\t\t$container.css( 'overflow-y', 'auto' );\n\t\t\t\t\t$container.css( 'height', buttonsTop - $container.offset().top );\n\t\t\t\t\t$seeMore.hide();\n\n\t\t\t\t\tif ( mw.config.get( 'wgMFTrackBlockNotices' ) ) {\n\t\t\t\t\t\tmw.track( 'counter.MediaWiki.BlockNotices.' + wiki + '.MobileFrontend.reasonShown', 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif ( mw.config.get( 'wgMFTrackBlockNotices' ) ) {\n\t\t\t\tmw.track( 'counter.MediaWiki.BlockNotices.' + wiki + '.MobileFrontend.shown', 1 );\n\t\t\t}\n\t\t},\n\t\tchildren: [\n\t\t\t( new BlockMessageDetails( props ) ).$el\n\t\t]\n\t} );\n\treturn blockDrawer;\n};\n","/* global $ */\n/**\n * Find first paragraph that has text content, i.e. paragraphs that are not empty.\n * Keep in sync with MoveLeadParagraphTransform::identifyLeadParagraph().\n *\n * @param {jQuery} $body Where to search for paragraphs\n * @return {Node|null} The lead paragraph\n */\nmodule.exports = function identifyLeadParagraph( $body ) {\n\tvar $paragraphs, i, node;\n\n\t// Keep in sync with MoveLeadParagraphTransform::isNotEmptyNode()\n\tfunction isNotEmptyNode( node ) {\n\t\t// Ignore VE whitespace characters\n\t\treturn !/^[\\s↵➞]*$/.test( node.textContent );\n\t}\n\n\t// Keep in sync with MoveLeadParagraphTransform::isNonLeadParagraph()\n\tfunction isNonLeadParagraph( node ) {\n\t\tnode = node.cloneNode( true );\n\t\t// Ignore non-content nodes, TemplateStyles and coordinates\n\t\t$( node ).find( '.ve-ce-branchNode-inlineSlug, .ve-ce-focusableNode-invisible, style, span#coordinates' ).remove();\n\t\tif ( isNotEmptyNode( node ) ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t$paragraphs = $body.children( 'p' );\n\tfor ( i = 0; i < $paragraphs.length; i++ ) {\n\t\tnode = $paragraphs[ i ];\n\t\tif ( !isNonLeadParagraph( node ) ) {\n\t\t\treturn node;\n\t\t}\n\t}\n\treturn null;\n};\n","var m = require( './../mobile.startup/moduleLoaderSingleton' ),\n\tSourceEditorOverlay = require( './SourceEditorOverlay' ),\n\tVisualEditorOverlay = require( './VisualEditorOverlay' );\n\n// Exposed for MobileFrontend mobile.init usage.\nm.define( 'mobile.editor.overlay/SourceEditorOverlay', SourceEditorOverlay );\nm.define( 'mobile.editor.overlay/VisualEditorOverlay', VisualEditorOverlay );\n","var util = require( '../mobile.startup/util' );\n\n/**\n * @param {string} blockinfo\n * @return {Object}\n */\nmodule.exports = function parseBlockInfo( blockinfo ) {\n\tconst blockInfo = {\n\t\t\tpartial: blockinfo.blockpartial || false,\n\t\t\tnoCreateAccount: blockinfo.blocknocreate || false,\n\t\t\tanonOnly: blockinfo.blockanononly === undefined ? true : blockinfo.blockanononly,\n\t\t\tcreator: {\n\t\t\t\tname: blockinfo.blockedby,\n\t\t\t\turl: null\n\t\t\t},\n\t\t\texpiry: null,\n\t\t\tduration: null,\n\t\t\treason: '',\n\t\t\tblockId: blockinfo.blockid\n\t\t},\n\t\texpiry = blockinfo.blockexpiry,\n\t\treason = blockinfo.blockreason,\n\t\tmoment = window.moment;\n\n\t// Workaround to parse a message parameter for mw.message, see T96885\n\tfunction jqueryMsgParse( wikitext ) {\n\t\t// eslint-disable-next-line new-cap\n\t\tconst parser = new mw.jqueryMsg.parser();\n\t\ttry {\n\t\t\tconst ast = parser.wikiTextToAst( wikitext );\n\t\t\treturn parser.emitter.emit( ast ).html();\n\t\t} catch ( e ) {\n\t\t\t// Ignore error as it's probably the parser error. Usually this is because we\n\t\t\t// can't parse templates.\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// URL only useful if block creator is a local user\n\tif ( blockinfo.blockedbyid === 0 ) {\n\t\tblockInfo.creator.url = '';\n\t} else {\n\t\tblockInfo.creator.url = mw.Title.makeTitle(\n\t\t\tmw.config.get( 'wgNamespaceIds' ).user,\n\t\t\tblockInfo.creator.name\n\t\t).getUrl();\n\t}\n\n\tif ( [ 'infinite', 'indefinite', 'infinity', 'never' ].indexOf( expiry ) === -1 && moment ) {\n\t\tif ( moment( expiry ).diff( moment(), 'seconds' ) <= 86400 ) {\n\t\t\t// For 24 hour blocks/or remaining expiry time and less, show both date and time\n\t\t\tblockInfo.expiry = mw.message( 'parentheses', moment( expiry ).format( 'LL, LT' ) ).escaped();\n\t\t} else {\n\t\t\tblockInfo.expiry = mw.message( 'parentheses', moment( expiry ).format( 'LL' ) ).escaped();\n\t\t}\n\t\tblockInfo.duration = moment().to( expiry, true );\n\t}\n\n\tif ( reason ) {\n\t\tblockInfo.reason = jqueryMsgParse( reason ) || mw.html.escape( reason );\n\t\tblockInfo.parsedReason = ( new mw.Api() ).get( {\n\t\t\taction: 'parse',\n\t\t\tformatversion: 2,\n\t\t\ttext: reason,\n\t\t\tcontentmodel: 'wikitext'\n\t\t} ).then( function ( result ) {\n\t\t\treturn result.parse.text;\n\t\t} ).catch( function () {\n\t\t\treturn jqueryMsgParse( reason ) || mw.html.escape( reason );\n\t\t} );\n\t} else {\n\t\tblockInfo.reason = mw.message( 'mobile-frontend-editor-generic-block-reason' ).escaped();\n\t\tblockInfo.parsedReason = util.Deferred().resolve( blockInfo.reason ).promise();\n\t}\n\n\treturn blockInfo;\n};\n","/**\n * Build a save failure message from the API response\n *\n * @param {Object} data API response\n * @return {string} message HTML text describing the failure for display to the user\n */\nmodule.exports = function saveFailureMessage( data ) {\n\t// In most cases, return the error message from the API directly.\n\t// Handle a few exceptions where it is unsuitable for end-users\n\t// (some error messages are seemingly intended for tool developers).\n\n\tvar code = data && data.errors && data.errors[0] && data.errors[0].code;\n\n\tif ( code === 'editconflict' ) {\n\t\treturn mw.msg( 'mobile-frontend-editor-error-conflict' );\n\t}\n\n\tif ( code === 'readonly' ) {\n\t\treturn data.errors[0].html + '<br>' + data.errors[0].data.readonlyreason;\n\t}\n\n\tif ( data.errors && data.errors[0] ) {\n\t\treturn data.errors[0].html;\n\t}\n\n\t// This probably indicates a connection problem and a \"fake\" response\n\t// generated by mediawiki.Api. TODO Give a better error message here.\n\treturn '';\n};\n","/**\n * Store the user's preferred editor\n *\n * @param {string} editor 'VisualEditor' or 'SourceEditor'\n */\nmodule.exports = function setPreferredEditor( editor ) {\n\tif ( !mw.user.isAnon() ) {\n\t\tnew mw.Api().saveOption( 'mobile-editor', editor ).then( function () {\n\t\t\tmw.user.options.set( 'mobile-editor', editor );\n\t\t} );\n\t} else {\n\t\tmw.storage.set( 'preferredEditor', editor );\n\t}\n};\n"],"sourceRoot":""}