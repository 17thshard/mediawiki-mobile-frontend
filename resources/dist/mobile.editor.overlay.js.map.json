{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.editor.overlay/AbuseFilterOverlay.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/AbuseFilterPanel.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/BlockMessage.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/EditorGateway.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/SourceEditorOverlay.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/VisualEditorOverlay.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/mobile.editor.overlay.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/schemaEditAttemptStep.js"],"names":["Button","require","util","mfExtend","Overlay","AbuseFilterOverlay","props","call","this","extend","className","defaults","prototype","confirmButton","additionalClassNames","progressive","templatePartials","content","template","postRender","apply","$el","find","attr","append","options","module","exports","View","AbuseFilterPanel","isDisallowed","overlayManager","readMoreMsg","mw","msg","show","type","message","add","text","removeClass","hide","addClass","Drawer","Icon","BlockMessage","arguments","stopHandIcon","name","userIcon","tagName","okButton","label","createDetailsAnchorHref","getUrl","wpTarget","blockId","createDetailsAnchorLabel","createTitle","partial","reasonHeader","creatorHeader","user","get","expiryHeader","prepend","parseSaveError","actionParams","EditorGateway","api","title","sectionId","oldId","isNewPage","undefined","fromModified","hasChanged","getBlockInfo","pageObj","blockedError","actions","edit","Array","isArray","some","error","indexOf","code","data","blockinfo","loader","load","getContent","self","resolve","Deferred","prop","rvprop","titles","intestactions","intestactionsdetail","rvstartid","isNumeric","rvsection","then","resp","revision","reject","query","pages","missing","revisions","timestamp","originalContent","setContent","setPrependText","prependtext","save","result","apiOptions","action","summary","captchaid","captchaId","captchaword","captchaWord","basetimestamp","starttimestamp","section","postWithToken","newrevid","saveContent","abortPreview","_pending","abort","getPreview","request","sectionLine","sectionpreview","pst","mobileformat","post","parse","sections","anchor","line","id","promise","EditorOverlayBase","Section","saveFailureMessage","VisualEditorOverlay","SourceEditorOverlay","dataPromise","isFirefox","test","window","navigator","userAgent","gateway","readOnly","isVisualEditorEnabled","editSwitcher","editingMsg","previewingMsg","events","input .wikitext-editor","editor","ns","config","namespaces","onInputWikitextEditor","val","onClickBack","_hidePreview","showAnonWarning","isAnon","switched","log","using","switchToolbar","windowManager","switchWindow","toolFactory","OO","ui","ToolFactory","toolGroupFactory","ToolGroupFactory","register","libs","ve","MWEditModeVisualTool","MWEditModeSourceTool","Toolbar","classes","on","mode","canSwitch","fullRestbaseUrl","allowLossySwitching","_switchToVisualEditor","WindowManager","SwitchConfirmDialog","$element","appendTo","document","body","addWindows","openWindow","closed","destroy","setup","icon","include","html","emit","$preview","$content","$anonWarning","createAnonWarning","$anonHiddenButtons","hideSpinner","abuseFilterPanel","_resizeEditor","bind","_loadContent","onClickAnonymous","showSpinner","onStageChanges","params","hideSpinnerAndShowPreview","scrollTop","getDocument","mainpage","parsedText","parsedSectionLine","parseHTML","el","scrollTo","showHidden","container","$scrollContainer","Element","static","getClosestScrollableContainer","length","css","height","block","parseBlockInfo","toggle","reportError","wikitext","mechanism","logFeatureUse","feature","storage","set","targetLoader","addPlugin","loadModules","getOptionsForSwitch","requestPageData","targetName","modified","switching","replaceCurrent","_showAbuseFilter","onSaveBegin","confirmAborted","newRevId","location","onSaveComplete","onSaveFailure","heading","details","handleCaptcha","router","hasToolbar","onBeforeExit","isBorderBox","editHeader","destroyTarget","target","overlay","init","targetFactory","create","once","checkForBlocks","exit","switchToEditor","visualeditor","switchToSourceEditor","navigateTo","path","useReplaceState","saved","getSurface","getModel","hasBeenModified","m","schemaEditAttemptStep","define","trackdebug","getParamValue","exists","Schema","eventLog","sampleRate","actionPrefixMap","saveIntent","saveAttempt","saveSuccess","saveFailure","timing","page_id","revision_id","page_title","page_ns","user_id","getId","user_class","user_editcount","mw_version","platform","integration","page_token","getPageviewToken","session_token","sessionId","version","anonymous_user_token","bucket","trackSubscribe","topic","timeStamp","actionPrefix","duration","Math","round","event","ready","warn","abort_type","computeDuration","is_oversample","inSample","console","editor_interface"],"mappings":"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","file":"mobile.editor.overlay.js","sourcesContent":["var Button = require( '../mobile.startup/Button' ),\n\tutil = require( '../mobile.startup/util' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\tOverlay = require( '../mobile.startup/Overlay' );\n\n/**\n * Overlay that shows a message about abuse.\n * This overlay is rendered when the error code from the API\n * is related to the abusefilter extension.\n * @class AbuseFilterOverlay\n * @extends Overlay\n * @param {Object} props\n */\nfunction AbuseFilterOverlay( props ) {\n\tOverlay.call( this,\n\t\tutil.extend( {\n\t\t\tclassName: 'overlay abusefilter-overlay'\n\t\t}, props )\n\t);\n}\n\nmfExtend( AbuseFilterOverlay, Overlay, {\n\t/**\n\t * @memberof AbuseFilterOverlay\n\t * @instance\n\t * @mixes Overlay#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {Object} defaults.confirmButton options for a confirm Button\n\t */\n\tdefaults: util.extend( {}, Overlay.prototype.defaults, {\n\t\tconfirmButton: new Button( {\n\t\t\tadditionalClassNames: 'cancel',\n\t\t\tprogressive: true\n\t\t} )\n\t} ),\n\t/**\n\t * @memberof AbuseFilterOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, Overlay.prototype.templatePartials, {\n\t\tcontent: util.template( `\n<div class=\"content\">\n\t{{{message}}}\n</div>\n\t\t` )\n\t} ),\n\t/**\n\t * @inheritdoc\n\t * @memberof AbuseFilterOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tOverlay.prototype.postRender.apply( this );\n\t\t// make links open in separate tabs\n\t\tthis.$el.find( 'a' ).attr( 'target', '_blank' );\n\t\tthis.$el.find( '.content' ).append( this.options.confirmButton.$el );\n\t}\n} );\n\nmodule.exports = AbuseFilterOverlay;\n","var util = require( '../mobile.startup/util' ),\n\tView = require( '../mobile.startup/View' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\tAbuseFilterOverlay = require( './AbuseFilterOverlay' );\n\n/**\n * Panel that shows an error message related to the abusefilter extension.\n * @class AbuseFilterPanel\n * @extends View\n * @uses AbuseFilterOverlay\n *\n * @param {Object} options Configuration options\n * FIXME: should extend Panel not View. Or the name should be changed to something meaningful.\n */\nfunction AbuseFilterPanel( options ) {\n\tthis.isDisallowed = false;\n\tthis.overlayManager = options.overlayManager;\n\tView.call( this,\n\t\tutil.extend( {\n\t\t\tclassName: 'panel hidden'\n\t\t}, options )\n\t);\n}\n\nmfExtend( AbuseFilterPanel, View, {\n\t/**\n\t * @memberof AbuseFilterPanel\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.readMoreMsg A caption for the button\n\t * allowing the user to read more about the problems with their edit.\n\t * @property {OverlayManager} defaults.overlayManager instance\n\t */\n\tdefaults: {\n\t\treadMoreMsg: mw.msg( 'mobile-frontend-editor-abusefilter-read-more' )\n\t},\n\t/**\n\t * @memberof AbuseFilterPanel\n\t * @instance\n\t */\n\ttemplate: util.template( `\n<div class=\"message\">\n\t<p></p><a href=\"#/abusefilter\" class=\"readmore\">{{readMoreMsg}}</a>\n</div>\n\t` ),\n\t/**\n\t * Show the panel. Create a route to show AbuseFilterOverlay with message.\n\t * @memberof AbuseFilterPanel\n\t * @instance\n\t * @param {string} type The type of alert, e.g. 'warning' or 'disallow'\n\t * @param {string} message Message to show in the AbuseFilter overlay\n\t */\n\tshow: function ( type, message ) {\n\t\tvar msg;\n\n\t\t// OverlayManager will replace previous instance of the route if present\n\t\tthis.overlayManager.add( /^\\/abusefilter$/, function () {\n\t\t\treturn new AbuseFilterOverlay( {\n\t\t\t\tmessage: message\n\t\t\t} );\n\t\t} );\n\n\t\tif ( type === 'warning' ) {\n\t\t\tmsg = mw.msg( 'mobile-frontend-editor-abusefilter-warning' );\n\t\t} else if ( type === 'disallow' ) {\n\t\t\tmsg = mw.msg( 'mobile-frontend-editor-abusefilter-disallow' );\n\t\t\tthis.isDisallowed = true;\n\t\t}\n\n\t\tthis.$el.find( '.message p' ).text( msg );\n\t\tthis.$el.removeClass( 'hidden' );\n\t},\n\n\t/**\n\t * Hide the panel.\n\t * @memberof AbuseFilterPanel\n\t * @instance\n\t */\n\thide: function () {\n\t\tthis.$el.addClass( 'hidden' );\n\t}\n} );\n\nmodule.exports = AbuseFilterPanel;\n","'use strict';\nvar Drawer = require( '../mobile.startup/Drawer' ),\n\tButton = require( '../mobile.startup/Button' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\tIcon = require( '../mobile.startup/Icon' ),\n\tutil = require( '../mobile.startup/util' );\n\n/**\n * This creates the drawer at the bottom of the screen that appears when a\n * blocked user tries to edit.\n * @class BlockReason\n * @extends Drawer\n */\nfunction BlockMessage() {\n\tDrawer.apply( this, arguments );\n}\n\nmfExtend( BlockMessage, Drawer, {\n\t/**\n\t * @memberof BlockMessage\n\t * @instance\n\t */\n\tdefaults: util.extend( {}, Drawer.prototype.defaults, {\n\t\tstopHandIcon: new Icon( {\n\t\t\tname: 'stop-hand'\n\t\t} ),\n\t\tuserIcon: new Icon( {\n\t\t\ttagName: 'span',\n\t\t\tname: 'profile'\n\t\t} ),\n\t\tokButton: new Button( {\n\t\t\tlabel: mw.msg( 'ok' ),\n\t\t\ttagName: 'button',\n\t\t\tprogressive: true,\n\t\t\tadditionalClassNames: 'cancel'\n\t\t} ),\n\t\tcreateDetailsAnchorHref: function () {\n\t\t\treturn mw.util.getUrl( 'Special:BlockList', { wpTarget: '#' + this.blockId } );\n\t\t},\n\t\tcreateDetailsAnchorLabel: function () {\n\t\t\treturn mw.msg( 'mobile-frontend-editor-blocked-drawer-help' );\n\t\t},\n\t\tcreateTitle: function () {\n\t\t\treturn this.partial ? mw.msg( 'mobile-frontend-editor-blocked-drawer-title-partial' ) : mw.msg( 'mobile-frontend-editor-blocked-drawer-title' );\n\t\t},\n\t\treasonHeader: mw.msg( 'mobile-frontend-editor-blocked-drawer-reason-header' ),\n\t\tcreatorHeader: function () {\n\t\t\t// The gender is the subject (the blockee) not the object (the blocker).\n\t\t\treturn mw.msg( 'mobile-frontend-editor-blocked-drawer-creator-header',\n\t\t\t\tmw.user.options.get( 'gender' ) );\n\t\t},\n\t\texpiryHeader: mw.msg( 'mobile-frontend-editor-blocked-drawer-expiry-header' )\n\t} ),\n\t/**\n\t * @inheritdoc\n\t */\n\tpostRender: function () {\n\t\tthis.$el.find( '.block-message-creator a' ).prepend(\n\t\t\tthis.options.userIcon.$el\n\t\t);\n\t\tthis.$el.find( '.block-message-icon' ).append(\n\t\t\tthis.options.stopHandIcon.$el\n\t\t);\n\t\tthis.$el.find( '.block-message-buttons' ).append(\n\t\t\tthis.options.okButton.$el\n\t\t);\n\t},\n\t/**\n\t * @memberof BlockMessage\n\t * @instance\n\t */\n\ttemplate: util.template( `\n{{#collapseIcon}}{{>icon}}{{/collapseIcon}}\n<div class=\"block-message\">\n  <div class=\"block-message-icon\"></div>\n  <div class=\"block-message-info\">\n    <div class=\"block-message-item block-message-title\">\n      <h5>{{ createTitle }}</h5>\n    </div>\n    <div class=\"block-message-data\">\n      {{#reason}}\n        <div class=\"block-message-item\">\n          <h6>{{ reasonHeader }}</h6>\n          <div><strong>{{{ reason }}}</strong></div>\n        </div>\n      {{/reason}}\n      <div class=\"block-message-item block-message-creator\">\n        <h6>{{ creatorHeader }}</h6>\n        <div><strong><a href=\"{{ creator.url }}\">{{ creator.name }}</a></strong></div>\n      </div>\n      {{#expiry}}\n        <div class=\"block-message-item\">\n          <h6>{{ expiryHeader }}</h6>\n          <div><strong>{{#duration}}{{ duration }} / {{/duration}}{{ expiry }}</strong></div>\n        </div>\n      {{/expiry}}\n    </div>\n    <div class=\"block-message-item block-message-buttons\">\n      <a href=\"{{ createDetailsAnchorHref }}\">{{ createDetailsAnchorLabel }}</a>\n    </div>\n  </div>\n</div>\n\t` )\n} );\n\nmodule.exports = BlockMessage;\n","var util = require( '../mobile.startup/util' ),\n\tparseSaveError = require( './parseSaveError' ),\n\tactionParams = require( '../mobile.startup/actionParams' );\n\n/**\n * API that helps save and retrieve page content\n * @class EditorGateway\n *\n * @param {Object} options Configuration options\n * @param {mw.Api} options.api an Api to use.\n * @param {string} options.title the title to edit\n * @param {number} options.sectionId the id of the section to operate edits on.\n * @param {number} [options.oldId] revision to operate on. If absent defaults to latest.\n * @param {boolean} [options.isNewPage] whether the page being created is new\n * @param {boolean} [options.fromModified] whether the page was loaded in a modified state\n */\nfunction EditorGateway( options ) {\n\tthis.api = options.api;\n\tthis.title = options.title;\n\tthis.sectionId = options.sectionId;\n\tthis.oldId = options.oldId;\n\t// return an empty section for new pages\n\tthis.content = options.isNewPage ? '' : undefined;\n\tthis.fromModified = options.fromModified;\n\tthis.hasChanged = options.fromModified;\n}\n\nEditorGateway.prototype = {\n\n\t/**\n\t * Get the block (if there is one) from the result.\n\t * @memberof EditorGateway\n\t * @param {Object} pageObj Page object\n\t * @return {Object|null}\n\t */\n\tgetBlockInfo: function ( pageObj ) {\n\t\tvar blockedError;\n\n\t\tif ( pageObj.actions &&\n\t\t\tpageObj.actions.edit &&\n\t\t\tArray.isArray( pageObj.actions.edit )\n\t\t) {\n\t\t\tpageObj.actions.edit.some( function ( error ) {\n\t\t\t\tif ( [ 'blocked', 'autoblocked' ].indexOf( error.code ) !== -1 ) {\n\t\t\t\t\tblockedError = error;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t} );\n\n\t\t\tif ( blockedError && blockedError.data && blockedError.data.blockinfo ) {\n\t\t\t\t// Preload library used by EditorOverlayBase#parseBlockInfo\n\t\t\t\t// to format block expiry datetime and duration\n\t\t\t\tmw.loader.load( 'moment' );\n\n\t\t\t\treturn blockedError.data.blockinfo;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\t/**\n\t * Get the content of a page.\n\t * @memberof EditorGateway\n\t * @instance\n\t * @return {jQuery.Promise}\n\t */\n\tgetContent: function () {\n\t\tvar options,\n\t\t\tself = this;\n\n\t\tfunction resolve() {\n\t\t\treturn util.Deferred().resolve( {\n\t\t\t\ttext: self.content || '',\n\t\t\t\tblockinfo: self.blockinfo\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.content !== undefined ) {\n\t\t\treturn resolve();\n\t\t} else {\n\t\t\toptions = actionParams( {\n\t\t\t\tprop: [ 'revisions', 'info' ],\n\t\t\t\trvprop: [ 'content', 'timestamp' ],\n\t\t\t\ttitles: self.title,\n\t\t\t\t// get block information for this user\n\t\t\t\tintestactions: 'edit',\n\t\t\t\tintestactionsdetail: 'full'\n\t\t\t} );\n\t\t\t// Load text of old revision if desired\n\t\t\tif ( this.oldId ) {\n\t\t\t\toptions.rvstartid = this.oldId;\n\t\t\t}\n\t\t\t// See Bug 50136 - passing rvsection will fail with non wikitext\n\t\t\tif ( util.isNumeric( this.sectionId ) ) {\n\t\t\t\toptions.rvsection = this.sectionId;\n\t\t\t}\n\t\t\treturn this.api.get( options ).then( function ( resp ) {\n\t\t\t\tvar revision, pageObj;\n\n\t\t\t\tif ( resp.error ) {\n\t\t\t\t\treturn util.Deferred().reject( resp.error.code );\n\t\t\t\t}\n\n\t\t\t\tpageObj = resp.query.pages[0];\n\t\t\t\t// page might not exist and caller might not have known.\n\t\t\t\tif ( pageObj.missing !== undefined ) {\n\t\t\t\t\tself.content = '';\n\t\t\t\t} else {\n\t\t\t\t\trevision = pageObj.revisions[0];\n\t\t\t\t\tself.content = revision.content;\n\t\t\t\t\tself.timestamp = revision.timestamp;\n\t\t\t\t}\n\n\t\t\t\t// save content a second time to be able to check for changes\n\t\t\t\tself.originalContent = self.content;\n\t\t\t\tself.blockinfo = self.getBlockInfo( pageObj );\n\n\t\t\t\treturn resolve();\n\t\t\t} );\n\t\t}\n\t},\n\n\t/**\n\t * Mark content as modified and set changes to be submitted when #save\n\t * is invoked.\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {string} content New section content.\n\t */\n\tsetContent: function ( content ) {\n\t\tif ( this.originalContent !== content || this.fromModified ) {\n\t\t\tthis.hasChanged = true;\n\t\t} else {\n\t\t\tthis.hasChanged = false;\n\t\t}\n\t\tthis.content = content;\n\t},\n\n\t/**\n\t * Mark content as modified and set text that should be prepended to given\n\t * section when #save is invoked.\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {string} text Text to be prepended.\n\t */\n\tsetPrependText: function ( text ) {\n\t\tthis.prependtext = text;\n\t\tthis.hasChanged = true;\n\t},\n\n\t/**\n\t * Save the new content of the section, previously set using #setContent.\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {Object} options Configuration options\n\t * @param {string} [options.summary] Optional summary for the edit.\n\t * @param {string} [options.captchaId] If CAPTCHA was requested, ID of the\n\t * captcha.\n\t * @param {string} [options.captchaWord] If CAPTCHA was requested, term\n\t * displayed in the CAPTCHA.\n\t * @return {jQuery.Deferred} On failure callback is passed an object with\n\t * `type` and `details` properties. `type` is a string describing the type\n\t * of error, `details` can be any object (usually error message).\n\t */\n\tsave: function ( options ) {\n\t\tvar self = this,\n\t\t\tresult = util.Deferred();\n\n\t\toptions = options || {};\n\n\t\t/**\n\t\t * Save content. Make an API request.\n\t\t * @return {jQuery.Deferred}\n\t\t */\n\t\tfunction saveContent() {\n\t\t\tvar apiOptions = {\n\t\t\t\taction: 'edit',\n\t\t\t\ttitle: self.title,\n\t\t\t\tsummary: options.summary,\n\t\t\t\tcaptchaid: options.captchaId,\n\t\t\t\tcaptchaword: options.captchaWord,\n\t\t\t\tbasetimestamp: self.timestamp,\n\t\t\t\tstarttimestamp: self.timestamp\n\t\t\t};\n\n\t\t\tif ( self.content !== undefined ) {\n\t\t\t\tapiOptions.text = self.content;\n\t\t\t} else if ( self.prependtext ) {\n\t\t\t\tapiOptions.prependtext = self.prependtext;\n\t\t\t}\n\n\t\t\tif ( util.isNumeric( self.sectionId ) ) {\n\t\t\t\tapiOptions.section = self.sectionId;\n\t\t\t}\n\n\t\t\tself.api.postWithToken( 'csrf', apiOptions ).then( function ( data ) {\n\t\t\t\tif ( data && data.edit && data.edit.result === 'Success' ) {\n\t\t\t\t\tself.hasChanged = false;\n\t\t\t\t\tresult.resolve( data.edit.newrevid );\n\t\t\t\t} else {\n\t\t\t\t\tresult.reject( parseSaveError( data ) );\n\t\t\t\t}\n\t\t\t}, function ( code, data ) {\n\t\t\t\tresult.reject( parseSaveError( data, code || 'unknown' ) );\n\t\t\t} );\n\t\t\treturn result;\n\t\t}\n\n\t\treturn saveContent();\n\t},\n\n\t/**\n\t * Abort any pending previews.\n\t * @memberof EditorGateway\n\t * @instance\n\t */\n\tabortPreview: function () {\n\t\tif ( this._pending ) {\n\t\t\tthis._pending.abort();\n\t\t}\n\t},\n\n\t/**\n\t * Get page preview from the API and abort any existing previews.\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {Object} options API query parameters\n\t * @return {jQuery.Deferred}\n\t */\n\tgetPreview: function ( options ) {\n\t\tvar result = util.Deferred(),\n\t\t\tsectionLine = '',\n\t\t\tsectionId = '',\n\t\t\trequest,\n\t\t\tself = this;\n\n\t\tutil.extend( options, {\n\t\t\taction: 'parse',\n\t\t\t// Enable section preview mode to avoid errors (bug 49218)\n\t\t\tsectionpreview: true,\n\t\t\t// needed for pre-save transform to work (bug 53692)\n\t\t\tpst: true,\n\t\t\t// Output mobile HTML (bug 54243)\n\t\t\tmobileformat: true,\n\t\t\ttitle: this.title,\n\t\t\tprop: [ 'text', 'sections' ]\n\t\t} );\n\n\t\tthis.abortPreview();\n\n\t\trequest = this.api.post( options );\n\t\tthis._pending = request.then( function ( resp ) {\n\t\t\tif ( resp && resp.parse && resp.parse.text ) {\n\t\t\t\t// section 0 haven't a section name so skip\n\t\t\t\tif ( self.sectionId !== 0 &&\n\t\t\t\t\tresp.parse.sections !== undefined &&\n\t\t\t\t\tresp.parse.sections[0] !== undefined\n\t\t\t\t) {\n\t\t\t\t\tif ( resp.parse.sections[0].anchor !== undefined ) {\n\t\t\t\t\t\tsectionId = resp.parse.sections[0].anchor;\n\t\t\t\t\t}\n\t\t\t\t\tif ( resp.parse.sections[0].line !== undefined ) {\n\t\t\t\t\t\tsectionLine = resp.parse.sections[0].line;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresult.resolve( {\n\t\t\t\t\ttext: resp.parse.text['*'],\n\t\t\t\t\tid: sectionId,\n\t\t\t\t\tline: sectionLine\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tresult.reject();\n\t\t\t}\n\t\t}, function () {\n\t\t\tresult.reject();\n\t\t} ).promise( {\n\t\t\tabort: function () { request.abort(); }\n\t\t} );\n\n\t\treturn result;\n\t}\n};\n\nmodule.exports = EditorGateway;\n","var EditorOverlayBase = require( './EditorOverlayBase' ),\n\tutil = require( '../mobile.startup/util' ),\n\tSection = require( '../mobile.startup/Section' ),\n\tsaveFailureMessage = require( './saveFailureMessage' ),\n\tEditorGateway = require( './EditorGateway' ),\n\tAbuseFilterPanel = require( './AbuseFilterPanel' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\tBlockMessage = require( './BlockMessage' ),\n\tVisualEditorOverlay = require( './VisualEditorOverlay' );\n\n/**\n * Overlay that shows an editor\n * @class SourceEditorOverlay\n * @uses Section\n * @uses AbuseFilterPanel\n * @uses EditorGateway\n * @uses VisualEditorOverlay\n * @extends EditorOverlayBase\n *\n * @param {Object} options Configuration options\n * @param {jQuery.Promise} [dataPromise] Optional promise for loading content\n */\nfunction SourceEditorOverlay( options, dataPromise ) {\n\tthis.isFirefox = /firefox/i.test( window.navigator.userAgent );\n\tthis.gateway = new EditorGateway( {\n\t\tapi: options.api,\n\t\ttitle: options.title,\n\t\tsectionId: options.sectionId,\n\t\toldId: options.oldId,\n\t\tisNewPage: options.isNewPage,\n\t\tfromModified: !!dataPromise\n\t} );\n\tthis.readOnly = !!options.oldId; // If old revision, readOnly mode\n\tthis.dataPromise = dataPromise;\n\tif ( this.isVisualEditorEnabled() ) {\n\t\toptions.editSwitcher = true;\n\t}\n\tif ( this.readOnly ) {\n\t\toptions.readOnly = true;\n\t\toptions.editingMsg = mw.msg( 'mobile-frontend-editor-viewing-source-page', options.title );\n\t} else {\n\t\toptions.editingMsg = mw.msg( 'mobile-frontend-editor-editing-page', options.title );\n\t}\n\toptions.previewingMsg = mw.msg( 'mobile-frontend-editor-previewing-page', options.title );\n\tEditorOverlayBase.call(\n\t\tthis,\n\t\tutil.extend( true,\n\t\t\t{ events: { 'input .wikitext-editor': 'onInputWikitextEditor' } },\n\t\t\toptions\n\t\t)\n\t);\n}\n\nmfExtend( SourceEditorOverlay, EditorOverlayBase, {\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, EditorOverlayBase.prototype.templatePartials, {\n\t\tcontent: util.template( `\n<div lang=\"{{contentLang}}\" dir=\"{{contentDir}}\" class=\"editor-container\">\n\t<textarea class=\"wikitext-editor\" id=\"wikitext-editor\" cols=\"40\" rows=\"10\" placeholder=\"{{placeholder}}\"></textarea>\n\t<div class=\"preview content\"></div>\n</div>\n\t\t` )\n\t} ),\n\t/**\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\teditor: 'wikitext',\n\t/**\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tsectionLine: '',\n\n\t/**\n\t * Check whether VisualEditor is enabled or not.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisVisualEditorEnabled: function () {\n\t\tvar ns = mw.config.get( 'wgVisualEditorConfig' ) &&\n\t\t\tmw.config.get( 'wgVisualEditorConfig' ).namespaces;\n\n\t\treturn ns &&\n\t\t\tns.indexOf(\n\t\t\t\tmw.config.get( 'wgNamespaceNumber' )\n\t\t\t) > -1 &&\n\t\t\tmw.config.get( 'wgTranslatePageTranslation' ) !== 'translation' &&\n\t\t\tmw.config.get( 'wgPageContentModel' ) === 'wikitext';\n\t},\n\t/**\n\t * Wikitext Editor input handler\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonInputWikitextEditor: function () {\n\t\tthis.gateway.setContent( this.$el.find( '.wikitext-editor' ).val() );\n\t\tthis.$el.find( '.continue, .submit' ).prop( 'disabled', false );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonClickBack: function () {\n\t\tEditorOverlayBase.prototype.onClickBack.apply( this, arguments );\n\t\tthis._hidePreview();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this,\n\t\t\toptions = this.options,\n\t\t\tshowAnonWarning = options.isAnon && !options.switched;\n\n\t\t// log edit attempt\n\t\tthis.log( { action: 'ready' } );\n\t\tthis.log( { action: 'loaded' } );\n\n\t\tif ( this.isVisualEditorEnabled() ) {\n\t\t\tmw.loader.using( 'ext.visualEditor.switching' ).then( function () {\n\t\t\t\tvar switchToolbar, windowManager, switchWindow,\n\t\t\t\t\ttoolFactory = new OO.ui.ToolFactory(),\n\t\t\t\t\ttoolGroupFactory = new OO.ui.ToolGroupFactory();\n\n\t\t\t\ttoolFactory.register( mw.libs.ve.MWEditModeVisualTool );\n\t\t\t\ttoolFactory.register( mw.libs.ve.MWEditModeSourceTool );\n\t\t\t\tswitchToolbar = new OO.ui.Toolbar( toolFactory, toolGroupFactory, {\n\t\t\t\t\tclasses: [ 'editor-switcher' ]\n\t\t\t\t} );\n\n\t\t\t\tswitchToolbar.on( 'switchEditor', function ( mode ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tconfig = mw.config.get( 'wgVisualEditorConfig' ),\n\t\t\t\t\t\tcanSwitch = config.fullRestbaseUrl || config.allowLossySwitching;\n\t\t\t\t\tif ( mode === 'visual' ) {\n\t\t\t\t\t\tif ( !self.gateway.hasChanged ) {\n\t\t\t\t\t\t\tself._switchToVisualEditor();\n\t\t\t\t\t\t} else if ( canSwitch ) {\n\t\t\t\t\t\t\t// Pass wikitext if there are changes.\n\t\t\t\t\t\t\tself._switchToVisualEditor( self.gateway.content );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twindowManager = new OO.ui.WindowManager();\n\t\t\t\t\t\t\tswitchWindow = new mw.libs.ve.SwitchConfirmDialog();\n\t\t\t\t\t\t\twindowManager.$element.appendTo( document.body );\n\t\t\t\t\t\t\twindowManager.addWindows( [ switchWindow ] );\n\t\t\t\t\t\t\twindowManager.openWindow( switchWindow, { mode: 'simple' } )\n\t\t\t\t\t\t\t\t.closed.then( function ( data ) {\n\t\t\t\t\t\t\t\t\tif ( data && data.action === 'discard' ) {\n\t\t\t\t\t\t\t\t\t\tself._switchToVisualEditor();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twindowManager.destroy();\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tswitchToolbar.setup( [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'editMode',\n\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\ticon: 'edit',\n\t\t\t\t\t\ttitle: mw.msg( 'visualeditor-mweditmode-tooltip' ),\n\t\t\t\t\t\tinclude: [ 'editModeVisual', 'editModeSource' ]\n\t\t\t\t\t}\n\t\t\t\t] );\n\n\t\t\t\tself.$el.find( '.switcher-container' ).html( switchToolbar.$element );\n\t\t\t\tswitchToolbar.emit( 'updateState' );\n\t\t\t} );\n\t\t}\n\n\t\tEditorOverlayBase.prototype.postRender.apply( this );\n\n\t\tthis.$preview = this.$el.find( '.preview' );\n\t\tthis.$content = this.$el.find( '.wikitext-editor' );\n\t\tthis.$content.addClass( 'mw-editfont-' + mw.user.options.get( 'editfont' ) );\n\t\tif ( showAnonWarning ) {\n\t\t\tthis.$anonWarning = this.createAnonWarning( options );\n\t\t\tthis.$el.find( '.editor-container' ).append( this.$anonWarning );\n\t\t\tthis.$content.hide();\n\t\t\t// the user has to click login, signup or edit without login,\n\t\t\t// disable \"Next\" button on top right\n\t\t\tthis.$anonHiddenButtons = this.$el.find( '.overlay-header .continue, .editor-switcher' ).hide();\n\t\t\tthis.hideSpinner();\n\t\t}\n\t\t// make license links open in separate tabs\n\t\tthis.$el.find( '.license a' ).attr( 'target', '_blank' );\n\n\t\tthis.abuseFilterPanel = new AbuseFilterPanel( {\n\t\t\toverlayManager: this.overlayManager\n\t\t} ).appendTo( this.$el.find( '.panels' ) );\n\n\t\t// If in readOnly mode, make textarea readonly\n\t\tif ( this.readOnly ) {\n\t\t\tthis.$content.prop( 'readonly', true );\n\t\t}\n\n\t\tthis.$content.on( 'input', this._resizeEditor.bind( this ) );\n\n\t\tif ( !showAnonWarning ) {\n\t\t\tthis._loadContent();\n\t\t}\n\t},\n\n\t/**\n\t * Handles click on \"Edit without login\" in anonymous editing warning.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t */\n\tonClickAnonymous: function () {\n\t\tthis.showSpinner();\n\t\tthis.$anonWarning.hide();\n\t\t// reenable \"Next\" button\n\t\tthis.$anonHiddenButtons.show();\n\t\tthis._loadContent();\n\t},\n\n\t/**\n\t * Prepares the preview interface and reveals the save screen of the overlay\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonStageChanges: function () {\n\t\tvar self = this,\n\t\t\tparams = {\n\t\t\t\ttext: this.getContent()\n\t\t\t};\n\n\t\tthis.scrollTop = util.getDocument().find( 'body' ).scrollTop();\n\t\tthis.$content.hide();\n\t\tthis.showSpinner();\n\n\t\tif ( mw.config.get( 'wgIsMainPage' ) ) {\n\t\t\tparams.mainpage = 1; // Setting it to 0 will have the same effect\n\t\t}\n\n\t\tfunction hideSpinnerAndShowPreview() {\n\t\t\tself.hideSpinner();\n\t\t\tself.$preview.show();\n\t\t}\n\n\t\tthis.gateway.getPreview( params ).then( function ( result ) {\n\t\t\tvar parsedText = result.text,\n\t\t\t\tparsedSectionLine = result.line;\n\n\t\t\tself.sectionId = result.id;\n\t\t\t// On desktop edit summaries strip tags. Mimic this behavior on mobile devices\n\t\t\tself.sectionLine = self.parseHTML( '<div>' ).html( parsedSectionLine ).text();\n\t\t\tnew Section( {\n\t\t\t\tel: self.$preview,\n\t\t\t\ttext: parsedText\n\t\t\t} ).$el.find( 'a' ).on( 'click', false );\n\n\t\t\thideSpinnerAndShowPreview();\n\t\t}, function () {\n\t\t\tself.$preview.addClass( 'error' ).text( mw.msg( 'mobile-frontend-editor-error-preview' ) );\n\n\t\t\thideSpinnerAndShowPreview();\n\t\t} );\n\n\t\tEditorOverlayBase.prototype.onStageChanges.apply( this, arguments );\n\t},\n\n\t/**\n\t * Hides the preview and reverts back to initial screen.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t */\n\t_hidePreview: function () {\n\t\tthis.gateway.abortPreview();\n\t\tthis.hideSpinner();\n\t\tthis.$preview.removeClass( 'error' ).hide();\n\t\tthis.$content.show();\n\t\twindow.scrollTo( 0, this.scrollTop );\n\t\tthis.showHidden( '.initial-header' );\n\t\tthis.abuseFilterPanel.hide();\n\t},\n\n\t/**\n\t * Resize the editor textarea, maintaining scroll position in iOS\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\t_resizeEditor: function () {\n\t\tvar scrollTop, container, $scrollContainer;\n\n\t\t// exiting early for firefox due to a bug that causes the page to scroll to top\n\t\t// whenever a caret is inserted T214880\n\t\tif ( this.isFirefox ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !this.$scrollContainer ) {\n\t\t\tcontainer = OO.ui.Element.static\n\t\t\t\t.getClosestScrollableContainer( this.$content[ 0 ] );\n\t\t\t// The scroll container will be either within the view\n\t\t\t// or the document element itself.\n\t\t\t$scrollContainer = this.$el.find( container ).length ?\n\t\t\t\tthis.$el.find( container ) : util.getDocument();\n\t\t\tthis.$scrollContainer = $scrollContainer;\n\t\t\tthis.$content.css( 'padding-bottom', this.$scrollContainer.height() * 0.6 );\n\t\t} else {\n\t\t\t$scrollContainer = this.$scrollContainer;\n\t\t}\n\n\t\t// Only do this if scroll container exists\n\t\tif ( this.$content.prop( 'scrollHeight' ) && $scrollContainer.length ) {\n\t\t\tscrollTop = $scrollContainer.scrollTop();\n\t\t\tthis.$content\n\t\t\t\t.css( 'height', 'auto' )\n\t\t\t\t// can't reuse prop( 'scrollHeight' ) because we need the current value\n\t\t\t\t.css( 'height', ( this.$content.prop( 'scrollHeight' ) + 2 ) + 'px' );\n\t\t\t$scrollContainer.scrollTop( scrollTop );\n\t\t}\n\t},\n\n\t/**\n\t * Set content to the user input field.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @param {string} content The content to set.\n\t */\n\tsetContent: function ( content ) {\n\t\tthis.$content\n\t\t\t.show()\n\t\t\t.val( content );\n\t\tthis._resizeEditor();\n\t},\n\n\t/**\n\t * Returns the content of the user input field.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @return {string}\n\t */\n\tgetContent: function () {\n\t\treturn this.$content.val();\n\t},\n\n\t/**\n\t * Requests content from the API and reveals it in UI.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t */\n\t_loadContent: function () {\n\t\tvar self = this,\n\t\t\t$el = this.$el;\n\n\t\tthis.$content.hide();\n\t\tthis.showSpinner();\n\t\t$el.addClass( 'overlay-loading' );\n\n\t\t( this.dataPromise || this.gateway.getContent() )\n\t\t\t.then( function ( result ) {\n\t\t\t\tvar block, message,\n\t\t\t\t\tcontent = result.text;\n\n\t\t\t\tself.setContent( content );\n\t\t\t\tif ( self.gateway.fromModified ) {\n\t\t\t\t\t// Trigger intial EditorGateway#setContent and update save button\n\t\t\t\t\tself.onInputWikitextEditor();\n\t\t\t\t}\n\t\t\t\t// check if user is blocked\n\t\t\t\tif ( result.blockinfo ) {\n\t\t\t\t\t// Lazy-load moment only if it's needed,\n\t\t\t\t\t// it's somewhat large (it is already used on\n\t\t\t\t\t// mobile by Echo's notifications panel, where it's also lazy-loaded)\n\t\t\t\t\tmw.loader.using( 'moment' ).then( function () {\n\t\t\t\t\t\tblock = self.parseBlockInfo( result.blockinfo );\n\t\t\t\t\t\tmessage = new BlockMessage( block );\n\t\t\t\t\t\tmessage.toggle();\n\t\t\t\t\t\tself.hide();\n\t\t\t\t\t\tself.hideSpinner();\n\t\t\t\t\t\t$el.removeClass( 'overlay-loading' );\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tself.hideSpinner();\n\t\t\t\t\t$el.removeClass( 'overlay-loading' );\n\t\t\t\t}\n\t\t\t}, function () {\n\t\t\t\tself.reportError( mw.msg( 'mobile-frontend-editor-error-loading' ) );\n\t\t\t\t$el.removeClass( 'overlay-loading' );\n\t\t\t} );\n\t},\n\n\t/**\n\t * Loads a {VisualEditorOverlay} and replaces the existing SourceEditorOverlay with it\n\t * based on the current option values.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t * @param {string} [wikitext] Wikitext to pass to VE\n\t */\n\t_switchToVisualEditor: function ( wikitext ) {\n\t\tvar self = this;\n\t\tthis.log( {\n\t\t\taction: 'abort',\n\t\t\ttype: 'switchnochange',\n\t\t\tmechanism: 'navigate'\n\t\t} );\n\t\tthis.logFeatureUse( {\n\t\t\tfeature: 'editor-switch',\n\t\t\taction: 'visual-mobile'\n\t\t} );\n\t\t// Save a user setting indicating that this user prefers using the VisualEditor\n\t\tmw.storage.set( 'preferredEditor', 'VisualEditor' );\n\t\t// Load the VisualEditor and replace the SourceEditor overlay with it\n\t\tthis.showSpinner();\n\t\tthis.$content.hide();\n\t\tmw.loader.using( 'ext.visualEditor.targetLoader' ).then( function () {\n\t\t\tmw.libs.ve.targetLoader.addPlugin( 'mobile.editor.ve' );\n\t\t\treturn mw.libs.ve.targetLoader.loadModules( 'visual' );\n\t\t} ).then(\n\t\t\tfunction () {\n\t\t\t\tvar options = self.getOptionsForSwitch();\n\t\t\t\toptions.SourceEditorOverlay = SourceEditorOverlay;\n\t\t\t\tself.hideSpinner();\n\t\t\t\tif ( wikitext ) {\n\t\t\t\t\toptions.dataPromise = mw.libs.ve.targetLoader.requestPageData( 'visual', mw.config.get( 'wgRelevantPageName' ), {\n\t\t\t\t\t\tsection: options.sectionId,\n\t\t\t\t\t\toldId: options.oldId || mw.config.get( 'wgRevisionId' ),\n\t\t\t\t\t\ttargetName: 'mobile',\n\t\t\t\t\t\tmodified: true,\n\t\t\t\t\t\twikitext: wikitext\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tdelete options.dataPromise;\n\t\t\t\t}\n\t\t\t\tself.switching = true;\n\t\t\t\tself.overlayManager.replaceCurrent( new VisualEditorOverlay( options ) );\n\t\t\t\tself.switching = false;\n\t\t\t},\n\t\t\tfunction () {\n\t\t\t\tself.hideSpinner();\n\t\t\t\tself.$content.show();\n\t\t\t\t// FIXME: We should show an error notification, but right now toast\n\t\t\t\t// notifications are not dismissible when shown within the editor.\n\t\t\t}\n\t\t);\n\t},\n\n\t/**\n\t * Reveals an abuse filter panel inside the view.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t * @param {string} type The type of alert, e.g. 'warning' or 'disallow'\n\t * @param {string} message Message to show in the AbuseFilter overlay\n\t */\n\t_showAbuseFilter: function ( type, message ) {\n\t\tthis.abuseFilterPanel.show( type, message );\n\t\tthis.showHidden( '.save-header' );\n\t\t// disable continue and save buttons, reenabled when user changes content\n\t\tthis.$el.find( '.continue, .submit' ).prop( 'disabled', this.abuseFilterPanel.isDisallowed );\n\t},\n\n\t/**\n\t * Executed when the editor clicks the save/publish button. Handles logging and submitting\n\t * the save action to the editor API.\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonSaveBegin: function () {\n\t\tvar self = this,\n\t\t\toptions = {\n\t\t\t\tsummary: this.$el.find( '.summary' ).val()\n\t\t\t};\n\n\t\tif ( self.sectionLine !== '' ) {\n\t\t\toptions.summary = '/* ' + self.sectionLine + ' */' + options.summary;\n\t\t}\n\t\tEditorOverlayBase.prototype.onSaveBegin.apply( this, arguments );\n\t\tif ( this.confirmAborted ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( this.captchaId ) {\n\t\t\toptions.captchaId = this.captchaId;\n\t\t\toptions.captchaWord = this.$el.find( '.captcha-word' ).val();\n\t\t}\n\n\t\tthis.showHidden( '.saving-header' );\n\n\t\tthis.gateway.save( options )\n\t\t\t.then( function ( newRevId ) {\n\t\t\t\tvar title = self.options.title;\n\t\t\t\t// Special case behaviour of main page\n\t\t\t\tif ( mw.config.get( 'wgIsMainPage' ) ) {\n\t\t\t\t\t// FIXME: Blocked on T189173\n\t\t\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\t\t\twindow.location = mw.util.getUrl( title );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tself.onSaveComplete( newRevId );\n\t\t\t}, function ( data ) {\n\t\t\t\tself.onSaveFailure( data );\n\t\t\t} );\n\t},\n\n\t/**\n\t * Executed when page save fails. Handles error display and bookkeeping,\n\t * passes logging duties to the parent.\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonSaveFailure: function ( data ) {\n\t\tvar heading, msg;\n\n\t\tif ( data.type === 'captcha' ) {\n\t\t\tthis.captchaId = data.details.id;\n\t\t\tthis.handleCaptcha( data.details );\n\t\t} else if ( data.type === 'abusefilter' ) {\n\t\t\tthis._showAbuseFilter( data.details.type, data.details.message );\n\t\t} else {\n\t\t\tmsg = saveFailureMessage( data );\n\t\t\tif ( data.type === 'readonly' ) {\n\t\t\t\theading = mw.msg( 'apierror-readonly' );\n\t\t\t}\n\n\t\t\tif ( msg || heading ) {\n\t\t\t\tthis.reportError( msg, heading );\n\t\t\t\tthis.showHidden( '.save-header, .save-panel' );\n\t\t\t}\n\t\t}\n\n\t\tEditorOverlayBase.prototype.onSaveFailure.apply( this, arguments );\n\t},\n\n\t/**\n\t * Checks whether the existing content has changed.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @return {boolean}\n\t */\n\thasChanged: function () {\n\t\treturn this.gateway.hasChanged;\n\t}\n} );\n\nmodule.exports = SourceEditorOverlay;\n","/* global ve */\nvar EditorOverlayBase = require( './EditorOverlayBase' ),\n\tEditorGateway = require( './EditorGateway' ),\n\tBlockMessage = require( './BlockMessage' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\trouter = mw.loader.require( 'mediawiki.router' ),\n\tutil = require( '../mobile.startup/util' );\n\n/**\n * Overlay for VisualEditor view\n * @class VisualEditorOverlay\n * @extends EditorOverlayBase\n *\n * @param {Object} options Configuration options\n * @param {SourceEditorOverlay} options.SourceEditorOverlay Class to use for standard\n *  Wikitext editor. It must be passed in explicitly to avoid a cyclic\n *  dependency between VisualEditorOverlay and SourceEditorOverlay\n */\nfunction VisualEditorOverlay( options ) {\n\tEditorOverlayBase.call( this,\n\t\tutil.extend( {\n\t\t\thasToolbar: true,\n\t\t\tonBeforeExit: this.onBeforeExit.bind( this ),\n\t\t\tisBorderBox: false,\n\t\t\tclassName: 'overlay editor-overlay editor-overlay-ve'\n\t\t}, options )\n\t);\n\tthis.SourceEditorOverlay = options.SourceEditorOverlay;\n\tthis.isNewPage = options.isNewPage;\n\tthis.fromModified = options.dataPromise && options.switched;\n\n\t// Gateway present for a few utility purposes; the VE articletarget\n\t// handles the actual API calls separately\n\tthis.gateway = new EditorGateway( {\n\t\tapi: options.api,\n\t\ttitle: options.title,\n\t\tsectionId: options.sectionId,\n\t\toldId: options.oldId,\n\t\tisNewPage: options.isNewPage\n\t} );\n}\n\nmfExtend( VisualEditorOverlay, EditorOverlayBase, {\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, EditorOverlayBase.prototype.templatePartials, {\n\t\teditHeader: util.template( `\n<div class=\"overlay-header header initial-header hideable hidden\">\n\t<div class=\"toolbar\"></div>\n</div>\n\t\t` ),\n\t\tcontent: util.template( `\n<div class=\"surface\" lang=\"{{contentLang}}\" dir=\"{{contentDir}}\">\n</div>\n\t\t` )\n\t} ),\n\t/**\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\teditor: 'visualeditor',\n\t/**\n\t * Destroy the existing VisualEditor target.\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tdestroyTarget: function () {\n\t\tif ( this.target ) {\n\t\t\tthis.target.destroy();\n\t\t\tthis.target = null;\n\t\t}\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\tvar overlay = this,\n\t\t\toptions = this.options,\n\t\t\tshowAnonWarning = options.isAnon && !options.switched;\n\n\t\tEditorOverlayBase.prototype.show.apply( this, arguments );\n\n\t\t// We don't use the default spinner. Instead, rely on the progressbar from init/editor.js.\n\t\tif ( !this.options.switched ) {\n\t\t\tthis.hideSpinner();\n\t\t\tthis.$el.addClass( 'loading' );\n\t\t}\n\n\t\tthis.target = ve.init.mw.targetFactory.create( 'article', this, {\n\t\t\t$element: this.$el,\n\t\t\t// || null so that scrolling is not triggered for the lead (0) section\n\t\t\t// (which has no header to scroll to)\n\t\t\tsection: this.options.sectionId || null\n\t\t} );\n\t\tthis.target.once( 'surfaceReady', function () {\n\t\t\tthis.emit( 'editor-loaded' );\n\t\t\tthis.$el.removeClass( 'loading' );\n\t\t\t// log edit attempt\n\t\t\toverlay.log( { action: 'ready' } );\n\t\t\toverlay.log( { action: 'loaded' } );\n\t\t}.bind( this ) );\n\t\tthis.dataPromise = this.target.load( this.options.dataPromise );\n\n\t\tif ( showAnonWarning ) {\n\t\t\tthis.$anonWarning = this.createAnonWarning( this.options );\n\t\t\tthis.$el.append( this.$anonWarning );\n\t\t\tthis.$el.find( '.overlay-content' ).hide();\n\t\t\tthis.$el.removeClass( 'loading' );\n\t\t} else {\n\t\t\tthis.checkForBlocks();\n\t\t}\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonBeforeExit: function ( exit ) {\n\t\tvar overlay = this;\n\t\tEditorOverlayBase.prototype.onBeforeExit.call( this, function () {\n\t\t\t// If this function is called, the parent method has decided that we should exit\n\t\t\texit();\n\t\t\t// VE-specific cleanup\n\t\t\toverlay.destroyTarget();\n\t\t} );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonClickBack: function () {\n\t\tEditorOverlayBase.prototype.onClickBack.apply( this, arguments );\n\t\tthis.switchToEditor();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonClickAnonymous: function () {\n\t\tvar self = this;\n\t\tthis.$anonWarning.hide();\n\t\tthis.checkForBlocks().then( function () {\n\t\t\tself.$el.find( '.overlay-content' ).show();\n\t\t} );\n\t},\n\n\t/**\n\t * Check if the user is blocked, and close the editor if they are\n\t *\n\t * @return {jQuery.Promise} Promise which resolves when the check is complete\n\t */\n\tcheckForBlocks: function () {\n\t\tvar self = this;\n\t\treturn this.dataPromise.then( function ( data ) {\n\t\t\tif ( data.visualeditor && data.visualeditor.blockinfo ) {\n\t\t\t\t// Lazy-load moment only if it's needed,\n\t\t\t\t// it's somewhat large (it is already used on\n\t\t\t\t// mobile by Echo's notifications panel, where it's also lazy-loaded)\n\t\t\t\tmw.loader.using( 'moment' ).then( function () {\n\t\t\t\t\tvar block = self.parseBlockInfo( data.visualeditor.blockinfo ),\n\t\t\t\t\t\tmessage = new BlockMessage( block );\n\t\t\t\t\tmessage.toggle();\n\t\t\t\t\tself.hide();\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\t/**\n\t * Reveal the editing interface.\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tswitchToEditor: function () {\n\t\tthis.showHidden( '.initial-header' );\n\t},\n\t/**\n\t * Loads an {SourceEditorOverlay} and replaces the existing {VisualEditorOverlay}\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t * @param {jQuery.Promise} [dataPromise] Optional promise for loading content\n\t */\n\tswitchToSourceEditor: function ( dataPromise ) {\n\t\tvar self = this,\n\t\t\tSourceEditorOverlay = this.SourceEditorOverlay,\n\t\t\toptions = this.getOptionsForSwitch();\n\t\tthis.log( {\n\t\t\taction: 'abort',\n\t\t\ttype: 'switchnochange',\n\t\t\tmechanism: 'navigate'\n\t\t} );\n\t\tthis.logFeatureUse( {\n\t\t\tfeature: 'editor-switch',\n\t\t\taction: 'source-mobile'\n\t\t} );\n\n\t\t// Save a user setting indicating that this user prefers using the SourceEditor\n\t\tmw.storage.set( 'preferredEditor', 'SourceEditor' );\n\t\tthis.showSpinner();\n\t\tthis.$el.find( '.surface' ).hide();\n\t\tself.hideSpinner();\n\t\tif ( dataPromise ) {\n\t\t\t// If switching with edits we can't stay in section editing, as a VE edit\n\t\t\t// can always affect the whole document (e.g. references)\n\t\t\toptions.sectionId = null;\n\t\t\trouter.navigateTo( document.title, {\n\t\t\t\tpath: '#/editor/all',\n\t\t\t\tuseReplaceState: true\n\t\t\t} );\n\t\t}\n\t\tself.switching = true;\n\t\tself.overlayManager.replaceCurrent( new SourceEditorOverlay( options, dataPromise ) );\n\t\tself.switching = false;\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonSaveComplete: function () {\n\t\tEditorOverlayBase.prototype.onSaveComplete.apply( this, arguments );\n\t\tthis.destroyTarget();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\thasChanged: function () {\n\t\tif ( this.saved ) {\n\t\t\t// If we just saved, there's not really any changes, and the\n\t\t\t// target is going to be destroyed in one tick\n\t\t\treturn false;\n\t\t}\n\t\treturn this.fromModified || (\n\t\t\tthis.target &&\n\t\t\tthis.target.getSurface() &&\n\t\t\tthis.target.getSurface().getModel().hasBeenModified()\n\t\t);\n\t}\n} );\n\nmodule.exports = VisualEditorOverlay;\n","var m = require( './../mobile.startup/moduleLoaderSingleton' ),\n\tSourceEditorOverlay = require( './SourceEditorOverlay' ),\n\tVisualEditorOverlay = require( './VisualEditorOverlay' ),\n\tschemaEditAttemptStep = require( './schemaEditAttemptStep' );\n\n// Exposed for MobileFrontend mobile.init usage.\nm.define( 'mobile.editor.overlay/SourceEditorOverlay', SourceEditorOverlay );\nm.define( 'mobile.editor.overlay/VisualEditorOverlay', VisualEditorOverlay );\n// setup schema:edit logging\nschemaEditAttemptStep();\n","module.exports = function () {\n\tvar trackdebug = !!mw.util.getParamValue( 'trackdebug' );\n\n\tif ( !mw.config.exists( 'wgWMESchemaEditAttemptStepSamplingRate' ) ) {\n\t\treturn;\n\t}\n\n\tmw.loader.using( [ 'ext.eventLogging' ] ).then( function () {\n\t\tvar // Schema class is provided by ext.eventLogging\n\t\t\tSchema = mw.eventLog.Schema,\n\t\t\tuser = mw.user,\n\t\t\tsampleRate = mw.config.get( 'wgWMESchemaEditAttemptStepSamplingRate' ),\n\t\t\tactionPrefixMap = {\n\t\t\t\tsaveIntent: 'save_intent',\n\t\t\t\tsaveAttempt: 'save_attempt',\n\t\t\t\tsaveSuccess: 'save_success',\n\t\t\t\tsaveFailure: 'save_failure'\n\t\t\t},\n\t\t\ttiming = {},\n\t\t\t/**\n\t\t\t * Edit schema\n\t\t\t * https://meta.wikimedia.org/wiki/Schema:EditAttemptStep\n\t\t\t */\n\t\t\t/* eslint-disable camelcase */\n\t\t\tschemaEditAttemptStep = new Schema(\n\t\t\t\t'EditAttemptStep',\n\t\t\t\tsampleRate,\n\t\t\t\t{\n\t\t\t\t\tpage_id: mw.config.get( 'wgArticleId' ),\n\t\t\t\t\trevision_id: mw.config.get( 'wgRevisionId' ),\n\t\t\t\t\tpage_title: mw.config.get( 'wgPageName' ),\n\t\t\t\t\tpage_ns: mw.config.get( 'wgNamespaceNumber' ),\n\t\t\t\t\tuser_id: user.getId(),\n\t\t\t\t\tuser_class: user.isAnon() ? 'IP' : undefined,\n\t\t\t\t\tuser_editcount: mw.config.get( 'wgUserEditCount', 0 ),\n\t\t\t\t\tmw_version: mw.config.get( 'wgVersion' ),\n\t\t\t\t\tplatform: 'phone',\n\t\t\t\t\tintegration: 'page',\n\t\t\t\t\tpage_token: user.getPageviewToken(),\n\t\t\t\t\tsession_token: user.sessionId(),\n\t\t\t\t\tversion: 1\n\t\t\t\t}\n\t\t\t);\n\t\t\t/* eslint-enable camelcase */\n\n\t\tif ( mw.config.get( 'wgMFSchemaEditAttemptStepAnonymousUserId' ) ) {\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tschemaEditAttemptStep.defaults.anonymous_user_token = mw.config.get( 'wgMFSchemaEditAttemptStepAnonymousUserId' );\n\t\t}\n\t\tif ( mw.config.get( 'wgMFSchemaEditAttemptStepBucket' ) ) {\n\t\t\tschemaEditAttemptStep.defaults.bucket = mw.config.get( 'wgMFSchemaEditAttemptStepBucket' );\n\t\t}\n\n\t\tfunction log() {\n\t\t\t// mw.log is a no-op unless resource loader is in debug mode, so\n\t\t\t// this allows trackdebug to work independently (T211698)\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log.apply( console, arguments );\n\t\t}\n\n\t\tfunction computeDuration( action, event, timeStamp ) {\n\t\t\t// This is duplicated from the VisualEditor extension\n\t\t\t// (ve.init.mw.trackSubscriber.js). Changes to this should be kept in\n\t\t\t// sync with that file, so the data remains consistent.\n\t\t\tif ( event.timing !== undefined ) {\n\t\t\t\treturn event.timing;\n\t\t\t}\n\n\t\t\tswitch ( action ) {\n\t\t\t\tcase 'ready':\n\t\t\t\t\treturn timeStamp - timing.init;\n\t\t\t\tcase 'loaded':\n\t\t\t\t\treturn timeStamp - timing.init;\n\t\t\t\tcase 'saveIntent':\n\t\t\t\t\treturn timeStamp - timing.ready;\n\t\t\t\tcase 'saveAttempt':\n\t\t\t\t\treturn timeStamp - timing.saveIntent;\n\t\t\t\tcase 'saveSuccess':\n\t\t\t\tcase 'saveFailure':\n\t\t\t\t\t// HERE BE DRAGONS: the caller must compute these themselves\n\t\t\t\t\t// for sensible results. Deliberately sabotage any attempts to\n\t\t\t\t\t// use the default by returning -1\n\t\t\t\t\tmw.log.warn( 'mf.schemaEditAttemptStep: Do not rely on default timing value for saveSuccess/saveFailure' );\n\t\t\t\t\treturn -1;\n\t\t\t\tcase 'abort':\n\t\t\t\t\tswitch ( event.abort_type ) {\n\t\t\t\t\t\tcase 'preinit':\n\t\t\t\t\t\t\treturn timeStamp - timing.init;\n\t\t\t\t\t\tcase 'nochange':\n\t\t\t\t\t\tcase 'switchwith':\n\t\t\t\t\t\tcase 'switchwithout':\n\t\t\t\t\t\tcase 'switchnochange':\n\t\t\t\t\t\tcase 'abandon':\n\t\t\t\t\t\t\treturn timeStamp - timing.ready;\n\t\t\t\t\t\tcase 'abandonMidsave':\n\t\t\t\t\t\t\treturn timeStamp - timing.saveAttempt;\n\t\t\t\t\t}\n\t\t\t\t\tmw.log.warn( 'mf.schemaEditAttemptStep: Unrecognized abort type', event.type );\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tmw.log.warn( 'mf.schemaEditAttemptStep: Unrecognized action', action );\n\t\t\treturn -1;\n\t\t}\n\n\t\tmw.trackSubscribe( 'mf.schemaEditAttemptStep', function ( topic, data, timeStamp ) {\n\t\t\tvar actionPrefix = actionPrefixMap[ data.action ] || data.action,\n\t\t\t\tduration = 0;\n\n\t\t\ttimeStamp = timeStamp || this.timeStamp; // I8e82acc12 back-compat\n\n\t\t\t// Schema's kind of a mess of special properties\n\t\t\tif ( data.action === 'init' || data.action === 'abort' || data.action === 'saveFailure' ) {\n\t\t\t\tdata[ actionPrefix + '_type' ] = data.type;\n\t\t\t}\n\t\t\tif ( data.action === 'init' || data.action === 'abort' ) {\n\t\t\t\tdata[ actionPrefix + '_mechanism' ] = data.mechanism;\n\t\t\t}\n\t\t\tif ( data.action !== 'init' ) {\n\t\t\t\t// Schema actually does have an init_timing field, but we don't want to\n\t\t\t\t// store it because it's not meaningful.\n\t\t\t\tduration = Math.round( computeDuration( data.action, data, timeStamp ) );\n\t\t\t\tdata[ actionPrefix + '_timing' ] = duration;\n\t\t\t}\n\t\t\tif ( data.action === 'saveFailure' ) {\n\t\t\t\tdata[ actionPrefix + '_message' ] = data.message;\n\t\t\t}\n\n\t\t\t// Remove renamed properties\n\t\t\tdelete data.type;\n\t\t\tdelete data.mechanism;\n\t\t\tdelete data.timing;\n\t\t\tdelete data.message;\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tdata.is_oversample =\n\t\t\t\t!mw.eventLog.inSample( 1 / sampleRate );\n\n\t\t\tif ( data.action === 'abort' && data.abort_type !== 'switchnochange' ) {\n\t\t\t\ttiming = {};\n\t\t\t} else {\n\t\t\t\ttiming[ data.action ] = timeStamp;\n\t\t\t}\n\n\t\t\t// Switching between visual and source produces a chain of\n\t\t\t// abort/ready/loaded events and no init event, so suppress them for\n\t\t\t// consistency with desktop VE's logging.\n\t\t\tif ( data.abort_type === 'switchnochange' ) {\n\t\t\t\t// The initial abort, flagged as a switch\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( timing.abort ) {\n\t\t\t\t// An abort was previously logged\n\t\t\t\tif ( data.action === 'ready' ) {\n\t\t\t\t\t// Just discard the ready\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ( data.action === 'loaded' ) {\n\t\t\t\t\t// Switch has finished; remove the abort timing so we stop discarding events.\n\t\t\t\t\tdelete timing.abort;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( trackdebug ) {\n\t\t\t\tlog( topic + '.' + data.action, duration + 'ms', data, schemaEditAttemptStep.defaults );\n\t\t\t} else {\n\t\t\t\tschemaEditAttemptStep.log( data, (\n\t\t\t\t\tmw.config.get( 'wgWMESchemaEditAttemptStepOversample' ) ||\n\t\t\t\t\tmw.config.get( 'wgMFSchemaEditAttemptStepOversample' ) === 'all' ||\n\t\t\t\t\t// wikitext / visualeditor\n\t\t\t\t\tdata.editor_interface === mw.config.get( 'wgMFSchemaEditAttemptStepOversample' )\n\t\t\t\t) ? 1 : sampleRate );\n\t\t\t}\n\t\t} );\n\n\t} );\n};\n"],"sourceRoot":""}