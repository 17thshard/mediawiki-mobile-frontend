{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.editor.overlay/AbuseFilterOverlay.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/AbuseFilterPanel.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/BlockMessage.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/EditorGateway.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/EditorOverlay.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/VisualEditorOverlay.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/mobile.editor.overlay.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/schemaEditAttemptStep.js"],"names":["Button","require","util","mfExtend","Overlay","AbuseFilterOverlay","props","call","this","extend","className","defaults","prototype","confirmButton","additionalClassNames","progressive","options","templatePartials","button","template","content","postRender","apply","$el","find","attr","module","exports","View","AbuseFilterPanel","isDisallowed","overlayManager","readMoreMsg","mw","msg","show","type","message","add","text","removeClass","hide","addClass","Drawer","Icon","BlockMessage","arguments","stopHandIcon","name","userIcon","tagName","okButton","label","createDetailsAnchorHref","getUrl","wpTarget","blockId","createDetailsAnchorLabel","createTitle","partial","reasonHeader","creatorHeader","user","gender","expiryHeader","icon","parseSaveError","actionParams","EditorGateway","api","title","sectionId","oldId","isNewPage","undefined","fromModified","hasChanged","getBlockInfo","pageObj","blockedError","actions","edit","Array","isArray","some","error","indexOf","code","data","blockinfo","loader","load","getContent","self","resolve","Deferred","userinfo","prop","meta","rvprop","titles","intestactions","intestactionsdetail","uiprop","rvstartid","isNumeric","rvsection","get","then","resp","revision","reject","query","pages","missing","revisions","timestamp","originalContent","setContent","setPrependText","prependtext","save","result","apiOptions","action","summary","captchaid","captchaId","captchaword","captchaWord","basetimestamp","starttimestamp","section","postWithToken","saveContent","abortPreview","_pending","abort","getPreview","request","sectionLine","sectionpreview","pst","mobileformat","post","parse","sections","anchor","line","id","promise","EditorOverlayBase","Section","saveFailureMessage","VisualEditorOverlay","MessageBox","EditorOverlay","dataPromise","isFirefox","test","window","navigator","userAgent","gateway","readOnly","isVisualEditorEnabled","editSwitcher","editingMsg","isVisualEditor","previewingMsg","events","input .wikitext-editor","editor","ns","config","namespaces","onInputWikitextEditor","val","onClickContinue","ev","isAnon","target","hasClass","_showEditorAfterWarning","onClickBack","_hidePreview","$anonWarning","log","using","switchToolbar","toolFactory","OO","ui","ToolFactory","toolGroupFactory","ToolGroupFactory","register","libs","ve","MWEditModeVisualTool","MWEditModeSourceTool","Toolbar","classes","on","mode","confirm","onStageChanges","_switchToVisualEditor","setup","include","html","$element","emit","$preview","$content","length","prepend","_renderAnonWarning","$anonHiddenButtons","hideSpinner","abuseFilterPanel","appendTo","_resizeEditor","bind","_loadContent","params","returnto","returnTo","returntoquery","warning","queryParams","signupParams","signupQueryParams","anonymousEditorActions","block","href","append","map","showSpinner","hideSpinnerAndShowPreview","scrollTop","getDocument","mainpage","parsedText","parsedSectionLine","parseHTML","el","scrollTo","showHidden","container","$scrollContainer","Element","static","getClosestScrollableContainer","css","height","_parseBlockInfo","blockInfo","expiry","reason","moment","blockpartial","creator","blockedby","url","duration","blockid","blockexpiry","format","to","blockreason","wikitext","parser","ast","jqueryMsg","wikiTextToAst","emitter","e","jqueryMsgParse","escape","escaped","toggle","reportError","mechanism","storage","set","targetLoader","addPlugin","loadModules","switched","switching","replaceCurrent","_showAbuseFilter","onSaveBegin","confirmAborted","location","onSaveComplete","onSaveFailure","heading","details","handleCaptcha","router","applyHeaderOptions","isBorderBox","editHeader","isVE","hasToolbar","destroyTarget","destroy","overlay","init","targetFactory","create","once","retval","switchToEditor","switchToSourceEditor","navigateTo","document","path","useReplaceState","getSurface","getModel","hasBeenModified","saved","m","schemaEditAttemptStep","define","trackdebug","getParamValue","getState","Schema","eventLog","sampleRate","actionPrefixMap","saveIntent","saveAttempt","saveSuccess","saveFailure","timing","page_id","revision_id","page_title","page_ns","user_id","getId","user_class","user_editcount","mw_version","platform","integration","page_token","getPageviewToken","session_token","sessionId","version","trackSubscribe","topic","timeStamp","actionPrefix","Math","round","event","ready","warn","abort_type","computeDuration","is_oversample","inSample","console","editor_interface"],"mappings":"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","file":"mobile.editor.overlay.js","sourcesContent":["var Button = require( '../mobile.startup/Button' ),\n\tutil = require( '../mobile.startup/util' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\tOverlay = require( '../mobile.startup/Overlay' );\n\n/**\n * Overlay that shows a message about abuse.\n * This overlay is rendered when the error code from the API\n * is related to the abusefilter extension.\n * @class AbuseFilterOverlay\n * @extends Overlay\n * @param {Object} props\n */\nfunction AbuseFilterOverlay( props ) {\n\tOverlay.call( this,\n\t\tutil.extend( {\n\t\t\tclassName: 'overlay abusefilter-overlay'\n\t\t}, props )\n\t);\n}\n\nmfExtend( AbuseFilterOverlay, Overlay, {\n\t/**\n\t * @memberof AbuseFilterOverlay\n\t * @instance\n\t * @mixes Overlay#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {Object} defaults.confirmButton options for a confirm Button\n\t */\n\tdefaults: util.extend( {}, Overlay.prototype.defaults, {\n\t\tconfirmButton: new Button( {\n\t\t\tadditionalClassNames: 'cancel',\n\t\t\tprogressive: true\n\t\t} ).options\n\t} ),\n\t/**\n\t * @memberof AbuseFilterOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, Overlay.prototype.templatePartials, {\n\t\tbutton: Button.prototype.template,\n\t\tcontent: util.template( `\n<div class=\"content\">\n\t{{{message}}}\n\t{{#confirmButton}}{{>button}}{{/confirmButton}}\n</div>\n\t\t` )\n\t} ),\n\t/**\n\t * @inheritdoc\n\t * @memberof AbuseFilterOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tOverlay.prototype.postRender.apply( this );\n\t\t// make links open in separate tabs\n\t\tthis.$el.find( 'a' ).attr( 'target', '_blank' );\n\t}\n} );\n\nmodule.exports = AbuseFilterOverlay;\n","var util = require( '../mobile.startup/util' ),\n\tView = require( '../mobile.startup/View' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\tAbuseFilterOverlay = require( './AbuseFilterOverlay' );\n\n/**\n * Panel that shows an error message related to the abusefilter extension.\n * @class AbuseFilterPanel\n * @extends View\n * @uses AbuseFilterOverlay\n *\n * @param {Object} options Configuration options\n * FIXME: should extend Panel not View. Or the name should be changed to something meaningful.\n */\nfunction AbuseFilterPanel( options ) {\n\tthis.isDisallowed = false;\n\tthis.overlayManager = options.overlayManager;\n\tView.call( this,\n\t\tutil.extend( {\n\t\t\tclassName: 'panel hidden'\n\t\t}, options )\n\t);\n}\n\nmfExtend( AbuseFilterPanel, View, {\n\t/**\n\t * @memberof AbuseFilterPanel\n\t * @instance\n\t * @mixes View#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {string} defaults.readMoreMsg A caption for the button\n\t * allowing the user to read more about the problems with their edit.\n\t * @property {OverlayManager} defaults.overlayManager instance\n\t */\n\tdefaults: {\n\t\treadMoreMsg: mw.msg( 'mobile-frontend-editor-abusefilter-read-more' )\n\t},\n\t/**\n\t * @memberof AbuseFilterPanel\n\t * @instance\n\t */\n\ttemplate: util.template( `\n<div class=\"message\">\n\t<p></p><a href=\"#/abusefilter\" class=\"readmore\">{{readMoreMsg}}</a>\n</div>\n\t` ),\n\t/**\n\t * Show the panel. Create a route to show AbuseFilterOverlay with message.\n\t * @memberof AbuseFilterPanel\n\t * @instance\n\t * @param {string} type The type of alert, e.g. 'warning' or 'disallow'\n\t * @param {string} message Message to show in the AbuseFilter overlay\n\t */\n\tshow: function ( type, message ) {\n\t\tvar msg;\n\n\t\t// OverlayManager will replace previous instance of the route if present\n\t\tthis.overlayManager.add( /^\\/abusefilter$/, function () {\n\t\t\treturn new AbuseFilterOverlay( {\n\t\t\t\tmessage: message\n\t\t\t} );\n\t\t} );\n\n\t\tif ( type === 'warning' ) {\n\t\t\tmsg = mw.msg( 'mobile-frontend-editor-abusefilter-warning' );\n\t\t} else if ( type === 'disallow' ) {\n\t\t\tmsg = mw.msg( 'mobile-frontend-editor-abusefilter-disallow' );\n\t\t\tthis.isDisallowed = true;\n\t\t}\n\n\t\tthis.$el.find( '.message p' ).text( msg );\n\t\tthis.$el.removeClass( 'hidden' );\n\t},\n\n\t/**\n\t * Hide the panel.\n\t * @memberof AbuseFilterPanel\n\t * @instance\n\t */\n\thide: function () {\n\t\tthis.$el.addClass( 'hidden' );\n\t}\n} );\n\nmodule.exports = AbuseFilterPanel;\n","'use strict';\nvar Drawer = require( '../mobile.startup/Drawer' ),\n\tButton = require( '../mobile.startup/Button' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\tIcon = require( '../mobile.startup/Icon' ),\n\tutil = require( '../mobile.startup/util' );\n\n/**\n * This creates the drawer at the bottom of the screen that appears when a\n * blocked user tries to edit.\n * @class BlockReason\n * @extends Drawer\n */\nfunction BlockMessage() {\n\tDrawer.apply( this, arguments );\n}\n\nmfExtend( BlockMessage, Drawer, {\n\t/**\n\t * @memberof BlockMessage\n\t * @instance\n\t */\n\tdefaults: util.extend( {}, Drawer.prototype.defaults, {\n\t\tstopHandIcon: new Icon( {\n\t\t\tname: 'stop-hand'\n\t\t} ).options,\n\t\tuserIcon: new Icon( {\n\t\t\ttagName: 'span',\n\t\t\tname: 'profile'\n\t\t} ).options,\n\t\tokButton: new Button( {\n\t\t\tlabel: mw.msg( 'ok' ),\n\t\t\ttagName: 'button',\n\t\t\tprogressive: true,\n\t\t\tadditionalClassNames: 'cancel'\n\t\t} ).options,\n\t\tcreateDetailsAnchorHref: function () {\n\t\t\treturn mw.util.getUrl( 'Special:BlockList', { wpTarget: '#' + this.blockId } );\n\t\t},\n\t\tcreateDetailsAnchorLabel: function () {\n\t\t\treturn mw.msg( 'mobile-frontend-editor-blocked-drawer-help' );\n\t\t},\n\t\tcreateTitle: function () {\n\t\t\treturn this.partial ? mw.msg( 'mobile-frontend-editor-blocked-drawer-title-partial' ) : mw.msg( 'mobile-frontend-editor-blocked-drawer-title' );\n\t\t},\n\t\treasonHeader: mw.msg( 'mobile-frontend-editor-blocked-drawer-reason-header' ),\n\t\tcreatorHeader: function () {\n\t\t\t// The gender is the subject (the blockee) not the object (the blocker).\n\t\t\treturn mw.msg( 'mobile-frontend-editor-blocked-drawer-creator-header',\n\t\t\t\tthis.user.options.gender || 'unknown' );\n\t\t},\n\t\texpiryHeader: mw.msg( 'mobile-frontend-editor-blocked-drawer-expiry-header' )\n\t} ),\n\t/**\n\t * @memberof BlockMessage\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, Drawer.prototype.templatePartials, {\n\t\tbutton: Button.prototype.template,\n\t\ticon: Icon.prototype.template\n\t} ),\n\t/**\n\t * @memberof BlockMessage\n\t * @instance\n\t */\n\ttemplate: util.template( `\n{{#collapseIcon}}{{>icon}}{{/collapseIcon}}\n<div class=\"block-message\">\n  <div class=\"block-message-icon\">\n    {{#stopHandIcon}}{{>icon}}{{/stopHandIcon}}\n  </div>\n  <div class=\"block-message-info\">\n    <div class=\"block-message-item block-message-title\">\n      <h5>{{ createTitle }}</h5>\n    </div>\n    <div class=\"block-message-data\">\n      {{#reason}}\n        <div class=\"block-message-item\">\n          <h6>{{ reasonHeader }}</h6>\n          <div><strong>{{{ reason }}}</strong></div>\n        </div>\n      {{/reason}}\n      <div class=\"block-message-item block-message-creator\">\n        <h6>{{ creatorHeader }}</h6>\n        <div><strong><a href=\"{{ creator.url }}\">{{#userIcon}}{{>icon}}{{/userIcon}}{{ creator.name }}</a></strong></div>\n      </div>\n      {{#expiry}}\n        <div class=\"block-message-item\">\n          <h6>{{ expiryHeader }}</h6>\n          <div><strong>{{#duration}}{{ duration }} / {{/duration}}{{ expiry }}</strong></div>\n        </div>\n      {{/expiry}}\n    </div>\n    <div class=\"block-message-item block-message-buttons\">\n      {{#okButton}}\n        {{>button}}\n      {{/okButton}}\n      <a href=\"{{ createDetailsAnchorHref }}\">{{ createDetailsAnchorLabel }}</a>\n    </div>\n  </div>\n</div>\n\t` )\n} );\n\nmodule.exports = BlockMessage;\n","var util = require( '../mobile.startup/util' ),\n\tparseSaveError = require( './parseSaveError' ),\n\tactionParams = require( '../mobile.startup/actionParams' );\n\n/**\n * API that helps save and retrieve page content\n * @class EditorGateway\n *\n * @param {Object} options Configuration options\n * @param {mw.Api} options.api an Api to use.\n * @param {string} options.title the title to edit\n * @param {number} options.sectionId the id of the section to operate edits on.\n * @param {number} [options.oldId] revision to operate on. If absent defaults to latest.\n * @param {boolean} [options.isNewPage] whether the page being created is new\n * @param {boolean} [options.fromModified] whether the page was loaded in a modified state\n */\nfunction EditorGateway( options ) {\n\tthis.api = options.api;\n\tthis.title = options.title;\n\tthis.sectionId = options.sectionId;\n\tthis.oldId = options.oldId;\n\t// return an empty section for new pages\n\tthis.content = options.isNewPage ? '' : undefined;\n\tthis.fromModified = options.fromModified;\n\tthis.hasChanged = options.fromModified;\n}\n\nEditorGateway.prototype = {\n\t/**\n\t * Get the block (if there is one) from the result.\n\t * @memberof EditorGateway\n\t * @param {Object} pageObj\n\t * @return {Object|null}\n\t */\n\tgetBlockInfo: function ( pageObj ) {\n\t\tvar blockedError;\n\n\t\tif ( pageObj.actions &&\n\t\t\tpageObj.actions.edit &&\n\t\t\tArray.isArray( pageObj.actions.edit )\n\t\t) {\n\t\t\tpageObj.actions.edit.some( function ( error ) {\n\t\t\t\tif ( [ 'blocked', 'autoblocked' ].indexOf( error.code ) !== -1 ) {\n\t\t\t\t\tblockedError = error;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t} );\n\n\t\t\tif ( blockedError && blockedError.data && blockedError.data.blockinfo ) {\n\t\t\t\t// Preload library used by EditorOverlay\n\t\t\t\t// to format block expiry datetime and duration\n\t\t\t\tmw.loader.load( 'moment' );\n\n\t\t\t\treturn blockedError.data.blockinfo;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\t/**\n\t * Get the content of a page.\n\t * @memberof EditorGateway\n\t * @instance\n\t * @return {jQuery.Promise}\n\t */\n\tgetContent: function () {\n\t\tvar options,\n\t\t\tself = this;\n\n\t\tfunction resolve() {\n\t\t\treturn util.Deferred().resolve( {\n\t\t\t\ttext: self.content || '',\n\t\t\t\tblockinfo: self.blockinfo,\n\t\t\t\tuserinfo: self.userinfo\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.content !== undefined ) {\n\t\t\treturn resolve();\n\t\t} else {\n\t\t\toptions = actionParams( {\n\t\t\t\tprop: [ 'revisions', 'info' ],\n\t\t\t\tmeta: 'userinfo',\n\t\t\t\trvprop: [ 'content', 'timestamp' ],\n\t\t\t\ttitles: self.title,\n\t\t\t\t// get block information for this user\n\t\t\t\tintestactions: 'edit',\n\t\t\t\tintestactionsdetail: 'full',\n\t\t\t\tuiprop: 'options'\n\t\t\t} );\n\t\t\t// Load text of old revision if desired\n\t\t\tif ( this.oldId ) {\n\t\t\t\toptions.rvstartid = this.oldId;\n\t\t\t}\n\t\t\t// See Bug 50136 - passing rvsection will fail with non wikitext\n\t\t\tif ( util.isNumeric( this.sectionId ) ) {\n\t\t\t\toptions.rvsection = this.sectionId;\n\t\t\t}\n\t\t\treturn this.api.get( options ).then( function ( resp ) {\n\t\t\t\tvar revision, pageObj;\n\n\t\t\t\tif ( resp.error ) {\n\t\t\t\t\treturn util.Deferred().reject( resp.error.code );\n\t\t\t\t}\n\n\t\t\t\tpageObj = resp.query.pages[0];\n\t\t\t\t// page might not exist and caller might not have known.\n\t\t\t\tif ( pageObj.missing !== undefined ) {\n\t\t\t\t\tself.content = '';\n\t\t\t\t} else {\n\t\t\t\t\trevision = pageObj.revisions[0];\n\t\t\t\t\tself.content = revision.content;\n\t\t\t\t\tself.timestamp = revision.timestamp;\n\t\t\t\t}\n\n\t\t\t\tself.userinfo = resp.query.userinfo;\n\n\t\t\t\t// save content a second time to be able to check for changes\n\t\t\t\tself.originalContent = self.content;\n\t\t\t\tself.blockinfo = self.getBlockInfo( pageObj );\n\n\t\t\t\treturn resolve();\n\t\t\t} );\n\t\t}\n\t},\n\n\t/**\n\t * Mark content as modified and set changes to be submitted when #save\n\t * is invoked.\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {string} content New section content.\n\t */\n\tsetContent: function ( content ) {\n\t\tif ( this.originalContent !== content || this.fromModified ) {\n\t\t\tthis.hasChanged = true;\n\t\t} else {\n\t\t\tthis.hasChanged = false;\n\t\t}\n\t\tthis.content = content;\n\t},\n\n\t/**\n\t * Mark content as modified and set text that should be prepended to given\n\t * section when #save is invoked.\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {string} text Text to be prepended.\n\t */\n\tsetPrependText: function ( text ) {\n\t\tthis.prependtext = text;\n\t\tthis.hasChanged = true;\n\t},\n\n\t/**\n\t * Save the new content of the section, previously set using #setContent.\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {Object} options Configuration options\n\t * @param {string} [options.summary] Optional summary for the edit.\n\t * @param {string} [options.captchaId] If CAPTCHA was requested, ID of the\n\t * captcha.\n\t * @param {string} [options.captchaWord] If CAPTCHA was requested, term\n\t * displayed in the CAPTCHA.\n\t * @return {jQuery.Deferred} On failure callback is passed an object with\n\t * `type` and `details` properties. `type` is a string describing the type\n\t * of error, `details` can be any object (usually error message).\n\t */\n\tsave: function ( options ) {\n\t\tvar self = this,\n\t\t\tresult = util.Deferred();\n\n\t\toptions = options || {};\n\n\t\t/**\n\t\t * Save content. Make an API request.\n\t\t * @return {jQuery.Deferred}\n\t\t */\n\t\tfunction saveContent() {\n\t\t\tvar apiOptions = {\n\t\t\t\taction: 'edit',\n\t\t\t\ttitle: self.title,\n\t\t\t\tsummary: options.summary,\n\t\t\t\tcaptchaid: options.captchaId,\n\t\t\t\tcaptchaword: options.captchaWord,\n\t\t\t\tbasetimestamp: self.timestamp,\n\t\t\t\tstarttimestamp: self.timestamp\n\t\t\t};\n\n\t\t\tif ( self.content !== undefined ) {\n\t\t\t\tapiOptions.text = self.content;\n\t\t\t} else if ( self.prependtext ) {\n\t\t\t\tapiOptions.prependtext = self.prependtext;\n\t\t\t}\n\n\t\t\tif ( util.isNumeric( self.sectionId ) ) {\n\t\t\t\tapiOptions.section = self.sectionId;\n\t\t\t}\n\n\t\t\tself.api.postWithToken( 'csrf', apiOptions ).then( function ( data ) {\n\t\t\t\tif ( data && data.edit && data.edit.result === 'Success' ) {\n\t\t\t\t\tself.hasChanged = false;\n\t\t\t\t\tresult.resolve();\n\t\t\t\t} else {\n\t\t\t\t\tresult.reject( parseSaveError( data ) );\n\t\t\t\t}\n\t\t\t}, function ( code, data ) {\n\t\t\t\tresult.reject( parseSaveError( data, code || 'unknown' ) );\n\t\t\t} );\n\t\t\treturn result;\n\t\t}\n\n\t\treturn saveContent();\n\t},\n\n\t/**\n\t * Abort any pending previews.\n\t * @memberof EditorGateway\n\t * @instance\n\t */\n\tabortPreview: function () {\n\t\tif ( this._pending ) {\n\t\t\tthis._pending.abort();\n\t\t}\n\t},\n\n\t/**\n\t * Get page preview from the API and abort any existing previews.\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {Object} options API query parameters\n\t * @return {jQuery.Deferred}\n\t */\n\tgetPreview: function ( options ) {\n\t\tvar result = util.Deferred(),\n\t\t\tsectionLine = '',\n\t\t\tsectionId = '',\n\t\t\trequest,\n\t\t\tself = this;\n\n\t\tutil.extend( options, {\n\t\t\taction: 'parse',\n\t\t\t// Enable section preview mode to avoid errors (bug 49218)\n\t\t\tsectionpreview: true,\n\t\t\t// needed for pre-save transform to work (bug 53692)\n\t\t\tpst: true,\n\t\t\t// Output mobile HTML (bug 54243)\n\t\t\tmobileformat: true,\n\t\t\ttitle: this.title,\n\t\t\tprop: [ 'text', 'sections' ]\n\t\t} );\n\n\t\tthis.abortPreview();\n\n\t\trequest = this.api.post( options );\n\t\tthis._pending = request.then( function ( resp ) {\n\t\t\tif ( resp && resp.parse && resp.parse.text ) {\n\t\t\t\t// section 0 haven't a section name so skip\n\t\t\t\tif ( self.sectionId !== 0 &&\n\t\t\t\t\tresp.parse.sections !== undefined &&\n\t\t\t\t\tresp.parse.sections[0] !== undefined\n\t\t\t\t) {\n\t\t\t\t\tif ( resp.parse.sections[0].anchor !== undefined ) {\n\t\t\t\t\t\tsectionId = resp.parse.sections[0].anchor;\n\t\t\t\t\t}\n\t\t\t\t\tif ( resp.parse.sections[0].line !== undefined ) {\n\t\t\t\t\t\tsectionLine = resp.parse.sections[0].line;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresult.resolve( {\n\t\t\t\t\ttext: resp.parse.text['*'],\n\t\t\t\t\tid: sectionId,\n\t\t\t\t\tline: sectionLine\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tresult.reject();\n\t\t\t}\n\t\t}, function () {\n\t\t\tresult.reject();\n\t\t} ).promise( {\n\t\t\tabort: function () { request.abort(); }\n\t\t} );\n\n\t\treturn result;\n\t}\n};\n\nmodule.exports = EditorGateway;\n","var EditorOverlayBase = require( './EditorOverlayBase' ),\n\tutil = require( '../mobile.startup/util' ),\n\tSection = require( '../mobile.startup/Section' ),\n\tsaveFailureMessage = require( './saveFailureMessage' ),\n\tEditorGateway = require( './EditorGateway' ),\n\tAbuseFilterPanel = require( './AbuseFilterPanel' ),\n\tButton = require( '../mobile.startup/Button' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\tBlockMessage = require( './BlockMessage' ),\n\tVisualEditorOverlay = require( './VisualEditorOverlay' ),\n\tMessageBox = require( '../mobile.startup/MessageBox' );\n\n/**\n * Overlay that shows an editor\n * @class EditorOverlay\n * @uses Section\n * @uses AbuseFilterPanel\n * @uses EditorGateway\n * @uses VisualEditorOverlay\n * @extends EditorOverlayBase\n *\n * @param {Object} options Configuration options\n * @param {jQuery.Promise} [dataPromise] Optional promise for loading content\n */\nfunction EditorOverlay( options, dataPromise ) {\n\tthis.isFirefox = /firefox/i.test( window.navigator.userAgent );\n\tthis.gateway = new EditorGateway( {\n\t\tapi: options.api,\n\t\ttitle: options.title,\n\t\tsectionId: options.sectionId,\n\t\toldId: options.oldId,\n\t\tisNewPage: options.isNewPage,\n\t\tfromModified: !!dataPromise\n\t} );\n\tthis.readOnly = !!options.oldId; // If old revision, readOnly mode\n\tthis.dataPromise = dataPromise;\n\tif ( this.isVisualEditorEnabled() ) {\n\t\toptions.editSwitcher = true;\n\t}\n\tif ( this.readOnly ) {\n\t\toptions.readOnly = true;\n\t\toptions.editingMsg = mw.msg( 'mobile-frontend-editor-viewing-source-page', options.title );\n\t} else {\n\t\toptions.editingMsg = mw.msg( 'mobile-frontend-editor-editing-page', options.title );\n\t}\n\t// be explicit here. This may have been initialized from VE.\n\toptions.isVisualEditor = false;\n\toptions.previewingMsg = mw.msg( 'mobile-frontend-editor-previewing-page', options.title );\n\tEditorOverlayBase.call(\n\t\tthis,\n\t\tutil.extend( true,\n\t\t\t{ events: { 'input .wikitext-editor': 'onInputWikitextEditor' } },\n\t\t\toptions\n\t\t)\n\t);\n\tif ( this.gateway.fromModified ) {\n\t\tthis.$el.find( '.continue, .submit' ).prop( 'disabled', false );\n\t}\n}\n\nmfExtend( EditorOverlay, EditorOverlayBase, {\n\t/**\n\t * @inheritdoc\n\t * @memberof EditorOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, EditorOverlayBase.prototype.templatePartials, {\n\t\tcontent: util.template( `\n<div lang=\"{{contentLang}}\" dir=\"{{contentDir}}\">\n\t<textarea class=\"wikitext-editor\" id=\"wikitext-editor\" cols=\"40\" rows=\"10\" placeholder=\"{{placeholder}}\"></textarea>\n\t<div class=\"preview content\"></div>\n\t{{#isAnon}}\n\t<div class=\"anonwarning content\">\n\t\t<div>\n\t\t\t<!-- warning will go here -->\n\t\t\t<div class=\"actions\"></div>\n\t\t</div>\n\t</div>\n\t{{/isAnon}}\n</div>\n\t\t` )\n\t} ),\n\t/**\n\t * @memberof EditorOverlay\n\t * @instance\n\t */\n\teditor: 'wikitext',\n\t/**\n\t * @memberof EditorOverlay\n\t * @instance\n\t */\n\tsectionLine: '',\n\n\t/**\n\t * Check whether VisualEditor is enabled or not.\n\t * @memberof EditorOverlay\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisVisualEditorEnabled: function () {\n\t\tvar ns = mw.config.get( 'wgVisualEditorConfig' ) &&\n\t\t\tmw.config.get( 'wgVisualEditorConfig' ).namespaces;\n\n\t\treturn ns &&\n\t\t\tns.indexOf(\n\t\t\t\tmw.config.get( 'wgNamespaceNumber' )\n\t\t\t) > -1 &&\n\t\t\tmw.config.get( 'wgTranslatePageTranslation' ) !== 'translation' &&\n\t\t\tmw.config.get( 'wgPageContentModel' ) === 'wikitext';\n\t},\n\t/**\n\t * Wikitext Editor input handler\n\t * @memberof EditorOverlay\n\t * @instance\n\t */\n\tonInputWikitextEditor: function () {\n\t\tthis.gateway.setContent( this.$el.find( '.wikitext-editor' ).val() );\n\t\tthis.$el.find( '.continue, .submit' ).prop( 'disabled', false );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof EditorOverlay\n\t * @instance\n\t */\n\tonClickContinue: function ( ev ) {\n\t\t// handle the click on \"Edit without logging in\"\n\t\tif ( this.options.isAnon && this.$el.find( ev.target ).hasClass( 'anonymous' ) ) {\n\t\t\tthis._showEditorAfterWarning();\n\t\t\treturn false;\n\t\t}\n\t\tEditorOverlayBase.prototype.onClickContinue.apply( this, arguments );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof EditorOverlay\n\t * @instance\n\t */\n\tonClickBack: function () {\n\t\tEditorOverlayBase.prototype.onClickBack.apply( this, arguments );\n\t\tthis._hidePreview();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof EditorOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this,\n\t\t\toptions = this.options,\n\t\t\t$anonWarning = this.$el.find( '.anonwarning' );\n\n\t\t// log edit attempt\n\t\tthis.log( { action: 'ready' } );\n\t\tthis.log( { action: 'loaded' } );\n\n\t\tif ( this.isVisualEditorEnabled() ) {\n\t\t\tmw.loader.using( 'ext.visualEditor.switching' ).then( function () {\n\t\t\t\tvar switchToolbar,\n\t\t\t\t\ttoolFactory = new OO.ui.ToolFactory(),\n\t\t\t\t\ttoolGroupFactory = new OO.ui.ToolGroupFactory();\n\n\t\t\t\ttoolFactory.register( mw.libs.ve.MWEditModeVisualTool );\n\t\t\t\ttoolFactory.register( mw.libs.ve.MWEditModeSourceTool );\n\t\t\t\tswitchToolbar = new OO.ui.Toolbar( toolFactory, toolGroupFactory, {\n\t\t\t\t\tclasses: [ 'editor-switcher' ]\n\t\t\t\t} );\n\n\t\t\t\tswitchToolbar.on( 'switchEditor', function ( mode ) {\n\t\t\t\t\tif ( mode === 'visual' ) {\n\t\t\t\t\t\t// If the user tries to switch to the VisualEditor,\n\t\t\t\t\t\t// check if any changes have been made,\n\t\t\t\t\t\t// and if so, tell the user they have to save first.\n\t\t\t\t\t\tif ( !self.gateway.hasChanged ) {\n\t\t\t\t\t\t\t// TODO: Be more selective in which options we pass between editors\n\t\t\t\t\t\t\tself._switchToVisualEditor( self.options );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// TODO: Replace with an OOUI dialog\n\t\t\t\t\t\t\tif ( window.confirm( mw.msg( 'mobile-frontend-editor-switch-confirm' ) ) ) {\n\t\t\t\t\t\t\t\tself.onStageChanges();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tswitchToolbar.setup( [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'editMode',\n\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\ticon: 'edit',\n\t\t\t\t\t\ttitle: mw.msg( 'visualeditor-mweditmode-tooltip' ),\n\t\t\t\t\t\tinclude: [ 'editModeVisual', 'editModeSource' ]\n\t\t\t\t\t}\n\t\t\t\t] );\n\n\t\t\t\tself.$el.find( '.switcher-container' ).html( switchToolbar.$element );\n\t\t\t\tswitchToolbar.emit( 'updateState' );\n\t\t\t} );\n\t\t}\n\n\t\tEditorOverlayBase.prototype.postRender.apply( this );\n\n\t\tthis.$preview = this.$el.find( '.preview' );\n\t\tthis.$content = this.$el.find( '.wikitext-editor' );\n\t\tthis.$content.addClass( 'mw-editfont-' + mw.user.options.get( 'editfont' ) );\n\t\tif ( options.isAnon ) {\n\t\t\t// add anonymous warning actions if present\n\t\t\tif ( $anonWarning.length ) {\n\t\t\t\t$anonWarning.find( ' > div' ).prepend(\n\t\t\t\t\tnew MessageBox( {\n\t\t\t\t\t\tclassName: 'warningbox anon-msg',\n\t\t\t\t\t\tmsg: mw.msg( 'mobile-frontend-editor-anonwarning' )\n\t\t\t\t\t} ).$el\n\t\t\t\t);\n\t\t\t\tif ( options.isAnon ) {\n\t\t\t\t\tthis._renderAnonWarning( $anonWarning, options );\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.$anonWarning = $anonWarning;\n\t\t\tthis.$content.hide();\n\t\t\t// the user has to click login, signup or edit without login,\n\t\t\t// disable \"Next\" button on top right\n\t\t\tthis.$anonHiddenButtons = this.$el.find( '.overlay-header .continue, .editor-switcher' ).hide();\n\t\t\tthis.hideSpinner();\n\t\t}\n\t\t// make license links open in separate tabs\n\t\tthis.$el.find( '.license a' ).attr( 'target', '_blank' );\n\n\t\tthis.abuseFilterPanel = new AbuseFilterPanel( {\n\t\t\toverlayManager: this.overlayManager\n\t\t} ).appendTo( this.$el.find( '.panels' ) );\n\n\t\t// If in readOnly mode, make textarea readonly\n\t\tif ( this.readOnly ) {\n\t\t\tthis.$content.prop( 'readonly', true );\n\t\t}\n\n\t\tthis.$content.on( 'input', this._resizeEditor.bind( this ) );\n\n\t\tif ( !self.options.isAnon ) {\n\t\t\tthis._loadContent();\n\t\t}\n\t},\n\n\t/**\n\t * Sets additional values used for anonymous editing warning.\n\t * @memberof EditorOverlay\n\t * @instance\n\t * @private\n\t * @param {jQuery.Element} $anonWarning\n\t * @param {Object} options\n\t */\n\t_renderAnonWarning: function ( $anonWarning, options ) {\n\t\tvar params = util.extend( {\n\t\t\t// use wgPageName as this includes the namespace if outside Main\n\t\t\t\treturnto: options.returnTo || mw.config.get( 'wgPageName' ),\n\t\t\t\treturntoquery: 'action=edit&section=' + options.sectionId,\n\t\t\t\twarning: 'mobile-frontend-edit-login-action'\n\t\t\t}, options.queryParams ),\n\t\t\tsignupParams = util.extend( {\n\t\t\t\ttype: 'signup',\n\t\t\t\twarning: 'mobile-frontend-edit-signup-action'\n\t\t\t}, options.signupQueryParams ),\n\t\t\tanonymousEditorActions = [\n\t\t\t\tnew Button( {\n\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-editor-anon' ),\n\t\t\t\t\tblock: true,\n\t\t\t\t\tadditionalClassNames: 'continue anonymous',\n\t\t\t\t\tprogressive: true\n\t\t\t\t} ),\n\t\t\t\tnew Button( {\n\t\t\t\t\tblock: true,\n\t\t\t\t\thref: mw.util.getUrl( 'Special:UserLogin', params ),\n\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-login' )\n\t\t\t\t} ),\n\t\t\t\tnew Button( {\n\t\t\t\t\tblock: true,\n\t\t\t\t\thref: mw.util.getUrl( 'Special:UserLogin', util.extend( params, signupParams ) ),\n\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-signup' )\n\t\t\t\t} )\n\t\t\t];\n\n\t\t$anonWarning.find( '.actions' ).append(\n\t\t\tanonymousEditorActions.map( function ( action ) {\n\t\t\t\treturn action.$el;\n\t\t\t} )\n\t\t);\n\t},\n\n\t/**\n\t * Handles click on \"Edit without login\" in anonymous editing warning.\n\t * @memberof EditorOverlay\n\t * @instance\n\t * @private\n\t */\n\t_showEditorAfterWarning: function () {\n\t\tthis.showSpinner();\n\t\tthis.$anonWarning.hide();\n\t\t// reenable \"Next\" button\n\t\tthis.$anonHiddenButtons.show();\n\t\tthis._loadContent();\n\t},\n\n\t/**\n\t * Prepares the preview interface and reveals the save screen of the overlay\n\t * @inheritdoc\n\t * @memberof EditorOverlay\n\t * @instance\n\t */\n\tonStageChanges: function () {\n\t\tvar self = this,\n\t\t\tparams = {\n\t\t\t\ttext: this.getContent()\n\t\t\t};\n\n\t\tthis.scrollTop = util.getDocument().find( 'body' ).scrollTop();\n\t\tthis.$content.hide();\n\t\tthis.showSpinner();\n\n\t\tif ( mw.config.get( 'wgIsMainPage' ) ) {\n\t\t\tparams.mainpage = 1; // Setting it to 0 will have the same effect\n\t\t}\n\n\t\tfunction hideSpinnerAndShowPreview() {\n\t\t\tself.hideSpinner();\n\t\t\tself.$preview.show();\n\t\t}\n\n\t\tthis.gateway.getPreview( params ).then( function ( result ) {\n\t\t\tvar parsedText = result.text,\n\t\t\t\tparsedSectionLine = result.line;\n\n\t\t\tself.sectionId = result.id;\n\t\t\t// On desktop edit summaries strip tags. Mimic this behavior on mobile devices\n\t\t\tself.sectionLine = self.parseHTML( '<div>' ).html( parsedSectionLine ).text();\n\t\t\tnew Section( {\n\t\t\t\tel: self.$preview,\n\t\t\t\ttext: parsedText\n\t\t\t} ).$el.find( 'a' ).on( 'click', false );\n\n\t\t\thideSpinnerAndShowPreview();\n\t\t}, function () {\n\t\t\tself.$preview.addClass( 'error' ).text( mw.msg( 'mobile-frontend-editor-error-preview' ) );\n\n\t\t\thideSpinnerAndShowPreview();\n\t\t} );\n\n\t\tEditorOverlayBase.prototype.onStageChanges.apply( this, arguments );\n\t},\n\n\t/**\n\t * Hides the preview and reverts back to initial screen.\n\t * @memberof EditorOverlay\n\t * @instance\n\t * @private\n\t */\n\t_hidePreview: function () {\n\t\tthis.gateway.abortPreview();\n\t\tthis.hideSpinner();\n\t\tthis.$preview.removeClass( 'error' ).hide();\n\t\tthis.$content.show();\n\t\twindow.scrollTo( 0, this.scrollTop );\n\t\tthis.showHidden( '.initial-header' );\n\t\tthis.abuseFilterPanel.hide();\n\t},\n\n\t/**\n\t * Resize the editor textarea, maintaining scroll position in iOS\n\t * @memberof EditorOverlay\n\t * @instance\n\t */\n\t_resizeEditor: function () {\n\t\tvar scrollTop, container, $scrollContainer;\n\n\t\t// exiting early for firefox due to a bug that causes the page to scroll to top\n\t\t// whenever a caret is inserted T214880\n\t\tif ( this.isFirefox ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !this.$scrollContainer ) {\n\t\t\tcontainer = OO.ui.Element.static\n\t\t\t\t.getClosestScrollableContainer( this.$content[ 0 ] );\n\t\t\t// The scroll container will be either within the view\n\t\t\t// or the document element itself.\n\t\t\t$scrollContainer = this.$el.find( container ).length ?\n\t\t\t\tthis.$el.find( container ) : util.getDocument();\n\t\t\tthis.$scrollContainer = $scrollContainer;\n\t\t\tthis.$content.css( 'padding-bottom', this.$scrollContainer.height() * 0.6 );\n\t\t} else {\n\t\t\t$scrollContainer = this.$scrollContainer;\n\t\t}\n\n\t\t// Only do this if scroll container exists\n\t\tif ( this.$content.prop( 'scrollHeight' ) && $scrollContainer.length ) {\n\t\t\tscrollTop = $scrollContainer.scrollTop();\n\t\t\tthis.$content\n\t\t\t\t.css( 'height', 'auto' )\n\t\t\t\t// can't reuse prop( 'scrollHeight' ) because we need the current value\n\t\t\t\t.css( 'height', ( this.$content.prop( 'scrollHeight' ) + 2 ) + 'px' );\n\t\t\t$scrollContainer.scrollTop( scrollTop );\n\t\t}\n\t},\n\n\t/**\n\t * Set content to the user input field.\n\t * @memberof EditorOverlay\n\t * @instance\n\t * @param {string} content The content to set.\n\t */\n\tsetContent: function ( content ) {\n\t\tthis.$content\n\t\t\t.show()\n\t\t\t.val( content );\n\t\tthis._resizeEditor();\n\t},\n\n\t/**\n\t * Returns the content of the user input field.\n\t * @memberof EditorOverlay\n\t * @instance\n\t * @return {string}\n\t */\n\tgetContent: function () {\n\t\treturn this.$content.val();\n\t},\n\n\t/**\n\t * @memberof EditorOverlay\n\t * @instance\n\t * @param {string} data\n\t * @return {string|false}\n\t */\n\t_parseBlockInfo: function ( data ) {\n\t\tvar blockInfo, expiry, reason,\n\t\t\tmoment = window.moment;\n\n\t\t// Workaround to parse a message parameter for mw.message, see T96885\n\t\tfunction jqueryMsgParse( wikitext ) {\n\t\t\tvar parser, ast;\n\t\t\t// eslint-disable-next-line new-cap\n\t\t\tparser = new mw.jqueryMsg.parser();\n\t\t\ttry {\n\t\t\t\tast = parser.wikiTextToAst( wikitext );\n\t\t\t\treturn parser.emitter.emit( ast ).html();\n\t\t\t} catch ( e ) {\n\t\t\t\t// Ignore error as it's probably the parser error. Usually this is because we\n\t\t\t\t// can't parse templates.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tblockInfo = {\n\t\t\tpartial: data.blockinfo.blockpartial || false,\n\t\t\tuser: data.userinfo,\n\t\t\tcreator: {\n\t\t\t\tname: data.blockinfo.blockedby,\n\t\t\t\t// NS_USER === 2\n\t\t\t\turl: mw.util.getUrl(\n\t\t\t\t\tmw.config.get( 'wgFormattedNamespaces' )[2] + ':' +\n\t\t\t\t\tdata.blockinfo.blockedby\n\t\t\t\t)\n\t\t\t},\n\t\t\texpiry: null,\n\t\t\tduration: null,\n\t\t\treason: '',\n\t\t\tblockId: data.blockinfo.blockid\n\t\t};\n\n\t\texpiry = data.blockinfo.blockexpiry;\n\t\tif ( [ 'infinite', 'indefinite', 'infinity', 'never' ].indexOf( expiry ) === -1 ) {\n\t\t\tblockInfo.expiry = moment( expiry ).format( 'LLL' );\n\t\t\tblockInfo.duration = moment().to( expiry, true );\n\t\t}\n\n\t\treason = data.blockinfo.blockreason;\n\t\tif ( reason ) {\n\t\t\tblockInfo.reason = jqueryMsgParse( reason ) || mw.html.escape( reason );\n\t\t} else {\n\t\t\tblockInfo.reason = mw.message( 'mobile-frontend-editor-generic-block-reason' ).escaped();\n\t\t}\n\n\t\treturn blockInfo;\n\t},\n\n\t/**\n\t * Requests content from the API and reveals it in UI.\n\t * @memberof EditorOverlay\n\t * @instance\n\t * @private\n\t */\n\t_loadContent: function () {\n\t\tvar self = this,\n\t\t\t$el = this.$el;\n\n\t\tthis.$content.hide();\n\t\tthis.showSpinner();\n\t\t$el.addClass( 'overlay-loading' );\n\n\t\t( this.dataPromise || this.gateway.getContent() )\n\t\t\t.then( function ( result ) {\n\t\t\t\tvar block, message,\n\t\t\t\t\tcontent = result.text;\n\n\t\t\t\tself.setContent( content );\n\t\t\t\t// check if user is blocked\n\t\t\t\tif ( result.blockinfo ) {\n\t\t\t\t\t// Lazy-load moment only if it's needed,\n\t\t\t\t\t// it's somewhat large (it is already used on\n\t\t\t\t\t// mobile by Echo's notifications panel, where it's also lazy-loaded)\n\t\t\t\t\tmw.loader.using( 'moment' ).then( function () {\n\t\t\t\t\t\tblock = self._parseBlockInfo( result );\n\t\t\t\t\t\tmessage = new BlockMessage( block );\n\t\t\t\t\t\tmessage.toggle();\n\t\t\t\t\t\tself.hide();\n\t\t\t\t\t\tself.hideSpinner();\n\t\t\t\t\t\t$el.removeClass( 'overlay-loading' );\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tself.hideSpinner();\n\t\t\t\t\t$el.removeClass( 'overlay-loading' );\n\t\t\t\t}\n\t\t\t}, function () {\n\t\t\t\tself.reportError( mw.msg( 'mobile-frontend-editor-error-loading' ) );\n\t\t\t\t$el.removeClass( 'overlay-loading' );\n\t\t\t} );\n\t},\n\n\t/**\n\t * Loads a {VisualEditorOverlay} and replaces the existing EditorOverlay with it\n\t * based on the current option values.\n\t * @memberof EditorOverlay\n\t * @instance\n\t * @private\n\t * @param {Object} options Object passed to the constructor\n\t */\n\t_switchToVisualEditor: function ( options ) {\n\t\tvar self = this;\n\t\tthis.log( {\n\t\t\taction: 'abort',\n\t\t\ttype: 'switchnochange',\n\t\t\tmechanism: 'navigate'\n\t\t} );\n\t\t// Save a user setting indicating that this user prefers using the VisualEditor\n\t\tmw.storage.set( 'preferredEditor', 'VisualEditor' );\n\t\t// Load the VisualEditor and replace the SourceEditor overlay with it\n\t\tthis.showSpinner();\n\t\tthis.$content.hide();\n\t\tmw.loader.using( 'ext.visualEditor.targetLoader' ).then( function () {\n\t\t\tmw.libs.ve.targetLoader.addPlugin( 'mobile.editor.ve' );\n\t\t\treturn mw.libs.ve.targetLoader.loadModules( 'visual' );\n\t\t} ).then(\n\t\t\tfunction () {\n\t\t\t\toptions.EditorOverlay = EditorOverlay;\n\t\t\t\toptions.switched = true;\n\t\t\t\tself.hideSpinner();\n\t\t\t\t// Unset classes from other editor\n\t\t\t\tdelete options.className;\n\t\t\t\tself.switching = true;\n\t\t\t\tself.overlayManager.replaceCurrent( new VisualEditorOverlay( options ) );\n\t\t\t\tself.switching = false;\n\t\t\t},\n\t\t\tfunction () {\n\t\t\t\tself.hideSpinner();\n\t\t\t\tself.$content.show();\n\t\t\t\t// FIXME: We should show an error notification, but right now toast\n\t\t\t\t// notifications are not dismissible when shown within the editor.\n\t\t\t}\n\t\t);\n\t},\n\n\t/**\n\t * Reveals an abuse filter panel inside the view.\n\t * @memberof EditorOverlay\n\t * @instance\n\t * @private\n\t * @param {string} type The type of alert, e.g. 'warning' or 'disallow'\n\t * @param {string} message Message to show in the AbuseFilter overlay\n\t */\n\t_showAbuseFilter: function ( type, message ) {\n\t\tthis.abuseFilterPanel.show( type, message );\n\t\tthis.showHidden( '.save-header' );\n\t\t// disable continue and save buttons, reenabled when user changes content\n\t\tthis.$el.find( '.continue, .submit' ).prop( 'disabled', this.abuseFilterPanel.isDisallowed );\n\t},\n\n\t/**\n\t * Executed when the editor clicks the save/publish button. Handles logging and submitting\n\t * the save action to the editor API.\n\t * @inheritdoc\n\t * @memberof EditorOverlay\n\t * @instance\n\t */\n\tonSaveBegin: function () {\n\t\tvar self = this,\n\t\t\toptions = {\n\t\t\t\tsummary: this.$el.find( '.summary' ).val()\n\t\t\t};\n\n\t\tif ( self.sectionLine !== '' ) {\n\t\t\toptions.summary = '/* ' + self.sectionLine + ' */' + options.summary;\n\t\t}\n\t\tEditorOverlayBase.prototype.onSaveBegin.apply( this, arguments );\n\t\tif ( this.confirmAborted ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( this.captchaId ) {\n\t\t\toptions.captchaId = this.captchaId;\n\t\t\toptions.captchaWord = this.$el.find( '.captcha-word' ).val();\n\t\t}\n\n\t\tthis.showHidden( '.saving-header' );\n\n\t\tthis.gateway.save( options )\n\t\t\t.then( function () {\n\t\t\t\tvar title = self.options.title;\n\t\t\t\t// Special case behaviour of main page\n\t\t\t\tif ( mw.config.get( 'wgIsMainPage' ) ) {\n\t\t\t\t\t// FIXME: Blocked on T189173\n\t\t\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\t\t\twindow.location = mw.util.getUrl( title );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tself.onSaveComplete();\n\t\t\t}, function ( data ) {\n\t\t\t\tself.onSaveFailure( data );\n\t\t\t} );\n\t},\n\n\t/**\n\t * Executed when page save fails. Handles error display and bookkeeping,\n\t * passes logging duties to the parent.\n\t * @inheritdoc\n\t * @memberof EditorOverlay\n\t * @instance\n\t */\n\tonSaveFailure: function ( data ) {\n\t\tvar heading, msg;\n\n\t\tif ( data.type === 'captcha' ) {\n\t\t\tthis.captchaId = data.details.id;\n\t\t\tthis.handleCaptcha( data.details );\n\t\t} else if ( data.type === 'abusefilter' ) {\n\t\t\tthis._showAbuseFilter( data.details.type, data.details.message );\n\t\t} else {\n\t\t\tmsg = saveFailureMessage( data );\n\t\t\tif ( data.type === 'readonly' ) {\n\t\t\t\theading = mw.msg( 'apierror-readonly' );\n\t\t\t}\n\n\t\t\tif ( msg || heading ) {\n\t\t\t\tthis.reportError( msg, heading );\n\t\t\t\tthis.showHidden( '.save-header, .save-panel' );\n\t\t\t}\n\t\t}\n\n\t\tEditorOverlayBase.prototype.onSaveFailure.apply( this, arguments );\n\t},\n\n\t/**\n\t * Checks whether the existing content has changed.\n\t * @memberof EditorOverlay\n\t * @instance\n\t * @return {boolean}\n\t */\n\thasChanged: function () {\n\t\treturn this.gateway.hasChanged;\n\t}\n} );\n\nmodule.exports = EditorOverlay;\n","/* global ve */\nvar EditorOverlayBase = require( './EditorOverlayBase' ),\n\tEditorGateway = require( './EditorGateway' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\trouter = mw.loader.require( 'mediawiki.router' ),\n\tutil = require( '../mobile.startup/util' );\n\n/**\n * Overlay for VisualEditor view\n * @class VisualEditorOverlay\n * @extends EditorOverlayBase\n *\n * @param {Object} options Configuration options\n * @param {EditorOverlay} options.EditorOverlay Class to use for standard\n *  Wikitext editor. It must be passed in explicitly to avoid a cyclic\n *  dependency between VisualEdtiorOverlay and EditorOverlay\n */\nfunction VisualEditorOverlay( options ) {\n\tthis.applyHeaderOptions( options, true );\n\tEditorOverlayBase.call( this,\n\t\tutil.extend( {\n\t\t\tisBorderBox: false,\n\t\t\tclassName: 'overlay editor-overlay editor-overlay-ve'\n\t\t}, options )\n\t);\n\tthis.EditorOverlay = options.EditorOverlay;\n\tthis.isNewPage = options.isNewPage;\n\n\t// Gateway present for a few utility purposes; the VE articletarget\n\t// handles the actual API calls separately\n\tthis.gateway = new EditorGateway( {\n\t\tapi: options.api,\n\t\ttitle: options.title,\n\t\tsectionId: options.sectionId,\n\t\toldId: options.oldId,\n\t\tisNewPage: options.isNewPage\n\t} );\n}\n\nmfExtend( VisualEditorOverlay, EditorOverlayBase, {\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, EditorOverlayBase.prototype.templatePartials, {\n\t\teditHeader: util.template( `\n<div class=\"overlay-header header initial-header hideable hidden\">\n\t<div class=\"toolbar\"></div>\n</div>\n\t\t` ),\n\t\tcontent: util.template( `\n<div class=\"surface\" lang=\"{{contentLang}}\" dir=\"{{contentDir}}\">\n</div>\n\t\t` )\n\t} ),\n\t/**\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\teditor: 'visualeditor',\n\t/**\n\t * Set options that apply specifically to VisualEditorOverlay but not\n\t * EditorOverlay so that an EditorOverlay instance can be created effortlessly.\n\t * FIXME: Must be smarter way to do this.\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t * @param {Object} options Configuration options\n\t * @param {boolean} isVE whether the options are being generated for a VisualEditorOverlay\n\t *  or a EditorOverlay\n\t */\n\tapplyHeaderOptions: function ( options, isVE ) {\n\t\t// Set things that are known to be true.\n\t\toptions.hasToolbar = isVE;\n\t\toptions.isVisualEditor = isVE;\n\t},\n\t/**\n\t * Destroy the existing VisualEditor target.\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tdestroyTarget: function () {\n\t\tif ( this.target ) {\n\t\t\tthis.target.destroy();\n\t\t\tthis.target = null;\n\t\t}\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\tvar overlay = this;\n\n\t\tEditorOverlayBase.prototype.show.apply( this, arguments );\n\n\t\t// We don't use the default spinner. Instead, rely on the progressbar from init/editor.js.\n\t\tif ( !this.options.switched ) {\n\t\t\tthis.hideSpinner();\n\t\t\tthis.$el.addClass( 'loading' );\n\t\t}\n\n\t\tthis.target = ve.init.mw.targetFactory.create( 'article', this, {\n\t\t\t$element: this.$el,\n\t\t\t// || null so that scrolling is not triggered for the lead (0) section\n\t\t\t// (which has no header to scroll to)\n\t\t\tsection: this.options.sectionId || null\n\t\t} );\n\t\tthis.target.once( 'surfaceReady', function () {\n\t\t\tthis.emit( 'editor-loaded' );\n\t\t\tthis.$el.removeClass( 'loading' );\n\t\t\t// log edit attempt\n\t\t\toverlay.log( { action: 'ready' } );\n\t\t\toverlay.log( { action: 'loaded' } );\n\t\t}.bind( this ) );\n\t\tthis.target.load( this.options.dataPromise );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\thide: function () {\n\t\tvar overlay = this,\n\t\t\tretval = EditorOverlayBase.prototype.hide.apply( this, arguments );\n\t\tif ( retval === true ) {\n\t\t\tthis.destroyTarget();\n\t\t} else if ( retval && retval.then ) {\n\t\t\tretval.then( function ( hide ) {\n\t\t\t\tif ( hide ) {\n\t\t\t\t\toverlay.destroyTarget();\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\treturn retval;\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonClickBack: function () {\n\t\tEditorOverlayBase.prototype.onClickBack.apply( this, arguments );\n\t\tthis.switchToEditor();\n\t},\n\n\t/**\n\t * Reveal the editing interface.\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tswitchToEditor: function () {\n\t\tthis.showHidden( '.initial-header' );\n\t},\n\t/**\n\t * Loads an {EditorOverlay} and replaces the existing {VisualEditorOverlay}\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t * @param {jQuery.Promise} [dataPromise] Optional promise for loading content\n\t */\n\tswitchToSourceEditor: function ( dataPromise ) {\n\t\tvar self = this,\n\t\t\tEditorOverlay = this.EditorOverlay;\n\t\tthis.log( {\n\t\t\taction: 'abort',\n\t\t\ttype: 'switchnochange',\n\t\t\tmechanism: 'navigate'\n\t\t} );\n\t\t// Save a user setting indicating that this user prefers using the SourceEditor\n\t\tmw.storage.set( 'preferredEditor', 'SourceEditor' );\n\t\tthis.showSpinner();\n\t\tthis.$el.find( '.surface' ).hide();\n\t\tself.hideSpinner();\n\t\tself.applyHeaderOptions( self.options, false );\n\t\t// Unset classes from other editor\n\t\tdelete self.options.className;\n\t\tif ( dataPromise ) {\n\t\t\t// If switching with edits we can't stay in section editing, as a VE edit\n\t\t\t// can always affect the whole document (e.g. references)\n\t\t\tself.options.sectionId = null;\n\t\t\trouter.navigateTo( document.title, {\n\t\t\t\tpath: '#/editor/all',\n\t\t\t\tuseReplaceState: true\n\t\t\t} );\n\t\t}\n\t\tself.switching = true;\n\t\tself.overlayManager.replaceCurrent( new EditorOverlay( self.options, dataPromise ) );\n\t\tself.switching = false;\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonSaveComplete: function () {\n\t\tEditorOverlayBase.prototype.onSaveComplete.apply( this, arguments );\n\t\tthis.destroyTarget();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\thasChanged: function () {\n\t\treturn this.target &&\n\t\t\tthis.target.getSurface() &&\n\t\t\tthis.target.getSurface().getModel().hasBeenModified() &&\n\t\t\t// If we just saved, there's not really any changes, and the\n\t\t\t// target is going to be destroyed in one tick\n\t\t\t!this.saved;\n\t}\n} );\n\nmodule.exports = VisualEditorOverlay;\n","var m = require( './../mobile.startup/moduleLoaderSingleton' ),\n\tEditorOverlay = require( './EditorOverlay' ),\n\tVisualEditorOverlay = require( './VisualEditorOverlay' ),\n\tschemaEditAttemptStep = require( './schemaEditAttemptStep' );\n\n// Exposed for MobileFrontend mobile.init usage.\nm.define( 'mobile.editor.overlay/EditorOverlay', EditorOverlay );\nm.define( 'mobile.editor.overlay/VisualEditorOverlay', VisualEditorOverlay );\n// setup schema:edit logging\nschemaEditAttemptStep();\n","module.exports = function () {\n\tvar trackdebug = !!mw.util.getParamValue( 'trackdebug' );\n\n\tif ( mw.loader.getState( 'schema.EditAttemptStep' ) === null && !trackdebug ) {\n\t\treturn;\n\t}\n\n\tmw.loader.using( [ 'ext.eventLogging.subscriber' ] ).then( function () {\n\t\tvar // Schema provided by ext.eventLogging.subscriber class\n\t\t\tSchema = mw.eventLog.Schema,\n\t\t\tuser = mw.user,\n\t\t\tsampleRate = mw.config.get( 'wgWMESchemaEditAttemptStepSamplingRate' ),\n\t\t\tactionPrefixMap = {\n\t\t\t\tsaveIntent: 'save_intent',\n\t\t\t\tsaveAttempt: 'save_attempt',\n\t\t\t\tsaveSuccess: 'save_success',\n\t\t\t\tsaveFailure: 'save_failure'\n\t\t\t},\n\t\t\ttiming = {},\n\t\t\t/**\n\t\t\t * Edit schema\n\t\t\t * https://meta.wikimedia.org/wiki/Schema:EditAttemptStep\n\t\t\t */\n\t\t\t/* eslint-disable camelcase */\n\t\t\tschemaEditAttemptStep = new Schema(\n\t\t\t\t'EditAttemptStep',\n\t\t\t\tsampleRate,\n\t\t\t\t{\n\t\t\t\t\tpage_id: mw.config.get( 'wgArticleId' ),\n\t\t\t\t\trevision_id: mw.config.get( 'wgRevisionId' ),\n\t\t\t\t\tpage_title: mw.config.get( 'wgPageName' ),\n\t\t\t\t\tpage_ns: mw.config.get( 'wgNamespaceNumber' ),\n\t\t\t\t\tuser_id: user.getId(),\n\t\t\t\t\tuser_class: user.isAnon() ? 'IP' : undefined,\n\t\t\t\t\tuser_editcount: mw.config.get( 'wgUserEditCount', 0 ),\n\t\t\t\t\tmw_version: mw.config.get( 'wgVersion' ),\n\t\t\t\t\tplatform: 'phone',\n\t\t\t\t\tintegration: 'page',\n\t\t\t\t\tpage_token: user.getPageviewToken(),\n\t\t\t\t\tsession_token: user.sessionId(),\n\t\t\t\t\tversion: 1\n\t\t\t\t}\n\t\t\t);\n\t\t\t/* eslint-enable camelcase */\n\n\t\tfunction log() {\n\t\t\t// mw.log is a no-op unless resource loader is in debug mode, so\n\t\t\t// this allows trackdebug to work independently (T211698)\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log.apply( console, arguments );\n\t\t}\n\n\t\tfunction computeDuration( action, event, timeStamp ) {\n\t\t\t// This is duplicated from the VisualEditor extension\n\t\t\t// (ve.init.mw.trackSubscriber.js). Changes to this should be kept in\n\t\t\t// sync with that file, so the data remains consistent.\n\t\t\tif ( event.timing !== undefined ) {\n\t\t\t\treturn event.timing;\n\t\t\t}\n\n\t\t\tswitch ( action ) {\n\t\t\t\tcase 'ready':\n\t\t\t\t\treturn timeStamp - timing.init;\n\t\t\t\tcase 'loaded':\n\t\t\t\t\treturn timeStamp - timing.init;\n\t\t\t\tcase 'saveIntent':\n\t\t\t\t\treturn timeStamp - timing.ready;\n\t\t\t\tcase 'saveAttempt':\n\t\t\t\t\treturn timeStamp - timing.saveIntent;\n\t\t\t\tcase 'saveSuccess':\n\t\t\t\tcase 'saveFailure':\n\t\t\t\t\t// HERE BE DRAGONS: the caller must compute these themselves\n\t\t\t\t\t// for sensible results. Deliberately sabotage any attempts to\n\t\t\t\t\t// use the default by returning -1\n\t\t\t\t\tmw.log.warn( 'mf.schemaEditAttemptStep: Do not rely on default timing value for saveSuccess/saveFailure' );\n\t\t\t\t\treturn -1;\n\t\t\t\tcase 'abort':\n\t\t\t\t\tswitch ( event.abort_type ) {\n\t\t\t\t\t\tcase 'preinit':\n\t\t\t\t\t\t\treturn timeStamp - timing.init;\n\t\t\t\t\t\tcase 'nochange':\n\t\t\t\t\t\tcase 'switchwith':\n\t\t\t\t\t\tcase 'switchwithout':\n\t\t\t\t\t\tcase 'switchnochange':\n\t\t\t\t\t\tcase 'abandon':\n\t\t\t\t\t\t\treturn timeStamp - timing.ready;\n\t\t\t\t\t\tcase 'abandonMidsave':\n\t\t\t\t\t\t\treturn timeStamp - timing.saveAttempt;\n\t\t\t\t\t}\n\t\t\t\t\tmw.log.warn( 'mf.schemaEditAttemptStep: Unrecognized abort type', event.type );\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tmw.log.warn( 'mf.schemaEditAttemptStep: Unrecognized action', action );\n\t\t\treturn -1;\n\t\t}\n\n\t\tmw.trackSubscribe( 'mf.schemaEditAttemptStep', function ( topic, data, timeStamp ) {\n\t\t\tvar actionPrefix = actionPrefixMap[ data.action ] || data.action,\n\t\t\t\tduration = 0;\n\n\t\t\ttimeStamp = timeStamp || this.timeStamp; // I8e82acc12 back-compat\n\n\t\t\tdata[actionPrefix + '_type'] = data.type;\n\t\t\tdata[actionPrefix + '_mechanism'] = data.mechanism;\n\t\t\tif ( data.action !== 'init' ) {\n\t\t\t\tduration = Math.round( computeDuration( data.action, data, timeStamp ) );\n\t\t\t\tdata[actionPrefix + '_timing'] = duration;\n\t\t\t}\n\n\t\t\t// Remove renamed properties\n\t\t\tdelete data.type;\n\t\t\tdelete data.mechanism;\n\t\t\tdata[actionPrefix + '_message'] = data.message;\n\t\t\tdelete data.message;\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tdata.is_oversample =\n\t\t\t\t!mw.eventLog.inSample( 1 / sampleRate );\n\n\t\t\tif ( data.action === 'abort' && data.abort_type !== 'switchnochange' ) {\n\t\t\t\ttiming = {};\n\t\t\t} else {\n\t\t\t\ttiming[ data.action ] = timeStamp;\n\t\t\t}\n\n\t\t\t// Switching between visual and source produces a chain of\n\t\t\t// abort/ready events and no init event, so suppress them for\n\t\t\t// consistency with desktop VE's logging.\n\t\t\tif ( data.abort_type === 'switchnochange' ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( timing.abort && data.action === 'ready' ) {\n\t\t\t\tdelete timing.abort;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( trackdebug ) {\n\t\t\t\tlog( topic + '.' + data.action, duration + 'ms', data );\n\t\t\t} else {\n\t\t\t\tschemaEditAttemptStep.log( data, (\n\t\t\t\t\tmw.config.get( 'wgWMESchemaEditAttemptStepOversample' ) ||\n\t\t\t\t\tmw.config.get( 'wgMFSchemaEditAttemptStepOversample' ) === 'all' ||\n\t\t\t\t\t// wikitext / visualeditor\n\t\t\t\t\tdata.editor_interface === mw.config.get( 'wgMFSchemaEditAttemptStepOversample' )\n\t\t\t\t) ? 1 : sampleRate );\n\t\t\t}\n\t\t} );\n\n\t} );\n};\n"],"sourceRoot":""}