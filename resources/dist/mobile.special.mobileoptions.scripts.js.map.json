{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.special.mobileoptions.scripts.js"],"names":["storage","mw","browser","__webpack_require__","getSingleton","toast","EXPAND_SECTIONS_KEY","msg","FONT_SIZE_KEY","notify","isPending","showOnPageReload","show","createLabel","heading","description","$label","$","append","text","OO","ui","LabelWidget","label","loader","using","then","toggleSwitch","enableToggle","infuse","$checkbox","$element","$form","ToggleSwitchWidget","value","isSelected","insertAfter","hide","on","attr","setValue","find","prop","setTimeout","submit","config","get","isWideScreen","cb","cbField","name","FieldLayout","set","prependTo","addExpandAllSectionsToForm","fontChanger","fontChangerDropdown","currentFontSize","DropdownInputWidget","options","data","addFontChangerToForm"],"mappings":"mNACA,IAAAA,EAAAC,GAAAD,QACAE,EAAWC,EAAS,mCAA0BC,eAC9CC,EAASF,EAAS,iCAClBG,EAAA,iBACAC,EAAAN,GAAAM,IACAC,EAAA,eAMA,SAAAC,EAAAC,GACAA,EACAL,EAAAM,iBAAAJ,EAAA,kCAEAF,EAAAO,KAAAL,EAAA,qCASA,SAAAM,EAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAA,SAOA,OANAD,EAAAE,OAAAD,EAAA,YAAAE,KAAAL,IACAE,EAAAE,OACAD,EAAA,oCACAE,KAAAJ,IAGA,IAAAK,GAAAC,GAAAC,aACAC,MAAAP,IA0IAf,GAAAuB,OAAAC,MAAA,mBAAAC,KA1DA,WACA,IAAAC,EACAC,EAAAR,GAAAC,GAAAQ,OAAAZ,EAAA,wBACAa,EAAAF,EAAAG,SACAC,EAAAf,EAAA,oBAEAU,EAAA,IAAAP,GAAAC,GAAAY,oBACAC,MAAAN,EAAAO,gBAKAJ,SAAAK,YAAAN,GAIAA,EAAAO,OAKAP,EAAAQ,GAAA,oBAEAR,EAAAS,KAAA,eACAZ,EAAAa,SAAAZ,EAAAO,gBAEAR,EAAAW,GAAA,kBAAAJ,GAKAP,EAAAa,SAAA,aAEAV,EAAAW,KAAA,SACAC,KAAA,UAAAR,GACAzB,GAAA,GAKAkC,WAAA,WACAX,EAAAY,UACG,OAGH3C,GAAA4C,OAAAC,IAAA,qCAGA5C,EAAA6C,gBA5EA,SAAAf,GACA,IAAAgB,EAAAC,EAEAD,EAAA,IAAA5B,GAAAC,GAAAY,oBACAiB,KAAA5C,EACA4B,MAAA,SAAAlC,EAAA8C,IAAAxC,KAEA2C,EAAA,IAAA7B,GAAAC,GAAA8B,YACAH,GAEAzB,MAAAV,EACAZ,GAAAM,IAAA,0CACAN,GAAAM,IAAA,gDACAwB,WAGAiB,EAAAV,GAAA,kBAAAJ,GACAlC,EAAAoD,IAAA9C,EAAA4B,EAAA,gBACAzB,MAGAwC,EAAAlB,SAAAsB,UAAArB,GAyDAsB,CAAAtB,GAGA/B,GAAA4C,OAAAC,IAAA,0BA7HA,SAAAd,GACA,IAAAuB,EAAAC,EACAC,EAAAzD,EAAA8C,IAAAtC,GAEAgD,EAAA,IAAApC,GAAAC,GAAAqC,qBACAxB,MAAAuB,GAAA,UACAE,UAEAC,KAAA,QACArC,MAAAhB,EAAA,8CAGAqD,KAAA,UACArC,MAAAhB,EAAA,+CAGAqD,KAAA,QACArC,MAAAhB,EAAA,8CAGAqD,KAAA,UACArC,MAAAhB,EAAA,iDAIAgD,EAAA,IAAAnC,GAAAC,GAAA8B,YACAK,GAEAjC,MAAAV,EAAAZ,GAAAM,IAAA,oCACAN,GAAAM,IAAA,qCAAAwB,WAGAyB,EAAAlB,GAAA,kBAAAJ,GACAlC,EAAAoD,IAAA5C,EAAA0B,GACAzB,MAGA8C,EAAAxB,SAAAsB,UAAArB,GAyFA6B,CAAA7B","file":"mobile.special.mobileoptions.scripts.js","sourcesContent":["/* global $, OO */\nvar storage = mw.storage,\n\tbrowser = require( './mobile.startup/Browser' ).getSingleton(),\n\ttoast = require( './mobile.startup/toast' ),\n\tEXPAND_SECTIONS_KEY = 'expandSections',\n\tmsg = mw.msg,\n\tFONT_SIZE_KEY = 'userFontSize';\n\n/**\n * Notifies the user that settings were asynchronously saved.\n * @param {boolean} [isPending] if set toast will show after page has been reloaded.\n */\nfunction notify( isPending ) {\n\tif ( isPending ) {\n\t\ttoast.showOnPageReload( msg( 'mobile-frontend-settings-save' ) );\n\t} else {\n\t\ttoast.show( msg( 'mobile-frontend-settings-save' ), {} );\n\t}\n}\n/**\n * Creates a label for use with a form input\n * @param {string} heading\n * @param {string} description\n * @return {OO.ui.LabelWidget}\n */\nfunction createLabel( heading, description ) {\n\tvar $label = $( '<div>' );\n\t$label.append( $( '<strong>' ).text( heading ) );\n\t$label.append(\n\t\t$( '<div class=\"option-description\">' )\n\t\t\t.text( description )\n\t);\n\n\treturn new OO.ui.LabelWidget( {\n\t\tlabel: $label\n\t} );\n}\n\n/**\n * Adds a font changer field to the form\n * @param {jQuery.Object} $form\n */\nfunction addFontChangerToForm( $form ) {\n\tvar fontChanger, fontChangerDropdown,\n\t\tcurrentFontSize = storage.get( FONT_SIZE_KEY );\n\n\tfontChangerDropdown = new OO.ui.DropdownInputWidget( {\n\t\tvalue: currentFontSize || 'regular',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tdata: 'small',\n\t\t\t\tlabel: msg( 'mobile-frontend-fontchanger-option-small' )\n\t\t\t},\n\t\t\t{\n\t\t\t\tdata: 'regular',\n\t\t\t\tlabel: msg( 'mobile-frontend-fontchanger-option-medium' )\n\t\t\t},\n\t\t\t{\n\t\t\t\tdata: 'large',\n\t\t\t\tlabel: msg( 'mobile-frontend-fontchanger-option-large' )\n\t\t\t},\n\t\t\t{\n\t\t\t\tdata: 'x-large',\n\t\t\t\tlabel: msg( 'mobile-frontend-fontchanger-option-xlarge' )\n\t\t\t}\n\t\t]\n\t} );\n\tfontChanger = new OO.ui.FieldLayout(\n\t\tfontChangerDropdown,\n\t\t{\n\t\t\tlabel: createLabel( mw.msg( 'mobile-frontend-fontchanger-link' ),\n\t\t\t\tmw.msg( 'mobile-frontend-fontchanger-desc' ) ).$element\n\t\t}\n\t);\n\tfontChangerDropdown.on( 'change', function ( value ) {\n\t\tstorage.set( FONT_SIZE_KEY, value );\n\t\tnotify();\n\t} );\n\n\tfontChanger.$element.prependTo( $form );\n}\n\n/**\n * Adds an expand all sections field to the form\n * @param {jQuery.Object} $form\n */\nfunction addExpandAllSectionsToForm( $form ) {\n\tvar cb, cbField;\n\n\tcb = new OO.ui.ToggleSwitchWidget( {\n\t\tname: EXPAND_SECTIONS_KEY,\n\t\tvalue: storage.get( EXPAND_SECTIONS_KEY ) === 'true'\n\t} );\n\tcbField = new OO.ui.FieldLayout(\n\t\tcb,\n\t\t{\n\t\t\tlabel: createLabel(\n\t\t\t\tmw.msg( 'mobile-frontend-expand-sections-status' ),\n\t\t\t\tmw.msg( 'mobile-frontend-expand-sections-description' )\n\t\t\t).$element\n\t\t}\n\t);\n\tcb.on( 'change', function ( value ) {\n\t\tstorage.set( EXPAND_SECTIONS_KEY, value ? 'true' : 'false' );\n\t\tnotify();\n\t} );\n\n\tcbField.$element.prependTo( $form );\n}\n\n/**\n * Add features, that depends on localStorage, such as \"exapnd all sections\" or \"fontchanger\".\n * The checkbox is used for turning on/off expansion of all sections on page load.\n */\nfunction initLocalStorageElements() {\n\tvar toggleSwitch,\n\t\tenableToggle = OO.ui.infuse( $( '#enable-beta-toggle' ) ),\n\t\t$checkbox = enableToggle.$element,\n\t\t$form = $( '#mobile-options' );\n\n\ttoggleSwitch = new OO.ui.ToggleSwitchWidget( {\n\t\tvalue: enableToggle.isSelected()\n\t} );\n\t// Strangely the ToggleSwitchWidget does not behave as an input so any change\n\t// to it is not reflected in the form. (see T182466)\n\t// Ideally we'd replaceWith here and not have to hide the original element.\n\ttoggleSwitch.$element.insertAfter( $checkbox );\n\t// although the checkbox is hidden already, that is done via visibility\n\t// as a result, it still takes up space. We don't want it to any more now that the\n\t// new toggle switch has been added.\n\t$checkbox.hide();\n\n\t// listening on checkbox change is required to make the clicking on label working. Otherwise\n\t// clicking on label changes the checkbox \"checked\" state\n\t// but it's not reflected in the toggle switch\n\t$checkbox.on( 'change', function () {\n\t\t// disable checkbox as submit is delayed by 0.25s\n\t\t$checkbox.attr( 'disabled', true );\n\t\ttoggleSwitch.setValue( enableToggle.isSelected() );\n\t} );\n\ttoggleSwitch.on( 'change', function ( value ) {\n\t\t// ugly hack, we're delaying submit form by 0.25s\n\t\t// and we want to disable registering clicks\n\t\t// we want to disable the toggleSwitch\n\t\t// but we cannot use setDisabled(true) as it makes button gray\n\t\ttoggleSwitch.setValue = function () {};\n\n\t\t$checkbox.find( 'input' )\n\t\t\t.prop( 'checked', value );\n\t\tnotify( true );\n\t\t// On some Android devices animation gets stuck in the middle as browser\n\t\t// starts submitting the form.\n\t\t// Let's call submit on the form after toggle button transition is done\n\t\t// (0.25s, defined in OOUI)\n\t\tsetTimeout( function () {\n\t\t\t$form.submit();\n\t\t}, 250 );\n\t} );\n\n\tif ( mw.config.get( 'wgMFExpandAllSectionsUserOption' ) &&\n\t\t// Don't show this option on large screens since it's only honored for small screens.\n\t\t// This logic should be kept in sync with Toggle._enable().\n\t\t!browser.isWideScreen()\n\t) {\n\t\taddExpandAllSectionsToForm( $form );\n\t}\n\n\tif ( mw.config.get( 'wgMFEnableFontChanger' ) ) {\n\t\taddFontChangerToForm( $form );\n\t}\n}\n\nmw.loader.using( 'oojs-ui-widgets' ).then( initLocalStorageElements );\n"],"sourceRoot":""}